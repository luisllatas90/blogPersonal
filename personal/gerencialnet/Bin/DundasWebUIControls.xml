<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DundasWebUIControls</name>
    </assembly>
    <members>
        <member name="T:Dundas.Olap.WebUIControls.DundasGetResPage">
            <summary>
            Internal helper class for Dundas Olap Web Controls 
            for extract resources from the assembly.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DundasGetResPage.#ctor">
            <summary>
            Creates new instance of DundasGetResPage class
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DundasGetResPage.OnInit(System.EventArgs)">
            <summary>
            This member overrides the <see cref="M:System.Web.UI.Control.OnInit(System.EventArgs)"/> method
            </summary>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DundasGetResPage.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Format  DundasGetResPage.aspx?r=resourceName[&amp;ct=contextType]
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DundasGetResPage.InvokeHtmlHandler">
            <summary>
            Invokes the HTML handler.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DundasGetResPage.ProcessQuery(System.Collections.Specialized.NameValueCollection,System.IO.Stream,System.Web.HttpResponse)">
            <summary>
            Processes the query.
            </summary>
            <param name="query">The query values.</param>
            <param name="stream">The stream.</param>
            <param name="resp">The response.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DundasGetResPage.SaveBitmapToResponse(System.Drawing.Bitmap,System.IO.Stream,System.Drawing.Imaging.ImageFormat)">
            <summary>
            Saves the bitmap to response.
            </summary>
            <param name="bmp">The bitmap.</param>
            <param name="outputStream">The output stream.</param>
            <param name="imageFormat">The image format.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DundasGetResPage.GetAxisButton(System.Collections.Specialized.NameValueCollection,System.IO.Stream,System.Web.HttpResponse)">
            <summary>
            Gets the axis button Url.
            </summary>
            <param name="query">The query.</param>
            <param name="outputStream">The output stream.</param>
            <param name="resp">The resp.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DundasGetResPage.GetToolbarFrame(System.Collections.Specialized.NameValueCollection,System.IO.Stream,System.Web.HttpResponse)">
            <summary>
            Gets the toolbar frame images Url.
            </summary>
            <param name="query">The query.</param>
            <param name="outputStream">The output stream.</param>
            <param name="resp">The resp.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DundasGetResPage.GetCommandImage(System.Collections.Specialized.NameValueCollection,System.IO.Stream,System.Web.HttpResponse)">
            <summary>
            Gets the command image url.
            </summary>
            <param name="query">The query.</param>
            <param name="outputStream">The output stream.</param>
            <param name="resp">The resp.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DundasGetResPage.GetResource(System.Collections.Specialized.NameValueCollection,System.IO.Stream,System.Web.HttpResponse)">
            <summary>
            Gets the resource url.
            </summary>
            <param name="query">The query.</param>
            <param name="outputStream">The output stream.</param>
            <param name="response">The response.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DundasGetResPage.Url2FileName(System.String,System.String)">
            <summary>
            Converts Url the name of the file.
            </summary>
            <param name="url">The url.</param>
            <param name="ext">The file extension.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DundasGetResPage.DumpResourceUrl(System.String,System.String)">
            <summary>
            Dumps the resource URL.
            </summary>
            <param name="url">The URL.</param>
            <param name="directory">The directory.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DundasGetResPage.IsExistsContext">
            <summary>
            Determines whether is exists ASP context.
            </summary>
            <returns>
            	<c>true</c> if is exists ASP context; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DundasGetResPage.DumpResources(System.String)">
            <summary>
            Dumps the resources.
            </summary>
            <param name="filePath">The file path.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DundasGetResPage.DumpResourcesFile(System.String,System.String)">
            <summary>
            Dumps the resource file.
            </summary>
            <param name="fileName">Name of the file.</param>
            <param name="resName">Name of the resource.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DundasGetResPage.GetFileFromTable(System.String,System.String)">
            <summary>
            Gets the file from hashtable.
            </summary>
            <param name="query">The query.</param>
            <param name="directory">The directory.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DundasGetResPage.GetRsDirAbsolute">
            <summary>
            Gets the resource directory absolute.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DundasGetResPage.GetRsDirRelative">
            <summary>
            Gets the resource directory relative.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DundasGetResPage.GetRsUrl(System.String)">
            <summary>
            Gets the resource URL.
            </summary>
            <param name="query">The query.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DundasGetResPage.GetRsUrlEx(System.String)">
            <summary>
            Gets the resource URL.
            </summary>
            <param name="query">The query.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DundasGetResPage.GetRsUrl">
            <summary>
            Gets the resource URL.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DundasGetResPage.GetRsUrlMapped">
            <summary>
            Gets the resource fisical URL.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DundasGetResPage.EnsureInstallResourceHandler">
            <summary>
            Ensures the install resource handler.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DundasGetResPage.GetResourceManager">
            <summary>
            Gets the resource manager.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DundasGetResPage.GetResourceStream(System.String)">
            <summary>
            Gets the resource stream.
            </summary>
            <param name="resName">Name of the res.</param>
            <returns></returns>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.DundasGetResPage.ResourceFilesTable">
            <summary>
            Gets the resource files table.
            </summary>
            <value>The resource files table.</value>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.Design.NoNameExpandableObjectConverter">
            <summary>
            Expandable object converter
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Design.NoNameExpandableObjectConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Overrides the ConvertTo method of TypeConverter.
            </summary>
            <param name="context">Descriptor context.</param>
            <param name="culture">Culture information.</param>
            <param name="value">Value to convert.</param>
            <param name="destinationType">Convertion destination type.</param>
            <returns>Converted object.</returns>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.Design.OlapDataProviderNameConverter">
            <summary>
            Olap DataProvider name converter class.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Design.OlapDataProviderNameConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Returns whether the collection of standard values returned from 
            GetStandardValues is an exclusive list of possible values, 
            using the specified context.
            </summary>
            <param name="context">
            An <b>ITypeDescriptorContext</b> that provides a format context. 
            </param>
            <returns>
            <b>true</b> if the TypeConverter.StandardValuesCollection returned from 
            GetStandardValues is an exhaustive list of possible values; 
            <b>false</b> if other values are possible.
            </returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Design.OlapDataProviderNameConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Returns whether this object supports properties, using the specified context.
            </summary>
            <param name="context">
            An ITypeDescriptorContext that provides a format context.
            </param>
            <returns>
            <b>true</b> if GetProperties should be called to find the properties of this object; 
            otherwise, <b>false</b>.
            </returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Design.OlapDataProviderNameConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Returns a collection of standard values for the data type this type converter 
            is designed for.
            </summary>
            <param name="context">
            An ITypeDescriptorContext that provides a format context that can be used to 
            extract additional information about the environment from which this converter 
            is invoked.
            </param>
            <returns>
            A TypeConverter.StandardValuesCollection that holds a standard set of valid values, 
            or a null reference (Nothing in Visual Basic) if the data type does not support a 
            standard set of values.
            </returns>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.Design.OlapControlDesigner">
            <summary>
            OLAP Manager Web control designer.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Design.OlapControlDesigner.Initialize(System.ComponentModel.IComponent)">
            <summary>
            Initializes component.
            </summary>
            <param name="component">
            Component to initialize.
            </param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Design.OlapControlDesigner.OnComponentAdded(System.Object,System.ComponentModel.Design.ComponentEventArgs)">
            <summary>
            Called when [component added].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.ComponentModel.Design.ComponentEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Design.OlapControlDesigner.Dispose(System.Boolean)">
            <summary>
            Dispose object.
            </summary>
            <param name="disposing">
            Indicates if unmanaged resources should be disposed.
            </param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Design.OlapControlDesigner.OnComponentRemoved(System.Object,System.ComponentModel.Design.ComponentEventArgs)">
            <summary>
            ComponentRemoved event handler.
            </summary>
            <param name="sender">
            Event sender.
            </param>
            <param name="ce">
            Event arguments.
            </param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Design.OlapControlDesigner.OnComponentRename(System.Object,System.ComponentModel.Design.ComponentRenameEventArgs)">
            <summary>
            ComponentRename event handler.
            </summary>
            <param name="sender">
            Event sender.
            </param>
            <param name="ce">
            Event arguments.
            </param>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Design.OlapControlDesigner.OlapManagerID">
            <summary>
            OlapManager object.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.Design.OlapChartToolbarDesigner">
            <summary>
            OLAP Manager Web control designer.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Design.OlapChartToolbarDesigner.Initialize(System.ComponentModel.IComponent)">
            <summary>
            Initializes component.
            </summary>
            <param name="component">
            Component to initialize.
            </param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Design.OlapChartToolbarDesigner.ChangeService_ComponentChanged(System.Object,System.ComponentModel.Design.ComponentChangedEventArgs)">
            <summary>
            Handles the ComponentChanged event of the ChangeService control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Design.OlapChartToolbarDesigner.ChangeService_ComponentAdded(System.Object,System.ComponentModel.Design.ComponentEventArgs)">
            <summary>
            Handles the ComponentAdded event of the ChangeService control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.ComponentModel.Design.ComponentEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Design.OlapChartToolbarDesigner.Dispose(System.Boolean)">
            <summary>
            Dispose object.
            </summary>
            <param name="disposing">
            Indicates if unmanaged resources should be disposed.
            </param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Design.OlapChartToolbarDesigner.OnComponentRemoved(System.Object,System.ComponentModel.Design.ComponentEventArgs)">
            <summary>
            ComponentRemoved event handler.
            </summary>
            <param name="sender">
            Event sender.
            </param>
            <param name="ce">
            Event arguments.
            </param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Design.OlapChartToolbarDesigner.OnComponentRename(System.Object,System.ComponentModel.Design.ComponentRenameEventArgs)">
            <summary>
            ComponentRename event handler.
            </summary>
            <param name="sender">
            Event sender.
            </param>
            <param name="ce">
            Event arguments.
            </param>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Design.OlapChartToolbarDesigner.OlapChartID">
            <summary>
            OlapManager object.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Design.OlapChartToolbarDesigner.ChangeService">
            <summary>
            Gets the change service.
            </summary>
            <value>The change service.</value>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.Design.OlapManagerNameConverter">
            <summary>
            OlapManagerNameConverter is a converter for OlapManagerID property.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Design.OlapManagerNameConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Returns whether the collection of standard values returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues"></see> is an exclusive list of possible values, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that provides a format context.</param>
            <returns>
            true if the <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection"></see> returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues"></see> is an exhaustive list of possible values; false if other values are possible.
            </returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Design.OlapManagerNameConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Returns whether this object supports a standard set of values that can be picked from a list, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that provides a format context.</param>
            <returns>
            true if <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues"></see> should be called to find a common set of values the object supports; otherwise, false.
            </returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Design.OlapManagerNameConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Returns a collection of standard values for the data type this type converter is designed for when provided with a format context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that provides a format context that can be used to extract additional information about the environment from which this converter is invoked. This parameter or properties of this parameter can be null.</param>
            <returns>
            A <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection"></see> that holds a standard set of valid values, or null if the data type does not support a standard set of values.
            </returns>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.Design.OlapChartNameConverter">
            <summary>
            OlapChartNameConverter is a converter for OlapChartID property.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Design.OlapChartNameConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Returns whether the collection of standard values returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues"></see> is an exclusive list of possible values, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that provides a format context.</param>
            <returns>
            true if the <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection"></see> returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues"></see> is an exhaustive list of possible values; false if other values are possible.
            </returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Design.OlapChartNameConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Returns whether this object supports a standard set of values that can be picked from a list, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that provides a format context.</param>
            <returns>
            true if <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues"></see> should be called to find a common set of values the object supports; otherwise, false.
            </returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Design.OlapChartNameConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Returns a collection of standard values for the data type this type converter is designed for when provided with a format context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that provides a format context that can be used to extract additional information about the environment from which this converter is invoked. This parameter or properties of this parameter can be null.</param>
            <returns>
            A <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection"></see> that holds a standard set of valid values, or null if the data type does not support a standard set of values.
            </returns>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.Design.CollectionItemTypeConverter">
            <summary>
            The CollectionItemTypeConverter is design time type convertor
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Design.CollectionItemTypeConverter.simpleType">
            <summary>
            The type of object which belongs this type convertor.
            Must be setted in the constructor.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Design.CollectionItemTypeConverter.#ctor">
            <summary>
            Initializes a new instance of CollectionItemTypeConverter class.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Design.CollectionItemTypeConverter.#ctor(System.Type)">
            <summary>
            Initializes a new instance of CollectionItemTypeConverter class.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Design.CollectionItemTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            This method overrides CanConvertTo from TypeConverter. This is called when someone
            wants to convert an instance of object to another type. Here,
            only conversion to an InstanceDescriptor is supported.
            </summary>
            <param name="context">Descriptor context.</param>
            <param name="destinationType">Destination type.</param>
            <returns>True if object can be converted.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Design.CollectionItemTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            This code performs the actual conversion from an object to an InstanceDescriptor.
            </summary>
            <param name="context">Descriptor context.</param>
            <param name="culture">Culture information.</param>
            <param name="value">Object value.</param>
            <param name="destinationType">Destination type.</param>
            <returns>Converted object.</returns>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.Design.OlapChartDesigner">
            <summary>
            OLAP Manager Web control designer.
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.Design.DundasChartDesigner">
            <summary>
            Implementis ControlDesigner for chart on .Net Framework 2.0.
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.Design.DundasChartDesignerDataProvider">
            <summary>
            Interface used from Wizard to obtain datasource and data.Cross Framework compatibility.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.DundasChartDesignerDataProvider.GetDataSource">
            <summary>
            Returns selected data source object
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.DundasChartDesignerDataProvider.GetSourceDataSet(System.Object)">
            <summary>
            Returns data by data source object
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.DundasChartDesignerDataProvider.GetDataSourceMemberNames(System.Object,System.Boolean)">
            <summary>
            Returns array list with field names from given datasource
            </summary>
            <param name="source">The data source</param>
            <param name="usedForYValue">True if is used for Y series value</param>
            <returns>A array list with strings as field names</returns>
        </member>
        <member name="F:Dundas.Charting.WebControl.Design.DundasChartDesigner.errorDesignTimeHtml">
            <summary>
            Chart design-time error message.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Design.DundasChartDesigner.controlDesigner">
            <summary>
            Reference to the control designer.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Design.DundasChartDesigner.imageFileName">
            <summary>
            Temp. design-time chart image file name.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Design.DundasChartDesigner.inAccessDataSourceGetCall">
            <summary>
            Stops stack fall when we try to get access dataset in design time.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Design.DundasChartDesigner._actionLists">
            <summary>
            DesignerActionList reference 
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Design.DundasChartDesigner.selector">
            <summary>
            The selector manager reference
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.DundasChartDesigner.Initialize(System.ComponentModel.IComponent)">
            <summary>
            Prepares the designer to view, edit, and design the specified component. 
            </summary>
            <param name="component">The component for this designer.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.DundasChartDesigner.InitializeExistingComponent(System.Collections.IDictionary)">
            <summary>
            Re-initializes an existing component. 
            </summary>
            <param name="defaultValues">A name/value dictionary of default values to apply to properties.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.DundasChartDesigner.InitializeNewComponent(System.Collections.IDictionary)">
            <summary>
            Initializes a newly created component
            </summary>
            <param name="defaultValues">A name/value dictionary of default values to apply to properties</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.DundasChartDesigner.SelectionService_SelectionChanged(System.Object,System.EventArgs)">
            <summary>
            Selection service handler.
            </summary>
            <param name="sender">The selection service</param>
            <param name="e">Empty argument</param>
        </member>
        <member name="F:Dundas.Charting.WebControl.Design.DundasChartDesigner.designTimeHtml">
            <summary>
            Generated HTML design time string.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Design.DundasChartDesigner.skipChartRegeneration">
            <summary>
            Specifies if to skip HTML generation of component
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Design.DundasChartDesigner.oldDataSource">
            <summary>
            Used to track changes of the datasource property
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.DundasChartDesigner.GetPersistenceContent">
            <summary>
            Persist inner HTML of the control
            </summary>
            <returns>Inner HTML text.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.DundasChartDesigner.GetPersistInnerHtml">
            <summary>
            Persist inner HTML of the control
            </summary>
            <returns>Inner HTML text.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.DundasChartDesigner.GenerateChartImage">
            <summary>
            Generates chart image for 2008
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.DundasChartDesigner.GetDesignTimeHtmlInternal">
            <summary>
            Displays the chart in design time as HTML image tag
            </summary>
            <returns>Design time HTML representation of the chart</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.DundasChartDesigner.GetDesignTimeHtml">
            <summary>
            Gets the HTML that is used to represent the control at design time. 
            </summary>
            <returns>The HTML that is used to represent the control at design time. </returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.DundasChartDesigner.OnDataSourceChanged(System.Boolean)">
            <summary>
            Called when the data source of the associated BaseDataBoundControl object changes. 
            </summary>
            <param name="forceUpdateView">true to force the update of design-time markup; otherwise, false.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.DundasChartDesigner.UpdateHtmlWithMessageLoop">
            <summary>
            Refreches the action list in safe manner. Flushes the message loop.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.DundasChartDesigner.SetDirtyFlag">
            <summary>
            Set Dirty Flag
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.DundasChartDesigner.SetDirtyFlag(System.Boolean)">
            <summary>
            Set Dirty Flag
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.DundasChartDesigner.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Called when the designer draws the associated control on the design surface. 
            </summary>
            <param name="e">A PaintEventArgs that specifies the graphics and rectangle boundaries used to draw the control.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.DundasChartDesigner.GetClickPoint(System.Web.UI.Design.DesignerRegionMouseEventArgs)">
            <summary>
            Due to a bug in ControlDesigner.OnClick(...) we use this method
            to get to the DOM and calculate the mouse click location correctly.
            </summary>
            <param name="e">DesignerRegionMouseEventArgs passed to ControlDesigner.OnClick(...)</param>
            <returns>The correct location of the clicked point.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.DundasChartDesigner.OnClick(System.Web.UI.Design.DesignerRegionMouseEventArgs)">
            <summary>
            Called when a region of the associated control is clicked in the design surface. 
            </summary>
            <param name="e">A DesignerRegionMouseEventArgs that specifies the designer region and location that the user clicked.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.DundasChartDesigner.GetDataSource">
            <summary>
            Gets selected data source object.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.DundasChartDesigner.IsSmartTasksVisible">
            <summary>
            Determines whether [is smart tasks visible].
            </summary>
            <returns>-1 - not installed, 0 shown, 1 hidden</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.DundasChartDesigner.ToggleSmartTasks(System.Boolean)">
            <summary>
            Toggles the smart tasks.
            </summary>
            <param name="show">if set to <c>true</c> smart tasks will be shown.</param>
        </member>
        <member name="F:Dundas.Charting.WebControl.Design.DundasChartDesigner.wizardAssembly">
            <summary>
            Wizard assembly.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.DundasChartDesigner.OnWizard(System.Object,System.EventArgs)">
            <summary>
            Wizard verb was selected.
            </summary>
            <param name="sender">Sender.</param>
            <param name="e">Arguments.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.DundasChartDesigner.ShowWizard(System.Object,System.Boolean,System.Boolean)">
            <summary>
            Shows Wizard form
            </summary>
            <param name="chart">Chart control.</param>
            <param name="loadData">Load data flag.</param>
            <param name="autoRun">Wizard was automaticaly started.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.DundasChartDesigner.AutoRunWizard">
            <summary>
            Set default values for properties of the component.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.DundasChartDesigner.LoadWizardAssembly(System.Boolean)">
            <summary>
            Loads wizard assembly.
            </summary>
            <param name="autoRun">Wizard was automaticaly started.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.DundasChartDesigner.OnLoadTemplate(System.Object,System.EventArgs)">
            <summary>
            Load template verb was selected.
            </summary>
            <param name="sender">Sender.</param>
            <param name="e">Arguments.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.DundasChartDesigner.OnCreateTemplate(System.Object,System.EventArgs)">
            <summary>
            Save template verb was selected.
            </summary>
            <param name="sender">Sender.</param>
            <param name="e">Arguments.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.DundasChartDesigner.OnReset(System.Object,System.EventArgs)">
            <summary>
            Reset verb was selected.
            </summary>
            <param name="sender">Sender.</param>
            <param name="e">Arguments.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.DundasChartDesigner.InvokeCreateDataSourceDlg">
            <summary>
            Creates new data source. Used from Wizard.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.DundasChartDesigner.InvokeConfigureDataSource(System.ComponentModel.IComponent)">
            <summary>
            Invokes the configure data source DLG.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.DundasChartDesigner.InvokeCanConfigureDataSource(System.ComponentModel.IComponent)">
            <summary>
            Invokes the can configure data source.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.DundasChartDesigner.IsAbsolutePhysicalPath(System.String)">
            <summary>
            Determines whether [is absolute physical path] [the specified path].
            </summary>
            <param name="path">The path.</param>
            <returns>
            	<c>true</c> if [is absolute physical path] [the specified path]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.DundasChartDesigner.MapPath(System.IServiceProvider,System.String)">
            <summary>
            Maps the path.
            </summary>
            <param name="serviceProvider">The service provider.</param>
            <param name="path">The path.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.DundasChartDesigner.GetAccessDataSource(System.Web.UI.WebControls.AccessDataSource)">
            <summary>
            Gets the access data source.
            </summary>
            <param name="source">The source.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.DundasChartDesigner.GetSqlDataSource(System.Web.UI.WebControls.SqlDataSource)">
            <summary>
            Gets the SQL data source.
            </summary>
            <param name="source">The source.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.DundasChartDesigner.Dundas#Charting#WebControl#Design#DundasChartDesignerDataProvider#GetDataSource">
            <summary>
            Returns the corresponed datasource object
            </summary>
            <returns></returns>
        </member>
        <member name="F:Dundas.Charting.WebControl.Design.DundasChartDesigner.dataSetData">
            <summary>
            Fetched datasource collection
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.DundasChartDesigner.GetSourceDataSetCallBack(System.Collections.IEnumerable)">
            <summary>
            Callback for datasource select method
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.DundasChartDesigner.Dundas#Charting#WebControl#Design#DundasChartDesignerDataProvider#GetSourceDataSet(System.Object)">
            <summary>
            Gets the data of specified datasource object
            </summary>
            <param name="source">datasource object</param>
            <returns>Data as IEnumerable</returns>
        </member>
        <member name="P:Dundas.Charting.WebControl.Design.DundasChartDesigner.Selector">
            <summary>
            Gets the selector manager object
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.Design.DundasChartDesigner.ObjectInfo">
            <summary>
            Gets the ObjectInfo ( information about selected object ) 
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.Design.DundasChartDesigner.ActionList">
            <summary>
            Gets the connected action list 
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.Design.DundasChartDesigner.ActionUIService">
            <summary>
            Gets a reference to current DesignerActionService
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.Design.DundasChartDesigner.ActionLists">
            <summary>
            Gets the design-time action lists supported by the component 
            associated with the designer. 
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.Design.DundasChartDesigner.Verbs">
            <summary>
            Control's verbs
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Design.OlapChartDesigner.Initialize(System.ComponentModel.IComponent)">
            <summary>
            Initializes component.
            </summary>
            <param name="component">
            Component to initialize.
            </param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Design.OlapChartDesigner.Application_Idle(System.Object,System.EventArgs)">
            <summary>
            Handles the Idle event of the Application control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Design.OlapChartDesigner.Dispose(System.Boolean)">
            <summary>
            Dispose object.
            </summary>
            <param name="disposing">
            Indicates if unmanaged resources should be disposed.
            </param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Design.OlapChartDesigner.OnComponentRemoved(System.Object,System.ComponentModel.Design.ComponentEventArgs)">
            <summary>
            ComponentRemoved event handler.
            </summary>
            <param name="sender">
            Event sender.
            </param>
            <param name="ce">
            Event arguments.
            </param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Design.OlapChartDesigner.OnComponentRename(System.Object,System.ComponentModel.Design.ComponentRenameEventArgs)">
            <summary>
            ComponentRename event handler.
            </summary>
            <param name="sender">
            Event sender.
            </param>
            <param name="ce">
            Event arguments.
            </param>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Design.OlapChartDesigner.OlapManagerID">
            <summary>
            OlapManager object.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.SerializationFormat">
            <summary>
            Format of the chart serializer
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.SerializationFormat.Xml">
            <summary>
            XML serializer format
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.SerializationFormat.Binary">
            <summary>
            Binary serializer format
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.SerializationContent">
            <summary>
            Chart serializable content definition flags
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.SerializationContent.Default">
            <summary>
            Default content
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.SerializationContent.Data">
            <summary>
            Serialize only series data
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.SerializationContent.Appearance">
            <summary>
            Serialize chart visual appearance (Colors, Line Styles, ...)
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.SerializationContent.All">
            <summary>
            All content is serialized. 
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.ChartSerializer">
            <summary>
            ChartSerializer class provides chart serialization API. Depending 
            on the Format property XmlFormatSerializer or BinaryFormatserializer 
            classes will be used internally.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartSerializer.#ctor">
            <summary>
            Public constructor is unavailable
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartSerializer.#ctor(System.ComponentModel.Design.IServiceContainer)">
            <summary>
            Public constructor
            </summary>
            <param name="container">Service container reference.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartSerializer.GetService(System.Type)">
            <summary>
            Returns Chart Serializer service object
            </summary>
            <param name="serviceType">Requested service type.</param>
            <returns>Chart Serializer sevice object.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartSerializer.Reset">
            <summary>
            Reset all properties of the chart to default values. By setting Content or 
            SerializableContent/NonSerializableContent properties specific set of 
            properties can be reset.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartSerializer.Save(System.String)">
            <summary>
            Saves all properties of the chart into the file. By setting Content or 
            SerializableContent/NonSerializableContent properties specific set of 
            properties can be saved.
            </summary>
            <param name="fileName">The file name used to write the data.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartSerializer.Save(System.IO.Stream)">
            <summary>
            Saves all properties of the chart into the stream. By setting Content or 
            SerializableContent/NonSerializableContent properties specific set of 
            properties can be saved.
            </summary>
            <param name="stream">The stream where to save the data.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartSerializer.Save(System.Xml.XmlWriter)">
            <summary>
            Saves all properties of the chart into the XML writer. By setting Content or 
            SerializableContent/NonSerializableContent properties specific set of 
            properties can be saved.
            </summary>
            <param name="writer">XML writer to save the data.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartSerializer.Save(System.IO.TextWriter)">
            <summary>
            Saves all properties of the chart into the text writer. By setting Content or 
            SerializableContent/NonSerializableContent properties specific set of 
            properties can be saved.
            </summary>
            <param name="writer">Text writer to save the data.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartSerializer.Load(System.String)">
            <summary>
            Loads all properties of the chart from the file. By setting Content or 
            SerializableContent/NonSerializableContent properties specific set of 
            properties can be loaded.
            </summary>
            <param name="fileName">The file name used to load the data from.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartSerializer.Load(System.IO.Stream)">
            <summary>
            Loads all properties of the chart from the stream. By setting Content or 
            SerializableContent/NonSerializableContent properties specific set of 
            properties can be loaded.
            </summary>
            <param name="stream">The stream where to load the data from.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartSerializer.Load(System.Xml.XmlReader)">
            <summary>
            Loads all properties of the chart from the XML reader. By setting Content or 
            SerializableContent/NonSerializableContent properties specific set of 
            properties can be loaded.
            </summary>
            <param name="reader">The XML reader to load the data from.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartSerializer.Load(System.IO.TextReader)">
            <summary>
            Loads all properties of the chart from the text reader. By setting Content or 
            SerializableContent/NonSerializableContent properties specific set of 
            properties can be loaded.
            </summary>
            <param name="reader">The text reader to load the data from.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartSerializer.SetSerializableConentFromFlags">
            <summary>
            Sets SerializableContent and NonSerializableContent properties
            depending on the flags in the Content property.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartSerializer.GetFlagContentString(Dundas.Olap.WebUIControls.SerializationContent,System.Boolean)">
            <summary>
            Return a serializable or non serializable class/properties names
            for the specific flag.
            </summary>
            <param name="flag">Serializable content flag.</param>
            <param name="serializable">True - get serializable string, False - non serializable.</param>
            <returns>Serializable or non serializable string with class/properties names.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartSerializer.GetChartObject">
            <summary>
            Returns chart object for serialization.
            </summary>
            <returns>Chart object.</returns>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartSerializer.SerializeName">
            <summary>
            Should serialize name property
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartSerializer.Content">
            <summary>
            Serializable content.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartSerializer.Format">
            <summary>
            Format used to serialize the chart data.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartSerializer.ResetWhenLoading">
            <summary>
            Indicates that object properties are reset to default
            values before loading.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartSerializer.IgnoreUnknownXmlAttributes">
            <summary>
            Indicates that unknown XML attributes and elements will be 
            ignored without throwing an exception.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartSerializer.TemplateMode">
            <summary>
            Indicates that serializer works in template creation mode.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartSerializer.SerializableContent">
            <summary>
            Comma separated list of serializable (Save/Load/Reset) properties. 
            "ClassName.PropertyName,[ClassName.PropertyName]".
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartSerializer.NonSerializableContent">
            <summary>
            Comma separated list of NON serializable (Save/Load/Reset) properties. 
            "ClassName.PropertyName,[ClassName.PropertyName]".
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.Formulas.PriceIndicators">
            <summary>
            Price indicator is module with mathematical calculations 
            that apply to a security's price.
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.Formulas.IFormula">
            <summary>
            Inteface, which defines the set of standart methods and
            properties for each formula module
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Formulas.IFormula.Formula(System.String,System.Double[][],System.Double[][]@,System.String[],System.String[],System.String[][]@)">
            <summary>
            The first method in the module, which converts a formula 
            name to the corresponding private method.
            </summary>
            <param name="formulaName">String which represent a fomula name</param>
            <param name="inputValues">Arrays of doubles - Input values</param>
            <param name="outputValues">Arrays of doubles - Output values</param>
            <param name="parameterList">Array of strings - Formula parameters</param>
            <param name="extraParameterList">Array of strings - Extra Formula parameters from DataManipulator object</param>
            <param name="outLabels">Array of strings - Used for Labels. Description for ouput results.</param>
        </member>
        <member name="P:Dundas.Charting.WebControl.Formulas.IFormula.Name">
            <summary>
            Formula Module name
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Formulas.PriceIndicators.MovingAverage(System.Double[],System.Double[]@,System.Int32,System.Boolean)">
            <summary>
            A Moving Average is an indicator that shows the average 
            value of a security's price over a period of time. When 
            calculating a moving average, a mathematical analysis of 
            the security's average value over a predetermined time 
            period is made. As the security's price changes, 
            its average price moves up or down.
            A simple, or arithmetic, moving average is calculated by 
            adding the closing price of the security for a number of 
            time periods (e.g., 12 days) and then dividing this total 
            by the number of time periods. The result is the average 
            price of the security over the time period. Simple moving 
            averages give equal weight to each daily price.
            ---------------------------------------------------------
            Input: 
            	- Y values.
            Output: 
            	- Moving Average.
            Parameters: 
            	- Period
            Extra Parameters: 
            	- Start from First 
            
            </summary>
            <param name="inputValues">Array of doubles: Y values</param>
            <param name="outputValues">Arrays of doubles: Moving average</param>
            <param name="period">Period</param>
            <param name="FromFirst">Start from first value</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Formulas.PriceIndicators.MovingAverage(System.Double[][],System.Double[][]@,System.String[],System.String[])">
            <summary>
            A Moving Average is an indicator that shows the average 
            value of a security's price over a period of time. When 
            calculating a moving average, a mathematical analysis of 
            the security's average value over a predetermined time 
            period is made. As the security's price changes, 
            its average price moves up or down.
            A simple, or arithmetic, moving average is calculated by 
            adding the closing price of the security for a number of 
            time periods (e.g., 12 days) and then dividing this total 
            by the number of time periods. The result is the average 
            price of the security over the time period. Simple moving 
            averages give equal weight to each daily price.
            ---------------------------------------------------------
            Input: 
            	- Y values.
            Output: 
            	- Moving Average.
            Parameters: 
            	- Period
            Extra Parameters: 
            	- Start from First 
            
            </summary>
            <param name="inputValues">Arrays of doubles: 1. row - X values, 2. row - Y values</param>
            <param name="outputValues">Arrays of doubles: 1. row - X values, 2. row - Moving average</param>
            <param name="parameterList">Array of strings: 1. Period</param>
            <param name="extraParameterList">Array of strings: 1. Start from zero</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Formulas.PriceIndicators.ExponentialMovingAverage(System.Double[],System.Double[]@,System.Int32,System.Boolean)">
            <summary>
            An exponential (or exponentially weighted) moving average 
            is calculated by applying a percentage of today’s closing 
            price to yesterday’s moving average value. Exponential 
            moving averages place more weight on recent prices.	For 
            example, to calculate a 9% exponential moving average 
            of IBM, you would first take today’s closing price and 
            multiply it by 9%. Next, you would add this product to 
            the value of yesterday’s moving average multiplied by 
            91% (100% - 9% = 91%).
            ---------------------------------------------------------
            Input: 
            	- Y values.
            Output: 
            	- Exponential Moving Average.
            Parameters: 
            	- Period
            Extra Parameters: 
            	- Start from First 
            
            </summary>
            <param name="inputValues">Array of doubles: Y values</param>
            <param name="outputValues">Arrays of doubles: Exponential Moving average</param>
            <param name="period">Period</param>
            <param name="startFromFirst">Start from first value</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Formulas.PriceIndicators.ExponentialMovingAverage(System.Double[][],System.Double[][]@,System.String[],System.String[])">
            <summary>
            An exponential (or exponentially weighted) moving average 
            is calculated by applying a percentage of today’s closing 
            price to yesterday’s moving average value. Exponential 
            moving averages place more weight on recent prices.	For 
            example, to calculate a 9% exponential moving average 
            of IBM, you would first take today’s closing price and 
            multiply it by 9%. Next, you would add this product to 
            the value of yesterday’s moving average multiplied by 
            91% (100% - 9% = 91%).
            ---------------------------------------------------------
            Input: 
            	- Y values.
            Output: 
            	- Exponential Moving Average.
            Parameters: 
            	- Period
            Extra Parameters: 
            	- Start from First 
            
            </summary>
            <param name="inputValues">Arrays of doubles: 1. row - X values, 2. row - Y values</param>
            <param name="outputValues">Arrays of doubles: 1. row - X values, 2. row - Moving average</param>
            <param name="parameterList">Array of strings: 1. Period</param>
            <param name="extraParameterList">Array of strings: 1. Start from zero</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Formulas.PriceIndicators.TriangularMovingAverage(System.Double[][],System.Double[][]@,System.String[],System.String[])">
            <summary>
            Triangular moving averages place the majority of the weight 
            on the middle portion of the price series. They are actually 
            double-smoothed simple moving averages. The periods used 
            in the simple moving averages varies depending on if you 
            specify an odd or even number of time periods. 
            ---------------------------------------------------------
            Input: 
            	- Y values.
            Output: 
            	- Moving Average.
            Parameters: 
            	- Period
            Extra Parameters: 
            	- Start from First 
            
            </summary>
            <param name="inputValues">Arrays of doubles: 1. row - X values, 2. row - Y values</param>
            <param name="outputValues">Arrays of doubles: 1. row - X values, 2. row - Moving average</param>
            <param name="parameterList">Array of strings: 1. Period</param>
            <param name="extraParameterList">Array of strings: 1. Start from zero</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Formulas.PriceIndicators.WeightedMovingAverage(System.Double[][],System.Double[][]@,System.String[],System.String[])">
            <summary>
            A weighted moving average is designed to put more weight on 
            recent data and less weight on past data. A weighted moving 
            average is calculated by multiplying each of the previous 
            day’s data by a weight. The following table shows the calculation 
            of a 5-day weighted moving average.
            ---------------------------------------------------------
            Input: 
            	- Y values.
            Output: 
            	- Moving Average.
            Parameters: 
            	- Period
            Extra Parameters: 
            	- Start from First 
            
            </summary>
            <param name="inputValues">Arrays of doubles: 1. row - X values, 2. row - Y values</param>
            <param name="outputValues">Arrays of doubles: 1. row - X values, 2. row - Moving average</param>
            <param name="parameterList">Array of strings: 1. Period</param>
            <param name="extraParameterList">Array of strings: 1. Start from zero</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Formulas.PriceIndicators.BollingerBands(System.Double[][],System.Double[][]@,System.String[],System.String[])">
            <summary>
            Bollinger Bands plot trading bands above and below 
            a simple moving average. The standard deviation of 
            closing prices for a period equal to the moving 
            average employed is used to determine the band width. 
            This causes the bands to tighten in quiet markets and 
            loosen in volatile markets. The bands can be used to 
            determine overbought and oversold levels, locate 
            reversal areas, project targets for market moves, and 
            determine appropriate stop levels. The bands are used 
            in conjunction with indicators such as RSI, MACD 
            histogram, CCI and Rate of Change. Divergences between 
            Bollinger bands and other indicators show potential 
            action points. 
            ---------------------------------------------------------
            Input: 
            	- 1 Y value.
            Output: 
            	- 2 Y values (Bolinger Band Hi and Low).
            Parameters: 
            	- period
            Extra Parameters: 
            	- strartFromFirst
            
            </summary>
            <param name="inputValues">Arrays of doubles: 1. row - X values, 2. row - Y values</param>
            <param name="outputValues">Arrays of doubles: 1. row - X values, 2. row - Bollinger Band Up, 3. row - Bollinger Band Down</param>
            <param name="parameterList">Array of strings: 1. Period</param>
            <param name="extraParameterList">Array of strings: 1. Start from zero</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Formulas.PriceIndicators.TypicalPrice(System.Double[][],System.Double[][]@,System.String[],System.String[])">
            <summary>
            The Typical Price indicator is simply an average of each 
            day's price. The Median Price and Weighted Close are 
            similar indicators. The Typical Price indicator provides 
            a simple, single-line plot of the day's average price. 
            Some investors use the Typical Price rather than the 
            closing price when creating moving average penetration 
            systems.
            ---------------------------------------------------------
            Input: 
            	- 3 Y values ( Close, High, Low ).
            Output: 
            	- 1 Y value Weighted Close Indicator.
            Parameters: 
            	- 
            Extra Parameters: 
            	- 
            
            </summary>
            <param name="inputValues">Arrays of doubles: 1. row - X values, 2. row - Y values (Close), 3. row - Y values (High), 4. row - Y values (Low)</param>
            <param name="outputValues">Arrays of doubles: 1. row - X values, 2. row - Weighted Close</param>
            <param name="parameterList">Array of strings: Empty</param>
            <param name="extraParameterList">Array of strings: Empty </param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Formulas.PriceIndicators.MedianPrice(System.Double[][],System.Double[][]@,System.String[],System.String[])">
            <summary>
            The Median Price indicator is simply the midpoint of each 
            day's price. The Typical Price and Weighted Close are 
            similar indicators. The Median Price indicator provides 
            a simple, single-line chart of the day's "average price." 
            This average price is useful when you want a simpler 
            view of prices.
            ---------------------------------------------------------
            Input: 
            	- 2 Y values ( High, Low ).
            Output: 
            	- 1 Y value Median Price Indicator.
            Parameters: 
            	- 
            Extra Parameters: 
            	- 
            
            </summary>
            <param name="inputValues">Arrays of doubles: 1. row - X values, 2. row - Y values (High), 3. row - Y values (Low)</param>
            <param name="outputValues">Arrays of doubles: 1. row - X values, 2. row - Median Price</param>
            <param name="parameterList">Array of strings: Empty</param>
            <param name="extraParameterList">Array of strings: Empty </param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Formulas.PriceIndicators.WeightedClose(System.Double[][],System.Double[][]@,System.String[],System.String[])">
            <summary>
            The Weighted Close indicator is simply an average of each day's 
            price. It gets its name from the fact that extra weight is 
            given to the closing price. The Median Price and Typical Price 
            are similar indicators. When plotting and back-testing moving 
            averages, indicators, trendlines, etc, some investors like 
            the simplicity that a line chart offers. However, line 
            charts that only show the closing price can be misleading 
            since they ignore the high and low price. A Weighted Close 
            chart combines the simplicity of the line chart with the 
            scope of a bar chart, by plotting a single point for each 
            day that includes the high, low, and closing price.
            ---------------------------------------------------------
            Input: 
            	- 3 Y values ( Close, High, Low ).
            Output: 
            	- 1 Y value Weighted Close Indicator.
            Parameters: 
            	- 
            Extra Parameters: 
            	- 
            
            </summary>
            <param name="inputValues">Arrays of doubles: 1. row - X values, 2. row - Y values (Close), 3. row - Y values (High), 4. row - Y values (Low)</param>
            <param name="outputValues">Arrays of doubles: 1. row - X values, 2. row - Weighted Close</param>
            <param name="parameterList">Array of strings: Empty</param>
            <param name="extraParameterList">Array of strings: Empty </param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Formulas.PriceIndicators.Envelopes(System.Double[][],System.Double[][]@,System.String[],System.String[])">
            <summary>
            An envelope is comprised of two moving averages. One moving 
            average is shifted upward and the second moving average 
            is shifted downward. Envelopes define the upper and lower 
            boundaries of a security's normal trading range. A sell 
            signal is generated when the security reaches the upper 
            band whereas a buy signal is generated at the lower band. 
            The optimum percentage shift depends on the volatility of 
            the security--the more volatile, the larger the percentage.
            The logic behind envelopes is that overzealous buyers and 
            sellers push the price to the extremes (i.e., the upper 
            and lower bands), at which point the prices often stabilize 
            by moving to more realistic levels. This is similar to the 
            interpretation of Bollinger Bands.
            ---------------------------------------------------------
            Input: 
            	- 1 Y value.
            Output: 
            	- 2 Y values (Envelope Hi and Low).
            Parameters: 
            	- period
            	- shift in percentages
            Extra Parameters: 
            	- strartFromFirst
            
            </summary>
            <param name="inputValues">Arrays of doubles: 1. row - X values, 2. row - Y values</param>
            <param name="outputValues">Arrays of doubles: 1. row - X values, 2. row - Envelopes Up, 3. row - Envelopes Down</param>
            <param name="parameterList">Array of strings: parameters</param>
            <param name="extraParameterList">Array of strings: Extra parameters </param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Formulas.PriceIndicators.StandardDeviation(System.Double[],System.Double[]@,System.Int32,System.Boolean)">
            <summary>
            Standard Deviation is a statistical measure of volatility. 
            Standard Deviation is typically used as a component of 
            other indicators, rather than as a stand-alone indicator. 
            For example, Bollinger Bands are calculated by adding 
            a security's Standard Deviation to a moving average. 
            High Standard Deviation values occur when the data item 
            being analyzed (e.g., prices or an indicator) is changing 
            dramatically. Similarly, low Standard Deviation values 
            occur when prices are stable.
            </summary>
            <param name="inputValues">Input Y values</param>
            <param name="outputValues">Output standard deviation</param>
            <param name="period">Period</param>
            <param name="startFromFirst">Start calculation from the first Y value</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Formulas.PriceIndicators.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Formulas.PriceIndicators.CheckNumOfValues(System.Double[][],System.Int32)">
            <summary>
            This methods checks the number of X and Y values and 
            fire exception if the numbers are different.
            </summary>
            <param name="inputValues">Input X and Y values</param>
            <param name="numOfYValues">The number of Y values</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Formulas.PriceIndicators.Formula(System.String,System.Double[][],System.Double[][]@,System.String[],System.String[],System.String[][]@)">
            <summary>
            The first method in the module, which converts a formula 
            name to the corresponding private method.
            </summary>
            <param name="formulaName">String which represent a fomula name</param>
            <param name="inputValues">Arrays of doubles - Input values</param>
            <param name="outputValues">Arrays of doubles - Output values</param>
            <param name="parameterList">Array of strings - Formula parameters</param>
            <param name="extraParameterList">Array of strings - Extra Formula parameters from DataManipulator object</param>
            <param name="outLabels">Array of strings - Used for Labels. Description for ouput results.</param>
        </member>
        <member name="P:Dundas.Charting.WebControl.Formulas.PriceIndicators.Name">
            <summary>
            Formula Module name
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.Design.UIPropertyEditorForm">
            <summary>
            Implements the propery editor form.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Design.UIPropertyEditorForm.savedBounds">
            <summary>
            Keeps the last used bounds for the form.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Design.UIPropertyEditorForm.editor">
            <summary>
            Reference to UIPropertyEditor object
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Design.UIPropertyEditorForm.editValue">
            <summary>
            The current edit value
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.UIPropertyEditorForm.#ctor">
            <summary>
            Initializes new instance of UIPropertyEditorForm object
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.UIPropertyEditorForm.#ctor(Dundas.Charting.WebControl.Design.UIPropertyEditor)">
            <summary>
            Initializes new instance of UIPropertyEditorForm object accepting the lead 
            UIPropertyEditor object.
            </summary>
            <param name="editor">The UIPropertyEditor object</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.UIPropertyEditorForm.OnParentChanged(System.EventArgs)">
            <summary>
            OnParentChanged event handeling. Wait for parent to be connected to set property
            default form bounds and size.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.UIPropertyEditorForm.ShowEditorDialog(System.Windows.Forms.Design.IWindowsFormsEditorService)">
            <summary>
            Invokes the ShowDialog in given IWindowsFormsEditorService context
            </summary>
            <param name="service">The IWindowsFormsEditorService context</param>
            <returns>DialogResult value</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.UIPropertyEditorForm.EditValueChanged">
            <summary>
            Invalidates selected object of the property grid and 
            form caption. Note that editValue can be IList. In this case itemIndex is used.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.UIPropertyEditorForm.propertyGrid_PropertyValueChanged(System.Object,System.Windows.Forms.PropertyValueChangedEventArgs)">
            <summary>
            PropertyGrid PropertyValueChanged event processing.
            </summary>
            <param name="s"></param>
            <param name="e"></param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.UIPropertyEditorForm.UIPropertyEditorForm_FormClosing(System.Object,System.Windows.Forms.FormClosingEventArgs)">
            <summary>
            Saves the current form bounds for next use.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="F:Dundas.Charting.WebControl.Design.UIPropertyEditorForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.UIPropertyEditorForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.UIPropertyEditorForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.Design.UIPropertyEditorForm.EditValue">
            <summary>
            Gets ans sets the current edit value which appears in the property grid.
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.Design.UIPropertyEditorForm.ItemIndex">
            <summary>
            Gets the index of item in case that editValue is a IList
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.Design.UIPropertyEditor">
            <summary>
            Implements dialog type UITypeEditor with property browser.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Design.UIPropertyEditor.currentContext">
            <summary>
            current ITypeDescriptorContext.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Design.UIPropertyEditor.ignoreChangedEvents">
            <summary>
            ignoreChangedEvents flag to suppress VS transactions
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Design.UIPropertyEditor.ignoreChangingEvents">
            <summary>
            ignoreChangingEvents flag to suppress VS transactions
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Design.UIPropertyEditor.itemIndex">
            <summary>
            index of item in case that editValue is IList
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.UIPropertyEditor.#ctor">
            <summary>
            Initializes and creates new instance of UIPropertyEditor object
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.UIPropertyEditor.CreateEditorForm">
            <summary>
            Initializes and creates new UIPropertyEditorForm
            </summary>
            <returns>An initialized UIPropertyEditorForm object</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.UIPropertyEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Gets the editor style used by the EditValue method. 
            </summary>
            <param name="context">An ITypeDescriptorContext that can be used to gain additional context information. </param>
            <returns>One of the UITypeEditorEditStyle values indicating the provided editing style.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.UIPropertyEditor.TransactionName(System.Object)">
            <summary>
            Builds readable transactiuon name wich appears in undo menu.
            </summary>
            <param name="value">The object that will be changed</param>
            <returns>A string represening transaction name</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.UIPropertyEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Edits the value of the specified object using the editor style indicated by GetEditStyle. 
            </summary>
            <param name="context">An ITypeDescriptorContext that is used to gain additional context information. </param>
            <param name="provider">An IServiceProvider through which editing services may be obtained. </param>
            <param name="value">An instance of the value being edited. </param>
            <returns>The new value of the object. If the value of the object hasn't changed, this should return the same object it was passed.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.UIPropertyEditor.OnComponentChanged(System.Object,System.ComponentModel.Design.ComponentChangedEventArgs)">
            <summary>
            Process ChangeService OnComponentChanged event
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.UIPropertyEditor.OnComponentChanging(System.Object,System.ComponentModel.Design.ComponentChangingEventArgs)">
            <summary>
            Process ChangeService OnComponentChanging event
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.UIPropertyEditor.GetService(System.Type)">
            <summary>
            Gets the requested service, if it is available. 
            </summary>
            <param name="serviceType">Requested service type</param>
            <returns>service or null is not found</returns>
        </member>
        <member name="P:Dundas.Charting.WebControl.Design.UIPropertyEditor.ItemIndex">
            <summary>
            Gets and sets the IList index
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.Design.UIPropertyEditor.Context">
            <summary>
            Gets and sets the current ITypeDescriptorContext
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.Design.UIPropertyEditor.Site">
            <summary>
            Gets or sets the site.
            </summary>
            <value>The site.</value>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.CommandUIItem">
            <summary>
            The <see cref="T:Dundas.Olap.WebUIControls.CommandUIItem"/> represents one Chart Toolbar and Chart Context Menu Item.
            It is a member of CommandUIItemCollection.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.CommandElement">
            <summary>
            The CommandElement object is a base object for all objects in <see cref="P:Dundas.Olap.WebUIControls.CommandElement.ChartUI"/> infrastructure which represents elements in collections.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.ICommandElement">
            <summary>
            Organize parent/child tree. 
            Activate component initialization on Chart property setter.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ICommandElement.Parent">
            <summary>
            Gets or sets the parent ICommandElement
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ICommandElement.Chart">
            <summary>
            Gets or sets the Chart object. 
            The property setter should implement initialization/deinitialization.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.CommandElement.parent">
            <summary>
            The parent ICommandElement.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.CommandElement.chartPicture">
            <summary>
            The parent ChartPicture
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CommandElement.#ctor">
            <summary>
            Initializes new instance of CommandElement object
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CommandElement.CanRemove">
            <summary>
            Invokes when this element is about to be removed from collection.
            Can be overrided.
            </summary>
            <returns>True if element can be removed; otherwize false</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CommandElement.OnRemove">
            <summary>
            Invokes when this element is removed from collection
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CommandElement.OnAdded">
            <summary>
            Invokes when this element is added/attached to collection
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CommandElement.OnCommandMessage(Dundas.Olap.WebUIControls.CommandMessage,System.Object,System.Object)">
            <summary>
            Handles internal messages. Does do nothing and can be overrided
            </summary>
            <param name="msg">The message type</param>
            <param name="sender">Sender which broadcast thois message</param>
            <param name="parameters">Additional parameters</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CommandElement.Invalidate">
            <summary>
            Performs invalidating of ChartUI core.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.CommandElement.disposed">
            <summary>
            True if object is disposed by force
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CommandElement.Dispose">
            <summary>
            Implement IDisposable.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CommandElement.Dispose(System.Boolean)">
            <summary>
            Dispose(bool disposing) executes in two distinct scenarios.
            If disposing equals true, the method has been called directly
            or indirectly by a user's code. Managed and unmanaged resources
            can be disposed.
            If disposing equals false, the method has been called by the 
            runtime from inside the finalizer and you should not reference 
            other objects. Only unmanaged resources can be disposed.
            </summary>
            <param name="disposing">If disposing equals true, 
            the method has been called directly
            or indirectly by a user's code. 
            </param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CommandElement.OnDispose">
            <summary>
            Here managed and unmanaged resources
            can be disposed.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.CommandElement.Dundas#Olap#WebUIControls#ICommandElement#Parent">
            <summary>
            Gets or sets the parent ICommandElement
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.CommandElement.Dundas#Olap#WebUIControls#ICommandElement#Chart">
             <summary>
            Gets or sets the Chart object. 
             The property setter should implement initialization/deinitialization.
             </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.CommandElement.ChartUI">
            <summary>
            Gets the  ChartUI object.
            Returns null if element is not initialized,
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.CommandElement.Initialized">
            <summary>
            Gets intiailized flag. Returns true if this element 
            is attached to chart an chart is intialized.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.CommandElement.Collection">
            <summary>
            Gets the parent collection.
            Returns null if the element is not part of collection nor chart
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.CommandUIItem.parameters">
            <summary>
            Additional parameters to execute command
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.CommandUIItem.command">
            <summary>
            Reference to Command object.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.CommandUIItem.commandName">
            <summary>
            The command name for serialization
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.CommandUIItem.tag">
            <summary>
            Gets or sets the object that contains data about the item.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CommandUIItem.#ctor">
            <summary>
            Initializes new instance of CommandUIItem object 
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CommandUIItem.#ctor(System.String,System.String)">
            <summary>
            Initializes new instance of CommandUIItem object, using Command name identifier and
            executing parameters.
            </summary>
            <param name="commandName">The Command name which defiles which command to execute</param>
            <param name="parameters">Additional parameters to pass of the command</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CommandUIItem.ShouldSerializeCommandName">
            <summary>
            Gets information if CommandType property should be serialized.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CommandUIItem.ResetCommandName">
            <summary>
            Resets the command name.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CommandUIItem.ToString">
            <summary>
            Returns a string representation of this object.
            </summary>
            <returns>String representation of this object</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CommandUIItem.OnAdded">
            <summary>
            This method is called after this item bacomes a part of chart.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CommandUIItem.OnRemove">
            <summary>
            This method is called after just before this item will be removed 
            from the collection.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CommandUIItem.OnCommandMessage(Dundas.Olap.WebUIControls.CommandMessage,System.Object,System.Object)">
            <summary>
            Handles internal message
            </summary>
            <param name="msg">The message type</param>
            <param name="source">Sender which broadcasts this message</param>
            <param name="parameters">Additional parameters</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CommandUIItem.InvalidateCommandName">
            <summary>
            this method is called after changing of CommandName property
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CommandUIItem.ValidateItem">
            <summary>
            this method is called after initialization ( forces validation of the command name )
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.CommandUIItem.Command">
            <summary>
            Determines the type of the command.  
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.CommandUIItem.CommandName">
            <summary>
            Determines the name of the command.  
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.CommandUIItem.Parameters">
            <summary>
            Gets or sets additional parameters which may be optionally passed to the command to execute. 
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.CommandUIItem.Tag">
            <summary>
            Gets and sets tag object which can 
            be used to save additional information.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.CommandUIItem.Modified">
            <summary>
            Modified flag; true if this item has been modified.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.CommandUIItem.CommandUIItemNameTypeConverter">
            <summary>
            Design time converter of CommandName property
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CommandUIItem.CommandUIItemNameTypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Standart values supported - return true
            </summary>
            <param name="context">Descriptor context.</param>
            <returns>Standard values supported.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CommandUIItem.CommandUIItemNameTypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Standart values are not exclusive - return false
            </summary>
            <param name="context">Descriptor context.</param>
            <returns>Non exclusive standard values.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CommandUIItem.CommandUIItemNameTypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Fill in the list of the InputValues for the BaseValueName.
            </summary>
            <param name="context">Descriptor context.</param>
            <returns>Standart values collection.</returns>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.CommandUIItemCollection">
            <summary>
            The <see cref="T:Dundas.Olap.WebUIControls.CommandUIItemCollection"/> represents <see cref="!:Chart.UI.Toolbar"/> and
            <see cref="!:Chart.UI.ContextMenu"/> items collection.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.CommandElementCollection">
            <summary>
            CommandElementCollection is a collection for CommandElement objects and 
            it represents the base class for <see cref="T:Dundas.Olap.WebUIControls.CommandCollection"/> 
            and <see cref="T:Dundas.Olap.WebUIControls.CommandUIItemCollection"/>.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.CommandElementCollection.parent">
            <summary>
            The parent element
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.CommandElementCollection.chartPicture">
            <summary>
            Reference to  CommonElements obejct.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.CommandElementCollection.editModeActive">
            <summary>
            Flag which is true during design mode in collection editor
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.CommandElementCollection.initialized">
            <summary>
            Initialized flag
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.CommandElementCollection.modified">
            <summary>
            Modified flag
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.CommandElementCollection.serializing">
            <summary>
            True during serialization
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CommandElementCollection.#ctor">
            <summary>
            Initializes a new instance of CommandCollection class. Cannot be used.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CommandElementCollection.#ctor(Dundas.Olap.WebUIControls.ICommandElement)">
            <summary>
            Initializes a new instance of CommandElementCollection class. 
            </summary>
            <param name="parent">Reference to parent object</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CommandElementCollection.Invalidate">
            <summary>
            Performs invalidating of chartUI core.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CommandElementCollection.OnCommandMessage(Dundas.Olap.WebUIControls.CommandMessage,System.Object,System.Object)">
            <summary>
            Handles internal message
            </summary>
            <param name="msg">The message type</param>
            <param name="sender">Sender which broadcast thois message</param>
            <param name="parameters">Additional parameters</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CommandElementCollection._IndexOf(System.Object)">
            <summary>
            Returns the index of the first occurrence of a value in a collection
            </summary>
            <param name="o"></param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CommandElementCollection.EndEdit">
            <summary>
            Invoked by design time collection editor in oredr to perform 
            additional operations. Should be overrided.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CommandElementCollection.OnClear">
            <summary>
            Before clear implementation of <see cref="T:System.Collections.CollectionBase"/> class
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CommandElementCollection.OnInsertComplete(System.Int32,System.Object)">
            <summary>
            After insert implementation of <see cref="T:System.Collections.CollectionBase"/> class
            </summary>
            <param name="index"></param>
            <param name="value"></param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CommandElementCollection.OnRemoveComplete(System.Int32,System.Object)">
            <summary>
            After remove implementation of <see cref="T:System.Collections.CollectionBase"/> class
            </summary>
            <param name="index"></param>
            <param name="value"></param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CommandElementCollection.OnSet(System.Int32,System.Object,System.Object)">
            <summary>
            Before set ( replace ) implementation of <see cref="T:System.Collections.CollectionBase"/> class
            </summary>
            <param name="index"></param>
            <param name="oldValue"></param>
            <param name="newValue"></param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CommandElementCollection.OnSetComplete(System.Int32,System.Object,System.Object)">
            <summary>
            After set ( replace ) implementation of <see cref="T:System.Collections.CollectionBase"/> class
            </summary>
            <param name="index"></param>
            <param name="oldValue"></param>
            <param name="newValue"></param>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.CommandElementCollection.disposed">
            <summary>
            Determines if this object is disposed;
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CommandElementCollection.Dispose">
            <summary>
            Disposes of the current object.
            </summary>
            <remarks>
            Implements IDisposable.
            <p>
            Do not make this method virtual. Also, a derived class should 
            not be able to override this method.
            </p>
            </remarks>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CommandElementCollection.Dispose(System.Boolean)">
            <summary>
            Dispose(bool disposing) executes in two distinct scenarios.
            If disposing equals true, the method has been called directly
            or indirectly by a user's code. Managed and unmanaged resources
            can be disposed.
            If disposing equals false, the method has been called by the 
            runtime from inside the finalizer and you should not reference 
            other objects. Only unmanaged resources can be disposed.
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CommandElementCollection.OnDispose">
            <summary>
            This method can be overrided from succesors in order to dispose their internal fields.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.CommandElementCollection.Dundas#Olap#WebUIControls#ICommandElement#Parent">
            <summary>
            Gets and sets the Parent ICommandElement.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.CommandElementCollection.Dundas#Olap#WebUIControls#ICommandElement#Chart">
            <summary>
            Gets and sets the ChartPicture reference. Activate initialization.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.CommandElementCollection.ChartUI">
            <summary>
            Gets and sets the ChartUI object
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.CommandElementCollection.Modified">
            <summary>
            Gets and sets modified flag. 
            True if the object is modified. 
            Used for serialization.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.CommandElementCollection.Serializing">
            <summary>
            True during serialization.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.CommandElementCollection.Initialized">
            <summary>
            Returns true during initialization
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.CommandUIItemCollection.clearPending">
            <summary>
            determines that next adding of items should clear this collection
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CommandUIItemCollection.#ctor(Dundas.Olap.WebUIControls.ICommandElement)">
            <summary>
            Creates new instance of CommandUIItemCollection object;
            </summary>
            <param name="parent">The parent object which holds this collection</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CommandUIItemCollection.Add(Dundas.Olap.WebUIControls.Command)">
            <summary>
            Adds a CommandUIItem instance initialized with a specified command to the CommandUIItemCollection.
            </summary>
            <param name="value">The Command to generate a new CommandUIItem instance. </param>
            <returns>Index position of the new <see cref="T:Dundas.Olap.WebUIControls.CommandUIItem"/> in the <see cref="T:Dundas.Olap.WebUIControls.CommandUIItemCollection"/></returns>
            <remarks>
            The method will add new <see cref="T:Dundas.Olap.WebUIControls.CommandUIItem"/> to collection with empty parameters.
            This is shortcut of as example below:
            </remarks>
            <example>
            <code>
            Command cmd = new Command();
            ...
            chart1.UI.Commands.Add( cmd );
            ...
            chart1.UI.Toolbar.Items.Add( cmd);
            </code>
            </example>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CommandUIItemCollection.Add(Dundas.Olap.WebUIControls.Command,System.String)">
            <summary>
            Adds a CommandUIItem instance initialized with a specified Command and parameter to the CommandUIItemCollection.
            </summary>
            <param name="value">The Command to generate a new CommandUIItem instance. </param>
            <param name="param"><see cref="T:Dundas.Olap.WebUIControls.Command"/> parameters string which will be used by UI to execute this <see cref="T:Dundas.Olap.WebUIControls.Command"/>.</param>
            <returns>Index position in the <see cref="T:Dundas.Olap.WebUIControls.CommandUIItemCollection"/></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CommandUIItemCollection.Add(Dundas.Olap.WebUIControls.CommandUIItem)">
            <summary>
            Adds a CommandUIItem instance to the CommandUIItemCollection.  
            </summary>
            <param name="value">The CommandUIItem to add.</param>
            <returns>Index position in the <see cref="T:Dundas.Olap.WebUIControls.CommandUIItemCollection"/></returns>
            <example>
            <code>
            Command cmd = new Command();
            ...
            chart1.UI.Commands.Add( cmd );
            ...
            chart1.UI.Toolbar.Items.Add( new CommandUIItem(cmd.Name, String.Empty));
            </code>
            </example>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CommandUIItemCollection.IndexOf(Dundas.Olap.WebUIControls.Command)">
            <summary>
            Gets the index position of the specified Command in the CommandUIItemCollection.
            </summary>
            <param name="value">The Command to be located in the collection.</param>
            <returns>Index position or -1 if not found</returns>
            <remarks>
            <note type="note">
            The <see cref="T:Dundas.Olap.WebUIControls.CommandUIItemCollection"/> will be scaned until 
            <see cref="T:Dundas.Olap.WebUIControls.CommandUIItem"/> assosiated with the <see cref="T:Dundas.Olap.WebUIControls.Command"/> is found.
            If there is two <see cref="T:Dundas.Olap.WebUIControls.CommandUIItem"/> assosiated with a same <see cref="T:Dundas.Olap.WebUIControls.Command"/>, the first occurence will be returned.
            </note></remarks>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CommandUIItemCollection.IndexOf(Dundas.Olap.WebUIControls.CommandUIItem)">
            <summary>
            Gets the zero-based index position of the specified CommandUIItem in 
            the CommandUIItemCollection.
            </summary>
            <param name="value">The CommandUIItem to be located in the collection.</param>
            <returns>Index position or -1 if not found</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CommandUIItemCollection.Insert(System.Int32,Dundas.Olap.WebUIControls.Command)">
            <summary>
            Inserts a CommandUIItem initialized with specified Command into the CommandUIItemCollection.
            </summary>
            <param name="index">Index position where the new CommandUIItem is to be inserted.</param>
            <param name="value">The Command to initialize a new CommandUIItem before inserting into the collection.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CommandUIItemCollection.Insert(System.Int32,Dundas.Olap.WebUIControls.Command,System.String)">
            <summary>
            Inserts a CommandUIItem initialized with a specified Command into the CommandUIItemCollection. 
            </summary>
            <param name="index">Index position where the new CommandUIItem is to be inserted.</param>
            <param name="value">The Command to initialize a new CommandUIItem before inserting into the collection.</param>
            <param name="param">Command parameters string.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CommandUIItemCollection.Insert(System.Int32,Dundas.Olap.WebUIControls.CommandUIItem)">
            <summary>
            Inserts a CommandUIItem into the CommandUIItemCollection.
            </summary>
            <param name="index">Index position where the CommandUIItem is to be inserted.</param>
            <param name="value">The CommandUIItem to insert.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CommandUIItemCollection.Remove(Dundas.Olap.WebUIControls.Command)">
            <summary>
            Removes a CommandUIItem associated with a Command from the collection.
            </summary>
            <param name="value">The Command associated with CommandUIItem to remove.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CommandUIItemCollection.Remove(Dundas.Olap.WebUIControls.CommandUIItem)">
            <summary>
            Removes a CommandUIItem from the collection. 
            </summary>
            <param name="value">The CommandUIItem to remove.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CommandUIItemCollection.Contains(Dundas.Olap.WebUIControls.CommandUIItem)">
            <summary>
            Checks for the specified CommandUIItem instance if it exists in the collection. 
            </summary>
            <param name="value">The CommandUIItem to check.</param>
            <returns>True if collection contains this CommandUIItem</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CommandUIItemCollection.OnCommandMessage(Dundas.Olap.WebUIControls.CommandMessage,System.Object,System.Object)">
            <summary>
            Handles internal message
            </summary>
            <param name="msg">The message type</param>
            <param name="sender">Sender which broadcast thois message</param>
            <param name="parameters">Additional parameters</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CommandUIItemCollection.EndEdit">
            <summary>
            This method is called in design time after collection edit is complete.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CommandUIItemCollection.OnInsert(System.Int32,System.Object)">
            <summary>
            Performs additional custom processes before inserting a new element into the CollectionBase instance.
            </summary>
            <param name="index">The zero-based index at which to insert value. </param>
            <param name="value">The new value of the element at index.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CommandUIItemCollection.OnValidate(System.Object)">
            <summary>
            Performs additional custom processes when validating a value.
            </summary>
            <param name="value">The object to validate.</param>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.CommandUIItemCollection.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:Dundas.Olap.WebUIControls.CommandUIItem"/> at 
            the specified index within the collection.
            </summary>
            <param name="index">
            The index of the item in the collection to get or set. 
            </param>
            <value>
            An <see cref="T:Dundas.Olap.WebUIControls.CommandUIItem"/> representing the item located at the specified index within the collection.
            </value>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CommandUIItemCommandEditor.#ctor">
            <summary>
            Initialize new instance of BaseLocationUIEditor class
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.ImageAnnotation">
            <summary>
            <b>ImageAnnotation</b> is a class  that represents image annotation.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.Annotation">
            <summary>
            <b>Annotation</b> is an abstract class that defines properties and methods 
            common to all annotations.
            </summary>
            <remarks>
            All annotations are derived from the <b>Annotation</b> class, which can be 
            used to set attributes common to all annotation objects (e.g. color, position, 
            anchoring and others). 
            </remarks>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Annotation.chart">
            <summary>
            Reference to the chart
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Annotation.#ctor">
            <summary>
            Default public constructor.  Should not be used.
            </summary>
            <remarks>
            <b>Annotation</b> is an abstract class and cannot be created directly. 
            To create a new annotation object use constructors of classes like 
            <see cref="T:Dundas.Olap.WebUIControls.LineAnnotation"/>, <see cref="T:Dundas.Olap.WebUIControls.RectangleAnnotation"/>, etc. .
            </remarks>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Annotation.Paint(Dundas.Olap.WebUIControls.Chart,Dundas.Olap.WebUIControls.ChartGraphics)">
            <summary>
            Paints the annotation object using the specified graphics.
            </summary>
            <param name="graphics">
            A <see cref="T:Dundas.Olap.WebUIControls.ChartGraphics"/> object used to paint the annotation object.
            </param>
            <param name="chart">
            Reference to the annotation's <see cref="P:Dundas.Olap.WebUIControls.Annotation.Chart"/> control owner.
            </param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Annotation.PaintSelectionHandles(Dundas.Olap.WebUIControls.ChartGraphics,System.Drawing.RectangleF,System.Drawing.Drawing2D.GraphicsPath)">
            <summary>
            Paints annotation selection markers.
            </summary>
            <param name="chartGraphics">Chart graphics used for painting.</param>
            <param name="rect">Selection rectangle.</param>
            <param name="path">Selection path.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Annotation.ResizeToContent">
            <summary>
            Resizes an annotation according to it's content size.
            </summary>
            <remarks>
            Sets the annotation width and height to fit the specified text. This method applies to 
            <see cref="T:Dundas.Olap.WebUIControls.TextAnnotation"/>, <see cref="T:Dundas.Olap.WebUIControls.RectangleAnnotation"/>, <see cref="T:Dundas.Olap.WebUIControls.EllipseAnnotation"/>
            and <see cref="T:Dundas.Olap.WebUIControls.CalloutAnnotation"/> objects only.
            </remarks>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Annotation.GetContentPosition">
            <summary>
            Gets an annotation's content position.
            </summary>
            <returns>Annotation's content size.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Annotation.GetAnchorLocation(System.Double@,System.Double@,System.Boolean@,System.Boolean@)">
            <summary>
            Gets an annotation's anchor point location.
            </summary>
            <param name="anchorX">Returns the anchor X coordinate.</param>
            <param name="anchorY">Returns the anchor Y coordinate.</param>
            <param name="inRelativeAnchorX">Indicates if X coordinate is in relative chart coordinates.</param>
            <param name="inRelativeAnchorY">Indicates if Y coordinate is in relative chart coordinates.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Annotation.GetRelativePosition(System.Drawing.PointF@,System.Drawing.SizeF@,System.Drawing.PointF@)">
            <summary>
            Gets annotation object position in relative coordinates.
            </summary>
            <param name="location">Returns annotation location.</param>
            <param name="size">Returns annotation size.</param>
            <param name="anchorLocation">Returns annotation anchor point location.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Annotation.SetPositionRelative(System.Drawing.RectangleF,System.Drawing.PointF)">
            <summary>
            Set annotation object position using rectangle in relative coordinates.
            Automatically converts relative coordinates to axes values if required.
            </summary>
            <param name="position">Position in relative coordinates.</param>
            <param name="anchorPoint">Anchor location in relative coordinates.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Annotation.SetPositionRelative(System.Drawing.RectangleF,System.Drawing.PointF,System.Boolean)">
            <summary>
            Set annotation object position using rectangle in relative coordinates.
            Automatically converts relative coordinates to axes values if required.
            </summary>
            <param name="position">Position in relative coordinates.</param>
            <param name="anchorPoint">Anchor location in relative coordinates.</param>
            <param name="userInput">Indicates if position changing was a result of the user input.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Annotation.AdjustLocationSize(System.Drawing.SizeF,Dundas.Olap.WebUIControls.ResizingMode)">
            <summary>
            Adjust annotation location and\or size as a result of user action.
            </summary>
            <param name="movingDistance">Distance to resize/move the annotation.</param>
            <param name="resizeMode">Risizing mode.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Annotation.AdjustLocationSize(System.Drawing.SizeF,Dundas.Olap.WebUIControls.ResizingMode,System.Boolean)">
            <summary>
            Adjust annotation location and\or size as a result of user action.
            </summary>
            <param name="movingDistance">Distance to resize/move the annotation.</param>
            <param name="resizeMode">Risizing mode.</param>
            <param name="pixelCoord">Distance is in pixels, otherwise relative.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Annotation.AdjustLocationSize(System.Drawing.SizeF,Dundas.Olap.WebUIControls.ResizingMode,System.Boolean,System.Boolean)">
            <summary>
            Adjust annotation location and\or size as a result of user action.
            </summary>
            <param name="movingDistance">Distance to resize/move the annotation.</param>
            <param name="resizeMode">Risizing mode.</param>
            <param name="pixelCoord">Distance is in pixels, otherwise relative.</param>
            <param name="userInput">Indicates if position changing was a result of the user input.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Annotation.IsAnchorDrawn">
            <summary>
            Checks if annotation draw anything in the anchor position (except selection handle)
            </summary>
            <returns>True if annotation "connects" itself and anchor point visually.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Annotation.GetDataPointByName(System.String)">
            <summary>
            Gets data point by name.
            </summary>
            <param name="dataPointName">Data point name to find.</param>
            <returns>Data point.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Annotation.GetAxisByName(System.String)">
            <summary>
            Gets axis by name.
            </summary>
            <param name="axisName">Axis name to find.</param>
            <returns>Data point.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Annotation.GetDataPointName(Dundas.Olap.WebUIControls.DataPoint)">
            <summary>
            Gets data point unique name.
            </summary>
            <param name="dataPoint">Data point to get the name for.</param>
            <returns>Data point name.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Annotation.GetAxisName(Dundas.Olap.WebUIControls.Axis)">
            <summary>
            Gets axis unique name.
            </summary>
            <param name="axis">Axis to get the name for.</param>
            <returns>Axis name.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Annotation.SendToBack">
            <summary>
            Sends an annotation to the back of all annotations.
            <seealso cref="M:Dundas.Olap.WebUIControls.Annotation.BringToFront"/>
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Annotation.BringToFront">
            <summary>
            Brings an annotation to the front of all annotations.
            <seealso cref="M:Dundas.Olap.WebUIControls.Annotation.SendToBack"/>
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Annotation.GetAnnotationGroup">
            <summary>
            Gets the group, if any, the annotation belongs to.
            </summary>
            <returns>
            Returns an <see cref="T:Dundas.Olap.WebUIControls.AnnotationGroup"/> object, or <b>null</b> or <b>nothing</b> 
            if the annotation does not belong to a group.
            </returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Annotation.AddSmartLabelMarkerPositions(Dundas.Olap.WebUIControls.CommonElements,System.Collections.ArrayList)">
            <summary>
            Adds anchor position to the list. Used to check SmartLabels overlapping.
            </summary>
            <param name="common">Common chart elements.</param>
            <param name="list">List to add to.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Annotation.Anchor(Dundas.Olap.WebUIControls.DataPoint)">
            <summary>
            Anchors an annotation to a data point.
            <seealso cref="P:Dundas.Olap.WebUIControls.Annotation.AnchorDataPoint"/>
            <seealso cref="P:Dundas.Olap.WebUIControls.Annotation.AnchorX"/>
            <seealso cref="P:Dundas.Olap.WebUIControls.Annotation.AnchorY"/>
            </summary>
            <param name="dataPoint">
            <see cref="T:Dundas.Olap.WebUIControls.DataPoint"/> to be anchored to.
            </param>
            <remarks>
            Anchors an annotation to the specified data point.
            </remarks>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Annotation.Anchor(Dundas.Olap.WebUIControls.DataPoint,Dundas.Olap.WebUIControls.DataPoint)">
            <summary>
            Anchors an annotation to two data points.
            <seealso cref="P:Dundas.Olap.WebUIControls.Annotation.AnchorDataPoint"/>
            <seealso cref="P:Dundas.Olap.WebUIControls.Annotation.AnchorX"/>
            <seealso cref="P:Dundas.Olap.WebUIControls.Annotation.AnchorY"/>
            </summary>
            <param name="dataPoint1">
            First anchor <see cref="T:Dundas.Olap.WebUIControls.DataPoint"/>.
            </param>
            <param name="dataPoint2">
            Second anchor <see cref="T:Dundas.Olap.WebUIControls.DataPoint"/>.
            </param>
            <remarks>
            Anchors an annotation's top/left and bottom/right corners to the 
            specified data points.
            </remarks>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Annotation.IsVisible">
            <summary>
            Helper method that checks if annotation is visible.
            </summary>
            <returns>True if annotation is visible.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Annotation.ResetCurrentRelativePosition">
            <summary>
            Resets pre-calculated annotation position.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Annotation.Delete">
            <summary>
            Deletes a chart annotation from the <b>Annotations</b> collection.
            </summary>
            <remarks>
            Removes an annotation from the chart <b>Annotations</b> collection.
            </remarks>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Annotation.ReplaceKeywords(System.String)">
            <summary>
            Replaces predefined keyword inside the string with their values if
            annotation is anchored to the data point.
            </summary>
            <param name="strOriginal">Original string with keywords.</param>
            <returns>Modified string.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Annotation.IsAnchorVisible">
            <summary>
            Checks if anchor point of the annotation is visible.
            </summary>
            <returns>True if anchor point is visible.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Annotation.GetGraphics">
            <summary>
            Returns chart graphics objects.
            </summary>
            <returns>Chart graphics object.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Annotation.GetSelectionHandle(System.Drawing.PointF)">
            <summary>
            Checks if provided pixel coordinate is contained in one of the 
            selection handles rectangle.
            </summary>
            <param name="point">Coordinate in pixels.</param>
            <returns>Resizing mode.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Annotation.GetDataPointAxis(Dundas.Olap.WebUIControls.DataPoint,Dundas.Olap.WebUIControls.AxisName)">
            <summary>
            Gets data point X or Y axis.
            </summary>
            <param name="dataPoint">Data point to get the axis for.</param>
            <param name="axisName">X or Y axis to get.</param>
            <returns>Data point axis.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Annotation.GetAxes(Dundas.Olap.WebUIControls.Axis@,Dundas.Olap.WebUIControls.Axis@)">
            <summary>
            Gets annotation vertical and horizontal axes.
            </summary>
            <param name="vertAxis">Returns annotation vertical axis or null.</param>
            <param name="horizAxis">Returns annotation horizontal axis or null.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Annotation.Invalidate">
            <summary>
            Invalidates chart annotation when one of the attributes is changed.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Annotation.Name">
            <summary>
            Gets or sets an annotation's unique name.
            </summary>
            <value>
            A <b>string</b> that represents an annotation's unique name.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Annotation.AnnotationType">
            <summary>
            Gets or sets an annotation's type name.
            </summary>
            <remarks>
            This abstract property is used to get the name of each annotation type 
            (e.g. Line, Rectangle, Ellipse,...). 
            <para>
            This property is for internal use and is hidden at design and run time. Should 
            not be part of the documentation.
            </para>
            </remarks>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Annotation.ClipToChartArea">
            <summary>
            Gets or sets the name of the chart area an annotation is clipped to.
            </summary>
            <value>
            A string which represents the name of an existing chart area.
            </value>
            <remarks>
            If the chart area name is specified, an annotation will only be drawn inside the 
            plotting area of the chart area specified. All parts of the annotation 
            outside of the plotting area will be clipped.
            <para>
            To disable chart area clipping set the property to "NotSet" or an empty string.
            </para>
            </remarks>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Annotation.Tag">
            <summary>
            Gets or sets an object associated with an annotation.
            </summary>
            <value>
            An <see cref="T:System.Object"/> associated with an annotation.
            </value>
            <remarks>
            This property may be used to store additional data with an annotation.
            </remarks>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Annotation.Chart">
            <summary>
            Gets or sets the chart referense.
            </summary>
            <remarks>
            Property is for internal use and is hidden at design and run time. Should
            not be part of the documentation.
            </remarks>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Annotation.SmartLabels">
            <summary>
            Gets or sets the smart labels style of an annotation.
            </summary>
            <value>
            An <see cref="T:Dundas.Olap.WebUIControls.AnnotationSmartLabelsStyle"/> object that represents an annotation's 
            smart labels style properties.
            </value>
            <remarks>
            Smart labels are used to prevent an annotation overlapping the data point labels 
            and other annotations.
            <para>
            Note that data point labels must also have smart labels enabled.
            </para>
            </remarks>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Annotation.SizeAlwaysRelative">
            <summary>
            Gets or sets a flag that specifies whether an annotation's size is always 
            defined in relative chart coordinates.
            <seealso cref="P:Dundas.Olap.WebUIControls.Annotation.Width"/>
            <seealso cref="P:Dundas.Olap.WebUIControls.Annotation.Height"/>
            </summary>
            <value>
            <b>True</b> if an annotation's <see cref="P:Dundas.Olap.WebUIControls.Annotation.Width"/> and <see cref="P:Dundas.Olap.WebUIControls.Annotation.Height"/> are always 
            in chart relative coordinates, <b>false</b> otherwise.
            </value>
            <remarks>
            An annotation's width and height may be set in relative chart or axes coordinates. 
            By default relative chart coordinates are used.
            <para>
            To use axes coordinates for size set the <b>SizeAlwaysRelative</b> property to 
            <b>false</b> and either anchor the annotation to a data point or set the 
            <see cref="P:Dundas.Olap.WebUIControls.Annotation.AxisX"/> or <see cref="P:Dundas.Olap.WebUIControls.Annotation.AxisY"/> properties.
            </para>
            </remarks>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Annotation.X">
            <summary>
            Gets or sets the X coordinate of an annotation.
            <seealso cref="P:Dundas.Olap.WebUIControls.Annotation.AnchorDataPoint"/>
            <seealso cref="P:Dundas.Olap.WebUIControls.Annotation.AnchorX"/>
            </summary>
            <value>
            A Double value that represents an annotation position's X coordinate.
            </value>
            <remarks>
            The X coordinate of an annotation is in relative chart coordinates or axes coordinates. Chart 
            relative coordinates are used by default.
            <para>
            To use axes coordinates anchor 
            an annotation to a data point using the <see cref="P:Dundas.Olap.WebUIControls.Annotation.AnchorDataPoint"/> property, or 
            set the annotation axes using the <see cref="P:Dundas.Olap.WebUIControls.Annotation.AxisX"/> or <see cref="P:Dundas.Olap.WebUIControls.Annotation.AxisY"/> properties.
            </para>
            <para>
            Set the X position to Double.NaN ("NotSet") to achieve automatic position calculation 
            when the annotation is anchored using the <see cref="P:Dundas.Olap.WebUIControls.Annotation.AnchorDataPoint"/> property or 
            the <see cref="P:Dundas.Olap.WebUIControls.Annotation.AnchorX"/> and <see cref="P:Dundas.Olap.WebUIControls.Annotation.AnchorY"/> properties.
            </para>
            </remarks>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Annotation.Y">
            <summary>
            Gets or sets the Y coordinate of the annotation.
            <seealso cref="P:Dundas.Olap.WebUIControls.Annotation.AnchorDataPoint"/>
            <seealso cref="P:Dundas.Olap.WebUIControls.Annotation.AnchorY"/>
            </summary>
            <value>
            A Double value that represents an annotation position's Y coordinate.
            </value>
            <remarks>
            The Y coordinate of an annotation is in relative chart coordinates or axes coordinates. Chart 
            relative coordinates are used by default.
            <para>
            To use axes coordinates anchor 
            an annotation to a data point using the <see cref="P:Dundas.Olap.WebUIControls.Annotation.AnchorDataPoint"/> property, or 
            set the annotation axes using the <see cref="P:Dundas.Olap.WebUIControls.Annotation.AxisX"/> or <see cref="P:Dundas.Olap.WebUIControls.Annotation.AxisY"/> properties.
            </para>
            <para>
            Set the Y position to Double.NaN ("NotSet") to achieve automatic position calculation 
            when the annotation is anchored using the <see cref="P:Dundas.Olap.WebUIControls.Annotation.AnchorDataPoint"/> property or 
            the <see cref="P:Dundas.Olap.WebUIControls.Annotation.AnchorX"/> and <see cref="P:Dundas.Olap.WebUIControls.Annotation.AnchorY"/> properties.
            </para>
            </remarks>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Annotation.Width">
            <summary>
            Gets or sets an annotation's width.
            <seealso cref="P:Dundas.Olap.WebUIControls.Annotation.SizeAlwaysRelative"/>
            <seealso cref="P:Dundas.Olap.WebUIControls.Annotation.AxisX"/>
            </summary>
            <value>
            A Double value that represents an annotation's width.
            </value>
            <remarks>
            An annotation's width can be a negative value, in which case the annotation orientation 
            is switched.
            <para>
            Annotation width can be in relative chart or axes coordinates. Chart 
            relative coordinates are used by default.
            </para>
            <para>
            To use axes coordinates anchor 
            an annotation to a data point using the <see cref="P:Dundas.Olap.WebUIControls.Annotation.AnchorDataPoint"/> property, or 
            set the annotation axes using the <see cref="P:Dundas.Olap.WebUIControls.Annotation.AxisX"/> or <see cref="P:Dundas.Olap.WebUIControls.Annotation.AxisY"/> properties 
            and set the <see cref="P:Dundas.Olap.WebUIControls.Annotation.SizeAlwaysRelative"/> property to <b>false</b>.
            </para>
            <para>
            Set the width to Double.NaN ("NotSet") to achieve automatic size calculation for 
            annotations with text. The size will automatically be calculated based on 
            the annotation text and font size.
            </para>
            </remarks>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Annotation.Height">
            <summary>
            Gets or sets an annotation's height.
            <seealso cref="P:Dundas.Olap.WebUIControls.Annotation.SizeAlwaysRelative"/>
            <seealso cref="P:Dundas.Olap.WebUIControls.Annotation.AxisY"/>
            </summary>
            <value>
            A Double value that represents an annotation's height.
            </value>
            <remarks>
            An annotation's height can be a negative value, in which case the annotation orientation 
            is switched.
            <para>
            Annotation width can be in relative chart or axes coordinates. Chart 
            relative coordinates are used by default.
            </para>
            <para>
            To use axes coordinates anchor 
            an annotation to a data point using the <see cref="P:Dundas.Olap.WebUIControls.Annotation.AnchorDataPoint"/> property, or 
            set the annotation axes using the <see cref="P:Dundas.Olap.WebUIControls.Annotation.AxisX"/> or <see cref="P:Dundas.Olap.WebUIControls.Annotation.AxisY"/> properties 
            and set the <see cref="P:Dundas.Olap.WebUIControls.Annotation.SizeAlwaysRelative"/> property to <b>false</b>.
            </para>
            <para>
            Set the width to Double.NaN ("NotSet") to achieve automatic size calculation for 
            annotations with text. The size will automatically be calculated based on 
            the annotation text and font size.
            </para>
            </remarks>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Annotation.Right">
            <summary>
            Gets or sets an annotation position's right boundary.
            <seealso cref="P:Dundas.Olap.WebUIControls.Annotation.SizeAlwaysRelative"/>
            <seealso cref="P:Dundas.Olap.WebUIControls.Annotation.AxisX"/>
            </summary>
            <value>
            A Double value that represents the position of an annotation's right boundary.
            </value>
            <remarks>
            To use axes coordinates anchor 
            an annotation to a data point using the <see cref="P:Dundas.Olap.WebUIControls.Annotation.AnchorDataPoint"/> property, or 
            set the annotation axes using the <see cref="P:Dundas.Olap.WebUIControls.Annotation.AxisX"/> or <see cref="P:Dundas.Olap.WebUIControls.Annotation.AxisY"/> properties 
            and set the <see cref="P:Dundas.Olap.WebUIControls.Annotation.SizeAlwaysRelative"/> property to <b>false</b>.
            </remarks>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Annotation.Bottom">
            <summary>
            Gets or sets an annotation position's bottom boundary.
            <seealso cref="P:Dundas.Olap.WebUIControls.Annotation.SizeAlwaysRelative"/>
            <seealso cref="P:Dundas.Olap.WebUIControls.Annotation.AxisX"/>
            </summary>
            <value>
            A Double value that represents the position of an annotation's bottom boundary.
            </value>
            <remarks>
            To use axes coordinates anchor 
            an annotation to a data point using the <see cref="P:Dundas.Olap.WebUIControls.Annotation.AnchorDataPoint"/> property, or 
            set the annotation axes using the <see cref="P:Dundas.Olap.WebUIControls.Annotation.AxisX"/> or <see cref="P:Dundas.Olap.WebUIControls.Annotation.AxisY"/> properties 
            and set the <see cref="P:Dundas.Olap.WebUIControls.Annotation.SizeAlwaysRelative"/> property to <b>false</b>.
            </remarks>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Annotation.Selected">
            <summary>
            Gets or sets a flag that determines if an annotation is selected.
            <seealso cref="P:Dundas.Olap.WebUIControls.Annotation.AllowSelecting"/>
            </summary>
            <value>
            <b>True</b> if the annotation is selected, <b>false</b> otherwise.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Annotation.SelectionPointsStyle">
            <summary>
            Gets or sets an annotation selection points style.
            </summary>
            <value>
            A <see cref="P:Dundas.Olap.WebUIControls.Annotation.SelectionPointsStyle"/> value that represents annotation
            selection style.
            </value>
            <remarks>
            Property is for internal use and is hidden at design and run time. 
            Should not be part of the documentation.
            </remarks>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Annotation.Visible">
            <summary>
            Gets or sets a flag that specifies whether an annotation is visible.
            </summary>
            <value>
            <b>True</b> if the annotation is visible, <b>false</b> otherwise.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Annotation.Alignment">
            <summary>
            Gets or sets an annotation's content alignment.
            </summary>
            <value>
            A <see cref="T:System.Drawing.ContentAlignment"/> value that represents the content alignment.
            </value>
            <remarks>
            This property is used to align text for <see cref="T:Dundas.Olap.WebUIControls.TextAnnotation"/>, <see cref="T:Dundas.Olap.WebUIControls.RectangleAnnotation"/>,  
            <see cref="T:Dundas.Olap.WebUIControls.EllipseAnnotation"/> and <see cref="T:Dundas.Olap.WebUIControls.CalloutAnnotation"/> objects, and to align 
            a non-scaled image inside an <see cref="T:Dundas.Olap.WebUIControls.ImageAnnotation"/> object.
            </remarks>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Annotation.TextColor">
            <summary>
            Gets or sets an annotation's text color.
            <seealso cref="P:Dundas.Olap.WebUIControls.Annotation.TextFont"/>
            <seealso cref="P:Dundas.Olap.WebUIControls.Annotation.TextStyle"/>
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color"/> value used to draw an annotation's text.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Annotation.TextFont">
            <summary>
            Gets or sets an annotation's text font.
            <seealso cref="P:Dundas.Olap.WebUIControls.Annotation.TextColor"/>
            <seealso cref="P:Dundas.Olap.WebUIControls.Annotation.TextStyle"/>
            </summary>
            <value>
            A <see cref="T:System.Drawing.Font"/> object used to draw an annotation's text.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Annotation.TextStyle">
            <summary>
            Gets or sets an annotation's text style.
            <seealso cref="P:Dundas.Olap.WebUIControls.Annotation.TextFont"/>
            <seealso cref="P:Dundas.Olap.WebUIControls.Annotation.TextColor"/>
            </summary>
            <value>
            A <see cref="P:Dundas.Olap.WebUIControls.Annotation.TextStyle"/> value used to draw an annotation's text.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Annotation.LineColor">
            <summary>
            Gets or sets an annotation's line color.
            <seealso cref="P:Dundas.Olap.WebUIControls.Annotation.LineWidth"/>
            <seealso cref="P:Dundas.Olap.WebUIControls.Annotation.LineStyle"/>
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color"/> value used to draw an annotation's line.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Annotation.LineWidth">
            <summary>
            Gets or sets an annotation's line width.
            <seealso cref="P:Dundas.Olap.WebUIControls.Annotation.LineColor"/>
            <seealso cref="P:Dundas.Olap.WebUIControls.Annotation.LineStyle"/>
            </summary>
            <value>
            An integer value defining an annotation's line width, in pixels.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Annotation.LineStyle">
            <summary>
            Gets or sets an annotation's line style.
            <seealso cref="P:Dundas.Olap.WebUIControls.Annotation.LineWidth"/>
            <seealso cref="P:Dundas.Olap.WebUIControls.Annotation.LineColor"/>
            </summary>
            <value>
            A <see cref="T:Dundas.Olap.WebUIControls.ChartDashStyle"/> value used to draw an annotation's line.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Annotation.BackColor">
            <summary>
            Gets or sets an annotation's background color.
            <seealso cref="P:Dundas.Olap.WebUIControls.Annotation.BackGradientEndColor"/>
            <seealso cref="P:Dundas.Olap.WebUIControls.Annotation.BackHatchStyle"/>
            <seealso cref="P:Dundas.Olap.WebUIControls.Annotation.BackGradientType"/>
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color"/> value used to draw an annotation's background.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Annotation.BackHatchStyle">
            <summary>
            Gets or sets an annotation's background hatch style.
            <seealso cref="P:Dundas.Olap.WebUIControls.Annotation.BackGradientEndColor"/>
            <seealso cref="P:Dundas.Olap.WebUIControls.Annotation.BackColor"/>
            <seealso cref="P:Dundas.Olap.WebUIControls.Annotation.BackGradientType"/>
            </summary>
            <value>
            A <see cref="T:Dundas.Olap.WebUIControls.ChartHatchStyle"/> value used to draw the background.
            </value>
            <remarks>
            Two colors are used to draw the hatching <see cref="P:Dundas.Olap.WebUIControls.Annotation.BackColor"/> and <see cref="P:Dundas.Olap.WebUIControls.Annotation.BackGradientEndColor"/>.
            </remarks>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Annotation.BackGradientType">
            <summary>
            Gets or sets an annotation background's gradient style.
            <seealso cref="P:Dundas.Olap.WebUIControls.Annotation.BackGradientEndColor"/>
            <seealso cref="P:Dundas.Olap.WebUIControls.Annotation.BackColor"/>
            <seealso cref="P:Dundas.Olap.WebUIControls.Annotation.BackHatchStyle"/>
            </summary>
            <value>
            A <see cref="T:Dundas.Olap.WebUIControls.GradientType"/> value used to draw an annotation background.
            </value>
            <remarks>
            Two colors are used to draw the gradient <see cref="P:Dundas.Olap.WebUIControls.Annotation.BackColor"/> and <see cref="P:Dundas.Olap.WebUIControls.Annotation.BackGradientEndColor"/>.
            </remarks>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Annotation.BackGradientEndColor">
            <summary>
            Gets or sets an annotation background's secondary color.
            <seealso cref="P:Dundas.Olap.WebUIControls.Annotation.BackColor"/>
            <seealso cref="P:Dundas.Olap.WebUIControls.Annotation.BackHatchStyle"/>
            <seealso cref="P:Dundas.Olap.WebUIControls.Annotation.BackGradientType"/>
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color"/> value used to draw an annotation background with 
            hatching or gradient fill.
            </value>
            <remarks>
            This color is used with <see cref="P:Dundas.Olap.WebUIControls.Annotation.BackColor"/> when <see cref="P:Dundas.Olap.WebUIControls.Annotation.BackHatchStyle"/> or
            <see cref="P:Dundas.Olap.WebUIControls.Annotation.BackGradientType"/> are used.
            </remarks>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Annotation.ShadowColor">
            <summary>
            Gets or sets an annotation's shadow color.
            <seealso cref="P:Dundas.Olap.WebUIControls.Annotation.ShadowOffset"/>
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color"/> value used to draw an annotation's shadow.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Annotation.ShadowOffset">
            <summary>
            Gets or sets an annotation shadow's size.
            <seealso cref="P:Dundas.Olap.WebUIControls.Annotation.ShadowColor"/>
            </summary>
            <value>
            An integer value that represents the shadow size.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Annotation.AxisXName">
            <summary>
            Gets or sets the name of the X axis the annotation is attached to.
            </summary>
            <value>
            A string value that represents the name of the X axis the annotation
            is attached to.
            </value>
            <remarks>
            Property is for internal use and is hidden at design and run time. 
            Should not be part of the documentation.
            </remarks>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Annotation.AxisYName">
            <summary>
            Gets or sets Y axis name the annotation is attached to.
            </summary>
            <value>
            A string value that represents the name of the Y axis this annotation
            is attached to.
            </value>
            <remarks>
            Property is for internal use and is hidden at design and run time. 
            Should not be part of the documentation.
            </remarks>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Annotation.YAxisName">
            <summary>
            Gets or sets Y axis name the annotation is attached to.
            NOTE: "AxisYName" property was used before but the name was changed to solve the
            duplicated hash value during the serialization with the "TitleSeparator" property. 
            </summary>
            <value>
            A string value that represents the name of the Y axis this annotation
            is attached to.
            </value>
            <remarks>
            Property is for internal use and is hidden at design and run time. 
            Should not be part of the documentation.
            </remarks>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Annotation.AxisX">
            <summary>
            Gets or sets the X axis an annotation is attached to.
            <seealso cref="P:Dundas.Olap.WebUIControls.Annotation.AxisY"/>
            <seealso cref="P:Dundas.Olap.WebUIControls.Annotation.SizeAlwaysRelative"/>
            </summary>
            <value>
            <see cref="T:Dundas.Olap.WebUIControls.Axis"/> object the annotation is attached to.
            </value>
            <remarks>
            When an annotation is attached to an axis it's X position is always in 
            axis coordinates. To define an annotation's size in axis coordinates as well, 
            make sure the <see cref="P:Dundas.Olap.WebUIControls.Annotation.SizeAlwaysRelative"/> property is set to <b>false</b>.
            <para>
            Set this value to <b>null</b> or <b>nothing</b> to disable attachment to the axis.
            </para>
            </remarks>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Annotation.AxisY">
            <summary>
            Gets or sets the Y axis an annotation is attached to.
            <seealso cref="P:Dundas.Olap.WebUIControls.Annotation.AxisX"/>
            <seealso cref="P:Dundas.Olap.WebUIControls.Annotation.SizeAlwaysRelative"/>
            </summary>
            <value>
            <see cref="T:Dundas.Olap.WebUIControls.Axis"/> object this annotation is attached to.
            </value>
            <remarks>
            When an annotation is attached to an axis it's Y position is always in 
            axis coordinates. To define an annotation's size in axis coordinates as well, 
            make sure <see cref="P:Dundas.Olap.WebUIControls.Annotation.SizeAlwaysRelative"/> property is set to <b>false</b>.
            <para>
            Set this value to <b>null</b> or <b>nothing</b> to disable annotation attachment to an axis.
            </para>
            </remarks>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Annotation.AnchorDataPointName">
            <summary>
            Gets or sets the name of a data point an annotation is anchored to.
            </summary>
            <value>
            A string value that represents the name of the data point the 
            annotation is anchored to.
            </value>
            <remarks>
            Property is for internal use and is hidden at design and run time. 
            Should not be part of the documentation.
            </remarks>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Annotation.AnchorDataPoint">
            <summary>
            Gets or sets the data point an annotation is anchored to.
            <seealso cref="P:Dundas.Olap.WebUIControls.Annotation.AnchorAlignment"/>
            <seealso cref="P:Dundas.Olap.WebUIControls.Annotation.AnchorOffsetX"/>
            <seealso cref="P:Dundas.Olap.WebUIControls.Annotation.AnchorOffsetY"/>
            <seealso cref="P:Dundas.Olap.WebUIControls.Annotation.AnchorX"/>
            <seealso cref="P:Dundas.Olap.WebUIControls.Annotation.AnchorY"/>
            <seealso cref="M:Dundas.Olap.WebUIControls.Annotation.Anchor(Dundas.Olap.WebUIControls.DataPoint)"/>
            </summary>
            <value>
            A <see cref="T:Dundas.Olap.WebUIControls.DataPoint"/> object an annotation is anchored to.
            </value>
            <remarks>
            The annotation is anchored to the X and Y values of the specified data point, 
            and automatically uses the same axes coordinates as the data point.
            <para>
            To automatically position the annotation relative to the anchor point make sure 
            it's <see cref="P:Dundas.Olap.WebUIControls.Annotation.X"/> and <see cref="P:Dundas.Olap.WebUIControls.Annotation.Y"/> properties are set to <b>Double.NaN</b>.
            The <see cref="P:Dundas.Olap.WebUIControls.Annotation.AnchorAlignment"/> property may be used to change the annotation's 
            automatic position alignment to the anchor point. The <see cref="P:Dundas.Olap.WebUIControls.Annotation.AnchorOffsetX"/> and 
            <see cref="P:Dundas.Olap.WebUIControls.Annotation.AnchorOffsetY"/> properties may be used to add extra spacing.
            </para>
            <para>
            When using this property make sure the <see cref="P:Dundas.Olap.WebUIControls.Annotation.AnchorX"/> and <see cref="P:Dundas.Olap.WebUIControls.Annotation.AnchorY"/> 
            properties are set to <b>Double.NaN</b> (they have precedence).
            </para>
            <para>
            Set this value to <b>null</b> or <b>nothing</b> to disable annotation anchoring to a data point.
            </para>
            </remarks>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Annotation.AnchorX">
            <summary>
            Gets or sets the X coordinate the annotation is anchored to.
            <seealso cref="P:Dundas.Olap.WebUIControls.Annotation.AnchorY"/>
            <seealso cref="P:Dundas.Olap.WebUIControls.Annotation.AnchorOffsetX"/>
            <seealso cref="P:Dundas.Olap.WebUIControls.Annotation.AnchorOffsetY"/>
            <seealso cref="P:Dundas.Olap.WebUIControls.Annotation.AnchorAlignment"/>
            <seealso cref="P:Dundas.Olap.WebUIControls.Annotation.AnchorDataPoint"/>
            </summary>
            <value>
            A double value that represents the X coordinate an annotation is anchored to.
            </value>
            <remarks>
            The annotation is anchored to the X coordinate specified in relative or axis coordinates, 
            depending on the <see cref="P:Dundas.Olap.WebUIControls.Annotation.AxisX"/> property value.
            <para>
            To automatically position an annotation relative to an anchor point make sure 
            it's <see cref="P:Dundas.Olap.WebUIControls.Annotation.X"/> property is set to <b>Double.NaN</b>.
            The <see cref="P:Dundas.Olap.WebUIControls.Annotation.AnchorAlignment"/> property may be used to change the annotation's 
            automatic position alignment to the anchor point. The <see cref="P:Dundas.Olap.WebUIControls.Annotation.AnchorOffsetX"/> and 
            <see cref="P:Dundas.Olap.WebUIControls.Annotation.AnchorOffsetY"/> properties may be used to add extra spacing.
            </para>
            <para>
            This property has a higher priority than the <see cref="P:Dundas.Olap.WebUIControls.Annotation.AnchorDataPoint"/> property.
            </para>
            <para>
            Set this value to <b>Double.NaN</b> to disable annotation anchoring to the value.
            </para>
            </remarks>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Annotation.AnchorY">
            <summary>
            Gets or sets the Y coordinate the annotation is anchored to.
            <seealso cref="P:Dundas.Olap.WebUIControls.Annotation.AnchorY"/>
            <seealso cref="P:Dundas.Olap.WebUIControls.Annotation.AnchorOffsetX"/>
            <seealso cref="P:Dundas.Olap.WebUIControls.Annotation.AnchorOffsetY"/>
            <seealso cref="P:Dundas.Olap.WebUIControls.Annotation.AnchorAlignment"/>
            <seealso cref="P:Dundas.Olap.WebUIControls.Annotation.AnchorDataPoint"/>
            </summary>
            <value>
            A double value that represents the Y coordinate an annotation is anchored to.
            </value>
            <remarks>
            The annotation is anchored to the Y coordinate specified in relative or axis coordinates, 
            depending on the <see cref="P:Dundas.Olap.WebUIControls.Annotation.AxisX"/> property value.
            <para>
            To automatically position an annotation relative to an anchor point make sure 
            it's <see cref="P:Dundas.Olap.WebUIControls.Annotation.Y"/> property is set to <b>Double.NaN</b>.
            The <see cref="P:Dundas.Olap.WebUIControls.Annotation.AnchorAlignment"/> property may be used to change the annotation's 
            automatic position alignment to the anchor point. The <see cref="P:Dundas.Olap.WebUIControls.Annotation.AnchorOffsetX"/> and 
            <see cref="P:Dundas.Olap.WebUIControls.Annotation.AnchorOffsetY"/> properties may be used to add extra spacing.
            </para>
            <para>
            This property has a higher priority than the <see cref="P:Dundas.Olap.WebUIControls.Annotation.AnchorDataPoint"/> property.
            </para>
            <para>
            Set this value to <b>Double.NaN</b> to disable annotation anchoring to the value.
            </para>
            </remarks>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Annotation.AnchorOffsetX">
            <summary>
            Gets or sets an annotation X position's offset from the anchor point.
            <seealso cref="P:Dundas.Olap.WebUIControls.Annotation.AnchorOffsetY"/>
            <seealso cref="P:Dundas.Olap.WebUIControls.Annotation.AnchorDataPoint"/>
            <seealso cref="P:Dundas.Olap.WebUIControls.Annotation.AnchorX"/>
            <seealso cref="P:Dundas.Olap.WebUIControls.Annotation.AnchorAlignment"/>
            </summary>
            <value>
            A double value that represents an annotation X position's offset from the anchor point.
            </value>
            <remarks>
            The annotation must be anchored using the <see cref="P:Dundas.Olap.WebUIControls.Annotation.AnchorDataPoint"/> or 
            <see cref="P:Dundas.Olap.WebUIControls.Annotation.AnchorX"/> properties, and it's <see cref="P:Dundas.Olap.WebUIControls.Annotation.X"/> property must be set 
            to <b>Double.NaN</b>.
            </remarks>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Annotation.AnchorOffsetY">
            <summary>
            Gets or sets an annotation Y position's offset from the anchor point.
            <seealso cref="P:Dundas.Olap.WebUIControls.Annotation.AnchorOffsetY"/>
            <seealso cref="P:Dundas.Olap.WebUIControls.Annotation.AnchorDataPoint"/>
            <seealso cref="P:Dundas.Olap.WebUIControls.Annotation.AnchorY"/>
            <seealso cref="P:Dundas.Olap.WebUIControls.Annotation.AnchorAlignment"/>
            </summary>
            <value>
            A double value that represents an annotation Y position's offset from the anchor point.
            </value>
            <remarks>
            The annotation must be anchored using the <see cref="P:Dundas.Olap.WebUIControls.Annotation.AnchorDataPoint"/> or 
            <see cref="P:Dundas.Olap.WebUIControls.Annotation.AnchorX"/> properties, and it's <see cref="P:Dundas.Olap.WebUIControls.Annotation.Y"/> property must be set 
            to <b>Double.NaN</b>.
            </remarks>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Annotation.AnchorAlignment">
            <summary>
            Gets or sets an annotation position's alignment to the anchor point.
            <seealso cref="P:Dundas.Olap.WebUIControls.Annotation.AnchorX"/>
            <seealso cref="P:Dundas.Olap.WebUIControls.Annotation.AnchorY"/>
            <seealso cref="P:Dundas.Olap.WebUIControls.Annotation.AnchorDataPoint"/>
            <seealso cref="P:Dundas.Olap.WebUIControls.Annotation.AnchorOffsetX"/>
            <seealso cref="P:Dundas.Olap.WebUIControls.Annotation.AnchorOffsetY"/>
            </summary>
            <value>
            A <see cref="T:System.Drawing.ContentAlignment"/> value that represents the annotation's alignment to 
            the anchor point.
            </value>
            <remarks>
            The annotation must be anchored using either <see cref="P:Dundas.Olap.WebUIControls.Annotation.AnchorDataPoint"/>, or the <see cref="P:Dundas.Olap.WebUIControls.Annotation.AnchorX"/> 
            and <see cref="P:Dundas.Olap.WebUIControls.Annotation.AnchorY"/> properties. It's <see cref="P:Dundas.Olap.WebUIControls.Annotation.X"/> and <see cref="P:Dundas.Olap.WebUIControls.Annotation.Y"/> 
            properties must be set to <b>Double.NaN</b>.
            </remarks>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Annotation.AllowSelecting">
            <summary>
            Gets or sets a flag that specifies whether an annotation may be selected 
            with a mouse by the end user.
            </summary>
            <value>
            <b>True</b> if the annotation may be selected, <b>false</b> otherwise.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Annotation.AllowMoving">
            <summary>
            Gets or sets a flag that specifies whether an annotation may be moved 
            with a mouse by the end user.
            </summary>
            <value>
            <b>True</b> if the annotation may be moved, <b>false</b> otherwise.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Annotation.AllowAnchorMoving">
            <summary>
            Gets or sets a flag that specifies whether an annotation anchor may be moved 
            with a mouse by the end user.
            </summary>
            <value>
            <b>True</b> if the annotation anchor may be moved, <b>false</b> otherwise.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Annotation.AllowResizing">
            <summary>
            Gets or sets a flag that specifies whether an annotation may be resized 
            with a mouse by the end user.
            </summary>
            <value>
            <b>True</b> if the annotation may be resized, <b>false</b> otherwise.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Annotation.AllowTextEditing">
            <summary>
            Gets or sets a flag that specifies whether an annotation's text may be edited 
            when the end user double clicks on the text.
            </summary>
            <value>
            <b>True</b> if the annotation text may be edited, <b>false</b> otherwise.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Annotation.AllowPathEditing">
            <summary>
            Gets or sets a flag that specifies whether a polygon annotation's points 
            may be moved with a mouse by the end user.
            </summary>
            <value>
            <b>True</b> if the polygon annotation's points may be moved, <b>false</b> otherwise.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Annotation.ToolTip">
            <summary>
            Gets or sets an annotation's tooltip text.
            </summary>
            <value>
            A string value.
            </value>
            <remarks>
            Special keywords can be used in the text when an annotation is anchored to 
            a data point using the <see cref="P:Dundas.Olap.WebUIControls.Annotation.AnchorDataPoint"/> property.  For a listing of 
            these keywords refer to the "Annotations" help topic.
            </remarks>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Annotation.Href">
            <summary>
            Gets or sets an annotation's Href.
            </summary>
            <value>
            A string value.
            </value>
            <remarks>
            Special keywords can be used when an annotation is anchored to 
            a data point using the <see cref="P:Dundas.Olap.WebUIControls.Annotation.AnchorDataPoint"/> property.  For a listing of 
            these keywords refer to the "Annotations" help topic.
            </remarks>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Annotation.MapAreaAttributes">
            <summary>
            Gets or sets an annotation's map area attributes.
            </summary>
            <value>
            A string value.
            </value>
            <remarks>
            This string will be added to the attributes of the image map generated
            for the annotation.
            <para>
            Special keywords can be used when an annotation is anchored to 
            a data point using the <see cref="P:Dundas.Olap.WebUIControls.Annotation.AnchorDataPoint"/> property.  For a listing of 
            these keywords refer to the "Annotations" help topic.
            </para>
            </remarks>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ImageAnnotation.#ctor">
            <summary>
            Default public constructor.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ImageAnnotation.Paint(Dundas.Olap.WebUIControls.Chart,Dundas.Olap.WebUIControls.ChartGraphics)">
            <summary>
            Paints the annotation object on the specified graphics.
            </summary>
            <param name="graphics">
            A <see cref="T:Dundas.Olap.WebUIControls.ChartGraphics"/> object, used to paint the annotation object.
            </param>
            <param name="chart">
            Reference to the <see cref="T:Dundas.Olap.WebUIControls.Chart"/> owner control.
            </param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ImageAnnotation.GetImageAlignment(System.Drawing.ContentAlignment)">
            <summary>
            Coverts ContentAlignment enumeration to ChartImageAlign enumeration.
            </summary>
            <param name="alignment">Content alignment.</param>
            <returns>Image content alignment.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ImageAnnotation.GetContentPosition">
            <summary>
            Gets text annotation content size based on the text and font.
            </summary>
            <returns>Annotation content position.</returns>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ImageAnnotation.Image">
            <summary>
            Gets or sets the annotation's image name. 
            <seealso cref="P:Dundas.Olap.WebUIControls.ImageAnnotation.ImageTranspColor"/>
            </summary>
            <value>
            A string value, representing the annotation's image name.
            </value>
            <remarks>
            The image name can be a file name, URL for the Web control or a name from 
            the <see cref="T:Dundas.Olap.WebUIControls.NamedImagesCollection"/> class.	TODO LINKS TWEAK FOR WEB WIN
            </remarks>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ImageAnnotation.ImageMode">
            <summary>
            Gets or sets the image drawing mode.
            </summary>
            <value>
            A <see cref="T:Dundas.Olap.WebUIControls.ChartImageWrapMode"/> value that defines the imade drawing mode. TODO LINK
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ImageAnnotation.ImageTranspColor">
            <summary>
            Gets or sets a color used for transparency when drawing an image.
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color"/> value which is replaced with a transparent 
            color while drawing the image.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ImageAnnotation.Alignment">
            <summary>
            Gets or sets an annotation's image alignment.
            </summary>
            <value>
            A <see cref="T:System.Drawing.ContentAlignment"/> value that represents annotation image alignment. TODO LINKS
            </value>
            <remarks>
            This property is used to align a non-scaled image.
            </remarks>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ImageAnnotation.AnnotationType">
            <summary>
            Gets or sets annotation type name.
            </summary>
            <remarks>
            This abstract property is used to get the name of each annotation type
            (e.g. Line, Rectangle, Ellipse,...). 
            <para>
            Property is for internal use and is hidden at design and run time. Should
            not be part of the documentation.
            </para>
            </remarks>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ImageAnnotation.SelectionPointsStyle">
            <summary>
            Gets or sets annotation selection points style.
            </summary>
            <value>
            A <see cref="P:Dundas.Olap.WebUIControls.ImageAnnotation.SelectionPointsStyle"/> value that represents annotation
            selection style.
            </value>
            <remarks>
            Property is for internal use and is hidden at design and run time. 
            Should not be part of the documentation.
            </remarks>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ImageAnnotation.TextColor">
            <summary>
            Not applicable to this type of annotation.
            <seealso cref="P:Dundas.Olap.WebUIControls.ImageAnnotation.TextFont"/>
            <seealso cref="P:Dundas.Olap.WebUIControls.Annotation.TextStyle"/>
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color"/> value.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ImageAnnotation.TextFont">
            <summary>
            Not applicable to this type of annotation.
            </summary>
            <value>
            A <see cref="T:System.Drawing.Font"/> object.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ImageAnnotation.TextStyle">
            <summary>
            Not applicable to this type of annotation.
            <seealso cref="P:Dundas.Olap.WebUIControls.ImageAnnotation.TextFont"/>
            <seealso cref="P:Dundas.Olap.WebUIControls.ImageAnnotation.TextColor"/>
            </summary>
            <value>
            A <see cref="P:Dundas.Olap.WebUIControls.ImageAnnotation.TextStyle"/> value.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ImageAnnotation.BackColor">
            <summary>
            Not applicable to this type of annotation.
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color"/> value.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ImageAnnotation.BackHatchStyle">
            <summary>
            Not applicable to this type of annotation.
            </summary>
            <value>
            A <see cref="T:Dundas.Olap.WebUIControls.ChartHatchStyle"/> value.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ImageAnnotation.BackGradientType">
            <summary>
            Not applicable to this type of annotation.
            </summary>
            <value>
            A <see cref="T:Dundas.Olap.WebUIControls.GradientType"/> value.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ImageAnnotation.BackGradientEndColor">
            <summary>
            Not applicable to this type of annotation.
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color"/> value.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ImageAnnotation.LineColor">
            <summary>
            Not applicable to this type of annotation.
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color"/> value.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ImageAnnotation.LineWidth">
            <summary>
            Not applicable to this type of annotation.
            </summary>
            <value>
            An integer value.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ImageAnnotation.LineStyle">
            <summary>
            Not applicable to this type of annotation.
            <seealso cref="P:Dundas.Olap.WebUIControls.ImageAnnotation.LineWidth"/>
            <seealso cref="P:Dundas.Olap.WebUIControls.ImageAnnotation.LineColor"/>
            </summary>
            <value>
            A <see cref="T:Dundas.Olap.WebUIControls.ChartDashStyle"/> value.
            </value>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.Ajax.PropertyPagesLegendClassControl">
            <summary>
            PropertyPagesLegendXXX is an user control for setup chart legend
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Ajax.PropertyPageBase.captionText">
            <summary>
            The caption text
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Ajax.PropertyPageBase.imageUrl">
            <summary>
            The caption image url
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Ajax.PropertyPageBase.parentControl">
            <summary>
            The ptoperty pages dialog
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Ajax.PropertyPageBase.display">
            <summary>
            determines visibility
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.PropertyPageBase.OnPreRender(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Web.UI.Control.PreRender"></see> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"></see> object that contains the event data.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.PropertyPageBase.RenderControl(System.Web.UI.HtmlTextWriter)">
            <summary>
            Outputs server control content to a provided <see cref="T:System.Web.UI.HtmlTextWriter"></see> object and stores tracing information about the control if tracing is enabled.
            </summary>
            <param name="writer">The <see cref="T:System.Web.UI.HTmlTextWriter"></see> object that receives the control content.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.PropertyPageBase.GetRequestValue(System.String)">
            <summary>
            Gets the request string value.
            </summary>
            <param name="valueName">Name of the value.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.PropertyPageBase.GetRequestDouble(System.String)">
            <summary>
            Gets the request double value.
            </summary>
            <param name="valueName">Name of the value.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.PropertyPageBase.GetRequestBool(System.String)">
            <summary>
            Gets the request bool value.
            </summary>
            <param name="valueName">Name of the value.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.PropertyPageBase.GetElementsByType(System.Web.UI.ControlCollection,System.Type)">
            <summary>
            Gets List of controls by type.
            </summary>
            <param name="controls">The controls.</param>
            <param name="type">The type.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.PropertyPageBase.GetUniqueID(System.String)">
            <summary>
            Gets the unique ID.
            </summary>
            <param name="ID">The ID.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.PropertyPageBase.GetPageName">
            <summary>
            Gets the name of the page.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.PropertyPageBase.GetImageUrl">
            <summary>
            Gets the image URL.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.PropertyPageBase.IsVisible">
            <summary>
            Determines whether this instance is visible.
            </summary>
            <returns>
            	<c>true</c> if this instance is visible; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.PropertyPageBase.InitPage(Dundas.Olap.WebUIControls.Ajax.PropertyPagesClassControl)">
            <summary>
            Inits the page.
            </summary>
            <param name="control">The control.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.PropertyPageBase.DeployControls">
            <summary>
            Deploys the controls.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.PropertyPageBase.ApplyChanges">
            <summary>
            Applies the changes.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Ajax.PropertyPageBase.PageControl">
            <summary>
            Gets the page control.
            </summary>
            <value>The page control.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Ajax.PropertyPageBase.Chart">
            <summary>
            Gets the chart.
            </summary>
            <value>The chart.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Ajax.PropertyPageBase.ChartContext">
            <summary>
            Gets the chart context.
            </summary>
            <value>The chart context.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Ajax.PropertyPageBase.Display">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:PropertyPageBase"/> is visible.
            </summary>
            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.PropertyPagesLegendClassControl.Page_Load(System.Object,System.EventArgs)">
            <summary>
            Handles the Load event of the Page control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.PropertyPagesLegendClassControl.GetLegend">
            <summary>
            Gets the legend.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.PropertyPagesLegendClassControl.IsVisible">
            <summary>
            Determines whether this instance is visible.
            </summary>
            <returns>
            	<c>true</c> if this instance is visible; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.PropertyPagesLegendClassControl.ApplyChanges(Dundas.Olap.WebUIControls.Legend)">
            <summary>
            Applies the changes.
            </summary>
            <param name="legend">The legend.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.PropertyPagesLegendClassControl.ApplyChanges">
            <summary>
            Applies the changes.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.PropertyPagesLegendClassControl.InitPage(Dundas.Olap.WebUIControls.Ajax.PropertyPagesClassControl)">
            <summary>
            Inits the page.
            </summary>
            <param name="control">The control.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.PropertyPagesLegendClassControl.OnPreRender(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Web.UI.Control.PreRender"></see> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"></see> object that contains the event data.</param>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.Ajax.PropertyPagesClassControl">
            <summary>
            PropertyPages is the main container control which holds the property pages 
            controls and has OK, Cancel, Apply buttons and top toolbar
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.PropertyPagesClassControl.ContainPage(System.Type)">
            <summary>
            Checks if manager contains a specific page.
            </summary>
            <param name="pageType">Type of the page.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.PropertyPagesClassControl.GetPropertyPage(System.Type)">
            <summary>
            Gets the property page.
            </summary>
            <param name="pageType">Type of the page.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.PropertyPagesClassControl.GetChartSeriesType">
            <summary>
            Helper method which returns the major series type of the chart.
            </summary>
            <returns>Series chart type.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.PropertyPagesClassControl.GetContextName(Dundas.Olap.WebUIControls.Chart,System.Object)">
            <summary>
            Gets name of the appearance context object.
            </summary>
            <param name="chart">Chart object.</param>
            <param name="context">Context.</param>
            <returns>Name of the context.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.PropertyPagesClassControl.SetParameters(System.String)">
            <summary>
            Sets command parameters. Parameters can be used to disable some of the 
            property form tab pages. String may contain "DisableTabPage=N, ", where N
            is zero based index of the tab page.
            </summary>
            <param name="parameters">Parameters string.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.PropertyPagesClassControl.CreatePropertiesControl(System.Int32)">
            <summary>
            Creates new property page user control based on page index.
            </summary>
            <param name="index">Tap page index.</param>
            <returns>New user control.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.PropertyPagesClassControl.SetContext(Dundas.Olap.WebUIControls.Chart,System.Object)">
            <summary>
            Sets property form contetx.
            </summary>
            <param name="chart">Chart object.</param>
            <param name="context">Context of the property form.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.PropertyPagesClassControl.PreInitialize">
            <summary>
            Preinitialize stage.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.PropertyPagesClassControl.RegisterCloseScript">
            <summary>
            Registers the close script.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.PropertyPagesClassControl.GenerateButton(Dundas.Olap.WebUIControls.Ajax.PropertyPageBase)">
            <summary>
            Generates the button.
            </summary>
            <param name="pageBase">The page base.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.PropertyPagesClassControl.SetContext(Dundas.Olap.WebUIControls.Chart,System.Object,System.String)">
            <summary>
            Sets the context.
            </summary>
            <param name="chart">The chart.</param>
            <param name="selectedObject">The selected object.</param>
            <param name="parameters">The parameters.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.PropertyPagesClassControl.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Sends server control content to a provided <see cref="T:System.Web.UI.HtmlTextWriter"></see> object, which writes the content to be rendered on the client.
            </summary>
            <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter"></see> object that receives the server control content.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.PropertyPagesClassControl.ApplyChart">
            <summary>
            Applies changes on the chart.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.PropertyPagesClassControl.CompareElements(System.Xml.XmlNode,System.Xml.XmlNode)">
            <summary>
            Compares two XML nodes
            </summary>
            <param name="initNode">first node</param>
            <param name="finalNode">second node</param>
            <returns>nodes difference</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.PropertyPagesClassControl.CompareChartValues(System.String,System.String,System.String)">
            <summary>
            Compares values for given property
            </summary>
            <param name="propertyName">property name</param>
            <param name="value1">value1</param>
            <param name="value2">value2</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.PropertyPagesClassControl.GetNodePath(System.Xml.XmlNode)">
            <summary>
            Returns path for given node
            </summary>
            <param name="xmlNode">node</param>
            <returns>node path</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.PropertyPagesClassControl.GetParentNode(System.Xml.XmlNode)">
            <summary>
            Returns parent node
            </summary>
            <param name="xmlNode">target node</param>
            <returns>parent node</returns>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Ajax.PropertyPagesClassControl.Text">
            <summary>
            Gets or sets the text.
            </summary>
            <value>The text.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Ajax.PropertyPagesClassControl.Chart">
            <summary>
            Gets or sets the chart.
            </summary>
            <value>The chart.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Ajax.PropertyPagesClassControl.ChartContext">
            <summary>
            Gets the chart context.
            </summary>
            <value>The chart context.</value>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.OlapChart">
            <summary>
            Represents a UI chart. This control is used to display a chart relating to Dundas OLAP Services.
            </summary>
            <remarks>
            The <b>OlapChart</b> control is used to visualize multidimensional
            data. It also provides the end-user with additional features including
            drilldown, maximizing views, data pivoting and more.
            
            The control must be associated with the OLAP manager component using the
            <see cref="P:Dundas.Olap.WebUIControls.OlapChart.OlapManager"/> property.
            </remarks>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.OlapChartCore">
            <summary>
            <b>OlapChartCore</b> class is the provides the basic functionality of the OLAP chart.
            <seealso cref="T:Dundas.Olap.WebUIControls.OlapChart"/>
            </summary>
            <remarks>
            <b>OlapChartCore</b> class is the base class of the <see cref="T:Dundas.Olap.WebUIControls.OlapChart"/> class.
            </remarks>
            
        </member>
        <member name="T:Dundas.Olap.WebUIControls.Chart">
            <summary>
            Summary description for enterprize chart control.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Chart.renderingDpiX">
            <summary>
            Horizontal rendering resolution.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Chart.renderingDpiY">
            <summary>
            Vertical rendering resolution.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Chart.#ctor">
            <summary>
            Chart control constructor.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Chart.Finalize">
            <summary>
            Control destructor
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Chart.Dispose">
            <summary>
            Disposing control resoursec
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Chart.ShouldRenderAsControl">
            <summary>
            Checks if chart should be rendered as windows forms control.
            When RenderAsControl property is set to Auto - automatically
            detects if client has .Net installed.
            </summary>
            <returns>True if chart should be rendered as control.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Chart.RenderControlTag(System.Web.UI.HtmlTextWriter,System.String)">
            <summary>
            Renders chart as a windows forms control using Object tag or using binary streaming.
            </summary>
            <param name="output">HTML writer.</param>
            <param name="fileName">Chart data file name.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Chart.RenderSvgTag(System.Web.UI.HtmlTextWriter,System.String)">
            <summary>
            Renders chart as a Svg Object tag or Svg using binary streaming.
            </summary>
            <param name="output">HTML writer.</param>
            <param name="fileName">Chart data file name.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Chart.GetCurrentImageUrl">
            <summary>
            Gets current image URL the chart control will be rendered into.
            </summary>
            <returns>Current chart image URL.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Chart.RenderDesignTime(System.Web.UI.HtmlTextWriter)">
            <summary>
            Render this control to the output parameter specified.
            </summary>
            <param name="output">HTML writer.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Chart.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Render this control to the output parameter specified.
            </summary>
            <param name="output">HTML writer.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Chart.CheckImageURLSeqFormat(System.String)">
            <summary>
            Checks image URL sequence format.
            </summary>
            <param name="imageURL">Image URL to test.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Chart.GetNewSeqImageUrl(System.String)">
            <summary>
            Helper function, which returns a new image URL 
            using the sequence numbers
            </summary>
            <param name="imageUrl">Image URL format.</param>
            <returns>New image URL.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Chart.CheckChartFileTime(System.String,System.Int32)">
            <summary>
            Check if the image with this name exsists and it's
            live time is smaller than image time-to-live specified.
            In this case put a warning into the even log.
            </summary>
            <param name="fileName">File name.</param>
            <param name="imageTimeToLive">Time to live.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Chart.Select(System.Int32,System.Int32,System.String@,System.Int32@)">
            <summary>
            Function, which returns selected data point and 
            selected series from x, and y coordinate position.
            </summary>
            <param name="x">x coordinate position</param>
            <param name="y">y coordinate position</param>
            <param name="series">Selected data series</param>
            <param name="point">Selected data point</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Chart.HitTest(System.Int32,System.Int32)">
            <summary>
            This method is used for selection and it returns a selected object 
            from x and y coordinates.
            </summary>
            <param name="x">x coordinate</param>
            <param name="y">y coordinate</param>
            <returns>Selected object</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Chart.HitTest(System.Int32,System.Int32,System.Boolean)">
            <summary>
            This method is used for selection and it returns a selected object 
            from x and y coordinates.
            </summary>
            <param name="x">X coordinate</param>
            <param name="y">Y coordinate</param>
            <param name="ignoreTransparent">Indicates that transparent elements should be ignored.</param>
            <returns>Hit test result object</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Chart.HitTest(System.Int32,System.Int32,Dundas.Olap.WebUIControls.ChartElementType)">
            <summary>
            This method is used for selection and it returns a selected object 
            from x and y coordinates.
            </summary>
            <param name="x">X coordinate</param>
            <param name="y">Y coordinate</param>
            <param name="requestedElement">Only this chart elements will be hit tested.</param>
            <returns>Hit test result object</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Chart.GetHitTestResult(System.String,System.Int32,Dundas.Olap.WebUIControls.ChartElementType,System.Object)">
            <summary>
            Returns Hit Test Result object
            </summary>
            <param name="seriesName">Data series Name</param>
            <param name="pointIndex">Data point index</param>
            <param name="type">Selected Chart element type</param>
            <param name="obj">Selected object</param>
            <returns>Hit test result object</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Chart.ValidateLicense">
            <summary>
            Validates control license
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Chart.Save(System.String,Dundas.Olap.WebUIControls.ChartImageFormat)">
            <summary>
            Saves chart image into the file.
            </summary>
            <param name="imageFileName">Image file name</param>
            <param name="format">Image format.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Chart.Save(System.IO.Stream,Dundas.Olap.WebUIControls.ChartImageFormat)">
            <summary>
            Saves chart image into the stream.
            </summary>
            <param name="imageStream">Image stream.</param>
            <param name="format">Image format.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Chart.Save(System.IO.Stream)">
            <summary>
            Saves image into the stream. ImageType, Compression and other control properties are used.
            </summary>
            <param name="imageStream">Image stream.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Chart.Save(System.String)">
            <summary>
            Saves image into the file. ImageType, Compression and other control properties are used.
            </summary>
            <param name="imageFileName">Image file name</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Chart.GetEncoderInfo(System.String)">
            <summary>
            Helper function. Returns image encoder using Mime image type
            </summary>
            <param name="mimeType">Mime image type</param>
            <returns>Image codec</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Chart.OnClick(System.Object,System.Web.UI.ImageClickEventArgs)">
            <summary>
            Invokes delegates registered with the Click event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Chart.RaisePostBackEvent(System.String)">
            <summary>
            Method of IPostBackEventHandler that raises change events.
            </summary>
            <param name="eventArgument">Event argument.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Chart.OnBackPaint(System.Object,Dundas.Olap.WebUIControls.ChartPaintEventArgs)">
            <summary>
            Fires when chart element backround must be drawn. 
            This event is fired for elements like: ChatPicture, ChartArea and Legend
            </summary>
            <param name="caller">Event caller. Can be ChatPicture, ChartArea or Legend objects.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Chart.OnPaint(System.Object,Dundas.Olap.WebUIControls.ChartPaintEventArgs)">
            <summary>
            Fires when chart element must be drawn. 
            This event is fired for elements like: ChatPicture, ChartArea and Legend
            </summary>
            <param name="caller">Event caller. Can be ChatPicture, ChartArea or Legend objects.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Chart.OnCustomizeMapAreas(Dundas.Olap.WebUIControls.MapAreasCollection)">
            <summary>
            Fires when chart image map data is prepared to be rendered.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Chart.OnCustomize">
            <summary>
            Fires when all chart data is prepared to be customized before drawing.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Chart.OnCustomizeLegend(Dundas.Olap.WebUIControls.LegendItemsCollection,System.String)">
            <summary>
            Fires when all chart legend data is prepared to be customized before drawing.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Chart.CallBackPaint(System.Object,Dundas.Olap.WebUIControls.ChartPaintEventArgs)">
            <summary>
            Event firing helper function.
            </summary>
            <param name="caller">Event caller. Can be ChatPicture, ChartArea or Legend objects.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Chart.CallPaint(System.Object,Dundas.Olap.WebUIControls.ChartPaintEventArgs)">
            <summary>
            Event firing helper function.
            </summary>
            <param name="caller">Event caller. Can be ChatPicture, ChartArea or Legend objects.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Chart.CallCustomizeMapAreas(Dundas.Olap.WebUIControls.MapAreasCollection)">
            <summary>
            Event firing helper function.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Chart.CallCustomize">
            <summary>
            Event firing helper function.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Chart.CallCustomizeLegend(Dundas.Olap.WebUIControls.LegendItemsCollection,System.String)">
            <summary>
            Event firing helper function.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Chart.LoadViewState(System.Object)">
            <summary>
            Restores view-state information from a previous page request that was saved by the SaveViewState method.
            </summary>
            <param name="savedState">An Object that represents the control state to be restored.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Chart.SaveViewState">
            <summary>
            Saves any server control view-state changes that have occurred since the time the page was posted back to the server.
            </summary>
            <returns>Returns the server control's current view state. </returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Chart.ResetPaletteCustomColors">
            <summary>
            Method resets custom colors array. Internal use only.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Chart.ShouldSerializePaletteCustomColors">
            <summary>
            Method resets custom colors array. Internal use only.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Chart.GetHtmlImageMap(System.String)">
            <summary>
            Gets HTML image map of the currently rendered chart.
            Save(...) method MUST be called before calling this method!
            </summary>
            <param name="name">Name of the image map tag.</param>
            <returns>HTML image map.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Chart.LoadTemplate(System.String)">
            <summary>
            Loads chart appearance template from file.
            </summary>
            <param name="name">Template file name to load from.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Chart.LoadTemplate(System.IO.Stream)">
            <summary>
            Loads chart appearance template from stream.
            </summary>
            <param name="stream">Template stream to load from.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Chart.ApplyPaletteColors">
            <summary>
            Applies palette colors to series or data points.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Chart.IsDesignMode">
            <summary>
            Checks if control is in design mode.
            </summary>
            <returns>True if control is in design mode.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Chart.ResetAutoValues">
            <summary>
            Reset auto calculated chart properties values to "Auto".
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Chart.DataBind">
            <summary>
            Data binds control to the data source
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Chart.AlignDataPointsByAxisLabel">
            <summary>
            Aligns data points using their axis labels.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Chart.AlignDataPointsByAxisLabel(System.String)">
            <summary>
            Aligns data points using their axis labels.
            </summary>
            <param name="series">Comma separated list of series that should be aligned by axis label.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Chart.AlignDataPointsByAxisLabel(System.String,Dundas.Olap.WebUIControls.PointsSortOrder)">
            <summary>
            Aligns data points using their axis labels.
            </summary>
            <param name="series">Comma separated list of series that should be aligned by axis label.</param>
            <param name="sortingOrder">Points sorting order by axis labels.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Chart.AlignDataPointsByAxisLabel(Dundas.Olap.WebUIControls.PointsSortOrder)">
            <summary>
            Aligns data points using their axis labels.
            </summary>
            <param name="sortingOrder">Points sorting order by axis labels.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Chart.DataBindTable(System.Collections.IEnumerable,System.String)">
            <summary>
            Automatically creates and binds series to specified data table. 
            Each column of the table becomes a Y value in a separate series.
            Series X value field may also be provided. 
            </summary>
            <param name="dataSource">Data source.</param>
            <param name="xField">Name of the field for series X values.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Chart.DataBindTable(System.Collections.IEnumerable)">
            <summary>
            Automatically creates and binds series to specified data table. 
            Each column of the table becomes a Y value in a separate series.
            </summary>
            <param name="dataSource">Data source.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Chart.DataBindCrossTab(System.Collections.IEnumerable,System.String,System.String,System.String,System.String)">
            <summary>
            Data bind chart to the table. Series will be automatically added to the chart depending on 
            the number of unique values in the seriesGroupByField column of the data source.
            Data source can be the Ole(SQL)DataReader, DataView, DataSet, DataTable or DataRow.
            </summary>
            <param name="dataSource">Data source.</param>
            <param name="seriesGroupByField">Name of the field used to group data into series.</param>
            <param name="xField">Name of the field for X values.</param>
            <param name="yFields">Comma separated name(s) of the field(s) for Y value(s).</param>
            <param name="otherFields">Other point properties binding rule in format: PointProperty=Field[{Format}] [,PointProperty=Field[{Format}]]. For example: "Tooltip=Price{C1},Href=WebSiteName".</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Chart.DataBindCrossTab(System.Collections.IEnumerable,System.String,System.String,System.String,System.String,Dundas.Olap.WebUIControls.PointsSortOrder)">
            <summary>
            Data bind chart to the table. Series will be automatically added to the chart depending on
            the number of unique values in the seriesGroupByField column of the data source.
            Data source can be the Ole(SQL)DataReader, DataView, DataSet, DataTable or DataRow.
            </summary>
            <param name="dataSource">Data source.</param>
            <param name="seriesGroupByField">Name of the field used to group data into series.</param>
            <param name="xField">Name of the field for X values.</param>
            <param name="yFields">Comma separated name(s) of the field(s) for Y value(s).</param>
            <param name="otherFields">Other point properties binding rule in format: PointProperty=Field[{Format}] [,PointProperty=Field[{Format}]]. For example: "Tooltip=Price{C1},Href=WebSiteName".</param>
            <param name="sortingOrder">Series will be sorted by group field values in specified order.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Chart.GetService(System.Type)">
            <summary>
            Gets the requested chart service.
            </summary>
            <param name="serviceType">Type of requested chart service.</param>
            <returns>Instance of the service or null if it can't be found.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Chart.ShouldSerializeUI">
            <summary>
            Indicates if UI properties should be serialized.
            </summary>
            <returns>True if UI properties should be serialized.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Chart.OnInit(System.EventArgs)">
            <summary>
            Override OnInit in order to end toolbal initialization.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Chart.BeginInit">
            <summary>
            Signals the object that initialization is starting.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Chart.EndInit">
            <summary>
            Signals the object that initialization is complete.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Chart.OnLoad(System.EventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Chart.OnCommandFiring(Dundas.Olap.WebUIControls.CommandFiringArgs)">
            <summary>
            Fires before executing a command.
            </summary>
            <param name="e"><see cref="T:Dundas.Olap.WebUIControls.CommandFiringArgs"/> event argument. Note that event has a method Abort which can cancel executing of the command</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Chart.OnCommandFired(Dundas.Olap.WebUIControls.CommandFiredArgs)">
            <summary>
            Fires after executing a command. 
            </summary>
            <param name="e"><see cref="T:Dundas.Olap.WebUIControls.CommandFiredArgs"/> event argument.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Chart.CallOnCommandFiring(Dundas.Olap.WebUIControls.CommandFiringArgs)">
            <summary>
            Invokes command firing event.
            </summary>
            <param name="e">The e.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Chart.CallOnCommandFired(Dundas.Olap.WebUIControls.CommandFiredArgs)">
            <summary>
            Invokes command fired event.
            </summary>
            <param name="e">The e.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Chart.OnSaveState(Dundas.Olap.WebUIControls.SaveStateEventArgs)">
            <summary>
            Raises the save state event.
            </summary>
            <param name="e">The <see cref="T:System.Web.UI.WebControls.ChartSaveStateEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Chart.OnLoadState(Dundas.Olap.WebUIControls.LoadStateEventArgs)">
            <summary>
            Raises the save state event.
            </summary>
            <param name="e">The <see cref="T:System.Web.UI.WebControls.ChartSaveStateEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Chart.CallOnSaveState(Dundas.Olap.WebUIControls.SaveStateEventArgs)">
            <summary>
            Calls the on save state event.
            </summary>
            <param name="e">The <see cref="T:System.Web.UI.WebControls.CommandEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Chart.CallOnLoadState(Dundas.Olap.WebUIControls.LoadStateEventArgs)">
            <summary>
            Calls the on save state event.
            </summary>
            <param name="e">The <see cref="T:System.Web.UI.WebControls.CommandEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Chart.OnCallback(System.Web.UI.WebControls.CommandEventArgs)">
            <summary>
            Raises the callback event.
            </summary>
            <param name="e">The <see cref="T:System.Web.UI.WebControls.CommandEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Chart.OnCallbackComplete(System.Web.UI.WebControls.CommandEventArgs)">
            <summary>
            Raises the callback complete event.
            </summary>
            <param name="e">The <see cref="T:System.Web.UI.WebControls.CommandEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Chart.CallOnCallback(System.Web.UI.WebControls.CommandEventArgs)">
            <summary>
            Calls the on callback.
            </summary>
            <param name="e">The <see cref="T:System.Web.UI.WebControls.CommandEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Chart.CallOnCallbackComplete(System.Web.UI.WebControls.CommandEventArgs)">
            <summary>
            Calls the on callback complete.
            </summary>
            <param name="e">The <see cref="T:System.Web.UI.WebControls.CommandEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Chart.CallOnClick(System.Web.UI.ImageClickEventArgs)">
            <summary>
            Calls the on click.
            </summary>
            <param name="e">The <see cref="T:System.Web.UI.ImageClickEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Chart.IsOnClickCaptured">
            <summary>
            Determines whether on click is captured.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Chart.CallChartScroll(Dundas.Olap.WebUIControls.Chart.ChartScrollEventArgs)">
            <summary>
            Calls the ChartScroll protected method.
            </summary>
            <param name="arguments">The <see cref="T:Dundas.Charting.WebControl.ChartScrollEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Chart.OnChartScroll(Dundas.Olap.WebUIControls.Chart.ChartScrollEventArgs)">
            <summary>
            Invokes delegates registered with the ChartScroll event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Chart.IsOnChartScrollCaptured">
            <summary>
            Determines whether on chart scroll is captured.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Chart.OnAxisViewChanging(Dundas.Olap.WebUIControls.ViewEventArgs)">
            <summary>
            Raises the <see cref="E:AxisViewChanging"/> event.
            </summary>
            <param name="e">The <see cref="T:Dundas.Charting.WebControl.ViewEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Chart.OnAxisViewChanged(Dundas.Olap.WebUIControls.ViewEventArgs)">
            <summary>
            Raises the <see cref="E:AxisViewChanged"/> event.
            </summary>
            <param name="e">The <see cref="T:Dundas.Charting.WebControl.ViewEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Chart.OnAxisViewZoomReset(Dundas.Olap.WebUIControls.ZoomResetEventArgs)">
            <summary>
            Raises the <see cref="E:AxisViewZoomReset"/> event.
            </summary>
            <param name="e">The <see cref="T:Dundas.Charting.WebControl.ZoomResetEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Chart.CallAxisViewChanging(Dundas.Olap.WebUIControls.ViewEventArgs)">
            <summary>
            Calls the axis view changing protected method.
            </summary>
            <param name="arguments">The <see cref="T:Dundas.Charting.WebControl.ViewEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Chart.CallAxisViewChanged(Dundas.Olap.WebUIControls.ViewEventArgs)">
            <summary>
            Calls the axis view changed protected method.
            </summary>
            <param name="arguments">The <see cref="T:Dundas.Charting.WebControl.ViewEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Chart.CallAxisViewZoomReset(Dundas.Olap.WebUIControls.ZoomResetEventArgs)">
            <summary>
            Calls the axis view zoom reset protected method.
            </summary>
            <param name="arguments">The <see cref="T:Dundas.Charting.WebControl.ZoomResetEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Chart.GetImageStorageMode">
            <summary>
            Gets the image storage mode.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Chart.IsInteractiveChart">
            <summary>
            Determines whether this instance is interactive.
            </summary>
            <returns>
            	<c>true</c> if this instance is interactive; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Chart.OnPreRender(System.EventArgs)">
            <summary>
            Handles the <see cref="E:System.Web.UI.Control.PreRender"></see> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"></see> object that contains the event data.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Chart.ResetColorTable">
            <summary>
            Resets colot hashtable
            </summary>
        </member>
        <member name="E:Dundas.Olap.WebUIControls.Chart.PrePaint">
            <summary>
            Fires after the chart element backround was drawn. 
            This event is fired for elements like: ChartPicture, ChartArea and Legend
            </summary>
        </member>
        <member name="E:Dundas.Olap.WebUIControls.Chart.PostPaint">
            <summary>
            Fires after chart element was drawn. 
            This event is fired for elements like: ChartPicture, ChartArea and Legend
            </summary>
        </member>
        <member name="E:Dundas.Olap.WebUIControls.Chart.BackPaint">
            <summary>
            Fires when chart element backround must be drawn. 
            This event is fired for elements like: ChartPicture, ChartArea and Legend
            </summary>
        </member>
        <member name="E:Dundas.Olap.WebUIControls.Chart.Paint">
            <summary>
            Fires when chart element must be drawn. 
            This event is fired for elements like: ChartPicture, ChartArea and Legend
            </summary>
        </member>
        <member name="E:Dundas.Olap.WebUIControls.Chart.CustomizeMapAreas">
            <summary>
            Fires just before the chart image map is rendered. Use this event to customize the map areas items.
            </summary>
        </member>
        <member name="E:Dundas.Olap.WebUIControls.Chart.Customize">
            <summary>
            Fires just before the chart image is drawn. Use this event to customize the chart picture.
            </summary>
        </member>
        <member name="E:Dundas.Olap.WebUIControls.Chart.CustomizeLegend">
            <summary>
            Fires just before the chart legend is drawn. Use this event to customize the chart legend items.
            </summary>
        </member>
        <member name="E:Dundas.Olap.WebUIControls.Chart.Click">
            <summary>
            Defines the Click event using the event property syntax.
            The Events property stores all the event delegates of
            a control as name/value pairs.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Chart.EnableViewState">
            <summary>
            Gets or sets a value indicating whether the control persists its view state.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Chart.ViewStateContent">
            <summary>
            Chart content saved in the view state.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Chart.CallbackStateContent">
            <summary>
            Indicates what type of chart state must be keeped into session variable
            to track chart callback changes.
            </summary>
            <value>The content of the callback state.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Chart.ViewStateData">
            <summary>
            User defined control state data in XML format.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Chart.RenderingDpiY">
            <summary>
            Vertical resolution of the chart renderer.
            </summary>
            <remarks>
            This property is for the internal use only.
            </remarks>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Chart.RenderingDpiX">
            <summary>
            Horizontal resolution of the chart renderer.
            </summary>
            <remarks>
            This property is for the internal use only.
            </remarks>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Chart.SuppressExceptions">
            <summary>
            Indicates that non-critical chart exceptions will be suppressed.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Chart.Images">
            <summary>
            Chart named images collection.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Chart.WinControlURL">
            <summary>
            Absolute or relative URL of the Windows Forms Chart control (DundasWinChart.dll).
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Chart.Font">
            <summary>
            Font property is not used.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Chart.ImageStorageMode">
            <summary>
            Chart rendering type. Image tag, input tag, binary data streaming and image map are the options.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Chart.RenderType">
            <summary>
            Chart rendering type. Image tag, input tag, binary data streaming and image map are the options.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Chart.RenderAsControl">
            <summary>
            Indicates that chart should be rendered as Windows Forms control.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Chart.ImageUrl">
            <summary>
            Chart image URL. Location where chart image is saved, when image tag is used for rendering.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Chart.Series">
            <summary>
            Chart series collection.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Chart.Palette">
            <summary>
            Color palette to use
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Chart.PaletteCustomColors">
            <summary>
            Array of custom palette colors.
            </summary>
            <remarks>
            When this custom colors array is non-empty the <b>Palette</b> property is ignored.
            </remarks>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Chart.DataSource">
            <summary>
            "The data source used to populate series data. Series ValueMember properties must be also set."
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Chart.BuildNumber">
            <summary>
            Build number of the control
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Chart.Serializer">
            <summary>
            Chart serializer object.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Chart.ImageType">
            <summary>
            Image type (Jpeg, BMP, Png, Svg, Flash)
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Chart.Compression">
            <summary>
            Image compression value
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Chart.MapEnabled">
            <summary>
            Indicates that chart image map is enabled.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Chart.MapAreas">
            <summary>
            Chart map areas collection.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Chart.AntiAlias">
            <summary>
            Specifies whether smoothing (antialiasing) is applied while drawing chart.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Chart.AntiAliasing">
            <summary>
            Specifies whether smoothing (antialiasing) is applied while drawing chart.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Chart.TextAntiAliasingQuality">
            <summary>
            Specifies the quality of text antialiasing.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Chart.SoftShadows">
            <summary>
            Specifies whether smoothing is applied while drawing shadows.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Chart.ChartAreas">
            <summary>
            Reference to chart area collection
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Chart.BackColor">
            <summary>
            Back ground color for the Chart
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Chart.ForeColor">
            <summary>
            Fore color propery (not used)
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Chart.Width">
            <summary>
            Chart width
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Chart.Legend">
            <summary>
            Reference to the default legend object.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Chart.Legends">
            <summary>
            Chart legend collection.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Chart.Titles">
            <summary>
            Chart title collection.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Chart.Annotations">
            <summary>
            Chart annotation collection.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Chart.DataManipulator">
            <summary>
            Series data manipulator
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Chart.Height">
            <summary>
            Chart height
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Chart.Title">
            <summary>
            Chart title
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Chart.TitleFontColor">
            <summary>
            Font color of the title
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Chart.TitleFont">
            <summary>
            Title font
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Chart.BackHatchStyle">
            <summary>
            Back Hatch style
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Chart.BackImage">
            <summary>
            Chart area background image
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Chart.BackImageMode">
            <summary>
            Chart area background image drawing mode.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Chart.BackImageTranspColor">
            <summary>
            Background image transparent color.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Chart.BackImageAlign">
            <summary>
            Background image alignment used by ClampUnscale drawing mode.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Chart.BackGradientType">
            <summary>
            A type for the background gradient
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Chart.BackGradientEndColor">
            <summary>
            The second color which is used for a gradient
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Chart.BorderColor">
            <summary>
            Border color for the Chart
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Chart.BorderWidth">
            <summary>
            The width of the border line
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Chart.BorderStyle">
            <summary>
            The style of the border line
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Chart.BorderLineColor">
            <summary>
            Border color for the Chart
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Chart.BorderLineWidth">
            <summary>
            The width of the border line
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Chart.BorderLineStyle">
            <summary>
            The style of the border line
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Chart.BorderSkin">
            <summary>
            Chart border skin style.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Chart.UI">
            <summary>
            Chart border skin style.
            </summary>
        </member>
        <member name="E:Dundas.Olap.WebUIControls.Chart.CommandFiring">
            <summary>
            Fires before executing a command. 
            </summary>
        </member>
        <member name="E:Dundas.Olap.WebUIControls.Chart.CommandFired">
            <summary>
            Fires after executing a command. 
            </summary>
        </member>
        <member name="E:Dundas.Olap.WebUIControls.Chart.AxisViewChanging">
            <summary>
            Called when axis view position/size is about to change.
            </summary>
        </member>
        <member name="E:Dundas.Olap.WebUIControls.Chart.AxisViewChanged">
            <summary>
            Called when axis view position/size is changed.
            </summary>
        </member>
        <member name="E:Dundas.Olap.WebUIControls.Chart.AxisViewZoomReset">
            <summary>
            Fires when axis view zoom reset button is pressed.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Chart.ChartScrollTimeout">
            <summary>
            Time delay in milliseconds before sending callback to call ChartScroll server side event.
            If during this time frame another user scroll is occured, it lets send callback only for last scroll and avoid
            extra trips on server side.
            </summary>
        </member>
        <member name="E:Dundas.Olap.WebUIControls.Chart.ChartScroll">
            <summary>
            Called when axis scrolled.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Chart.CallbackManager">
            <summary>
            Gets the chart callback manager.
            </summary>
            <value>The chart callback manager.</value>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.Chart.CommandFiringEventHandler">
            <summary>
            Command from User Interface is about to execute
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.Chart.CommandFiredEventHandler">
            <summary>
            Command from User Interface is executed
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.Chart.ChartScrollEventArgs">
            <summary>
            Chart scroll event arguments.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Chart.ChartScrollEventArgs.#ctor(Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.Axis,System.Boolean)">
            <summary>
            Creates chart scroll event arguments.
            </summary>
            <param name="chartArea">Scrolled ChartArea.</param>
            <param name="axis">Scrolled Axis.</param>
            <param name="updateChart">Flag to update chart image after callback completed. False by default.</param>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Chart.ChartScrollEventArgs.ChartArea">
            <summary>
            ChartArea of the event.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Chart.ChartScrollEventArgs.Axis">
            <summary>
            Axis of the event.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Chart.ChartScrollEventArgs.UpdateChart">
            <summary>
            Flag to update Chart image.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.OlapChartCore.axisLabelPlusImage">
            <summary>
            Name of the image indicating that member can be drilled down
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.OlapChartCore.axisLabelMinusImage">
            <summary>
            Name of the image indicating that member can be drilled up
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.OlapChartCore.maxNumberOfPointsInView">
            <summary>
            Max Number Of Points In View
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.OlapChartCore.seriesColorTable">
            <summary>
            Hashtable with series colors by names. Used to persist the colors for the same series.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.OlapChartCore.seriesUsingSecondaryYAxis">
            <summary>
            List of series that use secondary Y axis
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.OlapChartCore.doNotResetZoom">
            <summary>
            Indicates that the zoom level should not be reset when new data is populated
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.OlapChartCore.enableMemberDrillDown">
            <summary>
            Indicates that members drilled down is allowed in the chart
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapChartCore.#ctor">
            <summary>
            Object constructor.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapChartCore.OnInitializeChart">
            <summary>
            Initializes chart control.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapChartCore.InitializeChart">
            <summary>
            Initializes chart control only if it was not previously initialized.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapChartCore.AddCategoricalLabels(Dundas.Olap.Data.CellSet,System.Int32)">
            <summary>
            Adds custom labels on the X axis of the chart.
            </summary>
            <param name="cellSet">
            Data cell set.
            </param>
            <param name="categoricalAxisIndex">
            Categorical axis index.
            </param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapChartCore.CheckIfLabelsDrillable">
            <summary>
            Checks if categorical labels can be drilled down.
            Members cannot be drilled down when they are not directly specified
            in the axis dimension descriptor. For example named sets.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapChartCore.CustomizeCustomLabel(Dundas.Olap.WebUIControls.CustomLabel)">
            <summary>
            Custom label customization method.
            </summary>
            <param name="customLabel">
            Label to customize.
            </param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapChartCore.IsFullCategoricalHierarchyShown">
            <summary>
            Checks if all dimension parent levels are shown.
            </summary>
            <returns>
            True if all dimension parent levels are shown.
            </returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapChartCore.AddParentGroupingLabels(System.Boolean)">
            <summary>
            Adds grouping labels for the parent members.
            </summary>
            <param name="allowMemberDrillDown">
            <b>True</b> if member drill down is allowed.
            </param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapChartCore.GetParentTuple(Dundas.Olap.Data.Tuple,Dundas.Olap.Data.Member)">
            <summary>
            Get parent tuple object.
            </summary>
            <param name="childTuple">
            A <see cref="T:Dundas.Olap.Data.Tuple"/> object that represents the child tuple.
            </param>
            <param name="parentMember">
            A <see cref="T:Dundas.Olap.Data.Member"/> object that represents parent members.
            </param>
            <returns>
            A <see cref="T:Dundas.Olap.Data.Tuple"/> object that represents parent member 
            of the specified chaild.
            </returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapChartCore.GetLabelMemberFromTuple(Dundas.Olap.Data.Tuple)">
            <summary>
            Gets last member object from the tuple.
            </summary>
            <param name="tuple">
            A <see cref="T:Dundas.Olap.Data.Tuple"/> object to get the member from.
            </param>
            <returns>
            Last <see cref="T:Dundas.Olap.Data.Member"/> from the specified tuple.
            </returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapChartCore.GetDrilledDownMemberTuple(Dundas.Olap.Data.Tuple)">
            <summary>
            Checks if any members in specified Tuple has the DrilledDown indicator.
            </summary>
            <param name="tuple">
            A <see cref="T:Dundas.Olap.Data.Tuple"/> object which members should be checked.
            </param>
            <returns>
            First drilled down member or <b>null</b>.
            </returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapChartCore.ShouldSkipTuple(Dundas.Olap.Data.Tuple)">
            <summary>
            Checks if specified tuple should be skipped while processing all
            tuples in the cellset axis.
            </summary>
            <param name="tuple">
            Tuple to be tested.
            </param>
            <returns>
            <b>True</b> if tuple should be skipped.
            </returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapChartCore.SortCustomLabels">
            <summary>
            Helper method that sorts custom label objects.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapChartCore.MergeCustomLabels">
            <summary>
            Iterares through the 2 dimensional array of custom labels and groups
            labels that represent same member.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapChartCore.IsSameParentMembers(Dundas.Olap.WebUIControls.CustomLabel,Dundas.Olap.WebUIControls.CustomLabel)">
            <summary>
            Checks if two custom labels have the same parent member.
            </summary>
            <param name="label1">
            First label.
            </param>
            <param name="label2">
            Second label.
            </param>
            <returns>
            True if both labels have the same parent.
            </returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapChartCore.IsSameParentMembers(Dundas.Olap.Data.Tuple,Dundas.Olap.Data.Tuple)">
            <summary>
            Checks if two tuples have the same parent member.
            </summary>
            <param name="tuple1">
            First tuple.
            </param>
            <param name="tuple2">
            Second tuple.
            </param>
            <returns>
            True if both tuples have the same parent.
            </returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapChartCore.GetCategoricalCustomLabelRow(Dundas.Olap.Data.Member)">
            <summary>
            Gets index of custom chart label row based on the member from the categorical tuple.
            </summary>
            <param name="member">
            Member to get level position for.
            </param>
            <returns>
            Member level position.
            </returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapChartCore.GetCategoricalLevelsPosition(Dundas.Olap.Data.TupleCollection)">
            <summary>
            Prepares a sorted list of dimension levels from the specified tuple.
            This information will be used to determine the custom label row index
            on the categorical axis.
            </summary>
            <param name="tupleSet">
            Categorical tuple set.
            </param>
            <returns>
            Total number of label rows required.
            </returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapChartCore.GetNumberOfMesureMembers(Dundas.Olap.Data.TupleCollection)">
            <summary>
            Gets number of measure members in specified tuple. When mesure dimension is displayed 
            on the categorical axis, custom labels are added only in case when more than 1 measure
            member is used.
            </summary>
            <param name="tupleSet">
            Tuple to check.
            </param>
            <returns>
            Number of members.
            </returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapChartCore.AddCustomLabel(System.Double,System.Double,Dundas.Olap.Data.Tuple,System.String,System.Boolean,System.Boolean)">
            <summary>
            Adds custom label to the internal list of labels.
            </summary>
            <param name="from">
            Label from position.
            </param>
            <param name="to">
            Label to position.
            </param>
            <param name="tuple">Label member tuple.
            </param>
            <param name="imageName">
            Image name used with label.
            </param>
            <param name="addSpacing">
            True if spacing should be added to the To and From coordinates.</param>
            <param name="allowMemberDrillDown">
            True if member drilldown is allowed.
            </param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapChartCore.GetLabelImageName(Dundas.Olap.Data.Member)">
            <summary>
            Gets label image name.
            </summary>
            <param name="member">
            Member to get image for.
            </param>
            <returns>
            Image name.
            </returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapChartCore.ShowNoDataTitle(System.Boolean)">
            <summary>
            Shows the "No Data" message in the chart.
            </summary>
            <param name="showFlag">
            True if message should be shown; otherwise it is hidden.
            </param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapChartCore.ShowChartTitle">
            <summary>
            Updates main chart title.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapChartCore.OlapDataBind">
            <summary>
            Populates chart with data.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapChartCore.PopulateChartData">
            <summary>
            Populates chart with data. The method is obsolete, use OlapDataBind instead.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapChartCore.PopulateChartData(System.Boolean)">
            <summary>
            Populates the chart data.
            </summary>
            <param name="forcePopulate">if set to <c>true</c> [force populate].</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapChartCore.OlapDataBind(Dundas.Olap.Data.CellSet)">
            <summary>
            Populates chart with data from specified <b>CellSet</b>.
            </summary>
            <param name="cellSet">
            A <see cref="T:Dundas.Olap.Data.CellSet"/> object to populate chart data from.
            </param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapChartCore.PopulateChartData(Dundas.Olap.Data.CellSet)">
            <summary>
            Populates chart with data from specified <b>CellSet</b>.
            </summary>
            <param name="cellSet">
            A <see cref="T:Dundas.Olap.Data.CellSet"/> object to populate chart data from.
            </param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapChartCore.OnCommandFired(Dundas.Olap.WebUIControls.CommandFiredArgs)">
            <summary>
            Fired then command executed. Used for catching changes 
            in chart type and palette.
            </summary>
            <param name="e">command event argumend</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapChartCore.IsPieChartArea(Dundas.Olap.WebUIControls.ChartArea)">
            <summary>
            Checks if area was created for pie charts (or similar).
            </summary>
            <param name="chartArea">area to be checked</param>
            <returns>true if area created to support pie charts.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapChartCore.UpdateLegendColors">
            <summary>
            Updates colors in legend.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapChartCore.UpdateCustomLegend(System.String,System.Drawing.Color)">
            <summary>
            Update custom legend colors when palette is changed
            </summary>
            <param name="legendText">item text</param>
            <param name="color">new color</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapChartCore.IsPieChartOrSimilarType(Dundas.Olap.WebUIControls.ChartCommandType)">
            <summary>
            checks if chart type is pie chart or similar
            </summary>
            <param name="chartTypeName"></param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapChartCore.IsPieChartOrSimilarType(System.String)">
            <summary>
            checks if chart type is pie chart or similar
            </summary>
            <param name="chartTypeName"></param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapChartCore.CheckIfZoomInRequired(System.String)">
            <summary>
            Zoom into the chart if there are too many points.
            This will make axis labels readable.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapChartCore.ClearChartSeries">
            <summary>
            Clears the chart series.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapChartCore.SetChartData(Dundas.Olap.Data.CellSet)">
            <summary>
            Adds series/points to the chart from the specified cellset.
            </summary>
            <param name="cellSet">
            Cellset to get the data from.
            </param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapChartCore.IsChartEmpty">
            <summary>
            Checks if chart control has data.
            </summary>
            <returns>
            True if chart control has no data.
            </returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapChartCore.CollectSeriesColors">
            <summary>
            Collects the series colors.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapChartCore.GetSeriesColor(Dundas.Olap.Data.Tuple,System.String)">
            <summary>
            Gets chart series color based on the tuple name.
            </summary>
            <param name="seriesTuple">
            Tuple used to generate the series.
            </param>
            <param name="seriesName">
            Series name.
            </param>
            <returns>
            A color that should be used to display that series.
            </returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapChartCore.AddSeries(Dundas.Olap.Data.CellSet,Dundas.Olap.Data.Tuple,System.String,System.Int32[],System.Int32)">
            <summary>
            Adds single series to the chart.
            </summary>
            <param name="cellSet">
            Cellset to get the data from.
            </param>
            <param name="seriesTuple">
            This series tuple.
            </param>
            <param name="name">
            Series name.
            </param>
            <param name="cellIndexes">
            Array of cellset indexes used to retrieve the data.</param>
            <param name="categoricalAxisIndex">
            Index of the categorical axis in the cellset.
            </param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapChartCore.ConvertToPieChart">
            <summary>
            Checks if chart is PieChart.
            Adds chart areas for each series
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapChartCore.GetNextPieChartAreaName">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapChartCore.GetNextPieChartTitleName">
            <summary>
            Creates title name for pie charts
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapChartCore.SetCustomLegend(System.String,System.Drawing.Color)">
            <summary>
            Sets the legend for given point.
            </summary>
            <param name="labelName"></param>
            <param name="color"></param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapChartCore.GetDataPointTooltip(Dundas.Olap.Data.Cell,Dundas.Olap.Data.Tuple,Dundas.Olap.Data.Tuple)">
            <summary>
            Returns data point tooltip.
            </summary>
            <param name="cell">
            Cell that is presented by the data point.
            </param>
            <param name="tupleCategorical">
            Categorical axis tuple.
            </param>
            <param name="tupleSeries">
            Series axis tuple.
            </param>
            <returns>
            String value that represents data point tooltip.
            </returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapChartCore.GetDataPointLabel(Dundas.Olap.Data.Cell,Dundas.Olap.Data.Tuple,Dundas.Olap.Data.Tuple)">
            <summary>
            Gets data point label.
            </summary>
            <param name="cell">
            Cell that is presented by the data point.
            </param>
            <param name="tupleCategorical">
            Categorical axis tuple.
            </param>
            <param name="tupleSeries">
            Series axis tuple.
            </param>
            <returns>
            String value that represents data point label.
            </returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapChartCore.FillSkippedTupleList(Dundas.Olap.Data.TupleCollection)">
            <summary>
            Function fill a list of tuple names that later will be skipped
            during the data population.
            </summary>
            <param name="tuples">
            Tuple collection.
            </param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapChartCore.IsChildTuple(Dundas.Olap.Data.Tuple,Dundas.Olap.Data.Tuple)">
            <summary>
            Checks if specified tuple is achild of another tuple.
            </summary>
            <param name="parentTuple">
            Parent tuple.
            </param>
            <param name="childTuple">
            Child tuple.
            </param>
            <returns>
            True if parentTuple is a real parent of the childTuple.
            </returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapChartCore.ResetChartData">
            <summary>
            Resets chart data.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapChartCore.RemovePieTitles">
            <summary>
            Removes titles generated by pie chart conversion.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapChartCore.IsPieChartTitle(Dundas.Olap.WebUIControls.Title)">
            <summary>
            Checks if given title is pie chart title.
            </summary>
            <param name="title">title to be checked</param>
            <returns>true if pie chart title, otherwise - false.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapChartCore.LoadTemplateFromString(System.String)">
            <summary>
            Load chart from the specified template data.
            <seealso cref="M:Dundas.Olap.WebUIControls.OlapChartCore.SaveTemplateIntoString(System.Boolean)"/>
            </summary>
            <param name="templateData">
            A <b>string</b> object that contains chart template data.
            </param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapChartCore.SaveTemplateIntoString(System.Boolean)">
            <summary>
            Saves the chart template into a string.
            </summary>
            <seealso cref="M:Dundas.Olap.WebUIControls.OlapChartCore.LoadTemplateFromString(System.String)"/>
            <returns>
            A <b>string</b> value that represents the chart template.
            </returns>
            <remarks>
            This method is useful when attempting to save the chart appearance for 
            reuse in conjunction with the <see cref="M:Dundas.Olap.WebUIControls.OlapChartCore.LoadTemplateFromString(System.String)"/>
            property.
            </remarks>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapChartCore.GetNonSerializableContent">
            <summary>
            Gets non-serializable chart content for the template serialization.
            </summary>
            <returns>
            Non-serializable chart content string for the template serialization.
            </returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapChartCore.GetDimensionDescriptorHierarchy(Dundas.Olap.Data.DimensionDescriptor)">
            <summary>
            Gets hierarchy used in specified dimension descriptor.
            </summary>
            <param name="dimensionDescriptor">
            Dimension descriptor to get the hierarchy for.
            </param>
            <returns>
            Hierarchy represented by the dimension descriptor or NULL in case of error.
            </returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapChartCore.GetDataPointCategoricalTuple(System.Int32)">
            <summary>
            Gets a <see cref="T:Dundas.Olap.Data.Tuple"/> object associated with the data point.
            </summary>
            <param name="pointIndex">
            An <b>integer</b> index of the data point in chart series.
            </param>
            <returns>
            A categorical <see cref="T:Dundas.Olap.Data.Tuple"/> associated with specified data point.
            </returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapChartCore.UpdateCategoricalLabelsCommands(Dundas.Olap.WebUIControls.CustomLabel)">
            <summary>
            Updates categorical label commands shown when the user displays the custom
            label context menu.
            </summary>
            <param name="customLabel">
            The label that was clicked to display the context menu.
            </param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapChartCore.GetDimensionDescriptorFromTuple(Dundas.Olap.Data.Tuple)">
            <summary>
            Gets dimension descriptor from specified tuple.
            </summary>
            <param name="tuple">
            Tuple to get DimensionDescriptor for.
            </param>
            <returns>
            A <see cref="T:Dundas.Olap.Data.DimensionDescriptor"/> object that is associated with the 
            tuple provided.
            </returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapChartCore.OnOlapDataPopulated">
            <summary>
            Multidimensional data is populated into the chart.
            </summary>
            <seealso cref="E:Dundas.Olap.WebUIControls.OlapChartCore.OlapDataPopulated"/>
            <remarks>
            This method can be used in the derived class to customize the OLAP Chart.
            </remarks>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapChartCore.SetLabelsData(Dundas.Olap.WebUIControls.Series)">
            <summary>
            Sets labels info for series
            </summary>
            <param name="series">series</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapChartCore.GetLabelsData">
            <summary>
            Gets labels information from given properties
            </summary>
            <returns></returns>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapChartCore.OlapManager">
            <summary>
            Gets or sets the associated <b>OlapManager</b> object.
            <seealso cref="T:Dundas.Olap.Manager.OlapManager"/>
            </summary>
            <remarks>
            The <b>OlapChart</b> control requires an <see cref="P:Dundas.Olap.WebUIControls.OlapChartCore.OlapManager"/> object
            to retriev current cube data schema and to automatically refresh chart
            when new multidimensional data is retrieved.
            </remarks>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapChartCore.EnableMemberDrillDown">
            <summary>
            Enables individual, member-based drill down on the categorical axis of the chart.
            </summary>
            <remarks>
            If <b>True</b> a plus sign will be placed next to the member labels that 
            contain child members.
            </remarks>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapChartCore.MaxNumberOfPointsInView">
            <summary>
            Maximum number of data points displayed in the chart view.
            </summary>
            <remarks>
            The <b>MaxNumberOfPointsInView</b> property defines the maximum number of data points
            displayed in the chart view. If current data series contains more data points than 
            specified in this property, chart will automatically zoom in.
            
            Set <b>MaxNumberOfPointsInView</b> property to a zero value to disable this feature.
            </remarks>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapChartCore.BarDrawingStyle">
            <summary>
            Gets or sets the bar/column drawing style.
            </summary>
            <value>The bar drawing style.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapChartCore.PieDrawingStyle">
            <summary>
            Gets or sets the pie and doughnut drawing style.
            </summary>
            <value>The pie drawing style.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapChartCore.MaxNumberOfSeries">
            <summary>
            Gets or sets the maximum number of series that can be drawn on the chart.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapChartCore.CollectedThreshold">
            <summary>
            Gets or sets the threshold at which all data points are collected into one point.
            </summary>
        </member>
        <member name="E:Dundas.Olap.WebUIControls.OlapChartCore.OlapDataPopulated">
            <summary>
            Event fires after multidimensional data has been populated on the chart.
            <seealso cref="M:Dundas.Olap.WebUIControls.OlapChartCore.OnOlapDataPopulated"/>
            </summary>
            <remarks>
            <b>OlapDataPopulated</b> event can be used to customize OLAP chart.
            </remarks>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.OlapChartCore.OlapDataPopulatedEventHandler">
            <summary>
            OlapDataPopulated event handler delegate.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.OlapChart.invalidated">
            <summary>
            invafidated flag
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.OlapChart.toolbarSettings">
            <summary>
            OlapChartToolbarSettings property reference
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.OlapChart.reportSource">
            <summary>
            current loaded report
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapChart.#cctor">
            <summary>
            Static constructor of the <see cref="T:OlapChart"/> class.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapChart.#ctor">
            <summary>
            Initializes new instance of the <see cref="T:Dundas.Olap.WebUIControls.OlapChart"/> class.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapChart.ShouldSerializeOlapManagerID">
            <summary>
            Indicates whether the <b>OlapManagerID</b> property should be persisted.
            </summary>
            <returns>
            Returns true if the property value has changed from its default; otherwise false.
            </returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapChart.PopulateChartData(Dundas.Olap.Data.CellSet)">
            <summary>
            Populates chart with data from specified <b>CellSet</b>.
            </summary>
            <param name="cellSet">
            A <see cref="T:Dundas.Olap.Data.CellSet"/> object to populate chart data from.
            </param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapChart.GetNonSerializableContent">
            <summary>
            Gets non-serializable chart content for the template serialization.
            </summary>
            <returns>
            Non-serializable chart content string for the template serialization.
            </returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapChart.LoadReportState(Dundas.Olap.Manager.OlapReport)">
            <summary>
            Loads the state of the report.
            </summary>
            <param name="report">The report.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapChart.OnLoadState(Dundas.Olap.WebUIControls.LoadStateEventArgs)">
            <summary>
            Raises the save state event.
            </summary>
            <param name="e">The <see cref="T:System.Web.UI.WebControls.ChartSaveStateEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapChart.SaveReportState(Dundas.Olap.Manager.OlapReport)">
            <summary>
            Saves the state of the report.
            </summary>
            <param name="report">The report.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapChart.OnSaveState(Dundas.Olap.WebUIControls.SaveStateEventArgs)">
            <summary>
            Raises the save state event.
            </summary>
            <param name="e">The <see cref="T:System.Web.UI.WebControls.ChartSaveStateEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapChart.CustomizeCustomLabel(Dundas.Olap.WebUIControls.CustomLabel)">
            <summary>
            Custom label customization method.
            </summary>
            <param name="customLabel">
            Label to customize.
            </param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapChart.TupleToString(Dundas.Olap.Data.Tuple)">
            <summary>
            Converts a tuple to string.
            </summary>
            <param name="t">The tupple</param>
            <returns>The string</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapChart.StringToTuple(System.String)">
            <summary>
            Converts a strings to tuple.
            </summary>
            <param name="s">The string.</param>
            <returns>The tupple</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapChart.OnCommand(System.Web.UI.WebControls.CommandEventArgs)">
            <summary>
            Raises the Command event of the OlapChart control.
            </summary>
            <param name="e">
            A <see cref="T:System.Web.UI.WebControls.CommandEventArgs"/> that contains the event data. 
            </param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapChart.OnCurrentOlapReportUpdate(System.Object,Dundas.Olap.Manager.ReportEventArgs)">
            <summary>
            OnCurrentOlapReportUpdate event handler.
            </summary>
            <param name="sender">
            Event sender.
            </param>
            <param name="e">
            Event arguments.
            </param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapChart.OnCurrentOlapReportChanged(System.Object,Dundas.Olap.Manager.ReportEventArgs)">
            <summary>
            OnCurrentOlapReportChanged event handler.
            </summary>
            <param name="sender">
            Event sender.
            </param>
            <param name="e">
            Event arguments.
            </param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapChart.LoadViewState(System.Object)">
            <summary>
            This method overrides <see cref="M:System.Web.UI.Control.LoadViewState(System.Object)"/> method.
            </summary>
            <param name="savedState">
            An Object that represents the control state to be restored. 
            </param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapChart.OnLoad(System.EventArgs)">
            <summary>
            This method overrides <see cref="M:System.Web.UI.Control.OnLoad(System.EventArgs)"/> method.
            </summary>
            <param name="e">The event argument</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapChart.OnInit(System.EventArgs)">
            <summary>
            This method overrides <see cref="M:System.Web.UI.Control.OnInit(System.EventArgs)"/> method.
            </summary>
            <param name="e">The event argument</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapChart.OnUnload(System.EventArgs)">
            <summary>
            This method overrides <see cref="M:System.Web.UI.Control.OnUnload(System.EventArgs)"/> method.
            </summary>
            <param name="e">The event argument</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapChart.EnsureManagerEvents(System.Boolean)">
            <summary>
            Ensures the manager events.
            </summary>
            <param name="capture">if set to <c>true</c> [capture].</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapChart.OnCustomizeMapAreas(Dundas.Olap.WebUIControls.MapAreasCollection)">
            <summary>
            This member overrides <see cref="M:Dundas.Olap.WebUIControls.Chart.OnCustomizeMapAreas(Dundas.Olap.WebUIControls.MapAreasCollection)"/> method.
            </summary>
            <param name="areaItems">A <see cref="T:Dundas.Olap.WebUIControls.MapAreasCollection"/> of map area items</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapChart.RestoreChartSize">
            <summary>
            Restores the size of the chart from hidden input.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapChart.OnPreRender(System.EventArgs)">
            <summary>
            Thie member overrides <see cref="M:System.Web.UI.Control.OnPreRender(System.EventArgs)"/> method.
            </summary>
            <param name="e">The event aregument</param>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.OlapChart.fileName">
            <summary>
            Design time file name
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapChart.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            This method overrides <see cref="M:System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)"/> method
            </summary>
            <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter"/>.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapChart.Invalidate">
            <summary>
            Invalidates this instance.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapChart.LoadByForceAllParentMembersAndItsChildren">
            <summary>
            Loads the by force all parent members and its children.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapChart.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)">
            <summary>
            Method of IPostBackEventHandler that raises change events.
            </summary>
            <param name="eventArgument">Event argument.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapChart.OnDrillUpDown(System.Boolean,Dundas.Olap.Data.Tuple)">
            <summary>
            Processes drilldown event
            </summary>
            <param name="isDrilledDown">shows that it was drilled down</param>
            <param name="tuple">tuple to be drilled down</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapChart.Dundas#Olap#Manager#IOlapCallbackHandler#PopulateCallbackContent(System.Web.UI.HtmlTextWriter,System.String)">
            <summary>
            Returns internal content of the control used to visual ( DHTML) or script updating.
            </summary>
            <param name="output">A <see cref="T:System.Web.UI.HtmlTextWriter"/> used for output</param>
            <param name="contentType">The requested type of content</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapChart.Dundas#Olap#Manager#IOlapConditionalCallbackHandler#ShouldPopulateCallbackContent">
            <summary>
            Returns true if this control should populate its callback content
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapChart.ResetColorTable">
            <summary>
            Resets color table
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapChart.BackColor">
            <summary>
            Background color
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapChart.OlapManager">
            <summary>
            Gets or sets the associated <b>OlapManager</b> object.
            <seealso cref="T:Dundas.Olap.Manager.OlapManager"/>
            </summary>
            <remarks>
            The <b>OlapReportList</b> control works with a list of reports 
            defined in the <see cref="P:Dundas.Olap.Manager.OlapManager.OlapReports"/> collection of the <see cref="T:Dundas.Olap.Manager.OlapManager"/>
            object. Any change to that list will automatically update the list content.
            
            If the end user adds, deletes or renames reports in the list, it will 
            automatically be reflected in the <b>OlapManager</b>. When the selected 
            report in the list is changed, it is automatically set as the <see cref="P:Dundas.Olap.Manager.OlapManager.CurrentOlapReport"/>
            in the associated <b>OlapManager</b> object.
            </remarks>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapChart.OlapManagerID">
            <summary>
            Gets or sets the ID of associated <b>OlapManager</b> object.
            <seealso cref="T:Dundas.Olap.Manager.OlapManager"/>
            </summary>
            <remarks>
            The <b>OlapReportList</b> control works with a list of reports 
            defined in the <see cref="P:Dundas.Olap.Manager.OlapManager.OlapReports"/> collection of the <see cref="T:Dundas.Olap.Manager.OlapManager"/>
            object. Any change to that list will automatically update the list content.
            
            If the end user adds, deletes or renames reports in the list, it will 
            automatically be reflected in the <b>OlapManager</b>. When the selected 
            report in the list is changed, it is automatically set as the <see cref="P:Dundas.Olap.Manager.OlapManager.CurrentOlapReport"/>
            in the associated <b>OlapManager</b> object.
            </remarks>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapChart.Width">
            <summary>
            Chart width
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapChart.Height">
            <summary>
            Chart height
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapChart.ToolbarSettings">
            <summary>
            Gets the toolbar settings.
            </summary>
            <value>The toolbar settings.</value>
        </member>
        <member name="E:Dundas.Olap.WebUIControls.OlapChart.Command">
            <summary>
            Occurs when the post back command is fired.
            </summary>
            <remarks>
            The Command event can be used for specialized post backs from any chart elements which support map areas.
            </remarks>
            <example> This sample shows how to set post back and receive Command event.
            <code>
             private void OlapChart_Customize(Dundas.Olap.WebUIControls.Chart sender)
             {
             	int index = 0;
             	foreach( DataPoint p in sender.Series[0].Points)
             	{
             		p.Href = this.Page.GetPostBackClientHyperlink( sender, "point_click/" + index.ToString);
             		index++;
             	}
             }
             
             private void OlapChart_Command(object sender, System.Web.UI.WebControls.CommandEventArgs e)
             {		
             	if ( e.CommandName.StartsWith("point_click/"))
             	{
             		// do something...
             	}
             }
            </code>
            </example>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapChart.Dundas#Olap#Manager#IToolbarClient#ToolbarClientID">
            <summary>
            Gets the toolbar client ID.
            </summary>
            <value>The toolbar client ID.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapChart.Dundas#Olap#Manager#IToolbarClient#Commands">
            <summary>
            Gets the commands.
            </summary>
            <value>The commands.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapChart.Dundas#Olap#Manager#IToolbarClient#GroupOrderBase">
            <summary>
            Gets the Z order base.
            </summary>
            <value>The Z order base.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapChart.Dundas#Olap#Manager#IToolbarClient#IsChanged">
            <summary>
            Gets a value indicating whether this instance is changed.
            </summary>
            <value>
            	<c>true</c> if this instance is changed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.DrillUpDownEventArg">
            <summary>
            Argument for drill up/down event.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DrillUpDownEventArg.#ctor(System.Boolean,Dundas.Olap.Data.Tuple)">
            <summary>
            Constructor
            </summary>
            <param name="isDrillDown">Is drilled down or up</param>
            <param name="tuple">drilled down tuple</param>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.DrillUpDownEventArg.IsDrillDown">
            <summary>
            Gets is the tuple drilled down
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.DrillUpDownEventArg.Tuple">
            <summary>
            Gets drilled down tuple
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.DrillUpDownEventHandler">
            <summary>
            delegate for the drillupdown event
            </summary>
            <param name="sender">sender</param>
            <param name="e">event arguments</param>
        </member>
        <member name="T:Dundas.Charting.WebControl.Utilities.ProductKeyEncoder">
            <summary>
            License encryptor/decryptor.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Utilities.ProductKeyEncoder.BytesToString(System.Byte[])">
            <summary>
            Helper function which converts bytes array into string.
            </summary>
            <param name="bytes">Array of bytes.</param>
            <returns>Result string.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Utilities.ProductKeyEncoder.StringToBytes(System.String)">
            <summary>
            Helper function which converts string into bytes array.
            </summary>
            <param name="str">Source string.</param>
            <returns>Result array of bytes.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Utilities.ProductKeyEncoder.EncryptLicenseKey(System.String)">
            <summary>
            Encrypts License Key.
            </summary>
            <param name="key">Key to encrypt.</param>
            <returns>Encrypted key.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Utilities.ProductKeyEncoder.DecryptLicenseKey(System.String)">
            <summary>
            Decrypts License Key.
            </summary>
            <param name="key">Encrypted key.</param>
            <returns>Decrypted key.</returns>
        </member>
        <member name="T:Dundas.Charting.WebControl.Svg.SvgChartGraphics">
            <summary>
            This class is used to prepare drawing for Svg 
            Rendering class. Svg rendering class is 
            used in two products: Dundas Chart and Dundas 
            Diagram, and it cannot use internally any definition 
            from these two products.
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.Svg.SvgRendering">
            <summary>
            Rendering SVG Class which is used 
            for rendering SVG graphics file in a XML document.
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.Svg.ChartParameters">
            <summary>
            This class is used to prepare attributes for use 
            with Svg Rendering class. Svg rendering class is 
            used in two products: Dundas Chart and Dundas 
            Diagram, and it cannot use internally any definition 
            from these two products.
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.Svg.SvgParameters">
            <summary>
            This class is used as an abstract class to define 
            necessary attributes for SVG drawing. This file is 
            used in two products: Dundas Diagram and Dundas 
            Chart. This class is base class for all SVG classes.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Svg.SvgParameters.#ctor">
            <summary>
            Public constructor
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Svg.SvgParameters.GetX(System.Double)">
            <summary>
            Returns string presentation of X coordinate in 
            current coordinate system and measurement units.
            </summary>
            <param name="x">X value which should be converted to string</param>
            <returns>Result string with coordinate and measurement units.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Svg.SvgParameters.GetY(System.Double)">
            <summary>
            Returns string presentation of Y coordinate in 
            current coordinate system and measurement units.
            </summary>
            <param name="y">Y value which should be converted to string</param>
            <returns>Result string with coordinate and measurement units.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Svg.SvgParameters.GetX(System.Drawing.PointF)">
            <summary>
            Returns string presentation of X coordinate in 
            current coordinate system and measurement units.
            </summary>
            <param name="point">Point which X value should be converted to string</param>
            <returns>Result string with coordinate and measurement units.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Svg.SvgParameters.GetX(System.Drawing.RectangleF)">
            <summary>
            Returns string presentation of X coordinate in 
            current coordinate system and measurement units.
            </summary>
            <param name="rectangle">Rectangle which X value should be converted to string</param>
            <returns>Result string with coordinate and measurement units.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Svg.SvgParameters.GetWidth(System.Drawing.RectangleF)">
            <summary>
            Returns string presentation of Width in 
            current coordinate system and measurement units.
            </summary>
            <param name="rectangle">Rectangle which Width value should be converted to string</param>
            <returns>Result string with size and measurement units.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Svg.SvgParameters.GetHeight(System.Drawing.RectangleF)">
            <summary>
            Returns string presentation of Height coordinate in 
            current coordinate system and measurement units.
            </summary>
            <param name="rectangle">Rectangle which Height value should be converted to string</param>
            <returns>Result string with size and measurement units.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Svg.SvgParameters.GetY(System.Drawing.PointF)">
            <summary>
            Returns string presentation of Y coordinate in 
            current coordinate system and measurement units.
            </summary>
            <param name="point">Point which Y value should be converted to string</param>
            <returns>Result string with coordinate and measurement units.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Svg.SvgParameters.GetY(System.Drawing.RectangleF)">
            <summary>
            Returns string presentation of Y coordinate in 
            current coordinate system and measurement units.
            </summary>
            <param name="rectangle">Point which Y value should be converted to string</param>
            <returns>Result string with coordinate and measurement units.</returns>
        </member>
        <member name="P:Dundas.Charting.WebControl.Svg.SvgParameters.BrushColor">
            <summary>
            Gets the color of the Solid brush or 
            the first color of Gradient brush
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.Svg.SvgParameters.TextColor">
            <summary>
            Gets the color of the Text Color
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.Svg.SvgParameters.BrushSecondColor">
            <summary>
            Gets the second color of Gradient Brush
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.Svg.SvgParameters.GradientType">
            <summary>
            Gets determine direction for filling gradient.
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.Svg.SvgParameters.FillType">
            <summary>
            Gets the Fill Type. The fill type could be 
            solid color, gradient, etc .
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.Svg.SvgParameters.FillMode">
            <summary>
            Gets the Fill Mode. Specifies how the interior 
            of a closed path is filled.
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.Svg.SvgParameters.ImageWrapMode">
            <summary>
            Gets the Image Wrap Mode. Specifies how an image is tiled when 
            it is smaller than the area being filled.
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.Svg.SvgParameters.PenColor">
            <summary>
            Gets the color used for drawing lines and curves.
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.Svg.SvgParameters.PenWidth">
            <summary>
            Gets the width of this Pen.
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.Svg.SvgParameters.SvgLineCap">
            <summary>
            Gets the Line Cap Style.
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.Svg.SvgParameters.DashStyle">
            <summary>
            Gets the style used for dashed lines drawn with this Pen.
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.Svg.SvgParameters.Transform">
            <summary>
            Gets the Matrix object which represents matrix 
            transformation elements
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.Svg.SvgParameters.Font">
            <summary>
            Gets a Font object which defines a particular format 
            for text, including font face, size, and style attributes.
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.Svg.SvgParameters.StringFormat">
            <summary>
            Gets String format which encapsulates text layout information (such as 
            alignment and line spacing), display manipulations (such as ellipsis 
            insertion and national digit substitution) and OpenType features.
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.Svg.SvgParameters.PictureSize">
            <summary>
            Gets or Set Picture size
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.Svg.SvgParameters.SvgLineCapStyle">
            <summary>
            This enumeration defines how start or finish point of a line is drawn
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Svg.SvgParameters.SvgLineCapStyle.Butt">
            <summary>
            Specifies a flat line cap.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Svg.SvgParameters.SvgLineCapStyle.Round">
            <summary>
            Specifies a round line cap.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Svg.SvgParameters.SvgLineCapStyle.Square">
            <summary>
            Specifies a square line cap.
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.Svg.SvgParameters.SvgDashStyle">
            <summary>
            This enumeration defines pattern for solid and blank sequences
            for rendering a line
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Svg.SvgParameters.SvgDashStyle.Dash">
            <summary>
            Line consisting of dashes
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Svg.SvgParameters.SvgDashStyle.DashDot">
            <summary>
            Line consisting of a repeating pattern of dash-dot
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Svg.SvgParameters.SvgDashStyle.DashDotDot">
            <summary>
            Line consisting of a repeating pattern of dash-dot-dot
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Svg.SvgParameters.SvgDashStyle.DashDashDot">
            <summary>
            Line consisting of a repeating pattern of dash-dash-dot
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Svg.SvgParameters.SvgDashStyle.Doubledash">
            <summary>
            Line consisting of doubledashes
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Svg.SvgParameters.SvgDashStyle.DoubledashHalfdash">
            <summary>
            Line consisting of a repeating pattern of doubledash-halfdash-halfdash
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Svg.SvgParameters.SvgDashStyle.DoubledashHalfdashHalfdash">
            <summary>
            Line consisting of a repeating pattern of doubledash-halfdash
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Svg.SvgParameters.SvgDashStyle.DoubledashDoubledashHalfdash">
            <summary>
            Line consisting of a repeating pattern of doubledash-doubledash-halfdash
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Svg.SvgParameters.SvgDashStyle.Halfdash">
            <summary>
            Line consisting of halfdashes
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Svg.SvgParameters.SvgDashStyle.HalfdashDot">
            <summary>
            Line consisting of a repeating pattern of halfdash-dot
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Svg.SvgParameters.SvgDashStyle.HalfdashDotDot">
            <summary>
            Line consisting of a repeating pattern of halfdash-dot-dot
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Svg.SvgParameters.SvgDashStyle.HalfdashHalfdashDot">
            <summary>
            Line consisting of a repeating pattern of halfdash-halfdash-dot
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Svg.SvgParameters.SvgDashStyle.Dot">
            <summary>
            Line consisting of dots
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Svg.SvgParameters.SvgDashStyle.Custom">
            <summary>
            Custom pattern
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Svg.SvgParameters.SvgDashStyle.Solid">
            <summary>
            Solid line
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.Svg.SvgParameters.SvgFillType">
            <summary>
            This enumeration defines the type of filling 
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Svg.SvgParameters.SvgFillType.Solid">
            <summary>
            Solid fill 
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Svg.SvgParameters.SvgFillType.Hatch">
            <summary>
            Hatch fill 
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Svg.SvgParameters.SvgFillType.Image">
            <summary>
            Image fill 
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Svg.SvgParameters.SvgFillType.Gradient">
            <summary>
            Gradient fill 
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Svg.SvgParameters.SvgFillType.None">
            <summary>
            No fill 
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.Svg.SvgParameters.SvgGradientType">
            <summary>
            This enumeration defines the type of gradient 
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Svg.SvgParameters.SvgGradientType.None">
            <summary>
            Disabled
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Svg.SvgParameters.SvgGradientType.LeftRight">
            <summary>
            Specifies a gradient from Left to Right.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Svg.SvgParameters.SvgGradientType.TopBottom">
            <summary>
            Specifies a gradient from Top to Bottom.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Svg.SvgParameters.SvgGradientType.Center">
            <summary>
            Specifies a gradient from Center.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Svg.SvgParameters.SvgGradientType.DiagonalLeft">
            <summary>
            Specifies a gradient from Top Left to Bottom Right.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Svg.SvgParameters.SvgGradientType.DiagonalRight">
            <summary>
            Specifies a gradient from Top Right to Bottom Left.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Svg.SvgParameters.SvgGradientType.HorizontalCenter">
            <summary>
            Specifies a gradient from Center to Left and Right.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Svg.SvgParameters.SvgGradientType.VerticalCenter">
            <summary>
            Specifies a gradient from Center to Top and Bottom.
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.Svg.SvgParameters.SvgImageWrapMode">
            <summary>
            This enumeration defineshow image is tiled when it is larger than the area being filled
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Svg.SvgParameters.SvgImageWrapMode.ClampScaled">
            <summary>
            Scaled to fill available area 
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Svg.SvgParameters.SvgImageWrapMode.Tile">
            <summary>
            Tiles
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Svg.SvgParameters.SvgImageWrapMode.TileFlipX">
            <summary>
            Reverses the image horizontally and then tiles it
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Svg.SvgParameters.SvgImageWrapMode.TileFlipY">
            <summary>
            Reverses the image vertically and then tiles it
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Svg.SvgParameters.SvgImageWrapMode.TileFlipXY">
            <summary>
            Reverses the image horizontally and vertically and then tiles it
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Svg.SvgParameters.SvgImageWrapMode.ClampUnscaled">
            <summary>
            Fill available area without scaling
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Svg.ChartParameters.chartBrushColor">
            <summary>
            Brush Color
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Svg.ChartParameters.chartBrushSecondColor">
            <summary>
            Second Brush Color used for gradient
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Svg.ChartParameters.chartMatrix">
            <summary>
            Encapsulates a 3-by-3 affine matrix that represents a geometric transform.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Svg.ChartParameters.chartFont">
            <summary>
            Defines a particular format for text, including font face, 
            size, and style attributes.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Svg.ChartParameters.chartStringFormat">
            <summary>
            Encapsulates text layout information (such as alignment and line spacing), 
            display manipulations (such as ellipsis insertion and national digit 
            substitution) and OpenType features.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Svg.ChartParameters.chartSvgGradientType">
            <summary>
            Gradient types used in SVG Rendering class
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Svg.ChartParameters.chartPictureSize">
            <summary>
            The size of the chart picture
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Svg.ChartParameters.imageWrapMode">
            <summary>
            Specifies how an image texture is tiled when it is larger than 
            the area being filled.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Svg.ChartParameters.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Svg.ChartParameters.ToUSString(System.Single)">
            <summary>
            This method will replace comma wit dot when the 
            number is converted to the string. In some 
            European countries comma is used as decimal 
            point separator.
            </summary>
            <param name="number">Floating point number</param>
            <returns>The string which represents the number</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Svg.ChartParameters.ToUSString(System.Double)">
            <summary>
            This method will replace comma wit dot when the 
            number is converted to the string. In some 
            European countries comma is used as decimal 
            point separator.
            </summary>
            <param name="number">Double number</param>
            <returns>The string which represents the number</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Svg.ChartParameters.GetX(System.Double)">
            <summary>
            Returns string presentation of X coordinate in 
            current coordinate system and measurement units.
            </summary>
            <param name="x">X value which should be converted to string</param>
            <returns>Result string with coordinate and measurement units.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Svg.ChartParameters.GetY(System.Double)">
            <summary>
            Returns string presentation of Y coordinate in 
            current coordinate system and measurement units.
            </summary>
            <param name="y">Y value which should be converted to string</param>
            <returns>Result string with coordinate and measurement units.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Svg.ChartParameters.GetX(System.Drawing.PointF)">
            <summary>
            Returns string presentation of X coordinate in 
            current coordinate system and measurement units.
            </summary>
            <param name="point">Point which X value should be converted to string</param>
            <returns>Result string with coordinate and measurement units.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Svg.ChartParameters.GetX(System.Drawing.RectangleF)">
            <summary>
            Returns string presentation of X coordinate in 
            current coordinate system and measurement units.
            </summary>
            <param name="rectangle">Rectangle which X value should be converted to string</param>
            <returns>Result string with coordinate and measurement units.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Svg.ChartParameters.GetWidth(System.Drawing.RectangleF)">
            <summary>
            Returns string presentation of Width in 
            current coordinate system and measurement units.
            </summary>
            <param name="rectangle">Rectangle which Width value should be converted to string</param>
            <returns>Result string with size and measurement units.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Svg.ChartParameters.GetHeight(System.Drawing.RectangleF)">
            <summary>
            Returns string presentation of Height coordinate in 
            current coordinate system and measurement units.
            </summary>
            <param name="rectangle">Rectangle which Height value should be converted to string</param>
            <returns>Result string with size and measurement units.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Svg.ChartParameters.GetY(System.Drawing.PointF)">
            <summary>
            Returns string presentation of Y coordinate in 
            current coordinate system and measurement units.
            </summary>
            <param name="point">Point which Y value should be converted to string</param>
            <returns>Result string with coordinate and measurement units.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Svg.ChartParameters.GetY(System.Drawing.RectangleF)">
            <summary>
            Returns string presentation of Y coordinate in 
            current coordinate system and measurement units.
            </summary>
            <param name="rectangle">Point which Y value should be converted to string</param>
            <returns>Result string with coordinate and measurement units.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Svg.ChartParameters.SetBrush">
            <summary>
            Set brush which defines how to fill the interiors of graphical 
            shapes such as rectangles, ellipses, pies, polygons, and paths.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Svg.ChartParameters.SetPen">
            <summary>
            Set privete fields which define Pen attributes.
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.Svg.ChartParameters.BrushColor">
            <summary>
            Gets the color of the Solid brush or 
            the first color of Gradient brush
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.Svg.ChartParameters.Brush">
            <summary>
            Sets the color of the Solid brush or 
            the first color of Gradient brush
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.Svg.ChartParameters.Pen">
            <summary>
            Sets the color, width and style 
            for drawing 
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.Svg.ChartParameters.BrushSecondColor">
            <summary>
            Gets the second color of Gradient Brush
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.Svg.ChartParameters.GradientType">
            <summary>
            Gets determine direction for filling gradient.
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.Svg.ChartParameters.FillType">
            <summary>
            Gets the Fill Type. The fill type could be 
            solid color, gradient, etc .
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.Svg.ChartParameters.PenColor">
            <summary>
            Gets the color used for drawing lines and curves.
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.Svg.ChartParameters.PenWidth">
            <summary>
            Gets the width of this Pen.
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.Svg.ChartParameters.DashStyle">
            <summary>
            Gets the style used for dashed lines drawn with this Pen.
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.Svg.ChartParameters.Transform">
            <summary>
            Gets the Matrix object which represents matrix 
            transformation elements
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.Svg.ChartParameters.Font">
            <summary>
            Gets a Font object which defines a particular format 
            for text, including font face, size, and style attributes.
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.Svg.ChartParameters.StringFormat">
            <summary>
            Gets String format which encapsulates text layout information (such as 
            alignment and line spacing), display manipulations (such as ellipsis 
            insertion and national digit substitution) and OpenType features.
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.Svg.ChartParameters.PictureSize">
            <summary>
            Gets Picture size
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.Svg.ChartParameters.FillMode">
            <summary>
            Gets or sets the flag that specifies the filling mode used during 
            filling operations
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.Svg.ChartParameters.SvgLineCap">
            <summary>
            Gets the Line Cap Style.
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.Svg.ChartParameters.ImageWrapMode">
            <summary>
            Gets the Image Wrap Mode. Specifies how an image is tiled when 
            it is smaller than the area being filled.
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.Svg.ChartParameters.TextColor">
            <summary>
            Gets the color of the Text Color
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Svg.SvgRendering.output">
            <summary>
            Xml Text Writer object used for SVG output.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Svg.SvgRendering.gradientIDNum">
            <summary>
            Id gradient used to define same gradient
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Svg.SvgRendering.clipRegionIdNum">
            <summary>
            Id used to define clip region
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Svg.SvgRendering.selectionMode">
            <summary>
            Drawing code is under selection mode.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Svg.SvgRendering.gradientIDString">
            <summary>
            Id gradient string used to define same gradient
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Svg.SvgRendering.oldMatrix">
            <summary>
            Used to compare new assigned matrix object with matrix 
            object currently assigned.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Svg.SvgRendering.antiAlias">
            <summary>
            if true Anti aliasing is enabled
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Svg.SvgRendering.antiAliasText">
            <summary>
            if true Anti aliasing is enabled for font
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Svg.SvgRendering.transformOpen">
            <summary>
            Variable used to close transformation section in SVG file.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Svg.SvgRendering.toolTipsText">
            <summary>
            Text used for SVG Tooltips
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Svg.SvgRendering.title">
            <summary>
            Text used for title
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Svg.SvgRendering.toolTipsActive">
            <summary>
            There is minimum one drawing primitive which have tool tip
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Svg.SvgRendering.clipSet">
            <summary>
            Clip Region is set
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Svg.SvgRendering.resizable">
            <summary>
            Scg document is resizable
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Svg.SvgRendering.stringBitmap">
            <summary>
            Bitmap used to cretae grahics used to measure string 
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Svg.SvgRendering.stringGraph">
            <summary>
            Grahics used to measure string 
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Svg.SvgRendering.#ctor">
            <summary>
            Public constructor
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Svg.SvgRendering.Open(System.Xml.XmlTextWriter,System.Drawing.Size)">
            <summary>
            Open SVG Document for writing
            </summary>
            <param name="svgWriter">Svg stream or file used as an output.</param>
            <param name="pictureSize">Size of a SVG Picture</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Svg.SvgRendering.SetTitle(System.String)">
            <summary>
            Set Title for SVG document.
            </summary>
            <param name="title">SVG document title</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Svg.SvgRendering.Open(System.Xml.XmlTextWriter,System.Drawing.Size,Dundas.Charting.WebControl.Svg.SvgOpenParameters)">
            <summary>
            Open SVG Document for writing
            </summary>
            <param name="svgWriter">Svg stream or file used as an output.</param>
            <param name="pictureSize">Size of a SVG Picture</param>
            <param name="extraParameters">Structure with extra parameters</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Svg.SvgRendering.Validate">
            <summary>
            Validation for commonly used variables.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Svg.SvgRendering.Close">
            <summary>
            Used to Close and put finish tag on SVG document
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Svg.SvgRendering.DrawLine(System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Draws a line connecting the two points specified 
            by coordinate pairs.
            </summary>
            <param name="point1">Point structure that represents the first point to connect.</param>
            <param name="point2">Point structure that represents the second point to connect.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Svg.SvgRendering.DrawLines(System.Drawing.PointF[])">
            <summary>
            Draws a series of line segments that connect an array 
            of Point structures. 
            </summary>
            <param name="points">Array of Point structures that represent the points to connect.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Svg.SvgRendering.DrawRectangle(System.Drawing.RectangleF)">
            <summary>
            Draws a rectangle specified by a coordinate pair, a width, and a height.
            </summary>
            <param name="rect">A Rectangle structure that represents the rectangle to draw.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Svg.SvgRendering.SetRectangle(System.Drawing.RectangleF)">
            <summary>
            Set a rectangle coordinates specified by a coordinate pair, a width, and a height to SVG document.
            </summary>
            <param name="rect">A Rectangle structure that represents the rectangle to draw.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Svg.SvgRendering.DrawPolygon(System.Drawing.PointF[])">
            <summary>
            Draws a polygon defined by an array of 
            Point structures.
            </summary>
            <param name="points">Array of Point structures that represent the vertices of the polygon.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Svg.SvgRendering.SetPolygon(System.Drawing.PointF[])">
            <summary>
            Sets a polygon coordinates defined by an array of 
            Point structures.
            </summary>
            <param name="points">Array of Point structures that represent the vertices of the polygon.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Svg.SvgRendering.DrawArc(System.Drawing.RectangleF,System.Single,System.Single)">
            <summary>
            Draws an arc representing a portion of an ellipse specified by a Rectangle structure.
            </summary>
            <param name="rect">Rectangle structure that defines the boundaries of the ellipse.</param>
            <param name="startAngle">Angle in degrees measured clockwise from the x-axis to the starting point of the arc.</param>
            <param name="sweepAngle">Angle in degrees measured clockwise from the startAngle parameter to ending point of the arc.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Svg.SvgRendering.DrawPie(System.Drawing.RectangleF,System.Single,System.Single)">
            <summary>
            Draws a pie shape defined by an ellipse specified by a 
            Rectangle structure and two radial lines.
            </summary>
            <param name="rect">Rectangle structure that represents the bounding rectangle that defines the ellipse from which the pie shape comes.</param>
            <param name="startAngle">Angle measured in degrees clockwise from the x-axis to the first side of the pie shape.</param>
            <param name="sweepAngle">Angle measured in degrees clockwise from the startAngle parameter to the second side of the pie shape.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Svg.SvgRendering.SetPie(System.Drawing.RectangleF,System.Single,System.Single)">
            <summary>
            Sets a pie shape coordinates defined by an ellipse specified by a 
            Rectangle structure and two radial lines.
            </summary>
            <param name="rect">Rectangle structure that represents the bounding rectangle that defines the ellipse from which the pie shape comes.</param>
            <param name="startAngle">Angle measured in degrees clockwise from the x-axis to the first side of the pie shape.</param>
            <param name="sweepAngle">Angle measured in degrees clockwise from the startAngle parameter to the second side of the pie shape.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Svg.SvgRendering.DrawEllipse(System.Drawing.RectangleF)">
            <summary>
            Draws an ellipse defined by a bounding rectangle specified by a pair 
            of coordinates, a height, and a width.
            </summary>
            <param name="rect">Rectangle structure that defines the boundaries of the ellipse.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Svg.SvgRendering.SetEllipse(System.Drawing.RectangleF)">
            <summary>
            Set an ellipse coordinates defined by a bounding rectangle specified by a pair 
            of coordinates, a height, and a width.
            </summary>
            <param name="rect">Rectangle structure that defines the boundaries of the ellipse.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Svg.SvgRendering.DrawBezier(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Draws a Bézier spline defined by four Point structures.
            </summary>
            <param name="pt1">Point structure that represents the starting point of the curve.</param>
            <param name="pt2">Point structure that represents the first control point for the curve.</param>
            <param name="pt3">Point structure that represents the second control point for the curve.</param>
            <param name="pt4">Point structure that represents the ending point of the curve.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Svg.SvgRendering.DrawBeziers(System.Drawing.PointF[])">
            <summary>
            Draws a series of Bézier splines from an array of PointF structures.
            </summary>
            <param name="points">Array of PointF structures that represent the points that determine the curve.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Svg.SvgRendering.DrawCurve(System.Drawing.PointF[],System.Single)">
            <summary>
            Draws a cardinal spline through a specified array of Point structures.
            </summary>
            <param name="points">Array of Point structures that define the spline.</param>
            <param name="tension">Value greater than or equal to 0.0F that specifies the tension of the curve.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Svg.SvgRendering.DrawCurve(System.Drawing.PointF[],System.Int32,System.Int32,System.Single)">
            <summary>
            Draws a cardinal spline through a specified array of PointF structures 
            using a specified tension. The drawing begins offset from 
            the beginning of the array.
            </summary>
            <param name="points">Array of PointF structures that define the spline.</param>
            <param name="offset">Offset from the first element in the array of the points parameter to the starting point in the curve.</param>
            <param name="numberOfSegments">Number of segments after the starting point to include in the curve.</param>
            <param name="tension">Value greater than or equal to 0.0F that specifies the tension of the curve.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Svg.SvgRendering.DrawPath(System.Drawing.Drawing2D.GraphicsPath)">
            <summary>
            Draws a GraphicsPath object.
            </summary>
            <param name="path">GraphicsPath object to draw.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Svg.SvgRendering.DrawClosedCurve(System.Drawing.PointF[],System.Single)">
            <summary>
            Draws a closed cardinal spline defined by an array of Point structures.
            </summary>
            <param name="points">Array of Point structures that define the spline.</param>
            <param name="tension">Value greater than or equal to 0.0F that specifies the tension of the curve.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Svg.SvgRendering.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
            <summary>
            Draws the specified portion of the specified Image object at the specified location and with the specified size.
            </summary>
            <param name="image">Image object to draw.</param>
            <param name="destRect">Rectangle structure that specifies the location and size of the drawn image. The image is scaled to fit the rectangle.</param>
            <param name="srcX">x-coordinate of the upper-left corner of the portion of the source image to draw.</param>
            <param name="srcY">y-coordinate of the upper-left corner of the portion of the source image to draw.</param>
            <param name="srcWidth">Width of the portion of the source image to draw.</param>
            <param name="srcHeight">Height of the portion of the source image to draw.</param>
            <param name="srcUnit">Member of the GraphicsUnit enumeration that specifies the units of measure used to determine the source rectangle.</param>
            <param name="imageAttr">ImageAttributes object that specifies recoloring and gamma information for the image object.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Svg.SvgRendering.DrawImage(System.Drawing.Image,System.Drawing.RectangleF)">
            <summary>
            Draws the specified Image object at the specified location and with the original size.
            </summary>
            <param name="image">Image object to draw.</param>
            <param name="destRect">Rectangle structure that specifies the location and size of the drawn image.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Svg.SvgRendering.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
            <summary>
            Draws the specified portion of the specified Image object at the specified location and with the specified size.
            </summary>
            <param name="image">Image object to draw.</param>
            <param name="destRect">Rectangle structure that specifies the location and size of the drawn image. The image is scaled to fit the rectangle.</param>
            <param name="srcX">x-coordinate of the upper-left corner of the portion of the source image to draw.</param>
            <param name="srcY">y-coordinate of the upper-left corner of the portion of the source image to draw.</param>
            <param name="srcWidth">Width of the portion of the source image to draw.</param>
            <param name="srcHeight">Height of the portion of the source image to draw.</param>
            <param name="srcUnit">Member of the GraphicsUnit enumeration that specifies the units of measure used to determine the source rectangle.</param>
            <param name="imageAttrs">ImageAttributes object that specifies recoloring and gamma information for the image object.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Svg.SvgRendering.FillTexturedRectangle(System.Drawing.TextureBrush,System.Drawing.RectangleF)">
            <summary>
            Fills the specified Rectangle at the specified location with specified Texture Brush.
            </summary>
            <param name="textureBrush">Brush with texture</param>
            <param name="destRect">Destination rectangle</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Svg.SvgRendering.DrawString(System.String,System.Drawing.RectangleF)">
            <summary>
            Draws the specified text string at the specified location with the 
            specified Brush and Font objects using the formatting attributes of 
            the specified StringFormat object.
            </summary>
            <param name="text">String to draw.</param>
            <param name="layoutRect">RectangleF structure that specifies the location of the drawn text.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Svg.SvgRendering.DrawString(System.String,System.Drawing.PointF)">
            <summary>
            Draws the specified text string at the specified location with the 
            specified Brush and Font objects using the formatting attributes of 
            the specified StringFormat object.
            </summary>
            <param name="text">String to draw.</param>
            <param name="point">PointF structure that specifies the upper-left corner of the drawn text.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Svg.SvgRendering.FillRectangle(System.Drawing.RectangleF)">
            <summary>
            Fills the interior of a rectangle specified by a RectangleF structure.
            </summary>
            <param name="rect">RectangleF structure that represents the rectangle to fill.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Svg.SvgRendering.FillPolygon(System.Drawing.PointF[])">
            <summary>
            Fill a polygon defined by an array of 
            Point structures.
            </summary>
            <param name="points">Array of Point structures that represent the vertices of the polygon.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Svg.SvgRendering.FillPie(System.Drawing.RectangleF,System.Single,System.Single)">
            <summary>
            Fill a pie shape defined by an ellipse specified by a 
            Rectangle structure and two radial lines.
            </summary>
            <param name="rect">Rectangle structure that represents the bounding rectangle that defines the ellipse from which the pie shape comes.</param>
            <param name="startAngle">Angle measured in degrees clockwise from the x-axis to the first side of the pie shape.</param>
            <param name="sweepAngle">Angle measured in degrees clockwise from the startAngle parameter to the second side of the pie shape.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Svg.SvgRendering.FillEllipse(System.Drawing.RectangleF)">
            <summary>
            Fill an ellipse defined by a bounding rectangle specified by a pair 
            of coordinates, a height, and a width.
            </summary>
            <param name="rect">Rectangle structure that defines the boundaries of the ellipse.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Svg.SvgRendering.FillClosedCurve(System.Drawing.PointF[],System.Single)">
            <summary>
            Fill a closed cardinal spline defined by an array of Point structures.
            </summary>
            <param name="points">Array of Point structures that define the spline.</param>
            <param name="tension">Value greater than or equal to 0.0F that specifies the tension of the curve.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Svg.SvgRendering.FillPath(System.Drawing.Drawing2D.GraphicsPath)">
            <summary>
            Fill a GraphicsPath object.
            </summary>
            <param name="path">GraphicsPath object to draw.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Svg.SvgRendering.FillBezier(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Fill a Bézier spline defined by four Point 
            structures. If curve is open a line will connect the curve.
            </summary>
            <param name="pt1">Point structure that represents the starting point of the curve.</param>
            <param name="pt2">Point structure that represents the first control point for the curve.</param>
            <param name="pt3">Point structure that represents the second control point for the curve.</param>
            <param name="pt4">Point structure that represents the ending point of the curve.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Svg.SvgRendering.FillCurve(System.Drawing.PointF[],System.Single)">
            <summary>
            Fill a cardinal spline through a specified array of Point structures.
            </summary>
            <param name="points">Array of Point structures that define the spline.</param>
            <param name="tension">Value greater than or equal to 0.0F that specifies the tension of the curve.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Svg.SvgRendering.FillArc(System.Drawing.RectangleF,System.Single,System.Single)">
            <summary>
            Fill an arc representing a portion of an ellipse specified by a Rectangle structure.
            </summary>
            <param name="rect">Rectangle structure that defines the boundaries of the ellipse.</param>
            <param name="startAngle">Angle in degrees measured clockwise from the x-axis to the starting point of the arc.</param>
            <param name="sweepAngle">Angle in degrees measured clockwise from the startAngle parameter to ending point of the arc.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Svg.SvgRendering.MatrixChanged">
            <summary>
            Method which checks if elements of assigned transformation 
            matrix are changed.
            </summary>
            <returns>True if matrix is changed</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Svg.SvgRendering.NoTransformMatrix">
            <summary>
            Method which checks if there is any transformation 
            </summary>
            <returns>True if there are no transformations</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Svg.SvgRendering.ResetTransformMatrix">
            <summary>
            Method which reset transformations 
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Svg.SvgRendering.WrapString(System.String,System.Drawing.RectangleF,System.String[]@)">
            <summary>
            This method is used to wrap string which can not fir 
            specified rectangle. SVG does not support multi line 
            text and automatic text wrapping.
            </summary>
            <param name="text">String which has to be wrapped.</param>
            <param name="destRectangle">Destination rectangle.</param>
            <param name="stringArray">Rectangle which should be filled with text in many columns.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Svg.SvgRendering.SplitText(System.String)">
            <summary>
            Split the text with empty char 
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Svg.SvgRendering.ImageToString(System.Drawing.Image)">
            <summary>
            Converts Image object into the BASE64 encoded string
            </summary>
            <param name="image">Image to convert.</param>
            <returns>BASE64 encoded image data.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Svg.SvgRendering.GetDashStyle(Dundas.Charting.WebControl.Svg.SvgParameters.SvgDashStyle)">
            <summary>
            Converts Svg Dash Style enumeration to the string definition.
            </summary>
            <param name="dashStyle">Dash style enumeration.</param>
            <returns>String presentation of Dash style.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Svg.SvgRendering.GetAlpha(System.Drawing.Color)">
            <summary>
            Returns Alpha value from Color object converted to 0.0 - 1.0 value.
            </summary>
            <param name="color">Color object</param>
            <returns>Alpha value from 0 to 1</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Svg.SvgRendering.ColorToString(System.Drawing.Color)">
            <summary>
            Convert Color object to string
            </summary>
            <param name="color">Color object</param>
            <returns>SVG string presentation of color</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Svg.SvgRendering.SetStringAlignment(System.Drawing.StringFormat)">
            <summary>
            Convert String Alingment to SVG string format
            </summary>
            <param name="stringFormat">String Format</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Svg.SvgRendering.Transformations">
            <summary>
            The world transformation for SVG Drawing.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Svg.SvgRendering.SetSmoothingMode(System.Boolean,System.Boolean)">
            <summary>
            Sets the rendering quality for this Graphics object.
            </summary>
            <param name="antiAlias">True if Anti Aliasing is on</param>
            <param name="shape">True if shape antialias mode is active and false for text</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Svg.SvgRendering.GetMatrix(System.Drawing.Drawing2D.Matrix,System.Boolean)">
            <summary>
            Create string presentation of transformation matrix
            </summary>
            <param name="matrix">Transformation 2D Matrix object.</param>
            <param name="setOldMatrix">Set Old Matrix</param>
            <returns>String presentation of transformation matrix.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Svg.SvgRendering.SVGDefine(System.Boolean,System.Boolean)">
            <summary>
            Create define section before drawing section.
            </summary>
            <param name="fill">Fill mode is active</param>
            <param name="outline">Draw mode is active</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Svg.SvgRendering.BeginSvgSelection(System.String,System.String)">
            <summary>
            This method starts SVG Selection mode
            </summary>
            <param name="hRef">The location of the referenced object, expressed as a URI reference.</param>
            <param name="title">Title which could be used for tooltips.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Svg.SvgRendering.EndSvgSelection">
            <summary>
            This method stops SVG Selection mode
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Svg.SvgRendering.SetToolTip">
            <summary>
            Activate Tool Tips
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Svg.SvgRendering.StartGraphicsParameters(System.Boolean,System.Boolean)">
            <summary>
            Define graphics parameters as Brush and Pen in SVG
            </summary>
            <param name="fill">Fill mode is active</param>
            <param name="outline">Draw mode is active</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Svg.SvgRendering.EndGraphicsParameters">
            <summary>
            End section tag
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Svg.SvgRendering.SetGradient(System.Drawing.Color,System.Drawing.Color,Dundas.Charting.WebControl.Svg.SvgParameters.SvgGradientType)">
            <summary>
            This method is used to set def section for gradient. This 
            method will create Gradient ID which will be used 
            letter for filling primitives.
            </summary>
            <param name="firstColor">The first color used for gradient</param>
            <param name="secondColor">The second color used for gradient</param>
            <param name="type">Gradient Type</param>
            <returns>Gradient ID</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Svg.SvgRendering.SetRadialGradient(System.String,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            This method creates SVG radial gradient ( from center ) definition statement.
            </summary>
            <param name="gradientID">Gradient definition ID</param>
            <param name="firstColor">The first color used for gradient</param>
            <param name="secondColor">The second color used for gradient</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Svg.SvgRendering.SetLinearGradient(System.String,System.Drawing.Color,System.Drawing.Color,Dundas.Charting.WebControl.Svg.SvgParameters.SvgGradientType)">
            <summary>
            This method creates SVG linear gradient definition statement.
            </summary>
            <param name="gradientID">Gradient definition ID</param>
            <param name="firstColor">The first color used for gradient</param>
            <param name="secondColor">The second color used for gradient</param>
            <param name="type">Gradient Type</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Svg.SvgRendering.SetLinearGradient(System.String,System.Drawing.Drawing2D.LinearGradientBrush)">
            <summary>
            This method creates SVG linear gradient definition statement.
            </summary>
            <param name="gradientID">Id of the SCG Gradient</param>
            <param name="brush">Used Linear gradient brush</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Svg.SvgRendering.SetClip(System.Drawing.RectangleF)">
            <summary>
            Sets the clipping region of this Graphics object to the rectangle specified by a RectangleF structure.
            </summary>
            <param name="rect">RectangleF structure that represents the new clip region.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Svg.SvgRendering.ResetClip">
            <summary>
            Resets the clip region of this Graphics object to an infinite region.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Svg.SvgRendering.toolTipsScript">
            <summary>
            This string property contain script used for 
            tooltips in SVG Documents
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Svg.SvgRendering.emptyLoadHandler">
            <summary>
            This string property contain script used for 
            tooltips in SVG Documents
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.IChartRenderingEngine">
            <summary>
            IChartRenderingEngine interface defines a set of methods and properties 
            which must be implemented by any chart rendering engine. It contains 
            methods for drawing basic shapes.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.IChartRenderingEngine.DrawLine(System.Drawing.Pen,System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Draws a line connecting two PointF structures.
            </summary>
            <param name="pen">Pen object that determines the color, width, and style of the line.</param>
            <param name="pt1">PointF structure that represents the first point to connect.</param>
            <param name="pt2">PointF structure that represents the second point to connect.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.IChartRenderingEngine.DrawLine(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws a line connecting the two points specified by coordinate pairs.
            </summary>
            <param name="pen">Pen object that determines the color, width, and style of the line.</param>
            <param name="x1">x-coordinate of the first point.</param>
            <param name="y1">y-coordinate of the first point.</param>
            <param name="x2">x-coordinate of the second point.</param>
            <param name="y2">y-coordinate of the second point.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.IChartRenderingEngine.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
            <summary>
            Draws the specified portion of the specified Image object at the specified location and with the specified size.
            </summary>
            <param name="image">Image object to draw.</param>
            <param name="destRect">Rectangle structure that specifies the location and size of the drawn image. The image is scaled to fit the rectangle.</param>
            <param name="srcX">x-coordinate of the upper-left corner of the portion of the source image to draw.</param>
            <param name="srcY">y-coordinate of the upper-left corner of the portion of the source image to draw.</param>
            <param name="srcWidth">Width of the portion of the source image to draw.</param>
            <param name="srcHeight">Height of the portion of the source image to draw.</param>
            <param name="srcUnit">Member of the GraphicsUnit enumeration that specifies the units of measure used to determine the source rectangle.</param>
            <param name="imageAttr">ImageAttributes object that specifies recoloring and gamma information for the image object.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.IChartRenderingEngine.DrawEllipse(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws an ellipse defined by a bounding rectangle specified by 
            a pair of coordinates, a height, and a width.
            </summary>
            <param name="pen">Pen object that determines the color, width, and style of the ellipse.</param>
            <param name="x">x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</param>
            <param name="y">y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</param>
            <param name="width">Width of the bounding rectangle that defines the ellipse.</param>
            <param name="height">Height of the bounding rectangle that defines the ellipse.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.IChartRenderingEngine.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Int32,System.Int32,System.Single)">
            <summary>
            Draws a cardinal spline through a specified array of PointF structures 
            using a specified tension. The drawing begins offset from 
            the beginning of the array.
            </summary>
            <param name="pen">Pen object that determines the color, width, and height of the curve.</param>
            <param name="points">Array of PointF structures that define the spline.</param>
            <param name="offset">Offset from the first element in the array of the points parameter to the starting point in the curve.</param>
            <param name="numberOfSegments">Number of segments after the starting point to include in the curve.</param>
            <param name="tension">Value greater than or equal to 0.0F that specifies the tension of the curve.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.IChartRenderingEngine.DrawRectangle(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws a rectangle specified by a coordinate pair, a width, and a height.
            </summary>
            <param name="pen">Pen object that determines the color, width, and style of the rectangle.</param>
            <param name="x">x-coordinate of the upper-left corner of the rectangle to draw.</param>
            <param name="y">y-coordinate of the upper-left corner of the rectangle to draw.</param>
            <param name="width">Width of the rectangle to draw.</param>
            <param name="height">Height of the rectangle to draw.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.IChartRenderingEngine.DrawPolygon(System.Drawing.Pen,System.Drawing.PointF[])">
            <summary>
            Draws a polygon defined by an array of PointF structures.
            </summary>
            <param name="pen">Pen object that determines the color, width, and style of the polygon.</param>
            <param name="points">Array of PointF structures that represent the vertices of the polygon.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.IChartRenderingEngine.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.RectangleF,System.Drawing.StringFormat)">
            <summary>
            Draws the specified text string in the specified rectangle with the specified Brush and Font objects using the formatting attributes of the specified StringFormat object.
            </summary>
            <param name="s">String to draw.</param>
            <param name="font">Font object that defines the text format of the string.</param>
            <param name="brush">Brush object that determines the color and texture of the drawn text.</param>
            <param name="layoutRectangle">RectangleF structure that specifies the location of the drawn text.</param>
            <param name="format">StringFormat object that specifies formatting attributes, such as line spacing and alignment, that are applied to the drawn text.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.IChartRenderingEngine.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.PointF,System.Drawing.StringFormat)">
            <summary>
            Draws the specified text string at the specified location with the specified Brush and Font objects using the formatting attributes of the specified StringFormat object.
            </summary>
            <param name="s">String to draw.</param>
            <param name="font">Font object that defines the text format of the string.</param>
            <param name="brush">Brush object that determines the color and texture of the drawn text.</param>
            <param name="point">PointF structure that specifies the upper-left corner of the drawn text.</param>
            <param name="format">StringFormat object that specifies formatting attributes, such as line spacing and alignment, that are applied to the drawn text.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.IChartRenderingEngine.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
            <summary>
            Draws the specified portion of the specified Image object at the specified location and with the specified size.
            </summary>
            <param name="image">Image object to draw.</param>
            <param name="destRect">Rectangle structure that specifies the location and size of the drawn image. The image is scaled to fit the rectangle.</param>
            <param name="srcX">x-coordinate of the upper-left corner of the portion of the source image to draw.</param>
            <param name="srcY">y-coordinate of the upper-left corner of the portion of the source image to draw.</param>
            <param name="srcWidth">Width of the portion of the source image to draw.</param>
            <param name="srcHeight">Height of the portion of the source image to draw.</param>
            <param name="srcUnit">Member of the GraphicsUnit enumeration that specifies the units of measure used to determine the source rectangle.</param>
            <param name="imageAttrs">ImageAttributes object that specifies recoloring and gamma information for the image object.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.IChartRenderingEngine.DrawRectangle(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws a rectangle specified by a coordinate pair, a width, and a height.
            </summary>
            <param name="pen">A Pen object that determines the color, width, and style of the rectangle.</param>
            <param name="x">The x-coordinate of the upper-left corner of the rectangle to draw.</param>
            <param name="y">The y-coordinate of the upper-left corner of the rectangle to draw.</param>
            <param name="width">The width of the rectangle to draw.</param>
            <param name="height">The height of the rectangle to draw.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.IChartRenderingEngine.DrawPath(System.Drawing.Pen,System.Drawing.Drawing2D.GraphicsPath)">
            <summary>
            Draws a GraphicsPath object.
            </summary>
            <param name="pen">Pen object that determines the color, width, and style of the path.</param>
            <param name="path">GraphicsPath object to draw.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.IChartRenderingEngine.DrawPie(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws a pie shape defined by an ellipse specified by a coordinate pair, a width, and a height and two radial lines.
            </summary>
            <param name="pen">Pen object that determines the color, width, and style of the pie shape.</param>
            <param name="x">x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie shape comes.</param>
            <param name="y">y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie shape comes.</param>
            <param name="width">Width of the bounding rectangle that defines the ellipse from which the pie shape comes.</param>
            <param name="height">Height of the bounding rectangle that defines the ellipse from which the pie shape comes.</param>
            <param name="startAngle">Angle measured in degrees clockwise from the x-axis to the first side of the pie shape.</param>
            <param name="sweepAngle">Angle measured in degrees clockwise from the startAngle parameter to the second side of the pie shape.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.IChartRenderingEngine.DrawArc(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws an arc representing a portion of an ellipse specified by a pair of coordinates, a width, and a height.
            </summary>
            <param name="pen">Pen object that determines the color, width, and style of the arc.</param>
            <param name="x">x-coordinate of the upper-left corner of the rectangle that defines the ellipse.</param>
            <param name="y">y-coordinate of the upper-left corner of the rectangle that defines the ellipse.</param>
            <param name="width">Width of the rectangle that defines the ellipse.</param>
            <param name="height">Height of the rectangle that defines the ellipse.</param>
            <param name="startAngle">Angle in degrees measured clockwise from the x-axis to the starting point of the arc.</param>
            <param name="sweepAngle">Angle in degrees measured clockwise from the startAngle parameter to ending point of the arc.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.IChartRenderingEngine.DrawImage(System.Drawing.Image,System.Drawing.RectangleF)">
            <summary>
            Draws the specified Image object at the specified location and with the specified size.
            </summary>
            <param name="image">Image object to draw.</param>
            <param name="rect">RectangleF structure that specifies the location and size of the drawn image.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.IChartRenderingEngine.DrawEllipse(System.Drawing.Pen,System.Drawing.RectangleF)">
            <summary>
            Draws an ellipse defined by a bounding RectangleF.
            </summary>
            <param name="pen">Pen object that determines the color, width, and style of the ellipse.</param>
            <param name="rect">RectangleF structure that defines the boundaries of the ellipse.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.IChartRenderingEngine.DrawLines(System.Drawing.Pen,System.Drawing.PointF[])">
            <summary>
            Draws a series of line segments that connect an array of PointF structures.
            </summary>
            <param name="pen">Pen object that determines the color, width, and style of the line segments.</param>
            <param name="points">Array of PointF structures that represent the points to connect.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.IChartRenderingEngine.FillEllipse(System.Drawing.Brush,System.Drawing.RectangleF)">
            <summary>
            Fills the interior of an ellipse defined by a bounding rectangle 
            specified by a RectangleF structure.
            </summary>
            <param name="brush">Brush object that determines the characteristics of the fill.</param>
            <param name="rect">RectangleF structure that represents the bounding rectangle that defines the ellipse.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.IChartRenderingEngine.FillPath(System.Drawing.Brush,System.Drawing.Drawing2D.GraphicsPath)">
            <summary>
            Fills the interior of a GraphicsPath object.
            </summary>
            <param name="brush">Brush object that determines the characteristics of the fill.</param>
            <param name="path">GraphicsPath object that represents the path to fill.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.IChartRenderingEngine.FillRegion(System.Drawing.Brush,System.Drawing.Region)">
            <summary>
            Fills the interior of a Region object.
            </summary>
            <param name="brush">Brush object that determines the characteristics of the fill.</param>
            <param name="region">Region object that represents the area to fill.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.IChartRenderingEngine.FillRectangle(System.Drawing.Brush,System.Drawing.RectangleF)">
            <summary>
            Fills the interior of a rectangle specified by a RectangleF structure.
            </summary>
            <param name="brush">Brush object that determines the characteristics of the fill.</param>
            <param name="rect">RectangleF structure that represents the rectangle to fill.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.IChartRenderingEngine.FillRectangle(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Fills the interior of a rectangle specified by a pair of coordinates, a width, and a height.
            </summary>
            <param name="brush">Brush object that determines the characteristics of the fill.</param>
            <param name="x">x-coordinate of the upper-left corner of the rectangle to fill.</param>
            <param name="y">y-coordinate of the upper-left corner of the rectangle to fill.</param>
            <param name="width">Width of the rectangle to fill.</param>
            <param name="height">Height of the rectangle to fill.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.IChartRenderingEngine.FillPolygon(System.Drawing.Brush,System.Drawing.PointF[])">
            <summary>
            Fills the interior of a polygon defined by an array of points specified by PointF structures .
            </summary>
            <param name="brush">Brush object that determines the characteristics of the fill.</param>
            <param name="points">Array of PointF structures that represent the vertices of the polygon to fill.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.IChartRenderingEngine.FillPie(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Fills the interior of a pie section defined by an ellipse 
            specified by a pair of coordinates, a width, and a height 
            and two radial lines.
            </summary>
            <param name="brush">Brush object that determines the characteristics of the fill.</param>
            <param name="x">x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie section comes.</param>
            <param name="y">y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie section comes.</param>
            <param name="width">Width of the bounding rectangle that defines the ellipse from which the pie section comes.</param>
            <param name="height">Height of the bounding rectangle that defines the ellipse from which the pie section comes.</param>
            <param name="startAngle">Angle in degrees measured clockwise from the x-axis to the first side of the pie section.</param>
            <param name="sweepAngle">Angle in degrees measured clockwise from the startAngle parameter to the second side of the pie section.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.IChartRenderingEngine.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF,System.Drawing.StringFormat)">
            <summary>
            Measures the specified string when drawn with the specified 
            Font object and formatted with the specified StringFormat object.
            </summary>
            <param name="text">String to measure.</param>
            <param name="font">Font object defines the text format of the string.</param>
            <param name="layoutArea">SizeF structure that specifies the maximum layout area for the text.</param>
            <param name="stringFormat">StringFormat object that represents formatting information, such as line spacing, for the string.</param>
            <returns>This method returns a SizeF structure that represents the size, in pixels, of the string specified in the text parameter as drawn with the font parameter and the stringFormat parameter.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.IChartRenderingEngine.MeasureString(System.String,System.Drawing.Font)">
            <summary>
            Measures the specified string when drawn with the specified 
            Font object and formatted with the specified StringFormat object.
            </summary>
            <param name="text">String to measure.</param>
            <param name="font">Font object defines the text format of the string.</param>
            <returns>This method returns a SizeF structure that represents the size, in pixels, of the string specified in the text parameter as drawn with the font parameter and the stringFormat parameter.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.IChartRenderingEngine.Save">
            <summary>
            Saves the current state of this Graphics object and identifies the saved state with a GraphicsState object.
            </summary>
            <returns>This method returns a GraphicsState object that represents the saved state of this Graphics object.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.IChartRenderingEngine.Restore(System.Drawing.Drawing2D.GraphicsState)">
            <summary>
            Restores the saved state of graphics object.
            </summary>
            <param name="gstate">State to restore.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.IChartRenderingEngine.ResetClip">
            <summary>
            Resets the clip region of this Graphics object to an infinite region.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.IChartRenderingEngine.SetClip(System.Drawing.RectangleF)">
            <summary>
            Sets the clipping region of this Graphics object to the rectangle specified by a RectangleF structure.
            </summary>
            <param name="rect">RectangleF structure that represents the new clip region.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.IChartRenderingEngine.SetClip(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.CombineMode)">
            <summary>
            Sets the clipping region of this Graphics object to the result of the 
            specified operation combining the current clip region and the 
            specified GraphicsPath object.
            </summary>
            <param name="path">GraphicsPath object to combine.</param>
            <param name="combineMode">Member of the CombineMode enumeration that specifies the combining operation to use.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.IChartRenderingEngine.TranslateTransform(System.Single,System.Single)">
            <summary>
            Prepends the specified translation to the transformation matrix of this Graphics object.
            </summary>
            <param name="dx">x component of the translation.</param>
            <param name="dy">y component of the translation.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.IChartRenderingEngine.BeginSelection(System.String,System.String)">
            <summary>
            This method starts Selection mode
            </summary>
            <param name="hRef">The location of the referenced object, expressed as a URI reference.</param>
            <param name="title">Title which could be used for tooltips.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.IChartRenderingEngine.EndSelection">
            <summary>
            This method stops Selection mode
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.IChartRenderingEngine.Transform">
            <summary>
            Gets or sets the world transformation for this Graphics object.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.IChartRenderingEngine.SmoothingMode">
            <summary>
            Gets or sets the rendering quality for this Graphics object.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.IChartRenderingEngine.TextRenderingHint">
            <summary>
            Gets or sets the rendering mode for text associated with this Graphics object.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.IChartRenderingEngine.Clip">
            <summary>
            Gets or sets a Region object that limits the drawing region of this Graphics object.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.IChartRenderingEngine.Graphics">
            <summary>
            Reference to the Graphics object
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.IChartRenderingEngine.IsClipEmpty">
            <summary>
            Gets a value indicating whether the clipping region of this Graphics object is empty.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Svg.SvgChartGraphics.#ctor(Dundas.Olap.WebUIControls.CommonElements)">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Svg.SvgChartGraphics.DrawLine(System.Drawing.Pen,System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Draws a line connecting two PointF structures.
            </summary>
            <param name="pen">Pen object that determines the color, width, and style of the line.</param>
            <param name="pt1">PointF structure that represents the first point to connect.</param>
            <param name="pt2">PointF structure that represents the second point to connect.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Svg.SvgChartGraphics.DrawLine(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws a line connecting the two points specified by coordinate pairs.
            </summary>
            <param name="pen">Pen object that determines the color, width, and style of the line.</param>
            <param name="x1">x-coordinate of the first point.</param>
            <param name="y1">y-coordinate of the first point.</param>
            <param name="x2">x-coordinate of the second point.</param>
            <param name="y2">y-coordinate of the second point.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Svg.SvgChartGraphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
            <summary>
            Draws the specified portion of the specified Image object at the specified location and with the specified size.
            </summary>
            <param name="image">Image object to draw.</param>
            <param name="destRect">Rectangle structure that specifies the location and size of the drawn image. The image is scaled to fit the rectangle.</param>
            <param name="srcX">x-coordinate of the upper-left corner of the portion of the source image to draw.</param>
            <param name="srcY">y-coordinate of the upper-left corner of the portion of the source image to draw.</param>
            <param name="srcWidth">Width of the portion of the source image to draw.</param>
            <param name="srcHeight">Height of the portion of the source image to draw.</param>
            <param name="srcUnit">Member of the GraphicsUnit enumeration that specifies the units of measure used to determine the source rectangle.</param>
            <param name="imageAttr">ImageAttributes object that specifies recoloring and gamma information for the image object.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Svg.SvgChartGraphics.DrawEllipse(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws an ellipse defined by a bounding rectangle specified by 
            a pair of coordinates, a height, and a width.
            </summary>
            <param name="pen">Pen object that determines the color, width, and style of the ellipse.</param>
            <param name="x">x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</param>
            <param name="y">y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</param>
            <param name="width">Width of the bounding rectangle that defines the ellipse.</param>
            <param name="height">Height of the bounding rectangle that defines the ellipse.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Svg.SvgChartGraphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Int32,System.Int32,System.Single)">
            <summary>
            Draws a cardinal spline through a specified array of PointF structures 
            using a specified tension. The drawing begins offset from 
            the beginning of the array.
            </summary>
            <param name="pen">Pen object that determines the color, width, and height of the curve.</param>
            <param name="points">Array of PointF structures that define the spline.</param>
            <param name="offset">Offset from the first element in the array of the points parameter to the starting point in the curve.</param>
            <param name="numberOfSegments">Number of segments after the starting point to include in the curve.</param>
            <param name="tension">Value greater than or equal to 0.0F that specifies the tension of the curve.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Svg.SvgChartGraphics.DrawRectangle(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws a rectangle specified by a coordinate pair, a width, and a height.
            </summary>
            <param name="pen">Pen object that determines the color, width, and style of the rectangle.</param>
            <param name="x">x-coordinate of the upper-left corner of the rectangle to draw.</param>
            <param name="y">y-coordinate of the upper-left corner of the rectangle to draw.</param>
            <param name="width">Width of the rectangle to draw.</param>
            <param name="height">Height of the rectangle to draw.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Svg.SvgChartGraphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.RectangleF,System.Drawing.StringFormat)">
            <summary>
            Draws the specified text string in the specified rectangle with the specified Brush and Font objects using the formatting attributes of the specified StringFormat object.
            </summary>
            <param name="s">String to draw.</param>
            <param name="font">Font object that defines the text format of the string.</param>
            <param name="brush">Brush object that determines the color and texture of the drawn text.</param>
            <param name="layoutRectangle">RectangleF structure that specifies the location of the drawn text.</param>
            <param name="format">StringFormat object that specifies formatting attributes, such as line spacing and alignment, that are applied to the drawn text.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Svg.SvgChartGraphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.PointF,System.Drawing.StringFormat)">
            <summary>
            Draws the specified text string at the specified location with the specified Brush and Font objects using the formatting attributes of the specified StringFormat object.
            </summary>
            <param name="s">String to draw.</param>
            <param name="font">Font object that defines the text format of the string.</param>
            <param name="brush">Brush object that determines the color and texture of the drawn text.</param>
            <param name="point">PointF structure that specifies the upper-left corner of the drawn text.</param>
            <param name="format">StringFormat object that specifies formatting attributes, such as line spacing and alignment, that are applied to the drawn text.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Svg.SvgChartGraphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
            <summary>
            Draws the specified portion of the specified Image object at the specified location and with the specified size.
            </summary>
            <param name="image">Image object to draw.</param>
            <param name="destRect">Rectangle structure that specifies the location and size of the drawn image. The image is scaled to fit the rectangle.</param>
            <param name="srcX">x-coordinate of the upper-left corner of the portion of the source image to draw.</param>
            <param name="srcY">y-coordinate of the upper-left corner of the portion of the source image to draw.</param>
            <param name="srcWidth">Width of the portion of the source image to draw.</param>
            <param name="srcHeight">Height of the portion of the source image to draw.</param>
            <param name="srcUnit">Member of the GraphicsUnit enumeration that specifies the units of measure used to determine the source rectangle.</param>
            <param name="imageAttrs">ImageAttributes object that specifies recoloring and gamma information for the image object.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Svg.SvgChartGraphics.DrawRectangle(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws a rectangle specified by a coordinate pair, a width, and a height.
            </summary>
            <param name="pen">A Pen object that determines the color, width, and style of the rectangle.</param>
            <param name="x">The x-coordinate of the upper-left corner of the rectangle to draw.</param>
            <param name="y">The y-coordinate of the upper-left corner of the rectangle to draw.</param>
            <param name="width">The width of the rectangle to draw.</param>
            <param name="height">The height of the rectangle to draw.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Svg.SvgChartGraphics.DrawPath(System.Drawing.Pen,System.Drawing.Drawing2D.GraphicsPath)">
            <summary>
            Draws a GraphicsPath object.
            </summary>
            <param name="pen">Pen object that determines the color, width, and style of the path.</param>
            <param name="path">GraphicsPath object to draw.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Svg.SvgChartGraphics.DrawPie(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws a pie shape defined by an ellipse specified by a coordinate pair, a width, and a height and two radial lines.
            </summary>
            <param name="pen">Pen object that determines the color, width, and style of the pie shape.</param>
            <param name="x">x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie shape comes.</param>
            <param name="y">y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie shape comes.</param>
            <param name="width">Width of the bounding rectangle that defines the ellipse from which the pie shape comes.</param>
            <param name="height">Height of the bounding rectangle that defines the ellipse from which the pie shape comes.</param>
            <param name="startAngle">Angle measured in degrees clockwise from the x-axis to the first side of the pie shape.</param>
            <param name="sweepAngle">Angle measured in degrees clockwise from the startAngle parameter to the second side of the pie shape.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Svg.SvgChartGraphics.DrawArc(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws an arc representing a portion of an ellipse specified by a pair of coordinates, a width, and a height.
            </summary>
            <param name="pen">Pen object that determines the color, width, and style of the arc.</param>
            <param name="x">x-coordinate of the upper-left corner of the rectangle that defines the ellipse.</param>
            <param name="y">y-coordinate of the upper-left corner of the rectangle that defines the ellipse.</param>
            <param name="width">Width of the rectangle that defines the ellipse.</param>
            <param name="height">Height of the rectangle that defines the ellipse.</param>
            <param name="startAngle">Angle in degrees measured clockwise from the x-axis to the starting point of the arc.</param>
            <param name="sweepAngle">Angle in degrees measured clockwise from the startAngle parameter to ending point of the arc.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Svg.SvgChartGraphics.DrawImage(System.Drawing.Image,System.Drawing.RectangleF)">
            <summary>
            Draws the specified Image object at the specified location and with the specified size.
            </summary>
            <param name="image">Image object to draw.</param>
            <param name="rect">RectangleF structure that specifies the location and size of the drawn image.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Svg.SvgChartGraphics.DrawEllipse(System.Drawing.Pen,System.Drawing.RectangleF)">
            <summary>
            Draws an ellipse defined by a bounding RectangleF.
            </summary>
            <param name="pen">Pen object that determines the color, width, and style of the ellipse.</param>
            <param name="rect">RectangleF structure that defines the boundaries of the ellipse.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Svg.SvgChartGraphics.DrawLines(System.Drawing.Pen,System.Drawing.PointF[])">
            <summary>
            Draws a series of line segments that connect an array of PointF structures.
            </summary>
            <param name="pen">Pen object that determines the color, width, and style of the line segments.</param>
            <param name="points">Array of PointF structures that represent the points to connect.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Svg.SvgChartGraphics.FillEllipse(System.Drawing.Brush,System.Drawing.RectangleF)">
            <summary>
            Fills the interior of an ellipse defined by a bounding rectangle 
            specified by a RectangleF structure.
            </summary>
            <param name="brush">Brush object that determines the characteristics of the fill.</param>
            <param name="rect">RectangleF structure that represents the bounding rectangle that defines the ellipse.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Svg.SvgChartGraphics.FillPath(System.Drawing.Brush,System.Drawing.Drawing2D.GraphicsPath)">
            <summary>
            Fills the interior of a GraphicsPath object.
            </summary>
            <param name="brush">Brush object that determines the characteristics of the fill.</param>
            <param name="path">GraphicsPath object that represents the path to fill.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Svg.SvgChartGraphics.FillRegion(System.Drawing.Brush,System.Drawing.Region)">
            <summary>
            Fills the interior of a Region object.
            </summary>
            <param name="brush">Brush object that determines the characteristics of the fill.</param>
            <param name="region">Region object that represents the area to fill.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Svg.SvgChartGraphics.FillRectangle(System.Drawing.Brush,System.Drawing.RectangleF)">
            <summary>
            Fills the interior of a rectangle specified by a RectangleF structure.
            </summary>
            <param name="brush">Brush object that determines the characteristics of the fill.</param>
            <param name="rect">RectangleF structure that represents the rectangle to fill.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Svg.SvgChartGraphics.FillRectangle(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Fills the interior of a rectangle specified by a pair of coordinates, a width, and a height.
            </summary>
            <param name="brush">Brush object that determines the characteristics of the fill.</param>
            <param name="x">x-coordinate of the upper-left corner of the rectangle to fill.</param>
            <param name="y">y-coordinate of the upper-left corner of the rectangle to fill.</param>
            <param name="width">Width of the rectangle to fill.</param>
            <param name="height">Height of the rectangle to fill.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Svg.SvgChartGraphics.FillPolygon(System.Drawing.Brush,System.Drawing.PointF[])">
            <summary>
            Fills the interior of a polygon defined by an array of points specified by PointF structures .
            </summary>
            <param name="brush">Brush object that determines the characteristics of the fill.</param>
            <param name="points">Array of PointF structures that represent the vertices of the polygon to fill.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Svg.SvgChartGraphics.FillPie(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Fills the interior of a pie section defined by an ellipse 
            specified by a pair of coordinates, a width, and a height 
            and two radial lines.
            </summary>
            <param name="brush">Brush object that determines the characteristics of the fill.</param>
            <param name="x">x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie section comes.</param>
            <param name="y">y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie section comes.</param>
            <param name="width">Width of the bounding rectangle that defines the ellipse from which the pie section comes.</param>
            <param name="height">Height of the bounding rectangle that defines the ellipse from which the pie section comes.</param>
            <param name="startAngle">Angle in degrees measured clockwise from the x-axis to the first side of the pie section.</param>
            <param name="sweepAngle">Angle in degrees measured clockwise from the startAngle parameter to the second side of the pie section.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Svg.SvgChartGraphics.SetClip(System.Drawing.RectangleF)">
            <summary>
            Sets the clipping region of this Graphics object to the rectangle specified by a RectangleF structure.
            </summary>
            <param name="rect">RectangleF structure that represents the new clip region.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Svg.SvgChartGraphics.ResetClip">
            <summary>
            Resets the clip region of this Graphics object to an infinite region.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Svg.SvgChartGraphics.SetClip(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.CombineMode)">
            <summary>
            Sets the clipping region of this Graphics object to the result of 
            the specified operation combining the current clip region and 
            the specified GraphicsPath object.
            </summary>
            <param name="path">GraphicsPath object to combine.</param>
            <param name="combineMode">Member of the CombineMode enumeration that specifies the combining operation to use.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Svg.SvgChartGraphics.TranslateTransform(System.Single,System.Single)">
            <summary>
            Prepends the specified translation to the transformation matrix of this Graphics object.
            </summary>
            <param name="dx">x component of the translation.</param>
            <param name="dy">y component of the translation.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Svg.SvgChartGraphics.SetGradient(System.Drawing.Color,System.Drawing.Color,Dundas.Olap.WebUIControls.GradientType)">
            <summary>
            Set Gradient colors and type
            </summary>
            <param name="firstColor">The first gradient color</param>
            <param name="secondColor">The second gradient color</param>
            <param name="gradientType">The gradient type</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Svg.SvgChartGraphics.DrawPolygon(System.Drawing.Pen,System.Drawing.PointF[])">
            <summary>
            Draws a polygon defined by an array of PointF structures.
            </summary>
            <param name="pen">Pen object that determines the color, width, and style of the polygon.</param>
            <param name="points">Array of PointF structures that represent the vertices of the polygon.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Svg.SvgChartGraphics.Save">
            <summary>
            Saves the current state of this Graphics object and identifies the saved state with a GraphicsState object.
            </summary>
            <returns>This method returns a GraphicsState object that represents the saved state of this Graphics object.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Svg.SvgChartGraphics.Restore(System.Drawing.Drawing2D.GraphicsState)">
            <summary>
            Restores the state of this Graphics object to the state represented by a GraphicsState object.
            </summary>
            <param name="gstate">GraphicsState object that represents the state to which to restore this Graphics object.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Svg.SvgChartGraphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF,System.Drawing.StringFormat)">
            <summary>
            Measures the specified string when drawn with the specified 
            Font object and formatted with the specified StringFormat object.
            </summary>
            <param name="text">String to measure.</param>
            <param name="font">Font object defines the text format of the string.</param>
            <param name="layoutArea">SizeF structure that specifies the maximum layout area for the text.</param>
            <param name="stringFormat">StringFormat object that represents formatting information, such as line spacing, for the string.</param>
            <returns>This method returns a SizeF structure that represents the size, in pixels, of the string specified in the text parameter as drawn with the font parameter and the stringFormat parameter.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Svg.SvgChartGraphics.MeasureString(System.String,System.Drawing.Font)">
            <summary>
            Measures the specified string when drawn with the specified 
            Font object and formatted with the specified StringFormat object.
            </summary>
            <param name="text">String to measure.</param>
            <param name="font">Font object defines the text format of the string.</param>
            <returns>This method returns a SizeF structure that represents the size, in pixels, of the string specified in the text parameter as drawn with the font parameter and the stringFormat parameter.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Svg.SvgChartGraphics.BeginSelection(System.String,System.String)">
            <summary>
            This method starts Selection mode
            </summary>
            <param name="hRef">The location of the referenced object, expressed as a URI reference.</param>
            <param name="title">Title which could be used for tooltips.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Svg.SvgChartGraphics.EndSelection">
            <summary>
            This method stops Selection mode
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.Svg.SvgChartGraphics.Transform">
            <summary>
            Gets or sets the world transformation for this Graphics object.
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.Svg.SvgChartGraphics.SmoothingMode">
            <summary>
            Gets or sets the rendering quality for this Graphics object.
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.Svg.SvgChartGraphics.IsClipEmpty">
            <summary>
            Gets a value indicating whether the clipping region of this 
            Graphics object is empty.
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.Svg.SvgChartGraphics.Clip">
            <summary>
            Gets or sets a Region object that limits the drawing region of this Graphics object.
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.Svg.SvgChartGraphics.Graphics">
            <summary>
            Reference to the Graphics object
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.Svg.SvgChartGraphics.TextRenderingHint">
            <summary>
            Gets or sets the rendering mode for text associated with this Graphics object.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.Matrix3D">
            <summary>
            This class is responsible for all 3D coordinates transformations: Translation, 
            Rotation, Scale, Perspective and RightAngle Projection. Translation 
            and rotation are stored in composite matrix (mainMatrix), and scaling, 
            projection and non-composite translation are stored in private fields. 
            Matrix is initialized with Chart Area 3D cube, which is invisible boundary 
            cube of 3D Chart area. The matrix has to be initialized every time 
            when angles, position or perspective parameters are changed. Method 
            TransformPoints will apply 3D Transformation on points using 
            Initialization values: Main matrix and other initialization values.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Matrix3D.mainMatrix">
            <summary>
            Composite matrix.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Matrix3D.translateX">
            <summary>
            Default translation for chart area cube ( without composition ).
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Matrix3D.translateY">
            <summary>
            Default translation for chart area cube ( without composition ).
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Matrix3D.translateZ">
            <summary>
            Default translation for chart area cube ( without composition ).
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Matrix3D.scale">
            <summary>
            The value, which is used to rescale chart area.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Matrix3D.shiftX">
            <summary>
            The value used for Isometric Shift.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Matrix3D.shiftY">
            <summary>
            The value used for Isometric Shift.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Matrix3D.perspective">
            <summary>
            Perspective value.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Matrix3D.rightAngleAxis">
            <summary>
            Isometric projection.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Matrix3D.perspectiveFactor">
            <summary>
            The value, which is used for perspective.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Matrix3D.perspectiveZ">
            <summary>
            The value, which is used to set projection plane.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Matrix3D.angleX">
            <summary>
            X Angle.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Matrix3D.angleY">
            <summary>
            Y Angle.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Matrix3D.lightVectors">
            <summary>
            Private fields used for lighting
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Matrix3D.lightStyle">
            <summary>
            Light Style
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Matrix3D.#ctor">
            <summary>
            Constructor for Matrix 3D
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Matrix3D.IsInitialized">
            <summary>
            Checks if 3D matrix was initialized.
            </summary>
            <returns>True if matrix was initialized.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Matrix3D.Initialize(System.Drawing.RectangleF,System.Single,System.Single,System.Single,System.Single,System.Boolean)">
            <summary>
            Initialize Matrix 3D. This method calculates how much a chart area 
            cube has to be resized to fit Inner Plotting Area rectangle. Order 
            of operation is following: Translation for X and Y axes, Rotation 
            by X-axis, Rotation by Y-axis and same scaling for all axes. All 
            other elements, which belongs to this chart area cube (Data points, 
            grid lines etc.) has to follow same order. Translation and rotation 
            form composite matrix mainMatrix. Scale has to be allied separately.
            </summary>
            <param name="innerPlotRectangle">Inner Plotting Area position. Chart area cube has to be inside this rectangle</param>
            <param name="depth">Depth of chart area cube</param>
            <param name="angleX">Angle of rotation by X axis.</param>
            <param name="angleY">Angle of rotation by Y axis.</param>
            <param name="perspective">Perspective in percentages</param>
            <param name="rightAngleAxis">Right angle flag.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Matrix3D.TransformPoints(Dundas.Olap.WebUIControls.Point3D[])">
            <summary>
            Apply transformations on array od 3D Points. Order of operation is 
            following: Translation ( Set coordinate system for 0:100 to -50:50 
            Center of rotation is always 0), Composite Translation for X and Y 
            axes ( Moving center of rotation ), Rotation by X-axis, Rotation 
            by Y-axis, perspective and same scaling for all axes.
            </summary>
            <param name="points">3D Points array.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Matrix3D.GetScale">
            <summary>
            This Method returns scale factor
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Matrix3D.TransformPoints(Dundas.Olap.WebUIControls.Point3D[],System.Boolean)">
            <summary>
            Apply transformations on array od 3D Points. Order of operation is 
            following: Translation ( Set coordinate system for 0:100 to -50:50 
            Center of rotation is always 0), Composite Translation for X and Y 
            axes ( Moving center of rotation ), Rotation by X-axis, Rotation 
            by Y-axis, perspective and same scaling for all axes.
            </summary>
            <param name="points">3D Points array.</param>
            <param name="withPerspective">Applay Perspective</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Matrix3D.RightAngleShift(Dundas.Olap.WebUIControls.Point3D[])">
            <summary>
            This method adjusts a position of 3D Chart Area cube. This 
            method will translate chart for better use of the inner 
            plotting area. Center of rotation is shifted for 
            right Angle projection.
            </summary>
            <param name="points">3D Points array.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Matrix3D.RightAngleProjection(Dundas.Olap.WebUIControls.Point3D[])">
            <summary>
            Method used to calculate right Angle projection.
            </summary>
            <param name="points">3D points array.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Matrix3D.Perspective(Dundas.Olap.WebUIControls.Point3D[])">
            <summary>
            Method is used for Planar Geometric projection. 
            </summary>
            <param name="points">3D Points array.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Matrix3D.Scale(Dundas.Olap.WebUIControls.Point3D[])">
            <summary>
            Scales data points. Scaling has to be performed SEPARATELY from 
            composite matrix. If scale is used with composite matrix after 
            rotation, scaling will deform object.
            </summary>
            <param name="points">3D Points array.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Matrix3D.Translate(System.Single,System.Single,System.Single)">
            <summary>
            Prepend to this Matrix object a translation. This method is used 
            only if CENTER OF ROTATION HAS TO BE MOVED.
            </summary>
            <param name="dx">Translate in x axis direction.</param>
            <param name="dy">Translate in y axis direction.</param>
            <param name="dz">Translate in z axis direction.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Matrix3D.Reset">
            <summary>
            This method initialize and set default values for mainMatrix ( there is no rotation and translation )
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Matrix3D.Multiply(System.Single[][],System.Drawing.Drawing2D.MatrixOrder,System.Boolean)">
            <summary>
            Multiplies this Matrix object by the matrix specified in the 
            matrix parameter, and in the order specified in the order parameter.
            </summary>
            <param name="mulMatrix">The Matrix object by which this Matrix object is to be multiplied.</param>
            <param name="order">The MatrixOrder enumeration that represents the order of the multiplication. If the specified order is MatrixOrder.Prepend, this Matrix object is multiplied by the specified matrix in a prepended order. If the specified order is MatrixOrder.Append, this Matrix object is multiplied by the specified matrix in an appended order.</param>
            <param name="setMainMatrix">Set main matrix to be result of multiplication</param>
            <returns>Matrix multiplication result.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Matrix3D.MultiplyVector(System.Single[],System.Single[]@)">
            <summary>
            Multiplies this Matrix object by the Vector specified in the 
            vector parameter.
            </summary>
            <param name="mulVector">The vector object by which this Matrix object is to be multiplied.</param>
            <param name="resultVector">Vector which is result of matrix and vector multiplication.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Matrix3D.Rotate(System.Double,Dundas.Olap.WebUIControls.Matrix3D.RotationAxis)">
            <summary>
            Prepend to this Matrix object a clockwise rotation, around the axis and by the specified angle.
            </summary>
            <param name="angle">Angle to rotate</param>
            <param name="axis">Axis used for rotation</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Matrix3D.GetValues(Dundas.Olap.WebUIControls.Point3D[])">
            <summary>
            Returns transformed x and y values from x, y and z values 
            and composed main matrix values (All rotations, 
            translations and scaling).
            </summary>
            <param name="points">Array of 3D points.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Matrix3D.Set3DBarPoints(System.Single,System.Single,System.Single)">
            <summary>
            Set points for 3D Bar which represents 3D Chart Area.
            </summary>
            <param name="dx">Width of the bar 3D.</param>
            <param name="dy">Height of the bar 3D.</param>
            <param name="dz">Depth of the bar 3D.</param>
            <returns>Collection of Points 3D.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Matrix3D.InitLight(Dundas.Olap.WebUIControls.LightStyle)">
            <summary>
            Initial Lighting. Use matrix transformation only once 
            for Normal vectors.
            </summary>
            <param name="lightStyle">Light Style</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Matrix3D.GetLight(System.Drawing.Color,System.Drawing.Color@,System.Drawing.Color@,System.Drawing.Color@,System.Drawing.Color@,System.Drawing.Color@,System.Drawing.Color@)">
            <summary>
            Return intensity of light for 3D Cube. There are tree types of lights: None, 
            Simplistic and Realistic. None Style have same light intensity on 
            all polygons. Normal vector doesn’t have influence on this type 
            of lighting. Simplistic style have light source, which is 
            rotated together with scene. Realistic lighting have fixed light 
            source and intensity of light is change when scene is rotated.
            </summary>
            <param name="surfaceColor">Color used for polygons without lighting</param>
            <param name="front">Color corrected with intensity of light for Front side of the 3D Rectangle</param>
            <param name="back">Color corrected with intensity of light for Back side of the 3D Rectangle</param>
            <param name="left">Color corrected with intensity of light for Left side of the 3D Rectangle</param>
            <param name="right">Color corrected with intensity of light for Right side of the 3D Rectangle</param>
            <param name="top">Color corrected with intensity of light for Top side of the 3D Rectangle</param>
            <param name="bottom">Color corrected with intensity of light for Bottom side of the 3D Rectangle</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Matrix3D.GetPolygonLight(Dundas.Olap.WebUIControls.Point3D[],System.Drawing.Color,System.Boolean,System.Single,Dundas.Olap.WebUIControls.SurfaceName,System.Boolean)">
            <summary>
            Return intensity of light for Polygons. There are tree types of lights: None, 
            Simplistic and Realistic. None Style have same light intensity on 
            all polygons. Normal vector doesn’t have influence on this type 
            of lighting. Simplistic style have light source, which is 
            rotated together with scene. Realistic lighting have fixed light 
            source and intensity of light is change when scene is rotated.
            </summary>
            <param name="points">Points of the polygon</param>
            <param name="surfaceColor">Color used for polygons without lighting</param>
            <param name="visiblePolygon">This flag gets information if  polygon is visible or not.</param>
            <param name="yAngle">Y angle ( from -90 to 90 ) Should be used width switchSeriesOrder to get from -180 to 180</param>
            <param name="surfaceName">Used for lighting of front - back and left - right sides</param>
            <param name="switchSeriesOrder">Used to calculate real y angle</param>
            <returns>Color corrected with intensity of light</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Matrix3D.GetBrightGradientColor(System.Drawing.Color,System.Double)">
            <summary>
            This method creates gradien color with brightnes.
            </summary>
            <param name="beginColor">Start color for gradient.</param>
            <param name="position">Position used between Start and end color.</param>
            <returns>Calculated Gradient color from gradient position</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Matrix3D.GetAngle(Dundas.Olap.WebUIControls.Point3D,Dundas.Olap.WebUIControls.Point3D)">
            <summary>
            Returns the angle between two 3D vectors (a and b); 
            </summary>
            <param name="a">First vector</param>
            <param name="b">Second Vector</param>
            <returns>Angle between vectors</returns>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.Matrix3D.RotationAxis">
            <summary>
            3D Axis used for rotation
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Matrix3D.RotationAxis.X">
            <summary>
            Rotation around X axis.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Matrix3D.RotationAxis.Y">
            <summary>
            Rotation around Y axis.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Matrix3D.RotationAxis.Z">
            <summary>
            Rotation around Z axis.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.ChartImageType">
            <summary>
            Enumeration of supported image types
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartImageType.Bmp">
            <summary>
            BMP image format
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartImageType.Jpeg">
            <summary>
            Jpeg image format
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartImageType.Png">
            <summary>
            Png image format
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartImageType.Emf">
            <summary>
            Enhanced Meta File (Emf) image format.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartImageType.Svg">
            <summary>
            Svg graphics format
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.ChartImage">
            <summary>
            ChartImage class adds image type and data binding functionality to 
            the base ChartPicture class.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.ChartPicture">
            <summary>
            ChartPicture class represents chart content like legends, titles, 
            chart areas and series. It provides methods for positioning and 
            drawing all chart elements.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartPicture.suppressExceptions">
            <summary>
            Indicates that chart exceptions should be suppressed.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartPicture.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartPicture.#ctor(System.ComponentModel.Design.IServiceContainer)">
            <summary>
            Constructor.
            </summary>
            <param name="container">Service container</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartPicture.Initialize(Dundas.Olap.WebUIControls.Chart)">
            <summary>
            Initialize chart picture class.
            </summary>
            <param name="chart">Chart Object</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartPicture.GetService(System.Type)">
            <summary>
            Returns Chart service object
            </summary>
            <param name="serviceType">Service Type</param>
            <returns>Chart picture</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartPicture.Dispose">
            <summary>
            Releases all resources used by this Pen object
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartPicture.Select(System.Int32,System.Int32,Dundas.Olap.WebUIControls.ChartElementType,System.Boolean,System.String@,System.Int32@,Dundas.Olap.WebUIControls.ChartElementType@,System.Object@)">
            <summary>
            Function, that returns a selected data point and 
            selected series from x, and y coordinate position.
            </summary>
            <param name="x">x coordinate position</param>
            <param name="y">y coordinate position</param>
            <param name="requestedElement">Only this chart elements will be hit tested.</param>
            <param name="ignoreTransparent">Indicates that transparent elements should be ignored.</param>
            <param name="series">Selected data series</param>
            <param name="point">Selected data point</param>
            <param name="type">Chart element selectable type</param>
            <param name="obj">Selected object</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartPicture.Select(System.Int32,System.Int32,Dundas.Olap.WebUIControls.ChartElementType,System.Boolean,System.String@,System.Int32@,Dundas.Olap.WebUIControls.ChartElementType@,System.Object@,System.Object@)">
            <summary>
            Function, that returns a selected data point and 
            selected series from x, and y coordinate position.
            </summary>
            <param name="x">x coordinate position</param>
            <param name="y">y coordinate position</param>
            <param name="requestedElement">Only this chart elements will be hit tested.</param>
            <param name="ignoreTransparent">Indicates that transparent elements should be ignored.</param>
            <param name="series">Selected data series</param>
            <param name="point">Selected data point</param>
            <param name="type">Chart element selectable type</param>
            <param name="obj">Selected object</param>
            <param name="subObj">Selected sub-object</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartPicture.Select(System.Int32,System.Int32,System.String@,System.Int32@)">
            <summary>
            Function, that returns a selected data point and 
            selected series from x, and y coordinate position.
            </summary>
            <param name="x">x coordinate position</param>
            <param name="y">y coordinate position</param>
            <param name="series">Selected data series</param>
            <param name="point">Selected data point</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartPicture.Paint(System.Drawing.Graphics,System.Boolean)">
            <summary>
            This function paints a chart.
            </summary>
            <param name="graph">The graph provides drawing object to the display device. A Graphics object is associated with a specific device context.</param>
            <param name="paintTopLevelElementOnly">Indicates that only chart top level elements like cursors, selection or annotation objects must be redrawn.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartPicture.GetTextRenderingHint">
            <summary>
            Gets text rendering quality.
            </summary>
            <returns>Text rendering quality.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartPicture.PaintAreaOnly(System.Drawing.Graphics,System.String,System.Boolean,System.Drawing.Color)">
            <summary>
            This function paints a chart.
            </summary>
            <param name="graph">The graph provides drawing object to the display device. A Graphics object is associated with a specific device context.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartPicture.Paint(System.Drawing.Graphics,System.Boolean,Dundas.Olap.WebUIControls.RenderingType,System.Xml.XmlTextWriter,System.IO.Stream,System.String,System.Boolean,System.Boolean)">
            <summary>
            This function paints a chart.
            </summary>
            <param name="graph">The graph provides drawing object to the display device. A Graphics object is associated with a specific device context.</param>
            <param name="paintTopLevelElementOnly">Indicates that only chart top level elements like cursors, selection or annotation objects must be redrawn.</param>
            <param name="renderingType">Specify Rendering Type</param>
            <param name="svgTextWriter">Svg Document</param>
            <param name="flashStream">Stream used for flash output</param>
            <param name="documentTitle">Title of the document</param>
            <param name="resizable">Relative size of the Svg image</param>
            <param name="preserveAspectRatio">The graphics stretch to fit non-uniformly to take up the entire viewport</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartPicture.DrawTitle(Dundas.Olap.WebUIControls.ChartGraphics)">
            <summary>
            Draw Chart picture title.
            </summary>
            <param name="graph">Chart graphics object.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartPicture.DrawTitle(Dundas.Olap.WebUIControls.ChartGraphics,System.Boolean,System.Int32,System.Int32,System.Object@)">
            <summary>
            Draw Chart picture title.
            </summary>
            <param name="graph">Chart graphics object.</param>
            <param name="selectionMode">Selection mode</param>
            <param name="x">X coordinate</param>
            <param name="y">Y coordinate</param>
            <param name="obj">Selected object</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartPicture.OnBeforePaint(Dundas.Olap.WebUIControls.ChartPaintEventArgs)">
            <summary>
            Invoke before paint delegates.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartPicture.OnAfterPaint(Dundas.Olap.WebUIControls.ChartPaintEventArgs)">
            <summary>
            Invoke after paint delegates.
            </summary>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartPicture.Resize(Dundas.Olap.WebUIControls.ChartGraphics)">
            <summary>
            Resize the chart picture.
            </summary>
            <param name="chartGraph">Chart graphics.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartPicture.Resize(Dundas.Olap.WebUIControls.ChartGraphics,System.Boolean)">
            <summary>
            Resize the chart picture.
            </summary>
            <param name="chartGraph">Chart graphics.</param>
            <param name="calcAreaPositionOnly">Indicates that only chart area position is calculated.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartPicture.ResetMinMaxFromData">
            <summary>
            Minimum and maximum do not have to be calculated 
            from data series every time. It is very time 
            consuming. Minimum and maximum are buffered 
            and only when this flags are set Minimum and 
            Maximum are refreshed from data.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartPicture.ReCalc">
            <summary>
            Recalculate the chart picture.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartPicture.IsAreasAlignmentRequired">
            <summary>
            Checks if any of the chart areas are aligned.
            Also checks if the chart ares name in AlignWithChartArea property is valid.
            </summary>
            <returns>True if at least one area requires alignment.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartPicture.GetAlignedAreasGroup(Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.AreaAlignType,Dundas.Olap.WebUIControls.AreaAlignOrientation)">
            <summary>
            Creates a list of the aligned chart areas.
            </summary>
            <param name="masterArea">Master chart area.</param>
            <param name="type">Alignment type.</param>
            <param name="orientation">Vertical or Horizontal orientation.</param>
            <returns>List of areas that area aligned to the master area.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartPicture.AlignChartAreas(Dundas.Olap.WebUIControls.AreaAlignType)">
            <summary>
            Performs specified type of alignment for the chart areas.
            </summary>
            <param name="type">Alignment type required.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartPicture.AlignChartAreasPlotPosition(System.Collections.ArrayList,Dundas.Olap.WebUIControls.AreaAlignOrientation)">
            <summary>
            Align inner plot position of the chart areas in the group.
            </summary>
            <param name="areasGroup">List of areas in the group.</param>
            <param name="orientation">Group orientation.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartPicture.AlignChartAreasPosition">
            <summary>
            Aligns positions of the chart areas.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartPicture.AlignChartAreasCursor(Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.AreaAlignOrientation,System.Boolean)">
            <summary>
            Align chart areas cursor.
            </summary>
            <param name="changedArea">Changed chart area.</param>
            <param name="orientation">Orientation of the changed cursor.</param>
            <param name="selectionChanged">Type of change cursor or selection.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartPicture.AlignChartAreasZoomed(Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.AreaAlignOrientation,System.Boolean)">
            <summary>
            One of the chart areas was zoomed by the user.
            </summary>
            <param name="changedArea">Changed chart area.</param>
            <param name="orientation">Orientation of the changed view.</param>
            <param name="disposeBufferBitmap">Area double fuffer image must be disposed.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartPicture.AlignChartAreasAxesView(Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.AreaAlignOrientation)">
            <summary>
            Align chart areas axes views.
            </summary>
            <param name="changedArea">Changed chart area.</param>
            <param name="orientation">Orientation of the changed view.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartPicture.GetDefaultFontFamilyName">
            <summary>
            Gets default font family name.
            </summary>
            <returns>Default family name.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartPicture.LoadTemplate(System.String)">
            <summary>
            Loads chart appearance template from file.
            </summary>
            <param name="name">Template file name to load from.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartPicture.LoadTemplate(System.IO.Stream)">
            <summary>
            Loads chart appearance template from stream.
            </summary>
            <param name="stream">Template stream to load from.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartPicture.LoadTemplateData(System.String)">
            <summary>
            Loads template data from the URL.
            </summary>
            <param name="url">Template URL.</param>
            <returns>Stream with template data or null if error.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartPicture.WriteChartMapTag(System.IO.TextWriter,System.String)">
            <summary>
            Writes chart map tag into the stream.
            </summary>
            <param name="output">Html writer to output the data to.</param>
            <param name="mapName">Chart map name.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartPicture.GetDefaultTitle(System.Boolean)">
            <summary>
            Returns the default title from Titles collection.
            </summary>
            <param name="create">Create title if it doesn't exists.</param>
            <returns>Default title.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartPicture.IsToolTipsEnabled">
            <summary>
            Checks if tooltips are enabled
            </summary>
            <returns>true if tooltips enabled</returns>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartPicture.SuppressExceptions">
            <summary>
            Indicates that non-critical chart exceptions will be suppressed.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartPicture.BorderSkinAttributes">
            <summary>
            Chart border skin style.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartPicture.MapEnabled">
            <summary>
            Indicates that chart image map is enabled.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartPicture.MapAreas">
            <summary>
            Chart map areas collection.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartPicture.ChartAreas">
            <summary>
            Reference to chart area collection
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartPicture.Legends">
            <summary>
            Chart legend collection.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartPicture.Titles">
            <summary>
            Chart title collection.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartPicture.Annotations">
            <summary>
            Chart annotation collection.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartPicture.BackColor">
            <summary>
            Background color for the Chart
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartPicture.BorderColor">
            <summary>
            Border color for the Chart
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartPicture.Width">
            <summary>
            Chart width
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartPicture.Legend">
            <summary>
            Reference to the default legend object
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartPicture.DataManipulator">
            <summary>
            Series Data Manipulator
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartPicture.Height">
            <summary>
            Chart height
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartPicture.Title">
            <summary>
            Chart title
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartPicture.TitleFontColor">
            <summary>
            Font color of the title
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartPicture.TitleFont">
            <summary>
            Title font
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartPicture.BackHatchStyle">
            <summary>
            Back Hatch style
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartPicture.BackImage">
            <summary>
            Chart area background image
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartPicture.BackImageMode">
            <summary>
            Chart area background image drawing mode.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartPicture.BackImageTranspColor">
            <summary>
            Background image transparent color.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartPicture.BackImageAlign">
            <summary>
            Background image alignment used by ClampUnscale drawing mode.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartPicture.SoftShadows">
            <summary>
            Indicates that smoothing is applied while drawing shadows.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartPicture.AntiAlias">
            <summary>
            Specifies whether smoothing (antialiasing) is applied while drawing chart.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartPicture.AntiAliasing">
            <summary>
            Specifies whether smoothing (antialiasing) is applied while drawing chart.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartPicture.TextAntiAliasingQuality">
            <summary>
            Specifies the quality of text antialiasing.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartPicture.BackGradientType">
            <summary>
            A type for the background gradient
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartPicture.BackGradientEndColor">
            <summary>
            The second color which is used for a gradient
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartPicture.BorderWidth">
            <summary>
            The width of the border line
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartPicture.BorderStyle">
            <summary>
            The style of the border line
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartPicture.UI">
            <summary>
            Chart command user interface.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartImage.#ctor(System.ComponentModel.Design.IServiceContainer)">
            <summary>
            Chart public constructor.
            </summary>
            <param name="container">Service container</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartImage.SaveIntoMetafile(System.IO.Stream,System.Drawing.Imaging.EmfType)">
            <summary>
            Saves image into the metafile stream. 
            </summary>
            <param name="imageStream">Image stream.</param>
            <param name="emfType">Image stream.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartImage.GetImage(System.Single)">
            <summary>
            Create Image and draw chart picture
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartImage.GetSvgImage(System.Xml.XmlTextWriter,System.String,System.Boolean,System.Boolean)">
            <summary>
            Create Svg Image and draw chart picture
            </summary>
            <param name="svgTextWriter">Xml writer with SVG image</param>
            <param name="documentTitle">Title used for SVG Document</param>
            <param name="resizable">Relative size of Svg Image</param>
            <param name="preserveAspectRatio">The graphics stretch to fit non-uniformly to take up the entire viewport</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartImage.IsValidDataSource(System.Object)">
            <summary>
            Checks if the type of the data source is valid.
            </summary>
            <param name="dataSource">Data source object to test.</param>
            <returns>True if valid data source object.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartImage.GetDataSourceMemberNames(System.Object,System.Boolean)">
            <summary>
            Gets an list of the data source member names.
            </summary>
            <param name="dataSource">Data source object to get the members for.</param>
            <param name="usedForYValue">Indicates that member will be used for Y values.</param>
            <returns>List of member names.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartImage.DataBind">
            <summary>
            Data binds control to the data source
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartImage.DataBind(System.Collections.IEnumerable,System.Collections.ArrayList)">
            <summary>
            Data binds control to the data source
            </summary>
            <param name="dataSource">Data source to bind to.</param>
            <param name="seriesList">List of series to bind.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartImage.AlignDataPointsByAxisLabel(System.Boolean,Dundas.Olap.WebUIControls.PointsSortOrder)">
            <summary>
            Aligns data points using their axis labels.
            </summary>
            <param name="sortAxisLabels">Indicates if points should be sorted by axis labels.</param>
            <param name="sortingOrder">Sorting order.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartImage.AlignDataPointsByAxisLabel(System.Collections.ArrayList,System.Boolean,Dundas.Olap.WebUIControls.PointsSortOrder)">
            <summary>
            Aligns data points using their axis labels.
            </summary>
            <param name="seriesList">List of series to align.</param>
            <param name="sortAxisLabels">Indicates if points should be sorted by axis labels.</param>
            <param name="sortingOrder">Sorting order.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartImage.DataBindCrossTab(System.Collections.IEnumerable,System.String,System.String,System.String,System.String,System.Boolean,Dundas.Olap.WebUIControls.PointsSortOrder)">
            <summary>
            Data bind chart to the table. Series will be automatically added to the chart depending ont
            yhe number of unique values in the seriesGroupByField column of the data source.
            Data source can be the Ole(SQL)DataReader, DataView, DataSet, DataTable or DataRow.
            </summary>
            <param name="dataSource">Data source.</param>
            <param name="seriesGroupByField">Name of the field used to group data into series.</param>
            <param name="xField">Name of the field for X values.</param>
            <param name="yFields">Comma separated name(s) of the field(s) for Y value(s).</param>
            <param name="otherFields">Other point properties binding rule in format: PointProperty=Field[{Format}] [,PointProperty=Field[{Format}]]. For example: "Tooltip=Price{C1},Href=WebSiteName".</param>
            <param name="sort">Indicates that series should be sorted by group field.</param>
            <param name="sortingOrder">Series sorting order by group field.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartImage.DataBindTable(System.Collections.IEnumerable,System.String)">
            <summary>
            Automatically creates and binds series to specified data table. 
            Each column of the table becomes a Y value in a separate series.
            Series X value field may also be provided. 
            </summary>
            <param name="dataSource">Data source.</param>
            <param name="xField">Name of the field for series X values.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartImage.CheckLicense">
            <summary>
            Checks chart license at design time
            </summary>
            <returns>True if license found.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartImage.CheckLicense(System.String,System.String)">
            <summary>
            Checks chart license at design time
            </summary>
            <param name="keyName">Registry key name.</param>
            <param name="fileName">License file name.</param>
            <returns>True if license found.</returns>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartImage.DataSource">
            <summary>
            The data source used to populate series data. The Series ValueMember properties must be also set.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartImage.ImageType">
            <summary>
            Image type (Jpeg, BMP, Png, Svg, Flash)
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartImage.Compression">
            <summary>
            Image compression value
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.PaintEventHandler">
            <summary>
            Chart paint event handler delegate.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.ChartPaintEventArgs">
            <summary>
            Chart paint events arguments
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartPaintEventArgs.#ctor">
            <summary>
            Default constructor is not accessible
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartPaintEventArgs.#ctor(Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.CommonElements,Dundas.Olap.WebUIControls.ElementPosition)">
            <summary>
            Paint event arguments constructor.
            </summary>
            <param name="chartGraph">Chart graphics.</param>
            <param name="common">Common elements.</param>
            <param name="position">Position.</param>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartPaintEventArgs.ChartGraphics">
            <summary>
            Chart graphics object.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartPaintEventArgs.CommonElements">
            <summary>
            Chart common elements.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartPaintEventArgs.Position">
            <summary>
            Chart element position in relative coordinates.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartPaintEventArgs.Chart">
            <summary>
            Chart root object.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.LabelsAutoFitStyle">
            <summary>
            Axis labels aut-fitting style.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.LabelsAutoFitStyle.None">
            <summary>
            No auto-fitting.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.LabelsAutoFitStyle.IncreaseFont">
            <summary>
            Allow font size increasing.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.LabelsAutoFitStyle.DecreaseFont">
            <summary>
            Allow font size decreasing.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.LabelsAutoFitStyle.OffsetLabels">
            <summary>
            Allow using offset labels.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.LabelsAutoFitStyle.LabelsAngleStep30">
            <summary>
            Allow changing labels angle using values 0-30-60-90 degrees.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.LabelsAutoFitStyle.LabelsAngleStep45">
            <summary>
            Allow changing labels angle using values 0-45-90 degrees.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.LabelsAutoFitStyle.LabelsAngleStep90">
            <summary>
            Allow changing labels angle using values 0-90 degrees.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.LabelsAutoFitStyle.WordWrap">
            <summary>
            Allow replacing spaces with the new line character.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.AxisName">
            <summary>
            Axis Name
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.AxisName.X">
            <summary>
            Primary X Axis
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.AxisName.Y">
            <summary>
            Primary Y Axis
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.AxisName.X2">
            <summary>
            Secondary X Axis
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.AxisName.Y2">
            <summary>
            Secondary Y Axis
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.Axis">
            <summary>
            This class gives information to chart series about 
            position in the chart area and keeps all necessary 
            information about axes.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.AxisLabels">
            <summary>
            This class provides functionality for 
            drawing axis labels.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.AxisScale">
            <summary>
            This class keeps information about minimum, maximum 
            and interval values and it is responsible for setting 
            these values automatically. It also recalculates crossing
            logarithmic and reverse axis.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.ChartElement">
            <summary>
            ChartElement class represents common properties for chart 
            elements like legend, title, plotting are. It also contains 
            helper methods used in most chart elements.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartElement.MaxNumOfGridlines">
            <summary>
            Maximum number of grid lines per Axis
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartElement.plotAreaPosition">
            <summary>
            Plot area position
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartElement.common">
            <summary>
            Reference to the Common elements
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartElement.#ctor">
            <summary>
            Chart Element default constructor
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartElement.AlignIntervalStart(System.Double,System.Double,Dundas.Olap.WebUIControls.DateTimeIntervalType)">
            <summary>
            Adjust the beginnin of the first interval depending on the type and size.
            </summary>
            <param name="start">Original start point.</param>
            <param name="intervalSize">Interval size.</param>
            <param name="type">Type of the interval (Month, Year, ...).</param>
            <returns>Adjusted interval start position as double.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartElement.AlignIntervalStart(System.Double,System.Double,Dundas.Olap.WebUIControls.DateTimeIntervalType,Dundas.Olap.WebUIControls.Series)">
            <summary>
            Adjust the beginnin of the first interval depending on the type and size.
            </summary>
            <param name="start">Original start point.</param>
            <param name="intervalSize">Interval size.</param>
            <param name="type">Type of the interval (Month, Year, ...).</param>
            <param name="series">First series connected to the axis.</param>
            <returns>Adjusted interval start position as double.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartElement.AlignIntervalStart(System.Double,System.Double,Dundas.Olap.WebUIControls.DateTimeIntervalType,Dundas.Olap.WebUIControls.Series,System.Boolean)">
            <summary>
            Adjust the beginnin of the first interval depending on the type and size.
            </summary>
            <param name="start">Original start point.</param>
            <param name="intervalSize">Interval size.</param>
            <param name="type">Type of the interval (Month, Year, ...).</param>
            <param name="series">First series connected to the axis.</param>
            <param name="majorInterval">Interval is used for major gridlines or tickmarks.</param>
            <returns>Adjusted interval start position as double.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartElement.AlignIndexedIntervalStart(System.Double,System.Double,Dundas.Olap.WebUIControls.DateTimeIntervalType,Dundas.Olap.WebUIControls.Series,System.Double,Dundas.Olap.WebUIControls.DateTimeIntervalType,System.Boolean)">
            <summary>
            Aligns starting point for the indexed series.
            </summary>
            <param name="current">Current value.</param>
            <param name="interval">Interval size.</param>
            <param name="type">Type of the interval (Month, Year, ...).</param>
            <param name="series">First series connected to the axis.</param>
            <param name="intervalOffset">Offset size.</param>
            <param name="intervalOffsetType">Offset type(Month, Year, ...).</param>
            <param name="forceIntIndex">Force Integer indexed</param>
            <returns>Interval size as double.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartElement.GetIntervalSize(System.Double,System.Double,Dundas.Olap.WebUIControls.DateTimeIntervalType)">
            <summary>
            Gets interval size as double number.
            </summary>
            <param name="current">Current value.</param>
            <param name="interval">Interval size.</param>
            <param name="type">Type of the interval (Month, Year, ...).</param>
            <returns>Interval size as double.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartElement.GetIntervalSize(System.Double,System.Double,Dundas.Olap.WebUIControls.DateTimeIntervalType,Dundas.Olap.WebUIControls.Series,System.Double,Dundas.Olap.WebUIControls.DateTimeIntervalType,System.Boolean)">
            <summary>
            Gets interval size as double number.
            </summary>
            <param name="current">Current value.</param>
            <param name="interval">Interval size.</param>
            <param name="type">Type of the interval (Month, Year, ...).</param>
            <param name="series">First series connected to the axis.</param>
            <param name="intervalOffset">Offset size.</param>
            <param name="intervalOffsetType">Offset type(Month, Year, ...).</param>
            <param name="forceIntIndex">Force Integer indexed</param>
            <returns>Interval size as double.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartElement.GetIntervalSize(System.Double,System.Double,Dundas.Olap.WebUIControls.DateTimeIntervalType,Dundas.Olap.WebUIControls.Series,System.Double,Dundas.Olap.WebUIControls.DateTimeIntervalType,System.Boolean,System.Boolean)">
            <summary>
            Gets interval size as double number.
            </summary>
            <param name="current">Current value.</param>
            <param name="interval">Interval size.</param>
            <param name="type">Type of the interval (Month, Year, ...).</param>
            <param name="series">First series connected to the axis.</param>
            <param name="intervalOffset">Offset size.</param>
            <param name="intervalOffsetType">Offset type(Month, Year, ...).</param>
            <param name="forceIntIndex">Force Integer indexed</param>
            <param name="forceAbsInterval">Force Integer indexed</param>
            <returns>Interval size as double.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartElement.IndexedSeries(Dundas.Olap.WebUIControls.Series)">
            <summary>
            Check if series is indexed. XValueIndexed flag is set or all X values are zeros.
            </summary>
            <param name="series">Data series to test.</param>
            <returns>True if series is indexed.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartElement.SeriesXValuesZeros(Dundas.Olap.WebUIControls.Series)">
            <summary>
            Check if all data points in the series have X value set to 0.
            </summary>
            <param name="series">Data series to check.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartElement.IndexedSeries(System.String[])">
            <summary>
            Check if any series is indexed. XValueIndexed flag is set or all X values are zeros.
            </summary>
            <param name="series">Data series names.</param>
            <returns>True if any series is indexed.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartElement.SeriesXValuesZeros(System.String[])">
            <summary>
            Check if all data points in many series have X value set to 0.
            </summary>
            <param name="series">Data series.</param>
            <returns>True if all data points have value 0.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartElement.IntersectLineRect(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Single)">
            <summary>
            This method is used to test if horizontal or vertical lines 
            intersect with rectangle
            </summary>
            <param name="pointFirst">First point of the line</param>
            <param name="pointSecond">Second point of the line</param>
            <param name="hitPoint">Point which will be used for rectangle</param>
            <param name="size">Size which will be used for rectangle</param>
            <returns>True if line intersect rectangle</returns>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartElement.Common">
            <summary>
            Common Element 
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartElement.PlotAreaPosition">
            <summary>
            Plot Area Position
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.AxisScale.axisPosition">
            <summary>
            Axis position: Left, Right, Top Bottom
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.AxisScale.oppositeAxis">
            <summary>
            Opposite Axis for this Axis. Necessary for Crossing.		
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisScale.SetIntervalAndType(System.Double,Dundas.Olap.WebUIControls.DateTimeIntervalType)">
            <summary>
            Sets auto interval values to grids, tick marks
            and labels
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisScale.GetViewMinimum">
            <summary>
            Gets axis data view minimum position.
            </summary>
            <returns>Axis data view minimum position.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisScale.GetViewMaximum">
            <summary>
            Gets axis data view minimum position.
            </summary>
            <returns>Axis data view minimum position.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisScale.GetPosition(System.Double)">
            <summary>
            This function converts axis value to relative position (0-100%). 
            If an axis has logarithmic scale, value is converted to a linear scale.
            </summary>
            <param name="axisValue">Value from axis.</param>
            <returns>Relative position (0-100%).</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisScale.ValueToPosition(System.Double)">
            <summary>
            This function converts an axis value to relative position (0-100%). 
            If an axis has logarithmic scale, value is converted to a linear scale.
            </summary>
            <param name="axisValue">Axis value.</param>
            <returns>Relative position (0-100%).</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisScale.ValueToPixelPosition(System.Double)">
            <summary>
            This function converts an axis value to pixel position. 
            If an axis has logarithmic scale, value is converted to a linear scale.
            </summary>
            <param name="axisValue">Value from axis.</param>
            <returns>Pixel position.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisScale.PositionToValue(System.Double)">
            <summary>
            This function converts relative position to an axis value.
            If an axis has logarithmic scale, value is converted to a linear scale.
            </summary>
            <param name="position">Relative position (0-100%).</param>
            <returns>Axis value.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisScale.PositionToValue(System.Double,System.Boolean)">
            <summary>
            This function converts relative position to an axis value.
            If an axis has logarithmic scale, value is converted to a linear scale.
            </summary>
            <param name="position">Relative position (0-100%).</param>
            <param name="validateInput">Indicates if input value range should be checked.</param>
            <returns>Axis value.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisScale.PixelPositionToValue(System.Double)">
            <summary>
            This function converts pixel position to an axis value.
            If an axis has logarithmic scale, value is converted to a linear scale.
            </summary>
            <param name="position">Pixel position.</param>
            <returns>Axis value.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisScale.PixelPositionToValue(System.Double,System.Boolean)">
            <summary>
            This function converts pixel position to an axis value.
            If an axis has logarithmic scale, value is converted to a linear scale.
            </summary>
            <param name="position">Pixel position.</param>
            <param name="validate">True if position argument should be validated to be in range from 0 to 100%.</param>
            <returns>Axis value.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisScale.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisScale.SetAxisPosition">
            <summary>
            Sets axis position. Axis position depends 
            on crossing and reverse value.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisScale.SetTempAxisOffset">
            <summary>
            Sets temporary offset value.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisScale.ResetTempAxisOffset">
            <summary>
            Resets temporary offset value.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisScale.RoundedValues(System.Double,System.Boolean,System.Boolean,System.Boolean,System.Double@,System.Double@)">
            <summary>
            This function will create auto maximum and minimum values 
            using the interval. This function will make a gap between 
            data points and border of the chart area.
            </summary>
            <param name="inter">Interval</param>
            <param name="shouldStartFromZero">True if minimum scale value should start from zero.</param>
            <param name="autoMax">Maximum is auto</param>
            <param name="autoMin">Minimum is auto</param>
            <param name="min">Minimum value</param>
            <param name="max">Maximum value</param>
            <returns>Interval</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisScale.CalcInterval(System.Double)">
            <summary>
            Recalculates an intelligent interval from real interval.
            </summary>
            <param name="diff">Real interval.</param>
            <returns>Inteligent interval.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisScale.CalcInterval(System.Double,System.Double)">
            <summary>
            Recalculates a intelligent interval from real interval 
            obtained from maximum and minimum values
            </summary>
            <param name="min">Minimum</param>
            <param name="max">Maximum</param>
            <returns>Auto Interval</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisScale.CalcInterval(System.Double,System.Double,System.Boolean,Dundas.Olap.WebUIControls.DateTimeIntervalType@,Dundas.Olap.WebUIControls.ChartValueTypes)">
            <summary>
            Recalculates a intelligent interval from real interval 
            obtained from maximum, minimum and date type if 
            the values is date-time value.
            </summary>
            <param name="min">Minimum value.</param>
            <param name="max">Maximum value.</param>
            <param name="date">True if date.</param>
            <param name="type">Date time interval type.</param>
            <param name="valuesType">Type of date-time values.</param>
            <returns>Auto Interval.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisScale.CalcYearInterval(System.Double)">
            <summary>
            Recalculates a intelligent interval for years
            </summary>
            <param name="years">Number of years</param>
            <returns>Interval in years</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisScale.GetNumOfUnits(System.Double,System.Double,Dundas.Olap.WebUIControls.DateTimeIntervalType)">
            <summary>
            This method returns the number of units 
            between min and max.
            </summary>
            <param name="min">Minimum.</param>
            <param name="max">Maximum.</param>
            <param name="type">Date type.</param>
            <returns>Number of units.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisScale.GetDateTimeType">
            <summary>
            This method checks if value type is date-time.
            </summary>
            <returns>Date-time type or Auto.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisScale.GetCrossing">
            <summary>
            This method removes "Auto", "min", "max" from crossing
            value and creates a double value.
            </summary>
            <returns>Crossing value</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisScale.SetAutoMinimum(System.Double)">
            <summary>
            Set auto minimum number. The minimum number 
            which was sent to this function will be used to 
            estimate a rounded minimum.
            </summary>
            <param name="min"> This value is a recommendation for the minimum value. </param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisScale.SetAutoMaximum(System.Double)">
            <summary>
            Set auto maximum number. The maximum number 
            which was sent to this function will be used to 
            estimate a rounded maximum.
            </summary>
            <param name="max">This value is a recommendation for the maximum value.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisScale.GetOppositeAxis">
            <summary>
            Find opposite axis of this axis.  What is opposite 
            axis depend on first series in chart area and primary 
            and secondary X and Y axes for the first series.
            </summary>
            <returns>Opposite axis</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisScale.Invalidate">
            <summary>
            Invalidate chart are the axis belong to
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisScale.GetLinearPosition(System.Double)">
            <summary>
            This function converts Values from Axes to 
            linear relative positions.
            </summary>
            <param name="axisValue">Value from axis.</param>
            <returns>Relative position.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisScale.EstimateAxis">
            <summary>
            This function recalculates minimum maximum and interval. 
            The function uses current values for minimum and maximum to 
            find rounding values. If the value from the data source for the 
            maximum value is 376.5 this function will return 380. This function 
            also set interval type for date
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisScale.EstimateAxis(System.Double@,System.Double@,System.Boolean,System.Boolean)">
            <summary>
            This function recalculates minimum maximum and interval. 
            The function uses current values for minimum and maximum to 
            find rounding values. If the value from the data source for the 
            maximum value is 376.5 this function will return 380. This function 
            also set interval type for date
            </summary>
            <param name="minimum">Minimum</param>
            <param name="maximum">Maximum</param>
            <param name="autoMaximum">Maximum value is Auto</param>
            <param name="autoMinimum">Minimum value is Auto</param>
            <returns>Interval</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisScale.EstimateLogarithmicAxis(System.Double@,System.Double@,System.Double,System.Boolean,System.Boolean)">
            <summary>
            This function recalculates minimum maximum and interval for 
            logaritmic axis. The function uses current values for minimum and 
            maximum to find new rounding values.
            </summary>
            <param name="minimum">Current Minimum value</param>
            <param name="maximum">Current Maximum value</param>
            <param name="crossing">Crossing value</param>
            <param name="autoMaximum">Maximum value is Auto</param>
            <param name="autoMinimum">Minimum value is Auto</param>
            <returns>Interval</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisScale.EstimateDateAxis(System.Double@,System.Double@,System.Double,System.Boolean,System.Boolean,Dundas.Olap.WebUIControls.ChartValueTypes)">
            <summary>
            This function recalculates minimum maximum and interval for 
            Date axis. The function uses current values for minimum and 
            maximum to find new rounding values.
            </summary>
            <param name="minimum">Current Minimum value</param>
            <param name="maximum">Current Maximum value</param>
            <param name="crossing">Crossing value</param>
            <param name="autoMaximum">Maximum value is Auto</param>
            <param name="autoMinimum">Minimum value is Auto</param>
            <param name="valuesType">Type of date-time values.</param>
            <returns>Interval</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisScale.EstimateNumberAxis(System.Double@,System.Double@,System.Boolean,System.Int32,System.Double,System.Boolean,System.Boolean)">
            <summary>
            This function recalculates minimum maximum and interval for 
            number type axis. The function uses current values for minimum and 
            maximum to find new rounding values.
            </summary>
            <param name="minimum">Current Minimum value</param>
            <param name="maximum">Current Maximum value</param>
            <param name="shouldStartFromZero">Should start from zero flag.</param>
            <param name="preferredNumberOfIntervals">Preferred number of intervals. Can be set to zero for dynamic mode.</param>
            <param name="crossing">Crossing value</param>
            <param name="autoMaximum">Maximum value is Auto</param>
            <param name="autoMinimum">Minimum value is Auto</param>
            <returns>Interval</returns>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.AxisScale.AxisPosition">
            <summary>
            Axis position
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.AxisScale.IntervalAutoMode">
            <summary>
            Determines if fixed number of intervals used on the axis or
            number of intervals depends on the axis size.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.AxisScale.Reverse">
            <summary>
            The values on the axis are in reverse order. 
            The direction of values on the axis is flipped.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.AxisScale.StartFromZero">
            <summary>
            If true, this property will set auto minimum value to zero 
            if all data point values are positive. Otherwise, minimum 
            value from data points will be used.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.AxisScale.Margin">
            <summary>
            If true, a space is added between the first and the last data 
            points and the border of chart area.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.AxisScale.InternalIntervalType">
            <summary>
            Date and time interval type.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.AxisScale.SetInterval">
            <summary>
            Sets auto interval values to grids, tick marks
            and labels
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.AxisScale.Maximum">
            <summary>
            Maximum axis value
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.AxisScale.Minimum">
            <summary>
            The Minimum Axis value
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.AxisScale.Crossing">
            <summary>
            Point where axis is crossed by another axis.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.AxisScale.Enabled">
            <summary>
            Enables or disables the axis.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.AxisScale.Logarithmic">
            <summary>
            Logarithmic scale recalculate the values shown in the Minimum, Maximum, 
            boxes as powers of LogarithmBase for the value axis, based on the range of data. 
            No zeros or negative data values are permitted on logarithmic charts. 
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.AxisScale.LogarithmBase">
            <summary>
            Base of the logarithm used in logarithmic scale. 
            By default this value is 10.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.AxisScale.ScaleBreakStyle">
            <summary>
            Axis automatic scale breaks style.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.AxisScale.ScaleSegments">
            <summary>
            Axis scale segment collection.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.AxisScale.View">
            <summary>
            Axis data view settings.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.AxisScale.ScrollBar">
            <summary>
            Axis scroll bar settings.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisLabels.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisLabels.IsCustomGridLines">
            <summary>
            Indicates that custom grid lines should be painted.
            </summary>
            <returns>Indicates that custom grid lines should be painted.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisLabels.IsCustomTickMarks">
            <summary>
            Indicates that custom tick marks should be painted.
            </summary>
            <returns>Indicates that custom tick marks should be painted.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisLabels.FillLabels(System.Boolean)">
            <summary>
            Fill labels from data from data manager or 
            from axis scale.
            </summary>
            <param name="removeFirstRow">True if first row of autogenerated labels must be removed.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisLabels.GetPointLabel(System.Collections.ArrayList,System.Double,System.Boolean,System.Boolean)">
            <summary>
            This method checks if there is a data point which has value X equal 
            to valuePosition, and returns label from data point if such value exist. 
            If data point with this value not exists empty string will be returned. 
            If all data points have X value zero, index is used instead of X value.
            </summary>
            <param name="series">Data series</param>
            <param name="valuePosition">A value which should be found in data points x values</param>
            <param name="nonZeroXValues">Series X values are not zeros.</param>
            <param name="indexedSeries">Series is indexed. All X values are zeros or XValueIndexed flag set.</param>
            <returns>Label</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisLabels.GetPointLabel(Dundas.Olap.WebUIControls.Series,System.Double,System.Boolean,System.Boolean)">
            <summary>
            This method checks if there is a data point which has value X equal 
            to valuePosition, and returns label from data point if such value exist. 
            If data point with this value not exists empty string will be returned. 
            If all data points have X value zero, index is used instead of X value.
            </summary>
            <param name="series">Data series</param>
            <param name="valuePosition">A value which should be found in data points x values</param>
            <param name="nonZeroXValues">Series X values are not zeros.</param>
            <param name="indexedSeries">Series is indexed. All X values are zeros or XValueIndexed flag set.</param>
            <returns>Label</returns>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.AxisLabels.LabelStyle">
            <summary>
            Label object
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.AxisLabels.CustomLabels">
            <summary>
            Custom labels collection.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Axis.interlaced">
            <summary>
            Indicates that interlaced strip lines will be displayed for the axis.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Axis.interlacedColor">
            <summary>
            Color used to draw interlaced strip lines for the axis.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Axis.intervalOffset">
            <summary>
            Axis interval offset.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Axis.interval">
            <summary>
            Axis interval.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Axis.intervalType">
            <summary>
            Axis interval units type.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Axis.intervalOffsetType">
            <summary>
            Axis interval offset units type.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Axis.labelsAutoFitMinFontSize">
            <summary>
            Minimum font size that can be used by the labels auto-fitting algorithm.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Axis.labelsAutoFitMaxFontSize">
            <summary>
            Maximum font size that can be used by the labels auto-fitting algorithm.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Axis.toolTip">
            <summary>
            Axis tooltip
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Axis.href">
            <summary>
            Axis HREF
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Axis.groupingLabelForcedSizes">
            <summary>
            An array of grouping labels sizes. Forced when using in AJAX scrolling
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Axis.totlaGroupingLabelsForcedSize">
            <summary>
            Size of all grouping labels. Forced when using in AJAX scrolling
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Axis.totlaGroupingLabelsForcedSizeAdjustment">
            <summary>
            Grouping labels position adjustment. Forced when using in AJAX scrolling
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Axis.labelForcedSize">
            <summary>
            Total labels size. Forced when using in AJAX scrolling
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Axis.mapAreaAttributes">
            <summary>
            Axis map area attributes
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Axis.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Axis.Initialize(Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.AxisName)">
            <summary>
            Initialize axis class
            </summary>
            <param name="chartArea">Chart area that the axis belongs.</param>
            <param name="axisType">Axis type.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Axis.SetName">
            <summary>
            Set Axis Name
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Axis.PrePaint(Dundas.Olap.WebUIControls.ChartGraphics)">
            <summary>
            Paint Axis elements on the back of the 3D scene.
            </summary>
            <param name="graph">Reference to the Chart Graphics object</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Axis.Paint(Dundas.Olap.WebUIControls.ChartGraphics)">
            <summary>
            Paint Axis
            </summary>
            <param name="graph">Reference to the Chart Graphics object</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Axis.PaintOnSegmentedScalePassOne(Dundas.Olap.WebUIControls.ChartGraphics)">
            <summary>
            Paint Axis element when segmented axis scale feature is used.
            </summary>
            <param name="graph">Reference to the Chart Graphics object</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Axis.PaintOnSegmentedScalePassTwo(Dundas.Olap.WebUIControls.ChartGraphics)">
            <summary>
            Paint Axis element when segmented axis scale feature is used.
            </summary>
            <param name="graph">Reference to the Chart Graphics object</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Axis.DrawAxisTitle(Dundas.Olap.WebUIControls.ChartGraphics)">
            <summary>
            Draw axis title
            </summary>
            <param name="graph">Reference to the Chart Graphics object</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Axis.DrawRadialLine(System.Object,Dundas.Olap.WebUIControls.ChartGraphics,System.Drawing.Color,System.Int32,Dundas.Olap.WebUIControls.ChartDashStyle,System.Double)">
            <summary>
            Draws a radial line in circular chart area.
            </summary>
            <param name="obj">Object requesting the painting.</param>
            <param name="graph">Graphics path.</param>
            <param name="color">Line color.</param>
            <param name="width">Line width.</param>
            <param name="style">Line style.</param>
            <param name="position">X axis circular position.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Axis.DrawCircularLine(System.Object,Dundas.Olap.WebUIControls.ChartGraphics,System.Drawing.Color,System.Int32,Dundas.Olap.WebUIControls.ChartDashStyle,System.Single)">
            <summary>
            Draws a circular line in circular chart area.
            </summary>
            <param name="obj">Object requesting the painting.</param>
            <param name="graph">Graphics path.</param>
            <param name="color">Line color.</param>
            <param name="width">Line width.</param>
            <param name="style">Line style.</param>
            <param name="position">Line position.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Axis.DrawAxis3DTitle(Dundas.Olap.WebUIControls.ChartGraphics)">
            <summary>
            Draw axis title in 3D.
            </summary>
            <param name="graph">Reference to the Chart Graphics object</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Axis.DrawAxisLine(Dundas.Olap.WebUIControls.ChartGraphics,System.Boolean)">
            <summary>
            Draw the axis lines
            </summary>
            <param name="graph">Reference to the Chart Graphics</param>
            <param name="backElements">Back elements of the axis should be drawn in 3D scene.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Axis.DrawAxisLine(Dundas.Olap.WebUIControls.ChartGraphics,System.Boolean,System.Boolean)">
            <summary>
            Select Axis line
            </summary>
            <param name="graph">Reference to the Chart Graphics</param>
            <param name="selectionMode">Selection Mode</param>
            <param name="backElements">Back elements of the axis should be drawn in 3D scene.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Axis.InitAnimation(Dundas.Olap.WebUIControls.ChartGraphics,System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Initialize animation for axis line and arrow
            </summary>
            <param name="graph">Chart Graphics object</param>
            <param name="firstPoint">First point for axis line</param>
            <param name="secondPoint">Second point for axis line</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Axis.Draw3DAxisLine(Dundas.Olap.WebUIControls.ChartGraphics,System.Drawing.PointF,System.Drawing.PointF,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Draws axis line in 3D space.
            </summary>
            <param name="graph">Reference to the Chart Graphics object.</param>
            <param name="point1">First line point.</param>
            <param name="point2">Second line point.</param>
            <param name="horizontal">Indicates that tick mark line is horisontal.</param>
            <param name="backElements">Only back elements of axis should be drawn.</param>
            <param name="selectionMode">Selection mode is active</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Axis.GetMarksZPosition(System.Boolean@)">
            <summary>
            Gets Z position of axis tick marks and labels.
            </summary>
            <param name="axisOnEdge">Returns true if axis is on the edge.</param>
            <returns>Marks Z position.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Axis.PaintGrids(Dundas.Olap.WebUIControls.ChartGraphics)">
            <summary>
            Paint Axis Grid lines
            </summary>
            <param name="graph">Reference to the Chart Graphics object</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Axis.PaintGrids(Dundas.Olap.WebUIControls.ChartGraphics,System.Boolean,System.Int32,System.Int32,System.Object@)">
            <summary>
            Paint Axis Grid lines or 
            hit test function for grid lines
            </summary>
            <param name="graph">Reference to the Chart Graphics object</param>
            <param name="selectionMode">The selection mode is active</param>
            <param name="x">X coordinate</param>
            <param name="y">Y coordinate</param>
            <param name="obj">Returns selected grid object</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Axis.PaintStrips(Dundas.Olap.WebUIControls.ChartGraphics,System.Boolean)">
            <summary>
            Paint Axis Strip lines
            </summary>
            <param name="graph">Reference to the Chart Graphics object</param>
            <param name="drawLinesOnly">Indicates if Lines or Stripes should be drawn.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Axis.PaintStrips(Dundas.Olap.WebUIControls.ChartGraphics,System.Boolean,System.Int32,System.Int32,System.Object@,System.Boolean)">
            <summary>
            Paint Axis Strip lines or 
            hit test function for Strip lines
            </summary>
            <param name="graph">Reference to the Chart Graphics object</param>
            <param name="selectionMode">The selection mode is active</param>
            <param name="x">X coordinate</param>
            <param name="y">Y coordinate</param>
            <param name="obj">Returns selected grid object</param>
            <param name="drawLinesOnly">Indicates if Lines or Stripes should be drawn.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Axis.AddInterlacedStrip">
            <summary>
            Helper function which adds temp. strip lines into the collection
            to display interlaced lines in axis.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Axis.RoundAxisValues">
            <summary>
            This function will create auto maximum and minimum values 
            using interval on the X axis. This function will make a gap between 
            data points and border of the chart area.
            Note that this method can only be called for primary or secondary X axes.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Axis.ReCalc(Dundas.Olap.WebUIControls.ElementPosition)">
            <summary>
            Recalculate axis.
            </summary>
            <param name="position">Ploatting area position.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Axis.StoreAxisValues">
            <summary>
            This method store Axis values as minimum, maximum, 
            crossing, etc. Axis auto algorithm changes these 
            values and they have to be set to default values 
            after painting.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Axis.ResetAxisValues">
            <summary>
            This method reset Axis values as minimum, maximum, 
            crossing, etc. Axis auto algorithm changes these 
            values and they have to be set to default values 
            after painting.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Axis.ResetAutoValues">
            <summary>
            Reset auto calculated axis values
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Axis.Resize(Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.ElementPosition,System.Drawing.RectangleF,System.Single,System.Boolean)">
            <summary>
            Calculate size of the axis elements like title, labels and marks.
            </summary>
            <param name="chartGraph">Chart graphics object.</param>
            <param name="chartAreaPosition">The Chart area position.</param>
            <param name="plotArea">Plotting area size.</param>
            <param name="axesNumber">Number of axis of the same orientation.</param>
            <param name="autoPlotPosition">Indicates that inner plot position is automatic.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Axis.AdjustIntervalToFitLabels(Dundas.Olap.WebUIControls.ChartGraphics,System.Boolean,System.Boolean)">
            <summary>
            Calculates axis interval so that labels will fit most efficiently.
            </summary>
            <param name="chartGraph">Chart graphics.</param>
            <param name="autoPlotPosition">True if plot position is auto calculated.</param>
            <param name="onlyIncreaseInterval">True if interval should only be increased.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Axis.IsVariableLabelCountModeEnabled">
            <summary>
            Checks if variable count labels mode is enabled.
            </summary>
            <returns>True if variable count labels mode is enabled.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Axis.AdjustIntervalToFitLabels(Dundas.Olap.WebUIControls.ChartGraphics,System.Boolean,Dundas.Olap.WebUIControls.AxisScaleSegment,System.Boolean)">
            <summary>
            Calculates axis interval so that labels will fit most efficiently.
            </summary>
            <param name="chartGraph">Chart graphics.</param>
            <param name="autoPlotPosition">True if plot position is auto calculated.</param>
            <param name="axisScaleSegment">Axis scale segment to process.</param>
            <param name="onlyIncreaseInterval">True if interval should only be increased.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Axis.ReduceLabelInterval(System.Double,System.Double,Dundas.Olap.WebUIControls.AxisScaleSegment,Dundas.Olap.WebUIControls.DateTimeIntervalType@)">
            <summary>
            Reduces current label interval, so that more labels can fit.
            </summary>
            <param name="oldInterval">An interval to reduce.</param>
            <param name="minInterval">Minimum interval size.</param>
            <param name="axisScaleSegment">Current axis scale segment or NULL.</param>
            <param name="intervalType">Interval type.</param>
            <returns>New interval or 0.0 if interval cannot be reduced.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Axis.IncreaseLabelInterval(System.Double,Dundas.Olap.WebUIControls.AxisScaleSegment,Dundas.Olap.WebUIControls.DateTimeIntervalType@)">
            <summary>
            Increases current label interval, so that less labels fit.
            </summary>
            <param name="oldInterval">An interval to increase.</param>
            <param name="axisScaleSegment">Current axis scale segment or NULL.</param>
            <param name="intervalType">Interval type.</param>
            <returns>New interval or 0.0 if interval cannot be increased.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Axis.GetMaxLineLength(System.String)">
            <summary>
            Gets maximum line length of the text separated with new line character.
            </summary>
            <param name="text">Text to get the line length for.</param>
            <returns>Line length.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Axis.WordWrapLongestLabel(Dundas.Olap.WebUIControls.CustomLabelsCollection)">
            <summary>
            Finds the longest labels with the space and inserts the new line character.
            </summary>
            <param name="labels">Labels collection.</param>
            <returns>True if collection was modified.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Axis.GetCircularAxisLabelsAutoFitFont(Dundas.Olap.WebUIControls.ChartGraphics,System.Collections.ArrayList,Dundas.Olap.WebUIControls.CircularAxisLabelsStyle,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Single)">
            <summary>
            Calculates the auto-fit font for the circular chart area axis labels.
            </summary>
            <param name="graph">Chart graphics object.</param>
            <param name="axisList">List of sector labels.</param>
            <param name="labelsStyle">Circular lables style.</param>
            <param name="plotAreaRectAbs">Plotting area position.</param>
            <param name="areaRectAbs">Chart area position.</param>
            <param name="labelsSizeEstimate">Estimated size of labels.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Axis.CheckCircularLabelsFit(Dundas.Olap.WebUIControls.ChartGraphics,System.Collections.ArrayList,Dundas.Olap.WebUIControls.CircularAxisLabelsStyle,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Single)">
            <summary>
            Checks id circular axis labels fits using current auto-fit font.
            </summary>
            <param name="graph">Chart graphics object.</param>
            <param name="axisList">List of sector labels.</param>
            <param name="labelsStyle">Circular lables style.</param>
            <param name="plotAreaRectAbs">Plotting area position.</param>
            <param name="areaRectAbs">Chart area position.</param>
            <param name="labelsSizeEstimate">Estimated size of labels.</param>
            <returns>True if labels fit.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Axis.AdjustLabelFontAtSecondPass(Dundas.Olap.WebUIControls.ChartGraphics,System.Boolean)">
            <summary>
            Adjust labels font size at secon pass of auto fitting.
            </summary>
            <param name="chartGraph">Chart graphics object.</param>
            <param name="autoPlotPosition">Indicates that inner plot position is automatic.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Axis.GetLogValue(System.Double)">
            <summary>
            Check if axis is logarithmic
            </summary>
            <param name="yValue">Y value from data</param>
            <returns>Corected Y value if axis is logarithmic</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Axis.CheckLabelsFit(Dundas.Olap.WebUIControls.ChartGraphics,System.Single,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Checks if labels fit using current auto fit attributes
            </summary>
            <param name="chartGraph">Chart graphics object.</param>
            <param name="otherElementsSize">Axis title and marks size.</param>
            <param name="autoPlotPosition">Indicates auto calculation of plotting area.</param>
            <param name="checkLabelsFirstRowOnly">Labels fit is checked during the second pass.</param>
            <param name="secondPass">Indicates second pass of labels fitting.</param>
            <returns>True if labels fit.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Axis.CheckLabelsFit(Dundas.Olap.WebUIControls.ChartGraphics,System.Single,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Collections.ArrayList)">
            <summary>
            Checks if labels fit using current auto fit attributes
            </summary>
            <param name="chartGraph">Chart graphics object.</param>
            <param name="otherElementsSize">Axis title and marks size.</param>
            <param name="autoPlotPosition">Indicates auto calculation of plotting area.</param>
            <param name="checkLabelsFirstRowOnly">Labels fit is checked during the second pass.</param>
            <param name="secondPass">Indicates second pass of labels fitting.</param>
            <param name="checkWidth">True if width should be checked.</param>
            <param name="checkHeight">True if height should be checked.</param>
            <param name="labelPositions">Returns an array of label positions.</param>
            <returns>True if labels fit.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Axis.GetRequiredLabelSize(Dundas.Olap.WebUIControls.ChartGraphics,System.Single,System.Single@)">
            <summary>
            Calculates the best size for labels area.
            </summary>
            <param name="chartGraph">Chart graphics object.</param>
            <param name="maxLabelSize">Maximum labels area size.</param>
            <param name="resultSize">Label size without angle = 0.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Axis.GetGroupLablesToatalSize">
            <summary>
            Gets total size of all grouping labels.
            </summary>
            <returns>Total size of all grouping labels.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Axis.GetGroupLabelLevelCount">
            <summary>
            Gets number of levels of the grouping labels.
            </summary>
            <returns>Number of levels of the grouping labels.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Axis.GetRequiredGroupLabelSize(Dundas.Olap.WebUIControls.ChartGraphics,System.Single)">
            <summary>
            Calculates the best size for axis labels for all rows except first one (grouping labels).
            </summary>
            <param name="chartGraph">Chart graphics object.</param>
            <param name="maxLabelSize">Maximum labels area size.</param>
            <returns>Array of grouping label sizes for each level.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Axis.GetSubAxis(System.String)">
            <summary>
            Gets main or sub axis associated with this axis.
            </summary>
            <param name="subAxisName">Sub axis name or empty string to get the main axis.</param>
            <returns>Main or sub axis of the main axis.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Axis.IsMarksNextToAxis">
            <summary>
            Checks if axis marks should be next to the axis
            </summary>
            <returns>true if marks are next to axis.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Axis.GetAxisIntervalType">
            <summary>
            Gets axis auto interval type.
            </summary>
            <returns>Axis interval type.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Axis.GetAxisValuesType">
            <summary>
            Gets axis values type depending on the series attached
            </summary>
            <returns>Axis values type.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Axis.GetArrowSize(Dundas.Olap.WebUIControls.ArrowOrientation@)">
            <summary>
            Returns Arrow size
            </summary>
            <param name="arrowOrientation">Return arrow orientation.</param>
            <returns>Size of arrow</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Axis.IsArrowInAxis(Dundas.Olap.WebUIControls.ArrowOrientation,Dundas.Olap.WebUIControls.AxisPosition)">
            <summary>
            Checks if arrow with specified orientation will require space
            in axis with specified position
            </summary>
            <param name="arrowOrientation">Arrow orientation.</param>
            <param name="axisPosition">Axis position.</param>
            <returns>True if arrow will be drawn in axis space</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Axis.GetPixelInterval(System.Double)">
            <summary>
            This function converts real Interval to 
            absolute Interval
            </summary>
            <param name="realInterval">A interval represented as double value</param>
            <returns>A interval represented in pixels</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Axis.IsAxisOnAreaEdge">
            <summary>
            Find if axis is on the edge of the chart plot area
            </summary>
            <returns>Axis is on the edge of the plot area.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Axis.GetAxisPosition">
            <summary>
            Find axis position using crossing value.
            </summary>
            <returns>Relative position</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Axis.GetAxisPosition(System.Boolean)">
            <summary>
            Find axis position using crossing value.
            </summary>
            <param name="ignoreCrossing">Axis crossing should be ignored.</param>
            <returns>Relative position</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Axis.GetAxisProjectionAngle">
            <summary>
            Returns angle between 2D axis line and it's 3D transformed projection.
            </summary>
            <returns>Axis projection angle.</returns>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Axis.SubAxisName">
            <summary>
            Returns sub-axis name.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Axis.IsSubAxis">
            <summary>
            Indicates if this axis object present the main or sub axis.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Axis.SubAxes">
            <summary>
            Sub-axes collection.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Axis.Interlaced">
            <summary>
            Indicates that interlaced strip lines will be displayed for the axis.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Axis.InterlacedColor">
            <summary>
            Color used to draw interlaced strip lines for the axis.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Axis.Name">
            <summary>
            Axis name. For internal use only!
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Axis.Type">
            <summary>
            Axis name. For internal use only!
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Axis.Arrows">
            <summary>
            Axis arrows
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Axis.MajorGrid">
            <summary>
            Major Gridlines
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Axis.MinorGrid">
            <summary>
            Minor Gridlines
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Axis.MajorTickMark">
            <summary>
            Major Tick Mark
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Axis.MinorTickMark">
            <summary>
            Minor Tick Mark
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Axis.LabelsAutoFit">
            <summary>
            Set Auto Labels formating
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Axis.LabelsAutoFitMinFontSize">
            <summary>
            Minimum font size that can be used by the labels auto-fitting algorithm.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Axis.LabelsAutoFitMaxFontSize">
            <summary>
            Maximum font size that can be used by the labels auto-fitting algorithm.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Axis.LabelsAutoFitStyle">
            <summary>
            Labels auto-fit style. LabelsAutoFit must be set to true.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Axis.MarksNextToAxis">
            <summary>
            Tick marks and labels move with axis when 
            the crossing value is changed.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Axis.Title">
            <summary>
            Axis Title
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Axis.TitleColor">
            <summary>
            Axis Title Color
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Axis.TitleAlignment">
            <summary>
            Axis Title Alignment
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Axis.TitleAlwaysHorizontal">
            <summary>
            Indicates that axis title is always drawn horizontally on the left and right chart axes.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Axis.TitleFont">
            <summary>
            Axis Title Font
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Axis.LineColor">
            <summary>
            Axis Line Color
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Axis.LineWidth">
            <summary>
            Axis Line Width
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Axis.LineStyle">
            <summary>
            Axis Line Dash Style
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Axis.StripLines">
            <summary>
            Custom labels collection.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Axis.ToolTip">
            <summary>
            Tooltip of the axis.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Axis.Href">
            <summary>
            URL target of the axis.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Axis.MapAreaAttributes">
            <summary>
            Other attributes of the axis map area.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Axis.Interval">
            <summary>
            Axis interval size.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Axis.IntervalOffset">
            <summary>
            Axis interval offset.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Axis.IntervalType">
            <summary>
            Axis interval type.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Axis.IntervalOffsetType">
            <summary>
            Axis interval offset type.
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.Design.ElementPositionConverter">
            <summary>
            Element position converter.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.ElementPositionConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Overrides the CanConvertFrom method of TypeConverter.
            </summary>
            <param name="context">Descriptor context.</param>
            <param name="sourceType">Convertion source type.</param>
            <returns>Indicates if convertion is possible.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.ElementPositionConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Overrides the CanConvertTo method of TypeConverter.
            </summary>
            <param name="context">Descriptor context.</param>
            <param name="destinationType">Destination type.</param>
            <returns>Indicates if convertion is possible.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.ElementPositionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Overrides the ConvertTo method of TypeConverter.
            </summary>
            <param name="context">Descriptor context.</param>
            <param name="culture">Culture information.</param>
            <param name="value">Value to convert.</param>
            <param name="destinationType">Convertion destination type.</param>
            <returns>Converted object.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.ElementPositionConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Overrides the ConvertFrom method of TypeConverter.
            Converts from string with comma separated values.
            </summary>
            <param name="context">Descriptor context.</param>
            <param name="culture">Culture information.</param>
            <param name="value">Value to convert from.</param>
            <returns>Indicates if convertion is possible.</returns>
        </member>
        <member name="T:Dundas.Charting.WebControl.Design.ColorPaletteEditor">
            <summary>
            Type editor for the palette properties.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.ColorPaletteEditor.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Override this function to support palette colors drawing
            </summary>
            <param name="context">Descriptor context.</param>
            <returns>Can paint values.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.ColorPaletteEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)">
            <summary>
            Override this function to support palette colors drawing
            </summary>
            <param name="e">Paint value event arguments.</param>
        </member>
        <member name="T:Dundas.Charting.WebControl.ChartTypes.HundredPercentStackedAreaChart">
            <summary>
            HundredPercentStackedAreaChart class extends StackedAreaChart class
            by providing its own algorithm for calculating series data point
            Y values. It makes sure that total Y value of all data points in a
            single cluster from all series adds up to 100%.
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.ChartTypes.StackedAreaChart">
            <summary>
            StackedAreaChart class extends AreaChart so that chart series are
            positioned on top of each other.
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.ChartTypes.AreaChart">
            <summary>
            AreaChart class provides 2D/3D drawing and hit testing 
            functionality for the Area and SplineArea charts. The 
            only difference of the SplineArea chart is the default 
            tension of the line.
            
            SplineChart base class provides most of the functionality 
            like drawing lines, labels and markers.
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.ChartTypes.SplineChart">
            <summary>
            SplineChart class extends the LineChart class by 
            providing a different initial tension for the line.
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.ChartTypes.LineChart">
            <summary>
            LineChart class provides 2D/3D drawing and hit testing 
            functionality for the Line and Spline charts. The only 
            difference of the Spline chart is the default tension 
            of the line.
            
            PointChart base class provides functionality realted
            to drawing labels and markers.
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.ChartTypes.PointChart">
            <summary>
            PointChart class provides 2D/3D drawing and hit testing 
            functionality for the Point chart.
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.ChartTypes.IChartType">
            <summary>
            IChartType interface must be implemented for any standard or custom 
            chart type displayed in the chart control. This interface defines 
            properties which provide information on chart type behaviour including 
            how many Y values supported, is it a stacked chart type, how it 
            interacts with axes and much more.
            
            IChartType interface methods define how to draw series data point, 
            calculate Y values and process SmartLabels.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.IChartType.GetImage(Dundas.Charting.WebControl.ChartTypes.ChartTypeRegistry)">
            <summary>
            Gets chart type image
            </summary>
            <param name="registry">Chart types registry object.</param>
            <returns>Chart type image.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.IChartType.GetLegendImageStyle(Dundas.Olap.WebUIControls.Series)">
            <summary>
            How to draw series/points in legend:
            Filled rectangle, Line or Marker
            </summary>
            <param name="series">Legend item series.</param>
            <returns>Legend item style.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.IChartType.Paint(Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.CommonElements,Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.Series)">
            <summary>
            Draw chart on specified chart graphics.
            </summary>
            <param name="graph">Chart grahhics object.</param>
            <param name="common">Common elements.</param>
            <param name="area">Chart area to draw on.</param>
            <param name="seriesToDraw">Chart series to draw.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.IChartType.GetYValue(Dundas.Olap.WebUIControls.CommonElements,Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.Series,Dundas.Olap.WebUIControls.DataPoint,System.Int32,System.Int32)">
            <summary>
            Helper function, which returns the Y value of the data point.
            </summary>
            <param name="common">Chart common elements.</param>
            <param name="area">Chart area the series belongs to.</param>
            <param name="series">Sereis of the point.</param>
            <param name="point">Point object.</param>
            <param name="pointIndex">Index of the point.</param>
            <param name="yValueIndex">Index of the Y value to get.</param>
            <returns>Y value of the point.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.IChartType.AddSmartLabelMarkerPositions(Dundas.Olap.WebUIControls.CommonElements,Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.Series,System.Collections.ArrayList)">
            <summary>
            Adds markers position to the list. Used to check SmartLabels overlapping.
            </summary>
            <param name="common">Common chart elements.</param>
            <param name="area">Chart area.</param>
            <param name="series">Series values to be used.</param>
            <param name="list">List to add to.</param>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.IChartType.Name">
            <summary>
            Chart type name
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.IChartType.Stacked">
            <summary>
            True if chart type is stacked
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.IChartType.SupportStackedGroups">
            <summary>
            True if stacked chart type supports groups
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.IChartType.StackSign">
            <summary>
            True if stacked chart type should draw separately positive and 
            negative data points ( Bar and column Stacked types ).
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.IChartType.RequireAxes">
            <summary>
            True if chart type supports axeses
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.IChartType.CircularChartArea">
            <summary>
            True if chart type requires circular chart area.
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.IChartType.SupportLogarithmicAxes">
            <summary>
            True if chart type supports logarithmic axes
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.IChartType.SwitchValueAxes">
            <summary>
            True if chart type requires to switch the value (Y) axes position
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.IChartType.SideBySideSeries">
            <summary>
            True if chart series can be placed side-by-side.
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.IChartType.DataPointsInLegend">
            <summary>
            True if each data point of a chart must be represented in the legend
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.IChartType.ApplyPaletteColorsToPoints">
            <summary>
            True if palette colors should be applied for each data paoint.
            Otherwise the color is applied to the series.
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.IChartType.ExtraYValuesConnectedToYAxis">
            <summary>
            Indicates that extra Y values are connected to the scale of the Y axis
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.IChartType.ZeroCrossing">
            <summary>
            If the crossing value is auto Crossing value should be 
            automatically set to zero for some chart 
            types (Bar, column, area etc.)
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.IChartType.YValuesPerPoint">
            <summary>
            Number of supported Y value(s) per point 
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.IChartType.SecondYScale">
            <summary>
            Chart type with two y values used for scale ( bubble chart type )
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.IChartType.HundredPercent">
            <summary>
            Indicates that it's a hundredred percent chart.
            Axis scale from 0 to 100 percent should be used.
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.IChartType.HundredPercentSupportNegative">
            <summary>
            Indicates that negative 100% stacked values are shown on
            the other side of the X axis
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.ChartTypes.PointChart.alwaysDrawMarkers">
            <summary>
            Indicates that markers will be always drawn
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.ChartTypes.PointChart.yValueIndex">
            <summary>
            Index of the Y value used to draw chart
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.ChartTypes.PointChart.labelYValueIndex">
            <summary>
            Index of the Y value used to be shown as point value label
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.ChartTypes.PointChart.autoLabelPosition">
            <summary>
            Auto label position flag
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.ChartTypes.PointChart.labelPosition">
            <summary>
            Label position
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.ChartTypes.PointChart.vAxis">
            <summary>
            Vertical axes
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.ChartTypes.PointChart.hAxis">
            <summary>
            Horizontal axes
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.ChartTypes.PointChart.indexedSeries">
            <summary>
            Indexed series flag
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.ChartTypes.PointChart.common">
            <summary>
            Common elements object
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.ChartTypes.PointChart.area">
            <summary>
            Chart area object
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.ChartTypes.PointChart.middleMarker">
            <summary>
            Indicates that marker and label are drawn in the middle of 3D depth
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.ChartTypes.PointChart.label3DInfoList">
            <summary>
            Stores information about 3D labels. Used to draw 3D labels in layers.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.PointChart.#ctor">
            <summary>
            Class public constructor.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.PointChart.#ctor(System.Boolean)">
            <summary>
            Class public constructor.
            </summary>
            <param name="alwaysDrawMarkers">Indicates if markers should be always painted.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.PointChart.GetLegendImageStyle(Dundas.Olap.WebUIControls.Series)">
            <summary>
            How to draw series/points in legend:
            Filled rectangle, Line or Marker
            </summary>
            <param name="series">Legend item series.</param>
            <returns>Legend item style.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.PointChart.GetImage(Dundas.Charting.WebControl.ChartTypes.ChartTypeRegistry)">
            <summary>
            Gets chart type image.
            </summary>
            <param name="registry">Chart types registry object.</param>
            <returns>Chart type image.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.PointChart.Paint(Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.CommonElements,Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.Series)">
            <summary>
            Paint Point Chart.
            </summary>
            <param name="graph">The Chart Graphics object.</param>
            <param name="common">The Common elements object.</param>
            <param name="area">Chart area for this chart.</param>
            <param name="seriesToDraw">Chart series to draw.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.PointChart.ProcessChartType(System.Boolean,Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.CommonElements,Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.Series)">
            <summary>
            This method recalculates size of the bars. This method is used 
            from Paint or Select method.
            </summary>
            <param name="selection">If True selection mode is active, otherwise paint mode is active.</param>
            <param name="graph">The Chart Graphics object.</param>
            <param name="common">The Common elements object.</param>
            <param name="area">Chart area for this chart.</param>
            <param name="seriesToDraw">Chart series to draw.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.PointChart.DrawPointMarker(Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.Series,Dundas.Olap.WebUIControls.DataPoint,System.Drawing.PointF,Dundas.Olap.WebUIControls.MarkerStyle,System.Int32,System.Drawing.Color,System.Drawing.Color,System.Int32,System.String,System.Drawing.Color,System.Int32,System.Drawing.Color,System.Drawing.RectangleF)">
            <summary>
            Draw series point marker.
            </summary>
            <param name="graph">Chart Graphics used for drawing.</param>
            <param name="series">Series.</param>
            <param name="dataPoint">Series data point.</param>
            <param name="point">Coordinates of the center.</param>
            <param name="markerStyle">Marker style.</param>
            <param name="markerSize">Marker size.</param>
            <param name="markerColor">Marker color.</param>
            <param name="markerBorderColor">Marker border color.</param>
            <param name="markerBorderSize">Marker border size.</param>
            <param name="markerImage">Marker image name.</param>
            <param name="markerImageTranspColor">Marker image transparent color.</param>
            <param name="shadowSize">Marker shadow size.</param>
            <param name="shadowColor">Marker shadow color.</param>
            <param name="imageScaleRect">Rectangle to which marker image should be scaled.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.PointChart.SetHotRegions(Dundas.Olap.WebUIControls.CommonElements,Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.DataPoint,System.Drawing.SizeF,System.String,System.Int32,Dundas.Olap.WebUIControls.MarkerStyle,System.Drawing.PointF)">
            <summary>
            Inserts Hot Regions used for image maps, tool tips and 
            hit test function
            </summary>
            <param name="common">Common elements object</param>
            <param name="graph">Chart Graphics object</param>
            <param name="point">Data point used for hot region</param>
            <param name="markerSize">Size of the marker</param>
            <param name="seriesName">Name of the series</param>
            <param name="pointIndex">Data point index</param>
            <param name="pointMarkerStyle">Marker Style</param>
            <param name="markerPosition">Marker Position</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.PointChart.DrawLabels(Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.CommonElements,System.Drawing.PointF,System.Int32,Dundas.Olap.WebUIControls.DataPoint,Dundas.Olap.WebUIControls.Series,System.Int32)">
            <summary>
            This method draws labels in point chart.
            </summary>
            <param name="graph">The Chart Graphics object</param>
            <param name="common">The Common elements object</param>
            <param name="area">Chart area for this chart</param>
            <param name="markerPosition">Marker position</param>
            <param name="markerSize">Marker size</param>
            <param name="point">Data point</param>
            <param name="ser">Data series</param>
            <param name="pointIndex">Data point index.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.PointChart.SetStringFormat(System.Drawing.StringFormat)">
            <summary>
            Returns current string format. 
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.PointChart.GetLabelPosition(Dundas.Olap.WebUIControls.DataPoint,Dundas.Olap.WebUIControls.Series,System.Int32,System.Drawing.SizeF,System.Drawing.SizeF,System.Single,System.Drawing.PointF)">
            <summary>
            Gets the label position for the given point.
            </summary>
            <param name="point">Data Point.</param>
            <param name="series">Data series.</param>
            <param name="pointIndex">point index.</param>
            <param name="sizeLabel">label size.</param>
            <param name="sizeMarker">marker size.</param>
            <param name="horizontalSpacing">horizontal spacing.</param>
            <param name="markerPosition">marker position.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.PointChart.GetLabelPosition(Dundas.Olap.WebUIControls.ChartGraphics,System.Drawing.PointF,System.Drawing.SizeF,System.Drawing.StringFormat,System.Boolean)">
            <summary>
            Gets rectangle position of the label.
            </summary>
            <param name="graph">Chart graphics object.</param>
            <param name="position">Original label position.</param>
            <param name="size">Label text size.</param>
            <param name="format">Label string format.</param>
            <param name="adjustForDrawing">Result position is adjusted for drawing.</param>
            <returns>Label rectangle position.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.PointChart.ProcessChartType3D(System.Boolean,Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.CommonElements,Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.Series)">
            <summary>
            This method recalculates size of the point marker. This method is used 
            from Paint or Select method.
            </summary>
            <param name="selection">If True selection mode is active, otherwise paint mode is active.</param>
            <param name="graph">The Chart Graphics object.</param>
            <param name="common">The Common elements object.</param>
            <param name="area">Chart area for this chart.</param>
            <param name="seriesToDraw">Chart series to draw.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.PointChart.ProcessSinglePoint3D(Dundas.Olap.WebUIControls.DataPoint3D,System.Boolean,Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.CommonElements,Dundas.Olap.WebUIControls.ChartArea)">
            <summary>
            Draws\Hit tests single 3D point.
            </summary>
            <param name="pointEx">3D point information.</param>
            <param name="selection">If True selection mode is active, otherwise paint mode is active.</param>
            <param name="graph">The Chart Graphics object.</param>
            <param name="common">The Common elements object.</param>
            <param name="area">Chart area for this chart.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.PointChart.DrawAccumulated3DLabels(Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.CommonElements,Dundas.Olap.WebUIControls.ChartArea)">
            <summary>
            Draws labels which are srored in the collection.
            </summary>
            <param name="graph">The Chart Graphics object.</param>
            <param name="common">The Common elements object.</param>
            <param name="area">Chart area for this chart.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.PointChart.ShouldDrawMarkerOnViewEdgeX">
            <summary>
            Indicates that markers are drawnd on the X edge of the data view.
            </summary>
            <returns>True. Point chart always draws markers on the edge.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.PointChart.GetMarkerBorderSize(Dundas.Olap.WebUIControls.DataPoint)">
            <summary>
            Gets marker border size.
            </summary>
            <param name="point">Data point.</param>
            <returns>Marker border size.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.PointChart.GetAutoLabelPosition(Dundas.Olap.WebUIControls.Series,System.Int32)">
            <summary>
            Gets label position. For point chart this function always returns 'Top'.
            </summary>
            <param name="series">Series.</param>
            <param name="pointIndex">Data point index in series.</param>
            <returns>Return automaticly detected label position.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.PointChart.GetMarkerSize(Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.CommonElements,Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.DataPoint,System.Int32,System.String)">
            <summary>
            Returns marker size.
            </summary>
            <param name="graph">The Chart Graphics object.</param>
            <param name="common">The Common elements object.</param>
            <param name="area">Chart area for this chart.</param>
            <param name="point">Data point.</param>
            <param name="markerSize">Marker size.</param>
            <param name="markerImage">Marker image.</param>
            <returns>Marker width and height.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.PointChart.GetYValue(Dundas.Olap.WebUIControls.CommonElements,Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.Series,Dundas.Olap.WebUIControls.DataPoint,System.Int32,System.Int32)">
            <summary>
            Helper function, which returns the Y value of the point.
            </summary>
            <param name="common">Chart common elements.</param>
            <param name="area">Chart area the series belongs to.</param>
            <param name="series">Sereis of the point.</param>
            <param name="point">Point object.</param>
            <param name="pointIndex">Index of the point.</param>
            <param name="yValueIndex">Index of the Y value to get.</param>
            <returns>Y value of the point.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.PointChart.GetEmptyPointValue(Dundas.Olap.WebUIControls.DataPoint,System.Int32)">
            <summary>
            This method will find previous and next data point, which is not 
            empty and recalculate a new value for current empty data point. 
            New value depends on custom attribute “EmptyPointValue” and 
            it could be zero or average.
            </summary>
            <param name="point">Empty data point.</param>
            <param name="pointIndex">Empty data point index.</param>
            <returns>A Value for empty data point.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.PointChart.AddSmartLabelMarkerPositions(Dundas.Olap.WebUIControls.CommonElements,Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.Series,System.Collections.ArrayList)">
            <summary>
            Adds markers position to the list. Used to check SmartLabels overlapping.
            </summary>
            <param name="common">Common chart elements.</param>
            <param name="area">Chart area.</param>
            <param name="series">Series values to be used.</param>
            <param name="list">List to add to.</param>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.PointChart.Name">
            <summary>
            Chart type name
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.PointChart.Stacked">
            <summary>
            True if chart type is stacked
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.PointChart.SupportStackedGroups">
            <summary>
            True if stacked chart type supports groups
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.PointChart.StackSign">
            <summary>
            True if stacked chart type should draw separately positive and 
            negative data points ( Bar and column Stacked types ).
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.PointChart.RequireAxes">
            <summary>
            True if chart type supports axeses
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.PointChart.SecondYScale">
            <summary>
            Chart type with two y values used for scale ( bubble chart type )
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.PointChart.CircularChartArea">
            <summary>
            True if chart type requires circular chart area.
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.PointChart.SupportLogarithmicAxes">
            <summary>
            True if chart type supports logarithmic axes
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.PointChart.SwitchValueAxes">
            <summary>
            True if chart type requires to switch the value (Y) axes position
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.PointChart.SideBySideSeries">
            <summary>
            True if chart series can be placed side-by-side.
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.PointChart.DataPointsInLegend">
            <summary>
            True if each data point of a chart must be represented in the legend
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.PointChart.ZeroCrossing">
            <summary>
            If the crossing value is auto Crossing value should be 
            automatically set to zero for some chart 
            types (Bar, column, area etc.)
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.PointChart.ApplyPaletteColorsToPoints">
            <summary>
            True if palette colors should be applied for each data paoint.
            Otherwise the color is applied to the series.
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.PointChart.ExtraYValuesConnectedToYAxis">
            <summary>
            Indicates that extra Y values are connected to the scale of the Y axis
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.PointChart.HundredPercent">
            <summary>
            Indicates that it's a hundredred percent chart.
            Axis scale from 0 to 100 percent should be used.
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.PointChart.HundredPercentSupportNegative">
            <summary>
            Indicates that it's a hundredred percent chart.
            Axis scale from 0 to 100 percent should be used.
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.PointChart.YValuesPerPoint">
            <summary>
            Number of supported Y value(s) per point 
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.PointChart.ShiftedX">
            <summary>
            Labels and markers have to be shifted if there 
            is more than one series for column chart.
            NOT USED IN POINT CHART.
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.PointChart.ShiftedSerName">
            <summary>
            Labels and markers have to be shifted if there 
            is more than one series for column chart. This property 
            will give a name of the series, which is used, for 
            labels and markers.
            NOT USED IN POINT CHART.
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.ChartTypes.PointChart.Label3DInfo">
            <summary>
            3D Label info.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.ChartTypes.LineChart.lineTension">
            <summary>
            Line tension
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.ChartTypes.LineChart.centerPointIndex">
            <summary>
            Index of the drawing center point. int.MaxValue if drawn from left->right or right->left.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.ChartTypes.LineChart.useBorderColor">
            <summary>
            Inicates that border color attribute must be used to draw the line
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.ChartTypes.LineChart.disableShadow">
            <summary>
            Inicates that line shadow should not be drawn
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.ChartTypes.LineChart.drawShadowOnly">
            <summary>
            Inicates that only line shadow must be drawn
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.ChartTypes.LineChart.hAxisMin">
            <summary>
            Horizontal axis minimum value
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.ChartTypes.LineChart.hAxisMax">
            <summary>
            Horizontal axis maximum value
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.ChartTypes.LineChart.vAxisMin">
            <summary>
            Vertical axis minimum value
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.ChartTypes.LineChart.vAxisMax">
            <summary>
            Vertical axis maximum value
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.ChartTypes.LineChart.clipRegionSet">
            <summary>
            Clip region indicator
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.ChartTypes.LineChart.multiSeries">
            <summary>
            Indicates that several series are drawn at the same time. Stacked or Side-by-side.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.ChartTypes.LineChart.COPCoordinatesToCheck">
            <summary>
            Indicates which coordinates should be tested against the COP.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.ChartTypes.LineChart.allPointsLoopsNumber">
            <summary>
            Number of data points loops required to draw chart.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.ChartTypes.LineChart.showPointLines">
            <summary>
            Indicates that line markers are shown at data point.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.ChartTypes.LineChart.drawOutsideLines">
            <summary>
            Indicates that that lines outside the area should be still processed while drawing.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.ChartTypes.LineChart.processBaseChart">
            <summary>
            Indicates if base (point) chart type should be processed
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.LineChart.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.LineChart.GetImage(Dundas.Charting.WebControl.ChartTypes.ChartTypeRegistry)">
            <summary>
            Gets chart type image.
            </summary>
            <param name="registry">Chart types registry object.</param>
            <returns>Chart type image.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.LineChart.GetLegendImageStyle(Dundas.Olap.WebUIControls.Series)">
            <summary>
            How to draw series/points in legend:
            Filled rectangle, Line or Marker
            </summary>
            <param name="series">Legend item series.</param>
            <returns>Legend item style.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.LineChart.Paint(Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.CommonElements,Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.Series)">
            <summary>
            Paint Line Chart.
            </summary>
            <param name="graph">The Chart Graphics object.</param>
            <param name="common">The Common elements object.</param>
            <param name="area">Chart area for this char.t</param>
            <param name="seriesToDraw">Chart series to draw.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.LineChart.ProcessChartType(System.Boolean,Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.CommonElements,Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.Series)">
            <summary>
            Draws or perform the hit test for the line chart.
            </summary>
            <param name="selection">If True selection mode is active, otherwise paint mode is active.</param>
            <param name="graph">The Chart Graphics object.</param>
            <param name="common">The Common elements object.</param>
            <param name="area">Chart area for this chart.</param>
            <param name="seriesToDraw">Chart series to draw.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.LineChart.DrawLine(Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.CommonElements,Dundas.Olap.WebUIControls.DataPoint,Dundas.Olap.WebUIControls.Series,System.Drawing.PointF[],System.Int32,System.Single)">
            <summary>
            Calculate position and draw one chart line and/or shadow.
            </summary>
            <param name="graph">Graphics object.</param>
            <param name="common">The Common elements object.</param>
            <param name="point">Point to draw the line for.</param>
            <param name="series">Point series.</param>
            <param name="points">Array of oints coordinates.</param>
            <param name="pointIndex">Index of point to draw.</param>
            <param name="tension">Line tension.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.LineChart.DrawTruncatedLine(Dundas.Olap.WebUIControls.ChartGraphics,System.Drawing.Pen,System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            During zooming there are scenarios when the line coordinates are extremly large and
            originate outside of the chart pixel boundaries. This cause GDI+ line drawing methods 
            to throw stack overflow exceptions.
            This method tries to change the coordinates into the chart boundaries and draw the line.
            </summary>
            <param name="graph">Chart graphics.</param>
            <param name="pen">Pen object that determines the color, width, and style of the line.</param>
            <param name="pt1">PointF structure that represents the first point to connect.</param>
            <param name="pt2">PointF structure that represents the second point to connect.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.LineChart.GetIntersectionY(System.Drawing.PointF,System.Drawing.PointF,System.Single)">
            <summary>
            Gets intersection point coordinates between point line and and horizontal 
            line specified by Y coordinate.
            </summary>
            <param name="firstPoint">First data point.</param>
            <param name="secondPoint">Second data point.</param>
            <param name="pointY">Y coordinate.</param>
            <returns>Intersection point coordinates.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.LineChart.GetIntersectionX(System.Drawing.PointF,System.Drawing.PointF,System.Single)">
            <summary>
            Gets intersection point coordinates between point line and and vertical 
            line specified by X coordinate.
            </summary>
            <param name="firstPoint">First data point.</param>
            <param name="secondPoint">Second data point.</param>
            <param name="pointX">X coordinate.</param>
            <returns>Intersection point coordinates.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.LineChart.DrawLine(Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.DataPoint,Dundas.Olap.WebUIControls.Series,System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Draw chart line.
            </summary>
            <param name="graph">Graphics object.</param>
            <param name="point">Point to draw the line for.</param>
            <param name="series">Point series.</param>
            <param name="firstPoint">First line point.</param>
            <param name="secondPoint">Seconf line point.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.LineChart.IsLineTensionSupported">
            <summary>
            Checks if line tension is supported by the chart type.
            </summary>
            <returns>True if line tension is supported.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.LineChart.Init2DAnimation(Dundas.Olap.WebUIControls.CommonElements,Dundas.Olap.WebUIControls.DataPoint,System.Int32,System.Double,System.Double,Dundas.Olap.WebUIControls.ChartGraphics,System.Drawing.PointF[])">
            <summary>
            Initialize 2D Animation
            </summary>
            <param name="common">Common Elements</param>
            <param name="point">Data Point</param>
            <param name="index">Data Point Index</param>
            <param name="xValue">X Value of the current data point</param>
            <param name="xValuePrev">X Value of the previous data point</param>
            <param name="graph">Chart Graphics</param>
            <param name="dataPointPos">Positions of the data points</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.LineChart.GetDefaultTension">
            <summary>
            Gets default line tension.
            </summary>
            <returns>Default line tension.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.LineChart.GetAutoLabelPosition(Dundas.Olap.WebUIControls.Series,System.Int32)">
            <summary>
            Gets label position depending on the prev/next point values.
            This method will reduce label overlapping with the chart itself (line).
            </summary>
            <param name="series">Data series.</param>
            <param name="pointIndex">Point index.</param>
            <returns>Return automaticly detected label position.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.LineChart.GetPointsPosition(Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.Series,System.Boolean)">
            <summary>
            Fills a PointF array of data points absolute pixel positions.
            </summary>
            <param name="graph">Graphics object.</param>
            <param name="series">Point series.</param>
            <param name="indexedSeries">Indicate that point index should be used as X value.</param>
            <returns>Array of data points position.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.LineChart.ProcessLineChartType3D(System.Boolean,Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.CommonElements,Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.Series)">
            <summary>
            Draws or perform the hit test for the line chart in 3D.
            </summary>
            <param name="selection">If True selection mode is active, otherwise paint mode is active.</param>
            <param name="graph">The Chart Graphics object.</param>
            <param name="common">The Common elements object.</param>
            <param name="area">Chart area for this chart.</param>
            <param name="seriesToDraw">Chart series to draw.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.LineChart.Init3DAnimation(Dundas.Olap.WebUIControls.CommonElements,System.Double,System.Double,System.Double,System.Double,Dundas.Olap.WebUIControls.Axis,Dundas.Olap.WebUIControls.Axis,Dundas.Olap.WebUIControls.DataPoint3D,Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.DataPoint,Dundas.Olap.WebUIControls.Series)">
            <summary>
            This method sets start position coordinates for 
            line chart animation
            </summary>
            <param name="common">Common elements</param>
            <param name="xValuePrev">X Value of the start line point.</param>
            <param name="xValue">X Value of the end line point.</param>
            <param name="yValuePrev">Y Value of the start line point.</param>
            <param name="yValue">Y Value of the end line point.</param>
            <param name="vAxis">Vertical Axis</param>
            <param name="hAxis">Horizontal Axis</param>
            <param name="pointAttr">Data Point Attributes.</param>
            <param name="graph">Chart Graphics</param>
            <param name="point">Data Point</param>
            <param name="series">Series to be drawn</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.LineChart.Draw3DSurface(Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.Matrix3D,Dundas.Olap.WebUIControls.LightStyle,Dundas.Olap.WebUIControls.DataPoint3D,System.Single,System.Single,System.Collections.ArrayList,System.Int32,System.Int32,System.Single,Dundas.Olap.WebUIControls.DrawingOperationType,System.Single,System.Single,System.Drawing.PointF,System.Drawing.PointF,System.Boolean)">
            <summary>
            Draws a 3D surface connecting the two specified points in 2D space.
            Used to draw Line based charts.
            </summary>
            <param name="area">Chart area reference.</param>
            <param name="graph">Chart graphics.</param>
            <param name="matrix">Coordinates transformation matrix.</param>
            <param name="lightStyle">Light style (None, Simplistic, Realistic).</param>
            <param name="prevDataPointEx">Previous data point object.</param>
            <param name="positionZ">Z position of the back side of the 3D surface.</param>
            <param name="depth">Depth of the 3D surface.</param>
            <param name="points">Array of points.</param>
            <param name="pointIndex">Index of point to draw.</param>
            <param name="pointLoopIndex">Index of points loop.</param>
            <param name="tension">Line tension.</param>
            <param name="operationType">Type of operation Drawing, Calculating Path or Both</param>
            <param name="topDarkening">Darkenning scale for top surface. 0 - None.</param>
            <param name="bottomDarkening">Darkenning scale for bottom surface. 0 - None.</param>
            <param name="thirdPointPosition">Position where the third point is actually located or float.NaN if same as in "firstPoint".</param>
            <param name="fourthPointPosition">Position where the fourth point is actually located or float.NaN if same as in "secondPoint".</param>
            <param name="clippedSegment">Indicates that drawn segment is 3D clipped. Only top/bottom should be drawn.</param>
            <returns>Returns elemnt shape path if operationType parameter is set to CalcElementPath, otherwise Null.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.LineChart.GetCenterPointIndex(System.Collections.ArrayList)">
            <summary>
            Gets index of center point.
            </summary>
            <param name="points">Points list.</param>
            <returns>Index of center point or int.MaxValue.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.LineChart.GetPointLoopNumber(System.Boolean,System.Collections.ArrayList)">
            <summary>
            Returns how many loops through all data points is required (1 or 2)
            </summary>
            <param name="selection">Selection indicator.</param>
            <param name="pointsArray">Points array list.</param>
            <returns>Number of loops (1 or 2).</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.LineChart.ClipTopPoints(System.Drawing.Drawing2D.GraphicsPath,Dundas.Olap.WebUIControls.DataPoint3D@,Dundas.Olap.WebUIControls.DataPoint3D@,System.Boolean,Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.Matrix3D,Dundas.Olap.WebUIControls.LightStyle,Dundas.Olap.WebUIControls.DataPoint3D,System.Single,System.Single,System.Collections.ArrayList,System.Int32,System.Int32,System.Single,Dundas.Olap.WebUIControls.DrawingOperationType,Dundas.Olap.WebUIControls.LineSegmentType,System.Single,System.Single)">
            <summary>
            Clips the top (left and right) points of the segment to plotting area.
            Used in area and range charts.
            </summary>
            <param name="resultPath">Segment area path.</param>
            <param name="firstPoint">First data point.</param>
            <param name="secondPoint">Second data point.</param>
            <param name="reversed">Points are in reverse order.</param>
            <param name="area">Chart area reference.</param>
            <param name="graph">Chart graphics.</param>
            <param name="matrix">Coordinates transformation matrix.</param>
            <param name="lightStyle">Light style (None, Simplistic, Realistic).</param>
            <param name="prevDataPointEx">Previous data point object.</param>
            <param name="positionZ">Z position of the back side of the 3D surface.</param>
            <param name="depth">Depth of the 3D surface.</param>
            <param name="points">Array of points.</param>
            <param name="pointIndex">Index of point to draw.</param>
            <param name="pointLoopIndex">Index of points loop.</param>
            <param name="tension">Line tension.</param>
            <param name="operationType">Type of operation Drawing, Calculating Path or Both</param>
            <param name="surfaceSegmentType">Define surface segment type if it consists of several segments.</param>
            <param name="topDarkening">Darkenning scale for top surface. 0 - None.</param>
            <param name="bottomDarkening">Darkenning scale for bottom surface. 0 - None.</param>
            <returns>Returns element shape path if operationType parameter is set to CalcElementPath, otherwise Null.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.LineChart.ClipBottomPoints(System.Drawing.Drawing2D.GraphicsPath,Dundas.Olap.WebUIControls.DataPoint3D@,Dundas.Olap.WebUIControls.DataPoint3D@,System.Drawing.PointF@,System.Drawing.PointF@,System.Boolean,Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.Matrix3D,Dundas.Olap.WebUIControls.LightStyle,Dundas.Olap.WebUIControls.DataPoint3D,System.Single,System.Single,System.Collections.ArrayList,System.Int32,System.Int32,System.Single,Dundas.Olap.WebUIControls.DrawingOperationType,Dundas.Olap.WebUIControls.LineSegmentType,System.Single,System.Single)">
            <summary>
            Clips the bottom (left and right) points of the segment to plotting area.
            Used in area and range charts.
            </summary>
            <param name="resultPath"></param>
            <param name="firstPoint">First data point.</param>
            <param name="secondPoint">Second data point.</param>
            <param name="thirdPoint">Coordinates of the bottom left point.</param>
            <param name="fourthPoint">Coordinates of the bottom right point.</param>
            <param name="reversed">Points are in reverse order.</param>
            <param name="area">Chart area reference.</param>
            <param name="graph">Chart graphics.</param>
            <param name="matrix">Coordinates transformation matrix.</param>
            <param name="lightStyle">Light style (None, Simplistic, Realistic).</param>
            <param name="prevDataPointEx">Previous data point object.</param>
            <param name="positionZ">Z position of the back side of the 3D surface.</param>
            <param name="depth">Depth of the 3D surface.</param>
            <param name="points">Array of points.</param>
            <param name="pointIndex">Index of point to draw.</param>
            <param name="pointLoopIndex">Index of points loop.</param>
            <param name="tension">Line tension.</param>
            <param name="operationType">Type of operation Drawing, Calculating Path or Both</param>
            <param name="surfaceSegmentType">Define surface segment type if it consists of several segments.</param>
            <param name="topDarkening">Darkenning scale for top surface. 0 - None.</param>
            <param name="bottomDarkening">Darkenning scale for bottom surface. 0 - None.</param>
            <returns>Returns element shape path if operationType parameter is set to CalcElementPath, otherwise Null.</returns>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.LineChart.Name">
            <summary>
            Chart type name
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.LineChart.Stacked">
            <summary>
            True if chart type is stacked
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.LineChart.RequireAxes">
            <summary>
            True if chart type supports axeses
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.LineChart.SupportLogarithmicAxes">
            <summary>
            True if chart type supports logarithmic axes
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.LineChart.SwitchValueAxes">
            <summary>
            True if chart type requires to switch the value (Y) axes position
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.LineChart.SideBySideSeries">
            <summary>
            True if chart series can be placed side-by-side.
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.LineChart.ZeroCrossing">
            <summary>
            If the crossing value is auto Crossing value should be 
            automatically set to zero for some chart 
            types (Bar, column, area etc.)
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.LineChart.DataPointsInLegend">
            <summary>
            True if each data point of a chart must be represented in the legend
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.LineChart.ApplyPaletteColorsToPoints">
            <summary>
            True if palette colors should be applied for each data paoint.
            Otherwise the color is applied to the series.
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.LineChart.YValuesPerPoint">
            <summary>
            Number of supported Y value(s) per point 
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.SplineChart.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.SplineChart.GetImage(Dundas.Charting.WebControl.ChartTypes.ChartTypeRegistry)">
            <summary>
            Gets chart type image.
            </summary>
            <param name="registry">Chart types registry object.</param>
            <returns>Chart type image.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.SplineChart.IsLineTensionSupported">
            <summary>
            Checks if line tension is supported by the chart type.
            </summary>
            <returns>True if line tension is supported.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.SplineChart.GetPointsPosition(Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.Series,System.Boolean)">
            <summary>
            Fills a PointF array of data points positions.
            </summary>
            <param name="graph">Graphics object.</param>
            <param name="series">Point series.</param>
            <param name="indexedSeries">Indicate that point index should be used as X value.</param>
            <returns>Array of data points position.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.SplineChart.GetDefaultTension">
            <summary>
            Gets default line tension.
            </summary>
            <returns>Default line tension.</returns>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.SplineChart.Name">
            <summary>
            Chart type name
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.ChartTypes.AreaChart.gradientFill">
            <summary>
            Fields used to fill area with gradient
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.ChartTypes.AreaChart.areaPath">
            <summary>
            Coordinates of the area path
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.ChartTypes.AreaChart.series">
            <summary>
            Reference to the current series object
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.ChartTypes.AreaChart.axisPos">
            <summary>
            Horizontal axis position
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.AreaChart.#ctor">
            <summary>
            Area chart constructor
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.AreaChart.GetDefaultTension">
            <summary>
            Gets default line tension.
            </summary>
            <returns>Line tension.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.AreaChart.GetLegendImageStyle(Dundas.Olap.WebUIControls.Series)">
            <summary>
            How to draw series/points in legend:
            Filled rectangle, Line or Marker
            </summary>
            <param name="series">Legend item series.</param>
            <returns>Legend item style.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.AreaChart.GetImage(Dundas.Charting.WebControl.ChartTypes.ChartTypeRegistry)">
            <summary>
            Gets chart type image.
            </summary>
            <param name="registry">Chart types registry object.</param>
            <returns>Chart type image.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.AreaChart.ProcessChartType(System.Boolean,Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.CommonElements,Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.Series)">
            <summary>
            This method recalculates position of the end points of lines. This method 
            is used from Paint or Select method.
            </summary>
            <param name="selection">If True selection mode is active, otherwise paint mode is active.</param>
            <param name="graph">The Chart Graphics object.</param>
            <param name="common">The Common elements object.</param>
            <param name="area">Chart area for this chart.</param>
            <param name="seriesToDraw">Chart series to draw.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.AreaChart.DrawLine(Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.CommonElements,Dundas.Olap.WebUIControls.DataPoint,Dundas.Olap.WebUIControls.Series,System.Drawing.PointF[],System.Int32,System.Single)">
            <summary>
            This method is overriden to fill the area and draw border line.
            </summary>
            <param name="graph">Graphics object.</param>
            <param name="common">The Common elements object</param>
            <param name="point">Point to draw the line for.</param>
            <param name="series">Point series.</param>
            <param name="points">Array of oints coordinates.</param>
            <param name="pointIndex">Index of point to draw.</param>
            <param name="tension">Line tension</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.AreaChart.FillLastSeriesGradient(Dundas.Olap.WebUIControls.ChartGraphics)">
            <summary>
            Fills last series area with gradient.
            </summary>
            <param name="graph">The Chart Graphics object</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.AreaChart.IsLineTensionSupported">
            <summary>
            Checks if line tension is supported by the chart type.
            </summary>
            <returns>True if line tension is supported.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.AreaChart.Draw3DSurface(Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.Matrix3D,Dundas.Olap.WebUIControls.LightStyle,Dundas.Olap.WebUIControls.DataPoint3D,System.Single,System.Single,System.Collections.ArrayList,System.Int32,System.Int32,System.Single,Dundas.Olap.WebUIControls.DrawingOperationType,System.Single,System.Single,System.Drawing.PointF,System.Drawing.PointF,System.Boolean)">
            <summary>
            Draws a 3D surface connecting the two specified points in 2D space.
            Used to draw Line based charts.
            </summary>
            <param name="area">Chart area reference.</param>
            <param name="graph">Chart graphics.</param>
            <param name="matrix">Coordinates transformation matrix.</param>
            <param name="lightStyle">Light style (None, Simplistic, Realistic).</param>
            <param name="prevDataPointEx">Previous data point object.</param>
            <param name="positionZ">Z position of the back side of the 3D surface.</param>
            <param name="depth">Depth of the 3D surface.</param>
            <param name="points">Array of points.</param>
            <param name="pointIndex">Index of point to draw.</param>
            <param name="pointLoopIndex">Index of points loop.</param>
            <param name="tension">Line tension.</param>
            <param name="operationType">Type of operation Drawing, Calculating Path or Both</param>
            <param name="topDarkening">Darkenning scale for top surface. 0 - None.</param>
            <param name="bottomDarkening">Darkenning scale for bottom surface. 0 - None.</param>
            <param name="thirdPointPosition">Position where the third point is actually located or float.NaN if same as in "firstPoint".</param>
            <param name="fourthPointPosition">Position where the fourth point is actually located or float.NaN if same as in "secondPoint".</param>
            <param name="clippedSegment">Indicates that drawn segment is 3D clipped. Only top/bottom should be drawn.</param>
            <returns>Returns elemnt shape path if operationType parameter is set to CalcElementPath, otherwise Null.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.AreaChart.GetTopSurfaceVisibility(Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.DataPoint3D,Dundas.Olap.WebUIControls.DataPoint3D,System.Boolean,System.Single,System.Single,Dundas.Olap.WebUIControls.Matrix3D,Dundas.Olap.WebUIControls.SurfaceName@)">
            <summary>
            Gets visibility of the top surface.
            </summary>
            <param name="area">Chart area object.</param>
            <param name="firstPoint">First data point of the line.</param>
            <param name="secondPoint">Second data point of the line.</param>
            <param name="upSideDown">Indicates that Y values of the data points are below axis line.</param>
            <param name="positionZ">Z coordinate of the back side of the cube.</param>
            <param name="depth">Cube depth.</param>
            <param name="matrix">Coordinate transformation matrix.</param>
            <param name="visibleSurfaces">Surface visibility reference. Initialized with bounary cube visibility.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.AreaChart.GetAxisIntersection(Dundas.Olap.WebUIControls.DataPoint3D,Dundas.Olap.WebUIControls.DataPoint3D,System.Single)">
            <summary>
            Gets intersection point coordinates between point line and axis line.
            </summary>
            <param name="firstPoint">First data point.</param>
            <param name="secondPoint">Second data point.</param>
            <param name="axisPosition">Axis line position.</param>
            <returns>Intersection point coordinates.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.AreaChart.GetBottomPointsPosition(Dundas.Olap.WebUIControls.CommonElements,Dundas.Olap.WebUIControls.ChartArea,System.Single,Dundas.Olap.WebUIControls.DataPoint3D@,Dundas.Olap.WebUIControls.DataPoint3D@,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF@,System.Drawing.PointF@)">
            <summary>
            Gets position ob the bottom points in area chart.
            </summary>
            <param name="common">Chart common elements.</param>
            <param name="area">Chart area the series belongs to.</param>
            <param name="axisPosition">Axis position.</param>
            <param name="firstPoint">First top point coordinates.</param>
            <param name="secondPoint">Second top point coordinates.</param>
            <param name="thirdPointPosition">Position where the third point is actually located or float.NaN if same as in "firstPoint".</param>
            <param name="fourthPointPosition">Position where the fourth point is actually located or float.NaN if same as in "secondPoint".</param>
            <param name="thirdPoint">Returns third bottom point coordinates.</param>
            <param name="fourthPoint">Returns fourth bottom point coordinates.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.AreaChart.GetPointLoopNumber(System.Boolean,System.Collections.ArrayList)">
            <summary>
            Returns how many loops through all data points is required (1 or 2)
            </summary>
            <param name="selection">Selection indicator.</param>
            <param name="pointsArray">Points array list.</param>
            <returns>Number of loops (1 or 2).</returns>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.AreaChart.Name">
            <summary>
            Chart type name
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.AreaChart.ZeroCrossing">
            <summary>
            If the crossing value is auto Crossing value should be 
            automatically set to zero for some chart 
            types (Bar, column, area etc.)
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.ChartTypes.StackedAreaChart.stackedData">
            <summary>
            Stacked data buffer
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.ChartTypes.StackedAreaChart.areaBottomPath">
            <summary>
            Shape of the previous series
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.ChartTypes.StackedAreaChart.prevPosY">
            <summary>
            Previous stacked positive Y values.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.ChartTypes.StackedAreaChart.prevNegY">
            <summary>
            Previous stacked negative Y values.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.ChartTypes.StackedAreaChart.prevPositionX">
            <summary>
            Previous X value.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.ChartTypes.StackedAreaChart.hundredPercentStacked">
            <summary>
            Indicates if chart is 100% stacked
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.StackedAreaChart.#ctor">
            <summary>
            Public constructor.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.StackedAreaChart.GetDefaultTension">
            <summary>
            Gets default line tension.
            </summary>
            <returns>Line tension.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.StackedAreaChart.GetImage(Dundas.Charting.WebControl.ChartTypes.ChartTypeRegistry)">
            <summary>
            Gets chart type image.
            </summary>
            <param name="registry">Chart types registry object.</param>
            <returns>Chart type image.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.StackedAreaChart.Paint(Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.CommonElements,Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.Series)">
            <summary>
            Paint Stacked Area Chart.
            </summary>
            <param name="graph">The Chart Graphics object.</param>
            <param name="common">The Common elements object.</param>
            <param name="area">Chart area for this chart.</param>
            <param name="seriesToDraw">Chart series to draw.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.StackedAreaChart.ProcessChartType(System.Boolean,Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.CommonElements,Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.Series)">
            <summary>
            This method calculates position of the area and either draws it or checks selection.
            </summary>
            <param name="selection">If True selection mode is active, otherwise paint mode is active.</param>
            <param name="graph">The Chart Graphics object.</param>
            <param name="common">The Common elements object.</param>
            <param name="area">Chart area for this chart.</param>
            <param name="seriesToDraw">Chart series to draw.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.StackedAreaChart.Draw3DSurface(Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.Matrix3D,Dundas.Olap.WebUIControls.LightStyle,Dundas.Olap.WebUIControls.DataPoint3D,System.Single,System.Single,System.Collections.ArrayList,System.Int32,System.Int32,System.Single,Dundas.Olap.WebUIControls.DrawingOperationType,System.Single,System.Single,System.Drawing.PointF,System.Drawing.PointF,System.Boolean)">
            <summary>
            Draws a 3D surface connecting the two specified points in 2D space.
            Used to draw Line based charts.
            </summary>
            <param name="area">Chart area reference.</param>
            <param name="graph">Chart graphics.</param>
            <param name="matrix">Coordinates transformation matrix.</param>
            <param name="lightStyle">Light style (None, Simplistic, Realistic).</param>
            <param name="prevDataPointEx">Previous data point object.</param>
            <param name="positionZ">Z position of the back side of the 3D surface.</param>
            <param name="depth">Depth of the 3D surface.</param>
            <param name="points">Array of points.</param>
            <param name="pointIndex">Index of point to draw.</param>
            <param name="pointLoopIndex">Index of points loop.</param>
            <param name="tension">Line tension.</param>
            <param name="operationType">Type of operation Drawing, Calculating Path or Both</param>
            <param name="topDarkening">Darkenning scale for top surface. 0 - None.</param>
            <param name="bottomDarkening">Darkenning scale for bottom surface. 0 - None.</param>
            <param name="thirdPointPosition">Position where the third point is actually located or float.NaN if same as in "firstPoint".</param>
            <param name="fourthPointPosition">Position where the fourth point is actually located or float.NaN if same as in "secondPoint".</param>
            <param name="clippedSegment">Indicates that drawn segment is 3D clipped. Only top/bottom should be drawn.</param>
            <returns>Returns elemnt shape path if operationType parameter is set to CalcElementPath, otherwise Null.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.StackedAreaChart.GetTopSurfaceVisibility(Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.DataPoint3D,Dundas.Olap.WebUIControls.DataPoint3D,System.Boolean,System.Single,System.Single,Dundas.Olap.WebUIControls.Matrix3D,Dundas.Olap.WebUIControls.SurfaceName@)">
            <summary>
            Gets visibility of the top surface.
            </summary>
            <param name="area">Chart area object.</param>
            <param name="firstPoint">First data point of the line.</param>
            <param name="secondPoint">Second data point of the line.</param>
            <param name="upSideDown">Indicates that Y values of the data points are below axis line.</param>
            <param name="positionZ">Z coordinate of the back side of the cube.</param>
            <param name="depth">Cube depth.</param>
            <param name="matrix">Coordinate transformation matrix.</param>
            <param name="visibleSurfaces">Surface visibility reference. Initialized with bounary cube visibility.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.StackedAreaChart.GetBottomPointsPosition(Dundas.Olap.WebUIControls.CommonElements,Dundas.Olap.WebUIControls.ChartArea,System.Single,Dundas.Olap.WebUIControls.DataPoint3D@,Dundas.Olap.WebUIControls.DataPoint3D@,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF@,System.Drawing.PointF@)">
            <summary>
            Gets position ob the bottom points in area chart.
            </summary>
            <param name="common">Chart common elements.</param>
            <param name="area">Chart area the series belongs to.</param>
            <param name="axisPosition">Axis position.</param>
            <param name="firstPoint">First top point coordinates.</param>
            <param name="secondPoint">Second top point coordinates.</param>
            <param name="thirdPointPosition">Position where the third point is actually located or float.NaN if same as in "firstPoint".</param>
            <param name="fourthPointPosition">Position where the fourth point is actually located or float.NaN if same as in "secondPoint".</param>
            <param name="thirdPoint">Returns third bottom point coordinates.</param>
            <param name="fourthPoint">Returns fourth bottom point coordinates.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.StackedAreaChart.GetPointLoopNumber(System.Boolean,System.Collections.ArrayList)">
            <summary>
            Returns how many loops through all data points is required (1 or 2)
            </summary>
            <param name="selection">Selection indicator.</param>
            <param name="pointsArray">Points array list.</param>
            <returns>Number of loops (1 or 2).</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.StackedAreaChart.DrawLabels3D(Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.CommonElements,Dundas.Olap.WebUIControls.DataPoint3D,System.Single,System.Single)">
            <summary>
            This method draws labels in point chart.
            </summary>
            <param name="graph">The Chart Graphics object.</param>
            <param name="common">The Common elements object.</param>
            <param name="area">Chart area for this chart.</param>
            <param name="pointEx">Data point 3D.</param>
            <param name="positionZ">Z position of the back side of the 3D surface.</param>
            <param name="depth">Depth of the 3D surface.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.StackedAreaChart.GetYValue(Dundas.Olap.WebUIControls.CommonElements,Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.Series,Dundas.Olap.WebUIControls.DataPoint,System.Int32,System.Int32)">
            <summary>
            Helper function, which returns the Y value of the point.
            </summary>
            <param name="common">Chart common elements.</param>
            <param name="area">Chart area the series belongs to.</param>
            <param name="series">Sereis of the point.</param>
            <param name="point">Point object.</param>
            <param name="pointIndex">Index of the point.</param>
            <param name="yValueIndex">Index of the Y value to get.  Set to -1 to get the height.</param>
            <returns>Y value of the point.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.StackedAreaChart.AllPointsZero(System.Int32)">
            <summary>
            checks if all points for given index is 0 for all series
            </summary>
            <param name="pointIndex"></param>
            <returns></returns>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.StackedAreaChart.Name">
            <summary>
            Chart type name
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.StackedAreaChart.Stacked">
            <summary>
            True if chart type is stacked
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.HundredPercentStackedAreaChart.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.HundredPercentStackedAreaChart.Paint(Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.CommonElements,Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.Series)">
            <summary>
            Paint HundredPercentStackedAreaChart Chart
            </summary>
            <param name="graph">The Chart Graphics object</param>
            <param name="common">The Common elements object</param>
            <param name="area">Chart area for this chart</param>
            <param name="seriesToDraw">Chart series to draw.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.HundredPercentStackedAreaChart.GetYValue(Dundas.Olap.WebUIControls.CommonElements,Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.Series,Dundas.Olap.WebUIControls.DataPoint,System.Int32,System.Int32)">
            <summary>
            Helper function, which returns the Y value of the point
            </summary>
            <param name="common">Chart common elements.</param>
            <param name="area">Chart area the series belongs to.</param>
            <param name="series">Sereis of the point.</param>
            <param name="point">Point object.</param>
            <param name="pointIndex">Index of the point.</param>
            <param name="yValueIndex">Index of the Y value to get.</param>
            <returns>Y value of the point.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.HundredPercentStackedAreaChart.AllPointsZero(System.Int32)">
            <summary>
            
            </summary>
            <param name="pointIndex"></param>
            <returns></returns>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.HundredPercentStackedAreaChart.Name">
            <summary>
            Chart type name
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.HundredPercentStackedAreaChart.HundredPercent">
            <summary>
            Indicates that it's a hundredred percent chart.
            Axis scale from 0 to 100 percent should be used.
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.ChartTypes.BubbleChart">
            <summary>
            BubbleChart class extends PointChart class to add support for
            additional Y value which controls the size of the markers used.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.BubbleChart.#ctor">
            <summary>
            Class public constructor
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.BubbleChart.GetImage(Dundas.Charting.WebControl.ChartTypes.ChartTypeRegistry)">
            <summary>
            Gets chart type image.
            </summary>
            <param name="registry">Chart types registry object.</param>
            <returns>Chart type image.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.BubbleChart.ProcessChartType(System.Boolean,Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.CommonElements,Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.Series)">
            <summary>
            This method recalculates size of the bars. This method is used 
            from Paint or Select method.
            </summary>
            <param name="selection">If True selection mode is active, otherwise paint mode is active</param>
            <param name="graph">The Chart Graphics object</param>
            <param name="common">The Common elements object</param>
            <param name="area">Chart area for this chart</param>
            <param name="seriesToDraw">Chart series to draw.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.BubbleChart.GetMarkerBorderSize(Dundas.Olap.WebUIControls.DataPoint)">
            <summary>
            Gets marker border size.
            </summary>
            <param name="point">Data point.</param>
            <returns>Marker border size.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.BubbleChart.GetMarkerSize(Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.CommonElements,Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.DataPoint,System.Int32,System.String)">
            <summary>
            Returns marker size.
            </summary>
            <param name="graph">The Chart Graphics object.</param>
            <param name="common">The Common elements object.</param>
            <param name="area">Chart area for this chart.</param>
            <param name="point">Data point.</param>
            <param name="markerSize">Marker size.</param>
            <param name="markerImage">Marker image.</param>
            <returns>Marker width and height.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.BubbleChart.ScaleBubbleSize(Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.CommonElements,Dundas.Olap.WebUIControls.ChartArea,System.Double)">
            <summary>
            Scales the value used to determine the size of the Bubble.
            </summary>
            <param name="graph">The Chart Graphics object</param>
            <param name="common">The Common elements object</param>
            <param name="area">Chart area for this chart</param>
            <param name="value">Value to scale.</param>
            <returns>Scaled values.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.BubbleChart.GetBubbleMaxSize(Dundas.Olap.WebUIControls.ChartArea)">
            <summary>
            Get value from custom attribute BubbleMaxSize 
            </summary>
            <param name="area">Chart Area</param>
            <returns>Bubble Max size</returns>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.BubbleChart.Name">
            <summary>
            Chart type name
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.BubbleChart.YValuesPerPoint">
            <summary>
            Number of supported Y value(s) per point 
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.BubbleChart.SecondYScale">
            <summary>
            Chart type with two y values used for scale ( bubble chart type )
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.SourceCode.Ajax.Images">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.SourceCode.Ajax.Images.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.SourceCode.Ajax.Images.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.SourceCode.Ajax.Images.DialogPattern">
            <summary>
              Looks up a localized string similar to &lt;div id=&quot;_ds_dlg_dlg_&quot; class=&quot;ds_dlg_dlg&quot; style=&quot;display: none; top: -10px; left:-10px;&quot;&gt;
                   &lt;div class=&quot;ds_dlg_caption&quot; style=&quot;vertical-align:middle;cursor:default;&quot;&gt;
                       &lt;span style=&quot;float:left&quot;&gt;Title&lt;/span&gt;
                       &lt;img src=&quot;(image)&quot; alt=&quot;&quot; style=&quot;float:right;&quot; onclick=&quot;void(0);&quot;/&gt;
                    &lt;/div&gt;
                    &lt;div class=&quot;ds_dlg_shadow&quot; &gt;
                    &lt;/div&gt;
              &lt;/div&gt; .
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.SourceCode.Ajax.Images.LoadDialog">
             <summary>
               Looks up a localized string similar to &lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;
            &lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot; &gt;
            &lt;head&gt;
            	&lt;title&gt;&lt;/title&gt;
            	&lt;style type=&quot;text/css&quot;&gt;
            	.ds_pr_pages
            	{
            		font-size: 8pt;
            		font-family: Tahoma, &apos;Trebuchet MS&apos; , Arial;
            	}
            	&lt;/style&gt;
            &lt;/head&gt;
            &lt;body&gt;
            	&lt;div style=&quot;width:360px; height:86px;vertical-align:middle;&quot; class=&quot;ds_pr_pages&quot;&gt;&lt;form method=&quot;post&quot; enctype=&quot;multipart/form-data&quot; action=&quot;$(action)&quot; name=&quot;formx&quot; id=&quot;formx [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.SourceCode.Ajax.Images.String1">
            <summary>
              Looks up a localized string similar to a.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.OlapTreeNode">
            <summary>
            Represents a data item in a OlapTreeView control. 
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.Design.IControlProvider">
            <summary>
            The interface is used to extent component subobject (like series) in order to provide the component reference ( like chart)
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Design.IControlProvider.Component">
            <summary>
            Gets the component.
            </summary>
            <value>The component.</value>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapTreeNode.#ctor">
            <summary>
            Creates new instance of OlapTreeNode class.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapTreeNode.#ctor(System.String,System.String)">
            <summary>
            Creates new instance of OlapTreeNode class.
            </summary>
            <param name="text">The tect of the node</param>
            <param name="value">The value of the node</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapTreeNode.SetParentControl(Dundas.Olap.WebUIControls.OlapTreeView)">
            <summary>
            Sets the parent control.
            </summary>
            <param name="control">The control.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapTreeNode.SetPath(System.String)">
            <summary>
            Sets the path.
            </summary>
            <param name="path">The path.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapTreeNode.SetParentCollection(Dundas.Olap.WebUIControls.OlapTreeNodeCollection)">
            <summary>
            Sets the parent collection.
            </summary>
            <param name="c">The c.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapTreeNode.ShouldSerializeNodes">
            <summary>
            Shoulds the serialize nodes.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapTreeNode.IsSelected">
            <summary>
            Returns selected state of this node.
            </summary>
            <returns>True if this node is selected; otherwise false;</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapTreeNode.IsExpandedOnSameLevel">
            <summary>
            Determines whether the node is expanded on same level.
            </summary>
            <returns>
            	<c>true</c> if node is expanded on same level; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapTreeNode.GetSpaceCell(System.Int32)">
            <summary>
            Gets the space cell.
            </summary>
            <param name="level">The level.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapTreeNode.GetNavigationCell">
            <summary>
            Gets the navigation cell.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapTreeNode.GetImageCell">
            <summary>
            Gets the image cell.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapTreeNode.GetTextCellHref">
            <summary>
            Gets the text cell with href.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapTreeNode.GetTextCell">
            <summary>
            Gets the text cell.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapTreeNode.GetControlToRender">
            <summary>
            Gets the control to render.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapTreeNode.GetItemsControl">
            <summary>
            Gets the items control.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapTreeNode.ToString">
            <summary>
            This member overrides <see cref="M:System.Object.ToString"/> method.
            </summary>
            <returns>The string representation of the object</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapTreeNode.System#Web#UI#IStateManager#TrackViewState">
            <summary>
            When implemented by a class, instructs the server control to track changes to its view state.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapTreeNode.System#Web#UI#IStateManager#SaveViewState">
            <summary>
            When implemented by a class, saves the changes to a server control's view state to an <see cref="T:System.Object"></see>.
            </summary>
            <returns>
            The <see cref="T:System.Object"></see> that contains the view state changes.
            </returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapTreeNode.System#Web#UI#IStateManager#LoadViewState(System.Object)">
            <summary>
            When implemented by a class, loads the server control's previously saved view state to the control.
            </summary>
            <param name="state">An <see cref="T:System.Object"></see> that contains the saved view state values for the control.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapTreeNode.System#ComponentModel#ICustomTypeDescriptor#GetProperties">
            <summary>
            Returns collection of properties of this object.
            </summary>
            <returns>Collection of properties descriptors.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapTreeNode.System#ComponentModel#ICustomTypeDescriptor#GetProperties(System.Attribute[])">
            <summary>
            Returns collection of properties of this object.
            </summary>
            <param name="attributes">Attributes for filtering.</param>
            <returns>Collection of properties descriptors.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapTreeNode.System#ComponentModel#ICustomTypeDescriptor#GetClassName">
            <summary>
            Gets object class name.
            </summary>
            <returns>Object class name.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapTreeNode.System#ComponentModel#ICustomTypeDescriptor#GetAttributes">
            <summary>
            Gets object attributes.
            </summary>
            <returns>Object attributes</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapTreeNode.System#ComponentModel#ICustomTypeDescriptor#GetComponentName">
            <summary>
            Gets object component name.
            </summary>
            <returns>Object component name.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapTreeNode.System#ComponentModel#ICustomTypeDescriptor#GetConverter">
            <summary>
            Gets object converter.
            </summary>
            <returns>Object converter.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapTreeNode.System#ComponentModel#ICustomTypeDescriptor#GetDefaultEvent">
            <summary>
            Gets object default event.
            </summary>
            <returns>Object default event.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapTreeNode.System#ComponentModel#ICustomTypeDescriptor#GetDefaultProperty">
            <summary>
            Gets object default property.
            </summary>
            <returns>Object default property.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapTreeNode.System#ComponentModel#ICustomTypeDescriptor#GetEditor(System.Type)">
            <summary>
            Gets object editor.
            </summary>
            <param name="editorBaseType">Editor base type.</param>
            <returns>object editor.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapTreeNode.System#ComponentModel#ICustomTypeDescriptor#GetEvents(System.Attribute[])">
            <summary>
            Gets object events.
            </summary>
            <param name="attributes">Filtering attributes.</param>
            <returns>Object events.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapTreeNode.System#ComponentModel#ICustomTypeDescriptor#GetEvents">
            <summary>
            Gets object events.
            </summary>
            <returns>Object events.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapTreeNode.System#ComponentModel#ICustomTypeDescriptor#GetPropertyOwner(System.ComponentModel.PropertyDescriptor)">
            <summary>
            Get property owner.
            </summary>
            <param name="pd">Property descriptor.</param>
            <returns>Property owner.</returns>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapTreeNode.StartPosition">
            <summary>
            Start position for mambers paging
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapTreeNode.IsLoadOnDemandNode">
            <summary>
            Indicates that it is used for load on demand next nodes
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapTreeNode.Control">
            <summary>
            Gets the parent OlapTreeView control.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapTreeNode.Expanded">
            <summary>
            Gets and sets a bool value that indicates if this node is expanded.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapTreeNode.ParentCollection">
            <summary>
            Gets the parent <see cref="T:Dundas.Olap.WebUIControls.OlapTreeNodeCollection"/>. 
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapTreeNode.Parent">
            <summary>
            Gets the parent collection.
            </summary>
            <value>The parent collection.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapTreeNode.ParentNode">
            <summary>
            Gets the parent node object.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapTreeNode.Path">
            <summary>
            Gets the string that represents path to this node.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapTreeNode.Level">
            <summary>
            Gets the value of node level.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapTreeNode.Text">
            <summary>
            Gets and sets the node text.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapTreeNode.Value">
            <summary>
            Gets and sets the node value
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapTreeNode.OnDemand">
            <summary>
            Gets ans sets the flag that indicated late load of subnodes. 
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapTreeNode.CheckedState">
            <summary>
            Gets and sets <see cref="T:Dundas.Olap.WebUIControls.NodeCheckState"/> of this node.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapTreeNode.Attributes">
            <summary>
            Gets the node HTML attributes collection
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapTreeNode.Href">
            <summary>
            Gets and sets Url which is used for click.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapTreeNode.ImageUrl">
            <summary>
            Gets and sets Url which is used for click.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapTreeNode.Tooltip">
            <summary>
            Gets and sets the ToolTip.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapTreeNode.Bold">
            <summary>
            Gets and sets if node is bold.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapTreeNode.Nodes">
            <summary>
            Gets the subnodes collection
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapTreeNode.System#Web#UI#IStateManager#IsTrackingViewState">
            <summary>
            When implemented by a class, gets a value indicating whether a server control is tracking its view state changes.
            </summary>
            <value></value>
            <returns>true if a server control is tracking its view state changes; otherwise, false.</returns>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapTreeNode.Dundas#Olap#WebUIControls#Design#IControlProvider#Component">
            <summary>
            </summary>
            <value></value>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapTreeNode.Converter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Converter"/> class.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapTreeNode.Converter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Returns whether this object supports properties, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that provides a format context.</param>
            <returns>
            true if <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)"></see> should be called to find the properties of this object; otherwise, false.
            </returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapTreeNode.Converter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>
            Returns a collection of properties for the type of array specified by the value parameter, using the specified context and attributes.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that provides a format context.</param>
            <param name="value">An <see cref="T:System.Object"></see> that specifies the type of array for which to get properties.</param>
            <param name="attributes">An array of type <see cref="T:System.Attribute"></see> that is used as a filter.</param>
            <returns>
            A <see cref="T:System.ComponentModel.PropertyDescriptorCollection"></see> with the properties that are exposed for this data type, or null if there are no properties.
            </returns>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.OlapTreeNodeCollection">
            <summary>
            Represents a collection of OlapTreeNode objects
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapTreeNodeCollection.#ctor">
            <summary>
            Creates new instance of OlapTreeNodeCollection class
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapTreeNodeCollection.SetParent(System.Object)">
            <summary>
            Sets the parent.
            </summary>
            <param name="parent">The parent.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapTreeNodeCollection.GetExpandedNodes(System.Text.StringBuilder)">
            <summary>
            Gets the expanded nodes.
            </summary>
            <param name="b">The string builder.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapTreeNodeCollection.GetCheckedNodes(System.Text.StringBuilder)">
            <summary>
            Gets the checked nodes.
            </summary>
            <param name="b">The string builder.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapTreeNodeCollection.PreProcessOnDemandNodes">
            <summary>
            Pres the process on demand nodes.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapTreeNodeCollection.FindNodeByPath(System.String)">
            <summary>
            Locates a OlapPreeNode by specified path.
            </summary>
            <param name="path">Path to this tree node.</param>
            <returns>A OlapTreeNode object if found; otherwise null.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapTreeNodeCollection.MakeNodesBold(System.String)">
            <summary>
            Makes the nodes bold.
            </summary>
            <param name="path">The path.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapTreeNodeCollection.Add(Dundas.Olap.WebUIControls.OlapTreeNode)">
            <summary>
            Adds new OlapTreeNode object to the collection
            </summary>
            <param name="value">Object to add</param>
            <returns>Position of the object in the collection</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapTreeNodeCollection.Insert(System.Int32,Dundas.Olap.WebUIControls.OlapTreeNode)">
            <summary>
            Inserts node to the given position
            </summary>
            <param name="index">node index</param>
            <param name="value">node value</param>        
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapTreeNodeCollection.Add(System.String,System.String)">
            <summary>
            Adds new OlapTreeNode by given text and value.
            </summary>
            <param name="text">Text of the new OlapTreeNode </param>
            <param name="value">Value of the new OlapTreeNode </param>
            <returns>The new OlapTreeNode added to the collection</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapTreeNodeCollection.OnInsertComplete(System.Int32,System.Object)">
            <summary>
            Performs additional custom processes after inserting a new element into the CollectionBase instance.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapTreeNodeCollection.OnRemoveComplete(System.Int32,System.Object)">
            <summary>
            This member overrides <see cref="M:System.Collections.CollectionBase.OnRemoveComplete(System.Int32,System.Object)"/>.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapTreeNodeCollection.OnSetComplete(System.Int32,System.Object,System.Object)">
            <summary>
            This member overrides <see cref="M:System.Collections.CollectionBase.OnSetComplete(System.Int32,System.Object,System.Object)"/>.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapTreeNodeCollection.OnValidate(System.Object)">
            <summary>
            This member overrides <see cref="M:System.Collections.CollectionBase.OnValidate(System.Object)"/>.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapTreeNodeCollection.System#Web#UI#IStateManager#TrackViewState">
            <summary>
            When implemented by a class, instructs the server control to track changes to its view state.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapTreeNodeCollection.System#Web#UI#IStateManager#SaveViewState">
            <summary>
            When implemented by a class, saves the changes to a server control's view state to an <see cref="T:System.Object"></see>.
            </summary>
            <returns>
            The <see cref="T:System.Object"></see> that contains the view state changes.
            </returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapTreeNodeCollection.System#Web#UI#IStateManager#LoadViewState(System.Object)">
            <summary>
            When implemented by a class, loads the server control's previously saved view state to the control.
            </summary>
            <param name="state">An <see cref="T:System.Object"></see> that contains the saved view state values for the control.</param>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapTreeNodeCollection.DimensionDescriptor">
            <summary>
            Gets or sets the dimension descriptor
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapTreeNodeCollection.Control">
            <summary>
            Gets the parent control.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapTreeNodeCollection.Item(System.Int32)">
            <summary>
            Gets and sets the OlapTreeNode defined by index
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapTreeNodeCollection.System#Web#UI#IStateManager#IsTrackingViewState">
            <summary>
            When implemented by a class, gets a value indicating whether a server control is tracking its view state changes.
            </summary>
            <value></value>
            <returns>true if a server control is tracking its view state changes; otherwise, false.</returns>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.OlapWebItemStyle">
            <summary>
            Represents the style of a some OLAP internal controls.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapWebItemStyle.Width">
            <summary>
            Gets or sets the width of the Web server control.
            </summary>
            <value>
            A unit that represents the width of the web control. 
            </value>
            <remarks>
            The default is Empty, meaning that this property is not set by default.
            </remarks>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapWebItemStyle.Height">
            <summary>
            Gets or sets the height of the Web server control.
            </summary>
            <value>
            A unit that represents the height of the web control.
            </value>
            <remarks> 
            The default is Empty, meaning that this property is not set by default.
            </remarks>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.OlapWebItemSelectedStyle">
            <summary>
            Represents the style of a some OLAP internal controls.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapWebItemSelectedStyle.BackColor">
            <summary>
            Gets or sets the background color of the Web server control.
            </summary>
            <value>
            A System.Drawing.Color that represents the background color of the control.
            The default is System.Drawing.Color.Empty, which indicates that this property
            is not set.
            </value>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.DimensionMemberTreeNodeCollection">
            <summary>
            Collection for dimension member tree.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DimensionMemberTreeNodeCollection.#ctor">
            <summary>
            Constructor
            </summary>
            <param name="cubeDataSchema"></param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DimensionMemberTreeNodeCollection.GetCheckedNodes(System.Text.StringBuilder)">
            <summary>
            Gets the checked nodes.
            </summary>
            <param name="b">The string builder.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DimensionMemberTreeNodeCollection.GetMemberPath(Dundas.Olap.Data.Member)">
            <summary>
            Returns member path
            </summary>
            <param name="member">member</param>
            <returns>path in tree</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DimensionMemberTreeNodeCollection.GetMemberPath(Dundas.Olap.Data.Member,Dundas.Olap.Data.Level)">
            <summary>
            Returns member path
            </summary>
            <param name="member">member</param>
            <returns>path in tree</returns>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.DimensionMemberTreeNodeCollection.CubeDataSchema">
            <summary>
            Gets/Sets cube duata schema
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.NodeCheckState">
            <summary>
            Specifies the state of a control, such as a OlapTreeNode, that can be checked, unchecked, 
            or set to an indeterminate state.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.NodeCheckState.Unchecked">
            <summary>
            The control is checked.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.NodeCheckState.Checked">
            <summary>
            The control is unchecked.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.NodeCheckState.Multiple">
            <summary>
            The OlapTreeNode control is in multiple state.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.Pages.popupMenu">
            <summary>
            Summary description for popupMenu.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Pages.popupMenu.OlapManager">
            <summary>
            
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Pages.popupMenu.OnInit(System.EventArgs)">
            <summary>
            This member overrides <see cref="M:Dundas.Olap.WebUIControls.Pages.popupMenu.OnInit(System.EventArgs)"/> method
            </summary>
            <param name="e">An event argument</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Pages.popupMenu.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Pages.popupMenu.MenuTable">
            <summary>
            
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Pages.popupMenu.IsOnlyMeasuresInAxis">
            <summary>
            Checks if associated axis contains only measures.
            </summary>
            <returns>
            <b>True</b> if associated axis contains only measures.
            </returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Pages.popupMenu.CreateChildControls">
            <summary>
            This member overrides <see cref="M:Dundas.Olap.WebUIControls.Pages.popupMenu.CreateChildControls"/> method;
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Pages.popupMenu.Render(System.Web.UI.HtmlTextWriter)">
            <summary>   
            Render this control to the output parameter specified.
            </summary>
            <param name="writer"> The HTML writer to write out to </param>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.HeaderItem">
            <summary>
            Header item class.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.HeaderItem.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.HeaderItem.#ctor(System.Object)">
            <summary>
            Creates header item and assignd data objects.
            </summary>
            <param name="aData">data object</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.HeaderItem.#ctor(System.Object,Dundas.Olap.WebUIControls.HeaderState)">
            <summary>
            Creates header item, assigns object and state.
            </summary>
            <param name="aData">object</param>
            <param name="aState">state</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.HeaderItem.#ctor(System.Object,Dundas.Olap.WebUIControls.HeaderState,Dundas.Olap.WebUIControls.HeaderItem,System.Collections.Generic.List{Dundas.Olap.WebUIControls.HeaderItem})">
            <summary>
            Creates header item, assigns data, state, parent and children
            </summary>
            <param name="aData">Data object</param>
            <param name="aState">Item state</param>
            <param name="aParent">Item parent</param>
            <param name="aChildren">Item children</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.HeaderItem.#ctor(System.Object,Dundas.Olap.WebUIControls.HeaderState,Dundas.Olap.WebUIControls.HeaderItem)">
            <summary>
            Creates instance and assigns data, state and parent.
            </summary>
            <param name="aData">object instance</param>
            <param name="aState">object state</param>
            <param name="aParent">item parent</param>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.HeaderItem.state">
            <summary>
            Item state.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.HeaderItem.parent">
            <summary>
            Item parent
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.HeaderItem.children">
            <summary>
            List of header items
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.HeaderItem.data">
            <summary>
            Item data
            </summary> 
        </member>
        <member name="F:Dundas.Olap.WebUIControls.HeaderItem.uniqueName">
            <summary>
            Unique name.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.HeaderItem.rowNo">
            <summary>
            Row header row number.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.HeaderItem.itemType">
            <summary>
            Type of item - totals or details.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.HeaderItem.totalsItem">
            <summary>
            Link to totals item.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.HeaderItem.tuple">
            <summary>
            Item tuple.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.HeaderItem.TupleToString">
            <summary>
            Gets sting representation of tuple.
            </summary>
            <returns>Tuple name as string value</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.HeaderItem.ToString">
            <summary>
            Gets string representation of header item
            </summary>
            <returns>data in string format</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.HeaderItem.CountChildren">
            <summary>
            Count children for totals exchange.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.HeaderItem.TotalItem">
            <summary>
            Total item in children collection.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.HeaderItem.ItemType">
            <summary>
            Gets or sets item type.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.HeaderItem.State">
            <summary>
            Gets or sets item state.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.HeaderItem.Parent">
            <summary>
            Gets or sets header item's parent
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.HeaderItem.ColSpan">
            <summary>
            Gets or sets columns number combined by item
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.HeaderItem.RowSpan">
            <summary>
            Gets or sets number of rows combined by item
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.HeaderItem.Children">
            <summary>
            List of children
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.HeaderItem.Data">
            <summary>
            Data object
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.HeaderItem.RowNo">
            <summary>
            Row number 
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.HeaderItem.Tuple">
            <summary>
            Tuple for current item.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.HeaderItem.UniqueName">
            <summary>
            Gets or sets unique name
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.HeaderItem.Level">
            <summary>
            Gets current item level.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.TotalHeaderItem">
            <summary>
            Class represents header total.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.TotalHeaderItem.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.TotalHeaderItem.#ctor(System.Object,Dundas.Olap.WebUIControls.HeaderState)">
            <summary>
            Creates an instance of HeaderItem
            </summary>
            <param name="aData">data container.</param>
            <param name="aState">state of the header.</param>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.TotalHeaderItem.dataPosition">
            <summary>
            column/row position of data for item
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.TotalHeaderItem.DataPosition">
            <summary>
            Gets or sets data position in table.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.Row">
            <summary>
            Header row/column.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Row.#ctor(Dundas.Olap.WebUIControls.OlapGridHeaderCore)">
            <summary>
            Create an instance of the row.
            </summary>
            <param name="aParent"></param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Row.Add(Dundas.Olap.WebUIControls.HeaderItem)">
            <summary>
            Adds an item to row.
            </summary>
            <param name="item">item to be added.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Row.Remove(Dundas.Olap.WebUIControls.HeaderItem)">
            <summary>
            Remove item from list.
            </summary>
            <param name="item">item to be removed</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Row.IndexOf(Dundas.Olap.WebUIControls.HeaderItem)">
            <summary>
            Returns index of item.
            </summary>
            <param name="item">item</param>
            <returns>item index.</returns>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Row.Items">
            <summary>
            Header item list
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Row.Size">
            <summary>
            Row size.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.Merger">
            <summary>
            Merge paddings.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Merger.MergeWith(System.Int32@,System.Int32,System.Int32)">
            <summary>
            Merge padding elements if target is default.
            </summary>
            <param name="target">target</param>
            <param name="source">source </param>
            <param name="defaultX">default value</param>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.OlapGridPadding">
            <summary>
            This class is used to set padding values around the grid.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.OlapGridPadding.left">
            <summary>
            The value for left padding. 
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.OlapGridPadding.right">
            <summary>
            The value for right padding.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.OlapGridPadding.top">
            <summary>
            The value for top padding.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.OlapGridPadding.bottom">
            <summary>
            The value for bottom padding.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGridPadding.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Public constructor that takes left, right, top and bottom values.
            </summary>
            <param name="aLeft">left padding.</param>
            <param name="aRight">right padding.</param>
            <param name="aTop">top padding.</param>
            <param name="aBottom">bottom padding.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGridPadding.#ctor">
            <summary>
            Public constructor.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGridPadding.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serialization constructor.
            </summary>
            <param name="info">serialization info</param>
            <param name="context">context</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGridPadding.MergeWith(Dundas.Olap.WebUIControls.OlapGridPadding)">
            <summary>
            Merge current padding with source.
            </summary>
            <param name="headerPadding">source padding</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGridPadding.CopyFrom(Dundas.Olap.WebUIControls.OlapGridPadding)">
            <summary>
            Copy from source.
            </summary>
            <param name="headerPadding">source padding.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGridPadding.ToString">
            <summary>
            Returns a string representation of this object.
            </summary>
            <returns>string representation of class instance.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGridPadding.GetHashCode">
            <summary>
            Returns hashcode.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGridPadding.Equals(System.Object)">
            <summary>
            Checks if current padding is equal with argument.
            </summary>
            <param name="obj">padding to be checked.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGridPadding.Reset">
            <summary>
            Resets to empty values.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGridPadding.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Get object data
            </summary>
            <param name="info">serialization info.</param>
            <param name="context">context</param>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapGridPadding.Left">
            <summary>
            Gets or sets a left padding value.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapGridPadding.Right">
            <summary>
            Gets or sets a right padding value.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapGridPadding.Top">
            <summary>
            Gets or sets a top padding value.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapGridPadding.Bottom">
            <summary>
            Gets or sets a bottom padding value.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.OlapGridHeaderCore">
            <summary>
            base class for header management
            prepares header for rendering on win/web
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.OlapGridComponent">
            <summary>
            Element of olap grid (header, title, data area)
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGridComponent.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.OlapGridComponent.tooltip">
            <summary>
            Tooltip
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapGridComponent.Tooltip">
            <summary>
            Gets or sets tooltip.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.OlapGridHeaderCore.visibleLevels">
            <summary>
            Get/set number of visible levels for column header
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.OlapGridHeaderCore.addParentNames">
            <summary>
            Add parent names when drill-down
            </summary> 
        </member>
        <member name="F:Dundas.Olap.WebUIControls.OlapGridHeaderCore.position">
            <summary>
            Drawing position (win)
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.OlapGridHeaderCore.size">
            <summary>
            Header size
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.OlapGridHeaderCore.list">
            <summary>
            Items list (parent/children collection)
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.OlapGridHeaderCore.direction">
            <summary>
            header direction (vertical/horizontal)
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.OlapGridHeaderCore.name">
            <summary>
            header name (id for WEB)
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.OlapGridHeaderCore.leaves">
            <summary>
            leaves list
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.OlapGridHeaderCore.rowNumber">
            <summary>
            row number for column header (used for web)
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.OlapGridHeaderCore.style">
            <summary>
            Element style.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.OlapGridHeaderCore.table">
            <summary>
            Reference to datatable.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.OlapGridHeaderCore.rows">
            <summary>
            header rows
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGridHeaderCore.InitRow(Dundas.Olap.WebUIControls.HeaderItem,System.Int32,System.Int32)">
            <summary>
            Add item to specified level (recursive)
            </summary>
            <param name="item">Item instance.</param>
            <param name="level">Item level.</param>
            <param name="totalsAdded">Number of totals added.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGridHeaderCore.adjustRows">
            <summary>
            checks items and recaluclates sizes/span for grouped items
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGridHeaderCore.AssignSpan(Dundas.Olap.WebUIControls.HeaderItem,System.Int32)">
            <summary>
            change span for given item
            </summary>
            <param name="item"></param>
            <param name="val"></param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGridHeaderCore.ExchangeTotal(System.Int32,System.Int32)">
            <summary>
            Exchanges total rows/columns
            </summary>
            <param name="oldPosition"></param>
            <param name="newPosition"></param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGridHeaderCore.GetMaxPosition">
            <summary>
            Gets max column or row number
            </summary>
            <returns>max row or column number</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGridHeaderCore.InitHeader">
            <summary>
            Initialize header.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGridHeaderCore.CalcSpan(Dundas.Olap.WebUIControls.HeaderItem)">
            <summary>
            calc row/col span for given item
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGridHeaderCore.#ctor(Dundas.Olap.WebUIControls.Direction)">
            <summary>
            Creates header with given direction.
            </summary>
            <param name="dir">header direction.</param>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapGridHeaderCore.Table">
            <summary>
            Reference to data table 
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapGridHeaderCore.Name">
            <summary>
            header name
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapGridHeaderCore.Leaves">
            <summary>
            Header leaves - the bottom/right items  
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapGridHeaderCore.Position">
            <summary>
            Control position
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapGridHeaderCore.Size">
            <summary>
            Control size
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapGridHeaderCore.List">
            <summary>
            Items list
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapGridHeaderCore.AddParentNames">
            <summary>
            Identifies add or not parent names when drill down
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapGridHeaderCore.Rows">
            <summary>
            Header rows
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapGridHeaderCore.DataSource">
            <summary>
            Data source for header
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapGridHeaderCore.VisibleLevels">
            <summary>
            Get/set number of visible levels for column header
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapGridHeaderCore.Direction">
            <summary>
            Header direction (vertical/horizontal)
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapGridHeaderCore.Style">
            <summary>
            Current header style
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.OlapGridRowHeader">
            <summary>
            Row header management class (left side of grid).
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGridRowHeader.#ctor">
            <summary>
            Creates new instance of row header.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGridRowHeader.IncPoint(System.Drawing.PointF,System.Drawing.Size)">
            <summary>
            Increments point on size width.
            </summary>
            <param name="p">point</param>
            <param name="s">size to be added</param>
            <returns>new point value</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGridRowHeader.InitHeader">
            <summary>
            Clears row header and inits it with new data.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGridRowHeader.AssignSpan(Dundas.Olap.WebUIControls.HeaderItem,System.Int32)">
            <summary>
            sets span value for columns
            </summary>
            <param name="item">item</param>
            <param name="val">new span value</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGridRowHeader.CalcSpan(Dundas.Olap.WebUIControls.HeaderItem)">
            <summary>
            Calc row span and sets rowlist element.
            </summary>
            <param name="item">item to be reviewed</param>
            <returns>span value</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGridRowHeader.ExchangeTotal(System.Int32,System.Int32)">
            <summary>
            Exchanges rows in table for Total.
            </summary>
            <param name="oldPosition"></param>
            <param name="newPosition"></param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGridRowHeader.GetMaxPosition">
            <summary>
            Get table height for grand total.
            </summary>
            <returns></returns>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.OlapGridRowHeader.rowList">
            <summary>
            Rows list.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapGridRowHeader.RowList">
            <summary>
            Rows list.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapGridRowHeader.Style">
            <summary>
            Element style.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.OlapGridColumnHeader">
            <summary>
            Column header management class (top of the grid)
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGridColumnHeader.#ctor">
            <summary>
            Creates new instance of coulmn header.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGridColumnHeader.AssignSpan(Dundas.Olap.WebUIControls.HeaderItem,System.Int32)">
            <summary>
            Sets span value for rows.
            </summary>
            <param name="item">item</param>
            <param name="val">new span value</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGridColumnHeader.CalcSpan(Dundas.Olap.WebUIControls.HeaderItem)">
            <summary>
            sets span value for columns
            </summary>
            <param name="item">item</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGridColumnHeader.ExchangeTotal(System.Int32,System.Int32)">
            <summary>
            Moves total value from old position to new ones.
            </summary>
            <param name="oldPosition">old position.</param>
            <param name="newPosition">new position.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGridColumnHeader.GetMaxPosition">
            <summary>
            Get max column position
            </summary>
            <returns>last column number</returns>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapGridColumnHeader.Style">
            <summary>
            Gets or sets element style.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.HeaderItemType">
            <summary>
            Header item type (total/detail)
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.HeaderState">
            <summary>
            Header item state used for icon drawing
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.Direction">
            <summary>
            Header direction - vertical/horizontal
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.ElementPosition">
            <summary>
            ElementPosition class is base class for many chart visual 
            elements like Legend, Title and ChartArea. It provides 
            the position of the chart element in relative coordinate 
            (0,0 – 100,100).
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ElementPosition.#ctor">
            <summary>
            Element position default constructor
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ElementPosition.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Element position constructor.
            </summary>
            <param name="x">X position.</param>
            <param name="y">Y position.</param>
            <param name="width">Width.</param>
            <param name="height">Height.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ElementPosition.ResetAllAreasAutoPosition(System.Boolean)">
            <summary>
            Asks the user at design-time if he wants to change the Auto position
            of all areas at the same time.
            </summary>
            <param name="autoValue">Value to be set for the Auto property.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ElementPosition.ToRectangleF">
            <summary>
            Convert element position into RectangleF
            </summary>
            <returns>RectangleF structure.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ElementPosition.FromRectangleF(System.Drawing.RectangleF)">
            <summary>
            Initialize element position from RectangleF
            </summary>
            <param name="rect">Rectangle class.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ElementPosition.GetSize">
            <summary>
            Gets position size.
            </summary>
            <returns>Position size.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ElementPosition.Bottom">
            <summary>
            Gets bottom position in relative coordinates.
            </summary>
            <returns>Bottom position.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ElementPosition.Right">
            <summary>
            Gets right position in relative coordinates.
            </summary>
            <returns>Right position.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ElementPosition.Equals(System.Object)">
            <summary>
            Determines whether two element positions are equal.
            </summary>
            <param name="obj">Element position to test with</param>
            <returns>True if positions are equal</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ElementPosition.GetHashCode">
            <summary>
            Hash function of the element position.
            </summary>
            <returns>A hash code for the object.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ElementPosition.ToString">
            <summary>
            Returns string that represent element position.
            </summary>
            <returns>Element position data as string.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ElementPosition.SetPositionNoAuto(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Set element position without modifying the "Auto" property
            </summary>
            <param name="x">X position.</param>
            <param name="y">Y position.</param>
            <param name="width">Width.</param>
            <param name="height">Height.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ElementPosition.Invalidate">
            <summary>
            Invalidate chart when element position changed
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ElementPosition.X">
            <summary>
            Element X position
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ElementPosition.Y">
            <summary>
            Element Y position
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ElementPosition.Width">
            <summary>
            Element width
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ElementPosition.Height">
            <summary>
            Element height
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ElementPosition.Auto">
            <summary>
            Auto positionong flag
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.Formulas.StatisticalAnalysis">
            <summary>
            
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Formulas.StatisticalAnalysis.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Formulas.StatisticalAnalysis.Formula(System.String,System.Double[][],System.Double[][]@,System.String[],System.String[],System.String[][]@)">
            <summary>
            The first method in the module, which converts a formula 
            name to the corresponding private method.
            </summary>
            <param name="formulaName">String which represent a fomula name</param>
            <param name="inputValues">Arrays of doubles - Input values</param>
            <param name="outputValues">Arrays of doubles - Output values</param>
            <param name="parameterList">Array of strings - Formula parameters</param>
            <param name="extraParameterList">Array of strings - Extra Formula parameters from DataManipulator object</param>
            <param name="outLabels">Array of strings - Used for Labels. Description for ouput results.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Formulas.StatisticalAnalysis.Anova(System.Double[][],System.Double[][]@,System.String[],System.String[],System.String[][]@)">
            <summary>
            Anova test
            </summary>
            <param name="inputValues">Arrays of doubles - Input values</param>
            <param name="outputValues">Arrays of doubles - Output values</param>
            <param name="parameterList">Array of strings - Parameters</param>
            <param name="extraParameterList">Array of strings - Extra parameters</param>
            <param name="outLabels">Array of strings - Used for Labels. Description for ouput results.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Formulas.StatisticalAnalysis.Correlation(System.Double[][],System.Double[][]@,System.String[],System.String[],System.String[][]@)">
            <summary>
            Correlation measure the relationship between two data sets that 
            are scaled to be independent of the unit of measurement. The 
            population correlation calculation returns the covariance 
            of two data sets divided by the product of their standard 
            deviations: You can use the Correlation to determine whether two 
            ranges of data move together — that is, whether large values of 
            one set are associated with large values of the other 
            (positive correlation), whether small values of one set are 
            associated with large values of the other (negative correlation), 
            or whether values in both sets are unrelated (correlation 
            near zero).
            </summary>
            <param name="inputValues">Arrays of doubles - Input values</param>
            <param name="outputValues">Arrays of doubles - Output values</param>
            <param name="parameterList">Array of strings - Parameters</param>
            <param name="extraParameterList">Array of strings - Extra parameters</param>
            <param name="outLabels">Array of strings - Used for Labels. Description for ouput results.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Formulas.StatisticalAnalysis.Covariance(System.Double[][],System.Double[][]@,System.String[],System.String[],System.String[][]@)">
            <summary>
            Returns covariance, the average of the products of deviations 
            for each data point pair. Use covariance to determine the 
            relationship between two data sets. For example, you can 
            examine whether greater income accompanies greater 
            levels of education.
            </summary>
            <param name="inputValues">Arrays of doubles - Input values</param>
            <param name="outputValues">Arrays of doubles - Output values</param>
            <param name="parameterList">Array of strings - Parameters</param>
            <param name="extraParameterList">Array of strings - Extra parameters</param>
            <param name="outLabels">Array of strings - Used for Labels. Description for ouput results.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Formulas.StatisticalAnalysis.FTest(System.Double[][],System.Double[][]@,System.String[],System.String[],System.String[][]@)">
            <summary>
            Returns the result of an F-test. An F-test returns the one-tailed 
            probability that the variances in array1 and array2 are not 
            significantly different. Use this function to determine 
            whether two samples have different variances. For example, 
            given test scores from public and private schools, you can 
            test whether these schools have different levels of diversity.
            </summary>
            <param name="inputValues">Arrays of doubles - Input values</param>
            <param name="outputValues">Arrays of doubles - Output values</param>
            <param name="parameterList">Array of strings - Parameters</param>
            <param name="extraParameterList">Array of strings - Extra parameters</param>
            <param name="outLabels">Array of strings - Used for Labels. Description for ouput results.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Formulas.StatisticalAnalysis.ZTest(System.Double[][],System.Double[][]@,System.String[],System.String[],System.String[][]@)">
            <summary>
            Returns the two-tailed P-value of a z-test. The z-test 
            generates a standard score for x with respect to the data set, 
            array, and returns the two-tailed probability for the 
            normal distribution. You can use this function to assess 
            the likelihood that a particular observation is drawn 
            from a particular population.
            </summary>
            <param name="inputValues">Arrays of doubles - Input values</param>
            <param name="outputValues">Arrays of doubles - Output values</param>
            <param name="parameterList">Array of strings - Parameters</param>
            <param name="extraParameterList">Array of strings - Extra parameters</param>
            <param name="outLabels">Array of strings - Used for Labels. Description for ouput results.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Formulas.StatisticalAnalysis.TTest(System.Double[][],System.Double[][]@,System.String[],System.String[],System.String[][]@,System.Boolean)">
            <summary>
            Returns the two-tailed P-value of a z-test. The z-test 
            generates a standard score for x with respect to the data set, 
            array, and returns the two-tailed probability for the 
            normal distribution. You can use this function to assess 
            the likelihood that a particular observation is drawn 
            from a particular population.
            </summary>
            <param name="inputValues">Arrays of doubles - Input values</param>
            <param name="outputValues">Arrays of doubles - Output values</param>
            <param name="parameterList">Array of strings - Parameters</param>
            <param name="extraParameterList">Array of strings - Extra parameters</param>
            <param name="outLabels">Array of strings - Used for Labels. Description for ouput results.</param>
            <param name="equalVariances">True if Variances are equal.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Formulas.StatisticalAnalysis.TTestPaired(System.Double[][],System.Double[][]@,System.String[],System.String[],System.String[][]@)">
            <summary>
            Returns the two-tailed P-value of a z-test. The z-test 
            generates a standard score for x with respect to the data set, 
            array, and returns the two-tailed probability for the 
            normal distribution. You can use this function to assess 
            the likelihood that a particular observation is drawn 
            from a particular population.
            </summary>
            <param name="inputValues">Arrays of doubles - Input values</param>
            <param name="outputValues">Arrays of doubles - Output values</param>
            <param name="parameterList">Array of strings - Parameters</param>
            <param name="extraParameterList">Array of strings - Extra parameters</param>
            <param name="outLabels">Array of strings - Used for Labels. Description for ouput results.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Formulas.StatisticalAnalysis.TDistribution(System.Double[][],System.Double[][]@,System.String[],System.String[],System.String[][]@)">
            <summary>
            Returns the Percentage Points (probability) for the Student 
            t-distribution. The t-distribution is used in the hypothesis 
            testing of small sample data sets. Use this function in place 
            of a table of critical values for the t-distribution.
            </summary>
            <param name="inputValues">Arrays of doubles - Input values</param>
            <param name="outputValues">Arrays of doubles - Output values</param>
            <param name="parameterList">Array of strings - Parameters</param>
            <param name="extraParameterList">Array of strings - Extra parameters</param>
            <param name="outLabels">Array of strings - Used for Labels. Description for ouput results.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Formulas.StatisticalAnalysis.FDistribution(System.Double[][],System.Double[][]@,System.String[],System.String[],System.String[][]@)">
            <summary>
            Returns the F probability distribution. You can use 
            this function to determine whether two data sets have 
            different degrees of diversity. For example, you can 
            examine test scores given to men and women entering 
            high school and determine if the variability in the 
            females is different from that found in the males.
            </summary>
            <param name="inputValues">Arrays of doubles - Input values</param>
            <param name="outputValues">Arrays of doubles - Output values</param>
            <param name="parameterList">Array of strings - Parameters</param>
            <param name="extraParameterList">Array of strings - Extra parameters</param>
            <param name="outLabels">Array of strings - Used for Labels. Description for ouput results.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Formulas.StatisticalAnalysis.NormalDistribution(System.Double[][],System.Double[][]@,System.String[],System.String[],System.String[][]@)">
            <summary>
            </summary>
            <param name="inputValues">Arrays of doubles - Input values</param>
            <param name="outputValues">Arrays of doubles - Output values</param>
            <param name="parameterList">Array of strings - Parameters</param>
            <param name="extraParameterList">Array of strings - Extra parameters</param>
            <param name="outLabels">Array of strings - Used for Labels. Description for ouput results.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Formulas.StatisticalAnalysis.TDistributionInverse(System.Double[][],System.Double[][]@,System.String[],System.String[],System.String[][]@)">
            <summary>
            Returns the t-value of the Student's t-distribution 
            as a function of the probability and the degrees 
            of freedom.
            </summary>
            <param name="inputValues">Arrays of doubles - Input values</param>
            <param name="outputValues">Arrays of doubles - Output values</param>
            <param name="parameterList">Array of strings - Parameters</param>
            <param name="extraParameterList">Array of strings - Extra parameters</param>
            <param name="outLabels">Array of strings - Used for Labels. Description for ouput results.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Formulas.StatisticalAnalysis.FDistributionInverse(System.Double[][],System.Double[][]@,System.String[],System.String[],System.String[][]@)">
            <summary>
            Returns the inverse of the F probability distribution. 
            If p = FDIST(x,...), then FINV(p,...) = x. The F distribution 
            can be used in an F-test that compares the degree of 
            variability in two data sets. For example, you can analyze 
            income distributions in the United States and Canada to 
            determine whether the two countries have a similar degree 
            of diversity.
            </summary>
            <param name="inputValues">Arrays of doubles - Input values</param>
            <param name="outputValues">Arrays of doubles - Output values</param>
            <param name="parameterList">Array of strings - Parameters</param>
            <param name="extraParameterList">Array of strings - Extra parameters</param>
            <param name="outLabels">Array of strings - Used for Labels. Description for ouput results.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Formulas.StatisticalAnalysis.NormalDistributionInverse(System.Double[][],System.Double[][]@,System.String[],System.String[],System.String[][]@)">
            <summary>
            Returns the inverse of the standard normal 
            cumulative distribution. The distribution 
            has a mean of zero and a standard deviation 
            of one.
            </summary>
            <param name="inputValues">Arrays of doubles - Input values</param>
            <param name="outputValues">Arrays of doubles - Output values</param>
            <param name="parameterList">Array of strings - Parameters</param>
            <param name="extraParameterList">Array of strings - Extra parameters</param>
            <param name="outLabels">Array of strings - Used for Labels. Description for ouput results.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Formulas.StatisticalAnalysis.CheckNumOfPoints(System.Double[][])">
            <summary>
            Check number of data points. The number shoud be greater then 1.
            </summary>
            <param name="inputValues">Input series</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Formulas.StatisticalAnalysis.Covar(System.Double[],System.Double[])">
            <summary>
            Returns covariance, the average of the products of deviations 
            for each data point pair. Use covariance to determine the 
            relationship between two data sets. For example, you can 
            examine whether greater income accompanies greater 
            levels of education.
            </summary>
            <param name="arrayX">First data set from X random variable.</param>
            <param name="arrayY">Second data set from Y random variable.</param>
            <returns>Returns covariance</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Formulas.StatisticalAnalysis.GammLn(System.Double)">
            <summary>
            Returns the natural logarithm of the gamma function, G(x).
            </summary>
            <param name="n">The value for which you want to calculate gamma function.</param>
            <returns>Returns the natural logarithm of the gamma function.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Formulas.StatisticalAnalysis.BetaFunction(System.Double,System.Double)">
            <summary>
            Calculates Beta function
            </summary>
            <param name="m">First parameter for beta function</param>
            <param name="n">Second parameter for beta function</param>
            <returns>returns beta function</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Formulas.StatisticalAnalysis.BetaCF(System.Double,System.Double,System.Double)">
            <summary>
            Used by betai: Evaluates continued fraction for 
            incomplete beta function by modifed Lentz’s
            </summary>
            <param name="a">Beta incomplete parameter</param>
            <param name="b">Beta incomplete parameter</param>
            <param name="x">Beta incomplete parameter</param>
            <returns>Vakue used for Beta incomplete function</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Formulas.StatisticalAnalysis.NormalDistributionFunction(System.Double)">
            <summary>
            Standard normal density function
            </summary>
            <param name="t">T Value</param>
            <returns>Standard normal density</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Formulas.StatisticalAnalysis.BetaIncomplete(System.Double,System.Double,System.Double)">
            <summary>
            Returns the incomplete beta function Ix(a, b).
            </summary>
            <param name="a">Beta incomplete parameter</param>
            <param name="b">Beta incomplete parameter</param>
            <param name="x">Beta incomplete parameter</param>
            <returns>Beta Incomplete value</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Formulas.StatisticalAnalysis.Average(System.Double[][],System.Double[][]@,System.String[],System.String[],System.String[][]@)">
            <summary>
            Returns the average (arithmetic mean) of the arguments.
            </summary>
            <param name="inputValues">Arrays of doubles - Input values</param>
            <param name="outputValues">Arrays of doubles - Output values</param>
            <param name="parameterList">Array of strings - Parameters</param>
            <param name="extraParameterList">Array of strings - Extra parameters</param>
            <param name="outLabels">Array of strings - Used for Labels. Description for ouput results.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Formulas.StatisticalAnalysis.Variance(System.Double[][],System.Double[][]@,System.String[],System.String[],System.String[][]@)">
            <summary>
            Calculates variance
            </summary>
            <param name="inputValues">Arrays of doubles - Input values</param>
            <param name="outputValues">Arrays of doubles - Output values</param>
            <param name="parameterList">Array of strings - Parameters</param>
            <param name="extraParameterList">Array of strings - Extra parameters</param>
            <param name="outLabels">Array of strings - Used for Labels. Description for ouput results.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Formulas.StatisticalAnalysis.Median(System.Double[][],System.Double[][]@,System.String[],System.String[],System.String[][]@)">
            <summary>
            Calculates Median
            </summary>
            <param name="inputValues">Arrays of doubles - Input values</param>
            <param name="outputValues">Arrays of doubles - Output values</param>
            <param name="parameterList">Array of strings - Parameters</param>
            <param name="extraParameterList">Array of strings - Extra parameters</param>
            <param name="outLabels">Array of strings - Used for Labels. Description for ouput results.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Formulas.StatisticalAnalysis.BetaFunction(System.Double[][],System.Double[][]@,System.String[],System.String[],System.String[][]@)">
            <summary>
            Calculates Beta Function
            </summary>
            <param name="inputValues">Arrays of doubles - Input values</param>
            <param name="outputValues">Arrays of doubles - Output values</param>
            <param name="parameterList">Array of strings - Parameters</param>
            <param name="extraParameterList">Array of strings - Extra parameters</param>
            <param name="outLabels">Array of strings - Used for Labels. Description for ouput results.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Formulas.StatisticalAnalysis.GammaFunction(System.Double[][],System.Double[][]@,System.String[],System.String[],System.String[][]@)">
            <summary>
            Calculates Gamma Function
            </summary>
            <param name="inputValues">Arrays of doubles - Input values</param>
            <param name="outputValues">Arrays of doubles - Output values</param>
            <param name="parameterList">Array of strings - Parameters</param>
            <param name="extraParameterList">Array of strings - Extra parameters</param>
            <param name="outLabels">Array of strings - Used for Labels. Description for ouput results.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Formulas.StatisticalAnalysis.Sort(System.Double[]@)">
            <summary>
            Sort array of double values.
            </summary>
            <param name="values">Array of doubles which should be sorted.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Formulas.StatisticalAnalysis.Median(System.Double[])">
            <summary>
            Returns the median of the given numbers
            </summary>
            <param name="values">Array of double numbers</param>
            <returns>Median</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Formulas.StatisticalAnalysis.Mean(System.Double[])">
            <summary>
            Calculates a Mean for a series of numbers.
            </summary>
            <param name="values">series with double numbers</param>
            <returns>Returns Mean</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Formulas.StatisticalAnalysis.Variance(System.Double[],System.Boolean)">
            <summary>
            Calculates a Variance for a series of numbers.
            </summary>
            <param name="values">double values</param>
            <param name="sampleVariance">If variance is calculated from sample sum has to be divided by n-1.</param>
            <returns>Variance</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Formulas.StatisticalAnalysis.StudentsDistribution(System.Double,System.Int32,System.Boolean)">
            <summary>
            Calculates the Percentage Points (probability) for the Student 
            t-distribution. The t-distribution is used in the hypothesis 
            testing of small sample data sets. Use this function in place 
            of a table of critical values for the t-distribution.
            </summary>
            <param name="tValue">The numeric value at which to evaluate the distribution.</param>
            <param name="n">An integer indicating the number of degrees of freedom.</param>
            <param name="oneTailed">Specifies the number of distribution tails to return.</param>
            <returns>Returns the Percentage Points (probability) for the Student t-distribution.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Formulas.StatisticalAnalysis.NormalDistribution(System.Double)">
            <summary>
            Returns the standard normal cumulative distribution 
            function. The distribution has a mean of 0 (zero) and 
            a standard deviation of one. Use this function in place 
            of a table of standard normal curve areas.
            </summary>
            <param name="zValue">The value for which you want the distribution.</param>
            <returns>Returns the standard normal cumulative distribution.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Formulas.StatisticalAnalysis.StudentsDistributionInverse(System.Double,System.Int32)">
            <summary>
            Calculates the t-value of the Student's t-distribution 
            as a function of the probability and the degrees of freedom.
            </summary>
            <param name="probability">The probability associated with the two-tailed Student's t-distribution.</param>
            <param name="n">The number of degrees of freedom to characterize the distribution.</param>
            <returns>Returns the t-value of the Student's t-distribution.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Formulas.StatisticalAnalysis.StudentsDistributionSearch(System.Double,System.Int32,System.Int32,System.Double,System.Double)">
            <summary>
            Method for calculation of Inverse T Distribution (Binary tree)
            solution for non linear equations
            </summary>
            <param name="probability">Probability value</param>
            <param name="n">Degree of freedom</param>
            <param name="step">Step for Numerical solution for non linear equations</param>
            <param name="start">Start for numerical process</param>
            <param name="end">End for numerical process</param>
            <returns>Returns F ditribution inverse</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Formulas.StatisticalAnalysis.NormalDistributionInverse(System.Double)">
            <summary>
            Returns the inverse of the standard normal cumulative distribution. 
            The distribution has a mean of zero and a standard deviation of one.
            </summary>
            <param name="probability">A probability corresponding to the normal distribution.</param>
            <returns>Returns the inverse of the standard normal cumulative distribution.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Formulas.StatisticalAnalysis.FDistributionInverse(System.Double,System.Int32,System.Int32)">
            <summary>
            Calculates the inverse of the F probability distribution.
            The F distribution can be used in an F-test that compares 
            the degree of variability in two data sets.
            </summary>
            <param name="probability">A probability associated with the F cumulative distribution.</param>
            <param name="m">The numerator degrees of freedom.</param>
            <param name="n">The denominator degrees of freedom.</param>
            <returns>Returns the inverse of the F probability distribution.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Formulas.StatisticalAnalysis.FDistributionSearch(System.Double,System.Int32,System.Int32,System.Int32,System.Double,System.Double)">
            <summary>
            Method for calculation of Inverse F Distribution (Binary tree)
            solution for non linear equations
            </summary>
            <param name="probability">Probability value</param>
            <param name="m">Degree of freedom</param>
            <param name="n">Degree of freedom</param>
            <param name="step">Step for solution for non linear equations.</param>
            <param name="start">Start for numerical process</param>
            <param name="end">End for numerical process</param>
            <returns>Returns F ditribution inverse</returns>
        </member>
        <member name="P:Dundas.Charting.WebControl.Formulas.StatisticalAnalysis.Name">
            <summary>
            Formula Module name
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.Design.HatchStyleEditor">
            <summary>
            Type editor for the hatch type.
            Paints a rectangle with hatch sample.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.HatchStyleEditor.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Override this function to support palette colors drawing
            </summary>
            <param name="context">Descriptor context.</param>
            <returns>Can paint values.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.HatchStyleEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)">
            <summary>
            Override this function to support palette colors drawing
            </summary>
            <param name="e">Paint value event arguments.</param>
        </member>
        <member name="T:Dundas.Charting.WebControl.Design.SeriesDataFieldYUITypeEditor">
            <summary>
            UI type editor for the Y data source members of the series.
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.Design.SeriesDataSourceMemberYUITypeEditor">
            <summary>
            UI type editor for the Y data source members of the series.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.SeriesDataSourceMemberYUITypeEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Display a drop down list with check boxes.
            </summary>
            <param name="context">Editing context.</param>
            <param name="provider">Provider.</param>
            <param name="value">Value to edit.</param>
            <returns>Result</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.SeriesDataSourceMemberYUITypeEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Gets editing style.
            </summary>
            <param name="context">Editing context.</param>
            <returns>Editor style.</returns>
        </member>
        <member name="T:Dundas.Charting.WebControl.Design.SeriesDataFieldYCheckedListBox">
            <summary>
            Checked list box, which is used for the series Y dats source member UI type editing.
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.Design.SeriesDataSourceMemberYCheckedListBox">
            <summary>
            Checked list box, which is used for the series Y dats source member UI type editing.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.SeriesDataSourceMemberYCheckedListBox.#ctor(Dundas.Olap.WebUIControls.Chart,System.Object,System.Object,System.Boolean)">
            <summary>
            Public constructor.
            </summary>
            <param name="chart">Chart control.</param>
            <param name="instance">Instance of control.</param>
            <param name="editValue">Value to edit.</param>
            <param name="usedForYValue">Indicates that editor was used for the Y values members.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.SeriesDataSourceMemberYCheckedListBox.FillList">
            <summary>
            Fills checked list items
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.SeriesDataSourceMemberYCheckedListBox.GetNewValue">
            <summary>
            Gets new enumeration value.
            </summary>
            <returns>New enum value.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.SeriesDataFieldYCheckedListBox.#ctor(Dundas.Olap.WebUIControls.Chart,System.ComponentModel.ITypeDescriptorContext,System.Object,System.Boolean)">
            <summary>
            Public constructor.
            </summary>
            <param name="chart">Chart control.</param>
            <param name="instance">Instance of control.</param>
            <param name="editValue">Value to edit.</param>
            <param name="usedForYValue">Indicates that editor was used for the Y values members.</param>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.AxisType">
            <summary>
            Chart axis type (Primary or Secondary). 
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.AxisType.Primary">
            <summary>
            Primary axis. For X axis - bottom, for Y axis - left.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.AxisType.Secondary">
            <summary>
            Secondary axis. For X axis - top, for Y axis - right.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.PointsSortOrder">
            <summary>
            Sorting order (Ascending or Descending).
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.PointsSortOrder.Ascending">
            <summary>
            Ascending sorting order
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.PointsSortOrder.Descending">
            <summary>
            Descending sorting order
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.SeriesCollection">
            <summary>
            Data series collection
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.Design.IChartDataSourceProvider">
            <summary>
            Interface which extends series and series 
            collection in order to get a dataset with data points
            Used from DebuggerVisualizer in VS 2005
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.IChartDataSourceProvider.GetData">
            <summary>
            Convert series datapoints data into a DataSet
            </summary>
            <returns>A DataSet which contain series data</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.SeriesCollection.#ctor">
            <summary>
            Data series collection object default constructor is unaccessable.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.SeriesCollection.#ctor(System.ComponentModel.Design.IServiceContainer)">
            <summary>
            Data series collection object constructor.
            </summary>
            <param name="container"></param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.SeriesCollection.GetIndex(System.String)">
            <summary>
            Get series index by name.
            </summary>
            <param name="name">Name of the data series.</param>
            <returns>Index of the data series or -1 if it does not exist.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.SeriesCollection.Add(System.String)">
            <summary>
            Add new data series.
            </summary>
            <param name="name">Name of the new data series.</param>
            <returns>Newly added data series object.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.SeriesCollection.Add(System.String,System.Int32)">
            <summary>
            Add new data series.
            </summary>
            <param name="name">Name of the new data series.</param>
            <param name="yValuesPerPoint">Number of Y values per data point.</param>
            <returns>Newly added data series object</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.SeriesCollection.Clear">
            <summary>
            Removes all items from the collection.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.SeriesCollection.Contains(System.Object)">
            <summary>
            Check if specified object exists in the collection.
            </summary>
            <param name="value">Object to check.</param>
            <returns>True if object exist.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.SeriesCollection.IndexOf(System.Object)">
            <summary>
            Gets first index of the collection item equal to the object provided.
            </summary>
            <param name="value">Object to look for.</param>
            <returns>Index of found object.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.SeriesCollection.Remove(System.Object)">
            <summary>
            Remove object from the collection
            </summary>
            <param name="value">Value to be removed.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.SeriesCollection.RemoveAt(System.Int32)">
            <summary>
            Remove item from the collection by index.
            </summary>
            <param name="index">Zero based index.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.SeriesCollection.Add(System.Object)">
            <summary>
            Add series object into the collection.
            </summary>
            <param name="value">Series to add.</param>
            <returns>Index of the newly added object.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.SeriesCollection.Insert(System.Int32,Dundas.Olap.WebUIControls.Series)">
            <summary>
            Insert series object into the collection.
            </summary>
            <param name="index">Zero based index.</param>
            <param name="value">Series to insert.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.SeriesCollection.Insert(System.Int32,System.Object)">
            <summary>
            Insert series object into the collection.
            </summary>
            <param name="index">Zero based index.</param>
            <param name="value">Series to insert.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.SeriesCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies all the elements of the current collection to the specified one-dimensional 
            collection starting at the specified destination index.
            </summary>
            <param name="array">Destination collection.</param>
            <param name="index">The index in collection at which copying begins.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.SeriesCollection.GetEnumerator">
            <summary>
            Get collection enumerator.
            </summary>
            <returns>Collection enumerator.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.SeriesCollection.Invalidate(System.String)">
            <summary>
            Invalidate chart (or just chart area ) when collection is changed.
            </summary>
            <param name="chartArea">Invalidate chart area only.</param>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.SeriesCollection.Item(System.Object)">
            <summary>
            Indexer of the class. Returns the Data Series object
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.SeriesCollection.IsFixedSize">
            <summary>
            Gets a value indicating whether the collection has a fixed size.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.SeriesCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the collection is read-only.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.SeriesCollection.Count">
            <summary>
            Number of items in the collection.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.SeriesCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the collection is synchronized (thread-safe).
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.SeriesCollection.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the collection.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.Series">
            <summary>
            Stores data points and default series attributes.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.DataPointAttributes">
            <summary>
            Stores attributes of one Data Point and Data series.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.IMapAreaAttributesutes">
            <summary>
            Interface which defines common attributes for the map area
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.IMapAreaAttributesutes.ToolTip">
            <summary>
            Map area tooltip
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.IMapAreaAttributesutes.Href">
            <summary>
            Map area HREF
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.IMapAreaAttributesutes.MapAreaAttributes">
            <summary>
            Map area other custom attributes
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataPointAttributes.#ctor">
            <summary>
            Data Point Attributes object constructor.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataPointAttributes.#ctor(Dundas.Olap.WebUIControls.Series,System.Boolean)">
            <summary>
            Data Point Attributes object constructor.
            </summary>
            <param name="series">Series object, which the Data Point belongs to.</param>
            <param name="pointAttributes">Indicates data point attributes.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataPointAttributes.IsAttributeSet(System.String)">
            <summary>
            Checks if attribute with specified name was set.
            </summary>
            <param name="name">Name of the attribute to check.</param>
            <returns>True if attribute was set.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataPointAttributes.IsAttributeSet(Dundas.Olap.WebUIControls.CommonAttributes)">
            <summary>
            Checks if attribute with specified name was set.
            </summary>
            <param name="attrib">ID of the attribute to check.</param>
            <returns>True if attribute was set.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataPointAttributes.DeleteAttribute(System.String)">
            <summary>
            Delete Data Point attribute with specified name.
            </summary>
            <param name="name">Name of the atribute to delete.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataPointAttributes.DeleteAttribute(Dundas.Olap.WebUIControls.CommonAttributes)">
            <summary>
            Delete Data Point attribute with specified name.
            </summary>
            <param name="attrib">ID of the atribute to delete.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataPointAttributes.GetAttribute(System.String)">
            <summary>
            Returns an attribute of the Data Point. If required attribute is not set
            in the Data Point the default attribute of the Data series is returned.
            </summary>
            <param name="name">Attribute name.</param>
            <returns>Attribute value as string.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataPointAttributes.IsSerializing">
            <summary>
            Checks if data is currently serialized.
            </summary>
            <returns>True if serialized.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataPointAttributes.GetAttributeObject(Dundas.Olap.WebUIControls.CommonAttributes)">
            <summary>
            Returns an attribute object of the Data Point. If required attribute is not set
            in the Data Point the default attribute of the Data series is returned.
            </summary>
            <param name="attrib">Attribute name ID.</param>
            <returns>Attribute value.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataPointAttributes.SetAttribute(System.String,System.String)">
            <summary>
            Sets an attribute of the Data Point. 
            </summary>
            <param name="name">Attribute name.</param>
            <param name="attributeValue">Attribute new value.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataPointAttributes.SetAttributeObject(Dundas.Olap.WebUIControls.CommonAttributes,System.Object)">
            <summary>
            Sets an attribute of the Data Point as an object. 
            </summary>
            <param name="attrib">Attribute name ID.</param>
            <param name="attributeValue">Attribute new value.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataPointAttributes.SetDefault(System.Boolean)">
            <summary>
            Set default attributes of the data point.
            <param name="clearAll">Indicates that previous attributes must be cleared.</param>
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataPointAttributes.Invalidate(System.Boolean)">
            <summary>
            Invalidate chart area.
            </summary>
            <param name="invalidateLegend">Invalidate legend area only.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataPointAttributes.GetProperties">
            <summary>
            Returns collection of properties of this object.
            </summary>
            <returns>Collection of properties descriptors.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataPointAttributes.GetProperties(System.Attribute[])">
            <summary>
            Returns collection of properties of this object.
            </summary>
            <param name="attributes">Attributes for filtering.</param>
            <returns>Collection of properties descriptors.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataPointAttributes.GetClassName">
            <summary>
            Gets object class name.
            </summary>
            <returns>Object class name.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataPointAttributes.GetAttributes">
            <summary>
            Gets object attributes.
            </summary>
            <returns>Object attributes</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataPointAttributes.GetComponentName">
            <summary>
            Gets object component name.
            </summary>
            <returns>Object component name.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataPointAttributes.GetConverter">
            <summary>
            Gets object converter.
            </summary>
            <returns>Object converter.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataPointAttributes.GetDefaultEvent">
            <summary>
            Gets object default event.
            </summary>
            <returns>Object default event.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataPointAttributes.GetDefaultProperty">
            <summary>
            Gets object default property.
            </summary>
            <returns>Object default property.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataPointAttributes.GetEditor(System.Type)">
            <summary>
            Gets object editor.
            </summary>
            <param name="editorBaseType">Editor base type.</param>
            <returns>O/returns>object editor.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataPointAttributes.GetEvents(System.Attribute[])">
            <summary>
            Gets object events.
            </summary>
            <param name="attributes">Filtering attributes.</param>
            <returns>Object events.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataPointAttributes.GetEvents">
            <summary>
            Gets object events.
            </summary>
            <returns>Object events.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataPointAttributes.GetPropertyOwner(System.ComponentModel.PropertyDescriptor)">
            <summary>
            Get property owner.
            </summary>
            <param name="pd">Property descriptor.</param>
            <returns>Property owner.</returns>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.DataPointAttributes.Item(System.Int32)">
            <summary>
            Attributes indexer, which returns Attribute Name by index.
            </summary>
            <param name="index">Index of the atribute name.</param>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.DataPointAttributes.Item(System.String)">
            <summary>
            Attributes indexer, which returns Attribute Value by Attribute Name.
            </summary>
            <param name="name">Name of the atribute.</param>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.DataPointAttributes.Label">
            <summary>
            Data point label text.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.DataPointAttributes.AxisLabel">
            <summary>
            Data point X axis label text.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.DataPointAttributes.LabelFormat">
            <summary>
            Data point label format string
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.DataPointAttributes.ShowLabelAsValue">
            <summary>
            If true shows point's value as a label.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.DataPointAttributes.Color">
            <summary>
            Data point color
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.DataPointAttributes.BorderColor">
            <summary>
            Data point border color
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.DataPointAttributes.BorderStyle">
            <summary>
            Data point border style
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.DataPointAttributes.BorderWidth">
            <summary>
            Data point border width
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.DataPointAttributes.BackImage">
            <summary>
            Data point background image
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.DataPointAttributes.BackImageMode">
            <summary>
            Data point background image drawing mode.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.DataPointAttributes.BackImageTranspColor">
            <summary>
            Background image transparent color.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.DataPointAttributes.BackImageAlign">
            <summary>
            Background image alignment used by ClampUnscale drawing mode.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.DataPointAttributes.BackGradientType">
            <summary>
            Data point background gradient type.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.DataPointAttributes.BackGradientEndColor">
            <summary>
            Data point background gradient end color
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.DataPointAttributes.BackHatchStyle">
            <summary>
            Data point hatch style
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.DataPointAttributes.Font">
            <summary>
            Data point font
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.DataPointAttributes.FontColor">
            <summary>
            Data point line color
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.DataPointAttributes.FontAngle">
            <summary>
            Data point font angle
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.DataPointAttributes.MarkerStyle">
            <summary>
            Data point marker style
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.DataPointAttributes.MarkerSize">
            <summary>
            Data point marker size
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.DataPointAttributes.MarkerImage">
            <summary>
            Data point marker image
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.DataPointAttributes.MarkerImageTranspColor">
            <summary>
            Data point marker image transparent color.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.DataPointAttributes.MarkerColor">
            <summary>
            Data point marker color
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.DataPointAttributes.MarkerBorderColor">
            <summary>
            Data point marker border color
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.DataPointAttributes.MarkerBorderWidth">
            <summary>
            Data point marker border width
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.DataPointAttributes.CustomAttributesEx">
            <summary>
            Custom Data Point attributes specified as: AttrName1=Value1, AttrName2=Value2, ...  
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.DataPointAttributes.CustomAttributes">
            <summary>
            Custom Data Point attributes specified as: AttrName1=Value1, AttrName2=Value2, ...  
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.DataPointAttributes.ToolTip">
            <summary>
            The tooltip.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.DataPointAttributes.Href">
            <summary>
            URL target of the area.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.DataPointAttributes.MapAreaAttributes">
            <summary>
            Other attributes of the area.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.DataPointAttributes.ShowInLegend">
            <summary>
            Indicates that item is shown in the legend.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.DataPointAttributes.LegendText">
            <summary>
            Text of the item in the legend
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.DataPointAttributes.LegendToolTip">
            <summary>
            Tooltip of the item in the legend
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.DataPointAttributes.LabelBackColor">
            <summary>
            Data point label back color
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.DataPointAttributes.LabelBorderColor">
            <summary>
            Data point label border color
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.DataPointAttributes.LabelBorderStyle">
            <summary>
            Data point label border style
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.DataPointAttributes.LabelBorderWidth">
            <summary>
            Data point lable border width
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.DataPointAttributes.LabelToolTip">
            <summary>
            Tooltip of the data point label.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.DataPointAttributes.LegendHref">
            <summary>
            URL target of the item in the legend.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.DataPointAttributes.LegendMapAreaAttributes">
            <summary>
            Other attributes of the legend map area.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.DataPointAttributes.LabelHref">
            <summary>
            URL target of the data point label.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.DataPointAttributes.LabelMapAreaAttributes">
            <summary>
            Other attributes of the data point label.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Series.label">
            <summary>
            Data point label text.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Series.axisLabel">
            <summary>
            Data point X axis label text.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Series.labelFormat">
            <summary>
            Data point label format string
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Series.showLabelAsValue">
            <summary>
            If true shows point's value as a label.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Series.color">
            <summary>
            Data point color
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Series.borderColor">
            <summary>
            Data point border color
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Series.borderStyle">
            <summary>
            Data point border style
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Series.borderWidth">
            <summary>
            Data point border width
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Series.markerBorderWidth">
            <summary>
            Data point marker border width
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Series.backImage">
            <summary>
            Data point background image
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Series.backImageMode">
            <summary>
            Data point background image drawing mode.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Series.backImageTranspColor">
            <summary>
            Background image transparent color.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Series.backImageAlign">
            <summary>
            Background image alignment used by ClampUnscale drawing mode.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Series.backGradientType">
            <summary>
            Data point background gradient type.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Series.backGradientEndColor">
            <summary>
            Data point background gradient end color
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Series.backHatchStyle">
            <summary>
            Data point hatch style
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Series.font">
            <summary>
            Data point font
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Series.fontColor">
            <summary>
            Data point line color
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Series.fontAngle">
            <summary>
            Data point font angle
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Series.markerStyle">
            <summary>
            Data point marker style
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Series.markerSize">
            <summary>
            Data point marker size
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Series.markerImage">
            <summary>
            Data point marker image
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Series.markerImageTranspColor">
            <summary>
            Data point marker image transparent color.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Series.markerColor">
            <summary>
            Data point marker color
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Series.markerBorderColor">
            <summary>
            Data point marker border color
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Series.toolTip">
            <summary>
            The tooltip.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Series.href">
            <summary>
            URL target of the area.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Series.mapAreaAttributes">
            <summary>
            Other attributes of the area.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Series.showInLegend">
            <summary>
            Indicates that item is shown in the legend.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Series.legendText">
            <summary>
            Text of the item in the legend
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Series.legendToolTip">
            <summary>
            Tooltip of the item in the legend
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Series.labelBackColor">
            <summary>
            Data point label back color
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Series.labelBorderColor">
            <summary>
            Data point label border color
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Series.labelBorderStyle">
            <summary>
            Data point label border style
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Series.labelBorderWidth">
            <summary>
            Data point label border width
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Series.labelToolTip">
            <summary>
            Tooltip of the data point label
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Series.labelHref">
            <summary>
            URL target of the data point label.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Series.labelMapAreaAttributes">
            <summary>
            Other attributes of the data point label.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Series.legendHref">
            <summary>
            URL target of the item in the legend.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Series.legendMapAreaAttributes">
            <summary>
            Other attributes of the legend map area.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Series.#cctor">
            <summary>
            Data Series static constructor.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Series.#ctor">
            <summary>
            Data Series object constructor.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Series.#ctor(System.String)">
            <summary>
            Data Series object constructor.
            </summary>
            <param name="name">Name of the data series</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Series.#ctor(System.String,System.Int32)">
            <summary>
            Data Series object constructor.
            </summary>
            <param name="name">Name of the data series.</param>
            <param name="yValues">Number of y value(s) per data point.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Series.InitProperties(System.String,System.Int32)">
            <summary>
            Initialize series properties
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Series.GetCaption">
            <summary>
            Gets series caption that may not be the same as series name.
            </summary>
            <returns>Series caption string.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Series.GetPointDepthAndGap(Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.Axis,System.Double@,System.Double@)">
            <summary>
            Gets custom points depth and gap depth from series attributes.
            </summary>
            <param name="graph">Chart graphics.</param>
            <param name="axis">Categorical axis.</param>
            <param name="pointDepth">Returns point depth.</param>
            <param name="pointGapDepth">Return point gap depth.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Series.GetPointWidth(Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.Axis,System.Double,System.Double)">
            <summary>
            Gets data point width in relative coordinates.
            </summary>
            <param name="graph">Chart graphics.</param>
            <param name="axis">Axis object.</param>
            <param name="interval">Current minimum axis interval.</param>
            <param name="defaultWidth">Default width in percentage of interval.</param>
            <returns>Point width.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Series.GetChartTypeName(Dundas.Olap.WebUIControls.SeriesChartType)">
            <summary>
            Get chart type name by it's type
            </summary>
            <param name="type">Chart type.</param>
            <returns>Chart type name.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Series.IsYValueDateTime">
            <summary>
            Checks if Y values of the series represend date-time.
            </summary>
            <returns>True if date-time.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Series.IsXValueDateTime">
            <summary>
            Checks if X values of the series represend date-time.
            </summary>
            <returns>True if date-time.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Series.IsVisible">
            <summary>
            Checks if series is visible.
            </summary>
            <returns>True if series is visible.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Series.IsFastChartType">
            <summary>
            Checks if series chart type uses a "Fast" mode chart type.
            </summary>
            <returns>True if series uses "Fast" mode chart type.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Series.CheckSupportedTypes(System.Type)">
            <summary>
            Throws exception if specified value type is not supported.
            </summary>
            <param name="type">Value type to check.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Series.ApplyPaletteColors">
            <summary>
            Apply palette colors to the data series points if UsePaletteColors property is set.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Series.GetDummyData(Dundas.Olap.WebUIControls.ChartValueTypes)">
            <summary>
            Gets design time dummy data.
            </summary>
            <param name="type">Type of the data to get.</param>
            <returns>Dummy data for chart in design-time.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Series.GetTotalYValue">
            <summary>
            Returns total of the Y values.
            </summary>
            <returns>Y values total.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Series.GetTotalYValue(System.Int32)">
            <summary>
            Returns total of the Y values.
            </summary>
            <param name="yValueIndex">Index of the Y value to use</param>
            <returns>Y values total.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Series.ReplaceKeywords(System.String)">
            <summary>
            Replaces predefined keyword inside the string with their values.
            </summary>
            <param name="strOriginal">Original string with keywords.</param>
            <returns>Modified string.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Series.ReplaceOneKeyword(Dundas.Olap.WebUIControls.Chart,System.Object,Dundas.Olap.WebUIControls.ChartElementType,System.String,System.String,Dundas.Olap.WebUIControls.Series.SeriesValuesFormulaType,Dundas.Olap.WebUIControls.ChartValueTypes,System.String)">
            <summary>
            Helper function which replaces one keyword.
            </summary>
            <param name="chart">Chart object reference.</param>
            <param name="elementType">Chart element type.</param>
            <param name="obj">Object beign formatted.</param>
            <param name="strOriginal">Original string.</param>
            <param name="keyword">Keyword to replace.</param>
            <param name="formulaType">Formula used to calculate the value.</param>
            <param name="valueType">Type of value.</param>
            <param name="defaultFormat">Default format string.</param>
            <returns>Result string.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Series.ReplaceOneKeyword(Dundas.Olap.WebUIControls.Chart,System.Object,Dundas.Olap.WebUIControls.ChartElementType,System.String,System.String,System.Double,Dundas.Olap.WebUIControls.ChartValueTypes,System.String)">
            <summary>
            Helper function which replaces one keyword.
            </summary>
            <param name="chart">Chart object reference.</param>
            <param name="elementType">Chart element type.</param>
            <param name="obj">Object beign formatted.</param>
            <param name="strOriginal">Original string.</param>
            <param name="keyword">Keyword to replace.</param>
            <param name="value">Value to replace with.</param>
            <param name="valueType">Type of value.</param>
            <param name="defaultFormat">Default format string.</param>
            <returns>Result string.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Series.TraceWrite(System.String,System.String)">
            <summary>
            Writes trace information to the trace log.
            </summary>
            <param name="category">The trace category that receives the message. </param>
            <param name="message">The trace message to write to the log. </param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Series.Sort(Dundas.Olap.WebUIControls.PointsSortOrder,System.String)">
            <summary>
            Sorts points in the series.
            </summary>
            <param name="order">Sorting order.</param>
            <param name="sortBy">Value used for sorting (X, Y, Y2, ...).</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Series.Sort(Dundas.Olap.WebUIControls.PointsSortOrder)">
            <summary>
            Sorts points in the series.
            </summary>
            <param name="order">Sorting order.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Series.Sort(System.Collections.IComparer)">
            <summary>
            Sorts points in the series using IComparer interface.
            </summary>
            <param name="comparer">IConparer interface.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Series.UnPrepareData(System.ComponentModel.ISite)">
            <summary>
            Called after the series was drawn.
            </summary>
            <param name="controlSite">Site interface of the control.</param>
            <returns>True if series was removed from collection.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Series.ResetAutoValues">
            <summary>
            Reset auto calculated series values.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Series.ResetAutoValues(System.Boolean)">
            <summary>
            Reset auto calculated series values.
            </summary>
            <param name="reset">Indicates that value types should be reset.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Series.PrepareData(System.ComponentModel.ISite,System.Boolean)">
            <summary>
            Called just before the data from the series to be used to perform these operations:
             - apply palette colors to the data points
             - fill empty data points
             - provide fake data in design mode
             - retreving data from the DataSource
            </summary>
            <param name="controlSite">Site interface of the control</param>
            <param name="applyPaletteColors">If true each data point will be assigned a color from the palette (if it's set)</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Series.Invalidate(System.Boolean,System.Boolean)">
            <summary>
            Invalidate chart or just a chart area and/or legend when collection is changed
            </summary>
            <param name="invalidateAreaOnly">Invalidate chart area only.</param>
            <param name="invalidateLegend">Invalidate legend area only.</param>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Series.Name">
            <summary>
            Data series name.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Series.ValueMemberX">
            <summary>
            Member of the chart data source used to data bind to the X value of the series.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Series.ValueMembersY">
            <summary>
            Members of the chart data source used to data bind to the Y values of the series.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Series.Legend">
            <summary>
            Chart legend name used by the series.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Series.XValueType">
            <summary>
            Type of values stored on the X axes
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Series.XValueIndexed">
            <summary>
            Indicates that a data point index (1,2,...) will be used for the X value.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Series.YValueType">
            <summary>
            Type of values stored on the Y axes
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Series.YValuesPerPoint">
            <summary>
            Number of Y values stored for each Data Point.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Series.Points">
            <summary>
            Series Data Points collection.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Series.EmptyPointStyle">
            <summary>
            Default attributes of the empty data point.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Series.Palette">
            <summary>
            Color palette to use
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Series.PaletteCustomColors">
            <summary>
            Array of custom palette colors.
            </summary>
            <remarks>
            When this custom colors array is non-empty the Palette property is ignored.
            </remarks>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Series.MarkerStep">
            <summary>
            Specify how often to diaplay data point markers
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Series.ShadowOffset">
            <summary>
            Series shadow offset.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Series.ShadowColor">
            <summary>
            Data shadow color
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Series.FinancialMarkers">
            <summary>
            Financial Markers
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Series.YSubAxisName">
            <summary>
            Name of the Y sub-axis this series is attached to.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Series.XSubAxisName">
            <summary>
            Name of the X sub-axis this series is attached to.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Series.XAxisType">
            <summary>
            Type of horizontal axes.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Series.YAxisType">
            <summary>
            Type of vertical axes.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Series.Enabled">
            <summary>
            Chart series enabled flag.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Series.Type">
            <summary>
            Chart type used to draw the series.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Series.ChartType">
            <summary>
            Chart type used to draw the series.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Series.ChartArea">
            <summary>
            Chart area in which this series is drawn
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Series.AxisLabel">
            <summary>
            Data point X axis label text
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Series.SmartLabels">
            <summary>
            SmartLabels properties.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.Series.SeriesValuesFormulaType">
            <summary>
            Series values formula type used in the keywords
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.Design.CommandUIPicker">
            <summary>
            Implements design time dropdown component for 
            pick a Command.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.CommandUIPicker.#ctor(System.String,System.ComponentModel.ITypeDescriptorContext,System.Windows.Forms.Design.IWindowsFormsEditorService,Dundas.Olap.WebUIControls.ChartUI)">
            <summary>
            Create new instance of CommandUIPicker, using value, context, service and ChartUI
            </summary>
            <param name="passValue">The original value</param>
            <param name="context">The edit context</param>
            <param name="wsvc">The edit service</param>
            <param name="chartUI">The chartUI reference</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.CommandUIPicker.AddCommandNode(System.Windows.Forms.TreeNodeCollection,Dundas.Olap.WebUIControls.Command)">
            <summary>
            adds a tree node for specified command
            </summary>
            <param name="nodes">The nodes collection</param>
            <param name="cmd">The command to add</param>
            <returns>Initialized tree node</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.CommandUIPicker.PopulateTreeView(System.Windows.Forms.TreeNodeCollection,Dundas.Olap.WebUIControls.CommandCollection)">
            <summary>
            Generate tree 
            </summary>
            <param name="nodes">The nodes collection</param>
            <param name="commandCollection">The command collection</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.CommandUIPicker.ProcessDialogKey(System.Windows.Forms.Keys)">
            <summary>
            Handles keyboard
            </summary>
            <param name="keyData"></param>
            <returns>True if key is processed</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.CommandUIPicker.OnAfterSelect(System.Windows.Forms.TreeViewEventArgs)">
            <summary>
            Performs finalize actions after a node is selected
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:Dundas.Charting.WebControl.Design.CommandUIPicker.EditValue">
            <summary>
            gets edited value
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.CommandUINameEditor.#ctor">
            <summary>
            Initialize new instance of BaseLocationUIEditor class
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.CommandElementCollectionEditor">
            <summary>
            Provides a user interface that can edit  command element collections at design time.
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.Design.ChartCollectionEditor">
            <summary>
            Collection editor that supports property help in the property grid
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.ChartCollectionEditor.#ctor(System.Type)">
            <summary>
            Object constructor.
            </summary>
            <param name="type">Type.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.ChartCollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Edit object's value.
            </summary>
            <param name="context">Descriptor context.</param>
            <param name="provider">Service provider.</param>
            <param name="value">Value to edit.</param>
            <returns>The new value of the object.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.ChartCollectionEditor.ShowHelp">
            <summary>
            Displaying help for the curently selected item in the property grid
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.ChartCollectionEditor.GetPropertyGrid(System.Windows.Forms.Control.ControlCollection)">
            <summary>
            Returns the collection form property grid. Added for VS2005 compatibility.
            </summary>
            <param name="controls"></param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.ChartCollectionEditor.CollectButtons(System.Collections.ArrayList,System.Windows.Forms.Control.ControlCollection)">
            <summary>
            Collect the collection editor form buttons into array. Added for VS2005 compatibility.
            </summary>
            <param name="buttons"></param>
            <param name="controls"></param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.ChartCollectionEditor.CreateCollectionForm">
            <summary>
            Cretaes form for collection editing.
            </summary>
            <returns>Form object.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.ChartCollectionEditor.OnOkClicked(System.Object,System.EventArgs)">
            <summary>
            Update design-time HTML when OK button is clicked in the collection editor
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.ChartCollectionEditor.OnControlAddedRemoved(System.Object,System.Windows.Forms.ControlEventArgs)">
            <summary>
            Update design-time HTML when propery is added or removed
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.ChartCollectionEditor.OnPropertyChanged(System.Object,System.Windows.Forms.PropertyValueChangedEventArgs)">
            <summary>
            Update design-time HTML when propery is changed
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.ChartCollectionEditor.GetChartReference(System.Object)">
            <summary>
            Checks if the instance belongs to Chart type or contains the field of chart type. 
            NOTE: Required for the Diagram product.
            </summary>
            <param name="instance">
            Instance to check.
            </param>
            <returns>
            Object of chart type.
            </returns>
        </member>
        <member name="P:Dundas.Charting.WebControl.Design.ChartCollectionEditor.HelpTopic">
            <summary>
            Ovveride the HelpTopic property to provide different topics,
            depending on selected property.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.CommandElementCollectionEditor.editCollection">
            <summary>
            Current collection to edit
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CommandElementCollectionEditor.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the CollectionEditor class using the specified collection type.
            </summary>
            <param name="type">The type of the collection for this editor to edit. </param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CommandElementCollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Edits the value of the specified object using the specified service provider and context
            </summary>
            <param name="context">An ITypeDescriptorContext that can be used to gain additional context information</param>
            <param name="provider">A service provider object through which editing services can be obtained</param>
            <param name="value">A service provider object through which editing services can be obtained</param>
            <returns>The new value of the object. If the value of the object has not changed, this should return the same object it was passed.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CommandElementCollectionEditor.CanRemoveInstance(System.Object)">
            <summary>
            Indicates whether original members of the collection can be removed.
            </summary>
            <param name="value">The value to remove.</param>
            <returns>true if it is permissible to remove this value from the collection; otherwise, false. The default implementation always returns true.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CommandElementCollectionEditor.CreateInstance(System.Type)">
            <summary>
            Creates a new instance of the specified collection item type.
            </summary>
            <param name="itemType">The type of item to create. </param>
            <returns>A new instance of the specified object.</returns>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.CommandResult">
            <summary>
            The command result represents result of executing of a <see cref="T:Dundas.Olap.WebUIControls.Command"/>.
            The result contain <see cref="P:Dundas.Olap.WebUIControls.CommandResult.IsSuccess"/> which determines command exit state and
            <see cref="P:Dundas.Olap.WebUIControls.CommandResult.Reason"/> message which is shows reason for failing a command execution.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.CommandResult.failed">
            <summary>
            failed flag
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.CommandResult.reason">
            <summary>
            the error message
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CommandResult.#ctor">
            <summary>
            Initializes new instance of CommandResult object.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CommandResult.#ctor(System.Boolean,System.String)">
            <summary>
            Initializes new instance of CommandResult object.
            </summary>
            <param name="success">Determine if command is completeded successfully</param>
            <param name="reason">The reason if command is failed</param>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.CommandResult.IsFailed">
            <summary>
            Gets the failed status of executed command 
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.CommandResult.IsSuccess">
            <summary>
            Gets the success status of executed command
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.CommandResult.Reason">
            <summary>
            Gets the reason for failing if command is failed.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.BorderSkinStyle">
            <summary>
            Styles of the borders skin
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.BorderSkinStyle.None">
            <summary>
            Border not used
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.BorderSkinStyle.Emboss">
            <summary>
            Emboss border
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.BorderSkinStyle.Raised">
            <summary>
            Raised border
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.BorderSkinStyle.Sunken">
            <summary>
            Sunken border
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.BorderSkinStyle.FrameThin1">
            <summary>
            Thin border with rounded corners
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.BorderSkinStyle.FrameThin2">
            <summary>
            Thin border with rounded top corners
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.BorderSkinStyle.FrameThin3">
            <summary>
            Thin border with square corners
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.BorderSkinStyle.FrameThin4">
            <summary>
            Thin border with square outside corners and rounded inside corners
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.BorderSkinStyle.FrameThin5">
            <summary>
            Thin border with rounded corners and screws
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.BorderSkinStyle.FrameThin6">
            <summary>
            Thin border with square inside corners and rounded outside corners
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.BorderSkinStyle.FrameTitle1">
            <summary>
            Border with rounded corners. Supports title text.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.BorderSkinStyle.FrameTitle2">
            <summary>
            Border with rounded top corners. Supports title text.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.BorderSkinStyle.FrameTitle3">
            <summary>
            Border with square corners. Supports title text.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.BorderSkinStyle.FrameTitle4">
            <summary>
            Border with rounded inside corners and square outside corners. Supports title text.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.BorderSkinStyle.FrameTitle5">
            <summary>
            Border with rounded corners and screws. Supports title text.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.BorderSkinStyle.FrameTitle6">
            <summary>
            Border with rounded outside corners and square inside corners. Supports title text.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.BorderSkinStyle.FrameTitle7">
            <summary>
            Border with rounded corners. No border on the right side. Supports title text.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.BorderSkinStyle.FrameTitle8">
            <summary>
            Border with rounded corners on top and bottom sides only. Supports title text.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.BorderSkinAttributes">
            <summary>
            Drawing attributes of the 3D border skin.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.BorderSkinAttributes.#ctor">
            <summary>
            Default public constructor.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.BorderSkinAttributes.#ctor(System.ComponentModel.Design.IServiceContainer)">
            <summary>
            Constructor.
            </summary>
            <param name="container">Service container.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.BorderSkinAttributes.Invalidate">
            <summary>
            Invalidate chart border when one of the border skin attributes is changed
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.BorderSkinAttributes.PageColor">
            <summary>
            Border skin page color.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.BorderSkinAttributes.SkinStyle">
            <summary>
            Skin border style.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.BorderSkinAttributes.FrameBackColor">
            <summary>
            Skin frame back ground color.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.BorderSkinAttributes.FrameBorderColor">
            <summary>
            Skin frame border color.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.BorderSkinAttributes.FrameBackHatchStyle">
            <summary>
            Skin frame back hatch style.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.BorderSkinAttributes.FrameBackImage">
            <summary>
            Skin frame background image.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.BorderSkinAttributes.FrameBackImageMode">
            <summary>
            Skin frame background image drawing mode.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.BorderSkinAttributes.FrameBackImageTranspColor">
            <summary>
            Skin frame background image transparent color.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.BorderSkinAttributes.FrameBackImageAlign">
            <summary>
            Skin frame background image alignment used by ClampUnscale drawing mode.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.BorderSkinAttributes.FrameBackGradientType">
            <summary>
            Skin frame background gradient type.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.BorderSkinAttributes.FrameBackGradientEndColor">
            <summary>
            Skin frame second back color which is used for a gradient and hatching.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.BorderSkinAttributes.FrameBorderWidth">
            <summary>
            Skin frame border line width.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.BorderSkinAttributes.FrameBorderStyle">
            <summary>
            Skin frame border line style.
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.Borders3D.BorderTypeRegistry">
            <summary>
            Keep track of all registered 3D borders.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Borders3D.BorderTypeRegistry.#ctor">
            <summary>
            Default private constructor.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Borders3D.BorderTypeRegistry.#ctor(System.ComponentModel.Design.IServiceContainer)">
            <summary>
            Border types registry public constructor
            </summary>
            <param name="container">Service container.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Borders3D.BorderTypeRegistry.GetService(System.Type)">
            <summary>
            Returns border type registry service object
            </summary>
            <param name="serviceType">Servise type to get.</param>
            <returns>Border registry service.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Borders3D.BorderTypeRegistry.Register(System.String,System.Type)">
            <summary>
            Adds 3D border type into the registry.
            </summary>
            <param name="name">Border type name.</param>
            <param name="borderType">Border class type.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Borders3D.BorderTypeRegistry.GetBorderType(System.String)">
            <summary>
            Returns border type object by name.
            </summary>
            <param name="name">Border type name.</param>
            <returns>Border type object derived from IBorderType.</returns>
        </member>
        <member name="P:Dundas.Charting.WebControl.Borders3D.BorderTypeRegistry.ResourceManager">
            <summary>
            Border images resource manager.
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.Borders3D.IBorderType">
            <summary>
            Inteface, which defines the set of standart methods and
            properties for each border type.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Borders3D.IBorderType.DrawBorder(Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.BorderSkinAttributes,System.Drawing.RectangleF,System.Drawing.Color,Dundas.Olap.WebUIControls.ChartHatchStyle,System.String,Dundas.Olap.WebUIControls.ChartImageWrapMode,System.Drawing.Color,Dundas.Olap.WebUIControls.ChartImageAlign,Dundas.Olap.WebUIControls.GradientType,System.Drawing.Color,System.Drawing.Color,System.Int32,Dundas.Olap.WebUIControls.ChartDashStyle)">
            <summary>
            Draws 3D border.
            </summary>
            <param name="graph">Graphics to darw the border on.</param>
            <param name="borderSkin">Border skin object.</param>
            <param name="rect">Rectangle of the border.</param>
            <param name="backColor">Color of rectangle.</param>
            <param name="backHatchStyle">Hatch style.</param>
            <param name="backImage">Back Image.</param>
            <param name="backImageMode">Image mode.</param>
            <param name="backImageTranspColor">Image transparent color.</param>
            <param name="backImageAlign">Image alignment.</param>
            <param name="backGradientType">Gradient type.</param>
            <param name="backGradientEndColor">Gradient End Color.</param>
            <param name="borderColor">Border Color.</param>
            <param name="borderWidth">Border Width.</param>
            <param name="borderStyle">Border Style.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Borders3D.IBorderType.AdjustAreasPosition(Dundas.Olap.WebUIControls.ChartGraphics,System.Drawing.RectangleF@)">
            <summary>
            Adjust areas rectangle coordinate to fit the 3D border.
            </summary>
            <param name="graph">Graphics to darw the border on.</param>
            <param name="areasRect">Position to adjust.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Borders3D.IBorderType.GetTitlePositionInBorder">
            <summary>
            Returns the position of the rectangular area in the border where
            title should be displayed. Returns empty rect if title can't be shown in the border.
            </summary>
            <returns>Title position in border.</returns>
        </member>
        <member name="P:Dundas.Charting.WebControl.Borders3D.IBorderType.Name">
            <summary>
            Border type name.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.Ajax.GifConvertor">
            <summary>
            GifConvertor is a helper class to create transparent gif images
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.GifConvertor.MakeTransparentGifBitmap(System.Drawing.Bitmap,System.Drawing.Color)">
            <summary>
            Makes the transparent GIF bitmap.
            </summary>
            <param name="bitmap">The bitmap.</param>
            <param name="transparentColor">Color of the transparent.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.GifConvertor.ConvertBitmapToTransparentGif(System.Drawing.Bitmap,System.Drawing.Color)">
            <summary>
            Converts the bitmap to transparent GIF.
            </summary>
            <param name="origBitmap">The orig bitmap.</param>
            <param name="transparentColor">Color of the transparent.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.GifConvertor.MakeTransparentGifStream(System.Drawing.Bitmap,System.Drawing.Color)">
            <summary>
            Makes the transparent GIF stream.
            </summary>
            <param name="bitmap">The bitmap.</param>
            <param name="transparentColor">Color of the transparent.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.GifConvertor.MakeTransparentGifStream(System.IO.MemoryStream,System.Drawing.Color)">
            <summary>
            Makes the transparent GIF stream.
            </summary>
            <param name="origBitmapMemoryStream">The orig bitmap memory stream.</param>
            <param name="transparentColor">Color of the transparent.</param>
            <returns></returns>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.OlapGrids.OlapToolbarGridSettings">
            <summary>
            Contains data for toolbar setting regarding <see cref="T:Dundas.Olap.WebUIControls.OlapGrid"/>
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGrids.OlapToolbarGridSettings.#ctor(Dundas.Olap.WebUIControls.OlapGrid)">
            <summary>
            Initializes a new instance of the <see cref="T:Dundas.Olap.WebUIControls.OlapGrids.OlapToolbarGridSettings"/> class.
            </summary>
            <param name="parent">The parent.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGrids.OlapToolbarGridSettings.GetEmbededCommands">
            <summary>
            Gets the command list.
            </summary>
            <value>The command list.</value>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGrids.OlapToolbarGridSettings.GetDefaultOrderBase">
            <summary>
            Gets the default order base.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGrids.OlapToolbarGridSettings.GetCommandID(Dundas.Olap.WebUIControls.ChartCommandType)">
            <summary>
            Get string represenantion of the command
            </summary>
            <param name="cmdType">command</param>
            <returns>command ID</returns>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapGrids.OlapToolbarGridSettings.Parent">
            <summary>
            Parent grid instance
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapGrids.OlapToolbarGridSettings.SeparatorPlacement">
            <summary>
            Gets or sets the toolbar separator placement.
            </summary>
            <value>The toolbar separator placement.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapGrids.OlapToolbarGridSettings.Copy">
            <summary>
            Gets or sets the copy command.
            </summary>
            <value>The copy command.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapGrids.OlapToolbarGridSettings.Print">
            <summary>
            Gets or sets the print command.
            </summary>
            <value>The print command.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapGrids.OlapToolbarGridSettings.PrintPreview">
            <summary>
            Gets or sets the Print Preview command.
            </summary>
            <value>The Print Preview command.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapGrids.OlapToolbarGridSettings.Orientation">
            <summary>
            Gets or sets the Grid Orientation command.
            </summary>
            <value>The Grid Orientation command.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapGrids.OlapToolbarGridSettings.ShowTotal">
            <summary>
            Gets or sets the Grid Show Total command.
            </summary>
            <value>The Grid Show Total command.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapGrids.OlapToolbarGridSettings.SelectAppearance">
            <summary>
            Gets or sets the Select Palette command.
            </summary>
            <value>The Select Palette command.</value>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.ChartAreaAxes">
            <summary>
            ChartAreaAxes class represents axes (X, Y, X2 and Y2) in the chart area. 
            It contains methods that collect statistical information on data and 
            other axes related methods.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartAreaAxes.intervalSeriesList">
            <summary>
            List of series names that last interval numbers where cashed for
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartAreaAxes.GetAxis(Dundas.Olap.WebUIControls.AxisName,Dundas.Olap.WebUIControls.AxisType,System.String)">
            <summary>
            Gets main or sub axis from the chart area.
            </summary>
            <param name="axisName">Axis name. NOTE: This parameter only defines X or Y axis. 
            Second axisType parameter is used to select primary or secondary axis. </param>
            <param name="axisType">Axis type.</param>
            <param name="subAxisName">Sub-axis name or empty string.</param>
            <returns>Main or sub axis of the chart area.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartAreaAxes.#ctor">
            <summary>
            Public constructor.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartAreaAxes.SetDefaultAxesValues">
            <summary>
            Sets default axis values for all different chart type 
            groups. Chart type groups are sets of chart types.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartAreaAxes.EnableAxes">
            <summary>
            Enable axes, which are
            used in chart area data series.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartAreaAxes.Activate(Dundas.Olap.WebUIControls.Axis,System.Boolean,System.String)">
            <summary>
            Enable axis.
            </summary>
            <param name="axis">Axis.</param>
            <param name="active">True if axis is active.</param>
            <param name="subAxisName">Sub axis name to activate.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartAreaAxes.AllEmptyPoints">
            <summary>
            Check if all data points from series in 
            this chart area are empty.
            </summary>
            <returns>True if all points are empty</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartAreaAxes.SetDefaultFromData(Dundas.Olap.WebUIControls.Axis)">
            <summary>
            This method sets default minimum and maximum 
            values from values in the data manager. This 
            case is used if X values are not equal to 0 or XValueIndexed flag is set.
            </summary>
            <param name="axis">Axis</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartAreaAxes.SeriesIntegerType(Dundas.Olap.WebUIControls.AxisName,System.String)">
            <summary>
            This method checks if all series in the chart area have “integer type” 
            for specified axes, which means int, uint, long and ulong.
            </summary>
            <param name="axisName">Name of the axis</param>
            <param name="subAxisName">Sub axis name.</param>
            <returns>True if all series are integer</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartAreaAxes.SeriesDateTimeType(Dundas.Olap.WebUIControls.AxisName,System.String)">
            <summary>
            This method checks if all series in the chart area have “date-time type” 
            for specified axes.
            </summary>
            <param name="axisName">Name of the axis</param>
            <param name="subAxisName">Sub axis name.</param>
            <returns>True if all series are date-time.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartAreaAxes.GetValuesFromData(Dundas.Olap.WebUIControls.Axis,System.Double@,System.Double@)">
            <summary>
            This method claculates minimum and maximum from data series.
            </summary>
            <param name="axis">Axis which is used to find minimum and maximum</param>
            <param name="autoMinimum">Minimum value from data.</param>
            <param name="autoMaximum">Maximum value from data.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartAreaAxes.SplitSeriesInStackedGroups(System.String[])">
            <summary>
            Splits a single array of series names into multiple arrays
            based on the stacked group name.
            </summary>
            <param name="seriesNames">Array of series name to split.</param>
            <returns>An array list that contains sub-arrays of series names split by group name.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartAreaAxes.GetNumberOfAllPoints">
            <summary>
            Find number of points for all series
            </summary>
            <returns>Number of points</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartAreaAxes.SetDefaultFromIndexes(Dundas.Olap.WebUIControls.Axis)">
            <summary>
            This method sets default minimum and maximum values from 
            indexes. This case is used if all X values in a series 
            have 0 value or XValueIndexed flag is set.
            </summary>
            <param name="axis">Axis</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartAreaAxes.SetData">
            <summary>
            Sets the names of all data series which belong to
            this chart area to collection and sets a list of all 
            different chart types.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartAreaAxes.SetData(System.Boolean)">
            <summary>
            Sets the names of all data series which belong to
            this chart area to collection and sets a list of all
            different chart types.
            </summary>
            <param name="initializeAxes">if set to <c>true</c> the method will initialize axes default values.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartAreaAxes.GetSeriesFromChartType(System.String)">
            <summary>
            Returns names of all series, which belong to this chart area 
            and have same chart type.
            </summary>
            <param name="chartType">Chart type</param>
            <returns>Collection with series names</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartAreaAxes.GetSeries">
            <summary>
            Returns all series which belong to this chart area.
            </summary>
            <returns>Collection with series</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartAreaAxes.GetXAxesSeries(Dundas.Olap.WebUIControls.AxisType,System.String)">
            <summary>
            Creates a list of series, which have same X axis type.
            </summary>
            <param name="type">Axis type</param>
            <param name="subAxisName">Sub Axis name</param>
            <returns>A list of series</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartAreaAxes.GetYAxesSeries(Dundas.Olap.WebUIControls.AxisType,System.String)">
            <summary>
            Creates a list of series, which have same Y axis type.
            </summary>
            <param name="type">Axis type</param>
            <param name="subAxisName">Sub Axis name</param>
            <returns>A list of series</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartAreaAxes.GetFirstSeries">
            <summary>
            Get first series from the chart area
            </summary>
            <returns>Data series</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartAreaAxes.GetPointsInterval(System.Boolean,System.Double)">
            <summary>
            This method returns minimum interval between 
            any two data points from series which belong
            to this chart area.
            </summary>
            <param name="logarithmic">Indicates logarithmic scale.</param>
            <param name="logarithmBase">Logarithm Base</param>
            <returns>Minimum Interval</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartAreaAxes.GetPointsInterval(System.Collections.ArrayList,System.Boolean,System.Double,System.Boolean,System.Boolean@)">
            <summary>
            This method returns minimum interval between 
            any two data points from specified series. 
            </summary>
            <param name="seriesList">List of series.</param>
            <param name="logarithmic">Indicates logarithmic scale.</param>
            <param name="logarithmBase">Base for logarithmic base</param>
            <param name="checkSameInterval">True if check for the same interval should be performed.</param>
            <param name="sameInterval">Return true if interval is the same.</param>
            <returns>Minimum Interval</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartAreaAxes.GetPointsInterval(System.Collections.ArrayList,System.Boolean,System.Double,System.Boolean,System.Boolean@,Dundas.Olap.WebUIControls.Series@)">
            <summary>
            This method returns minimum interval between 
            any two data points from specified series. 
            </summary>
            <param name="seriesList">List of series.</param>
            <param name="logarithmic">Indicates logarithmic scale.</param>
            <param name="logarithmicBase">Logarithm Base</param>
            <param name="checkSameInterval">True if check for the same interval should be performed.</param>
            <param name="sameInterval">Return true if interval is the same.</param>
            <param name="series">Series with the smallest interval between points.</param>
            <returns>Minimum Interval</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartAreaAxes.GetDateInterval(System.Double,System.Double,System.Int32@,System.Int64@)">
            <summary>
            Calculates the difference between two values in years, months, days, ...
            </summary>
            <param name="value1">First value.</param>
            <param name="value2">Second value.</param>
            <param name="monthsInteval">Interval in months.</param>
            <param name="ticksInterval">Interval in ticks.</param>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartAreaAxes.IsSubAxesSupported">
            <summary>
            True if sub axis supported on this chart area
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartAreaAxes.Series">
            <summary>
            Data series which belongs to this chart area.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartAreaAxes.ChartTypes">
            <summary>
            Chart types which belongs to this chart area.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.AxisScaleSegment">
            <summary>
            <b>AxisScaleSegment</b> class represents a single segment of the axis with
            it's own scale and intervals.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisScaleSegment.#ctor">
            <summary>
            Default object constructor.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisScaleSegment.PaintBreakLine(Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.AxisScaleSegment)">
            <summary>
            Paints the axis break line.
            </summary>
            <param name="graph">Chart graphivs to use.</param>
            <param name="nextSegment">Axis scale segment next to current.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisScaleSegment.GetChartFillBrush(Dundas.Olap.WebUIControls.ChartGraphics)">
            <summary>
            Get fill brush used to fill axis break lines spacing.
            </summary>
            <param name="graph">chart graphics.</param>
            <returns>Fill brush.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisScaleSegment.GetBreakLinePath(System.Drawing.RectangleF,System.Boolean)">
            <summary>
            Gets a path of the break line for specified position.
            </summary>
            <param name="breakLinePosition">Break line position.</param>
            <param name="top">Indicates if top or bottom break line path should be retrieved.</param>
            <returns>Graphics path with break line path.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisScaleSegment.GetBreakLinePosition(Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.AxisScaleSegment)">
            <summary>
            Gets position of the axis break line. Break line may be shown as a single 
            line or two lines separated with a spacing.
            </summary>
            <param name="graph">Chart graphics.</param>
            <param name="nextSegment">Next segment reference.</param>
            <returns>Position of the axis break line in pixel coordinates.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisScaleSegment.GetScalePositionAndSize(System.Double,System.Double@,System.Double@)">
            <summary>
            Gets segment scale position and size in relative coordinates.
            Method takes in consideration segment spacing and space required fro separator.
            </summary>
            <param name="plotAreaSize">Plotting area size in relative coordinates.</param>
            <param name="scalePosition">Returns scale position.</param>
            <param name="scaleSize">Returns scale size.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisScaleSegment.SetTempAxisScaleAndInterval">
            <summary>
            Saves axis settings and set them from the current segment.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisScaleSegment.RestoreAxisScaleAndInterval">
            <summary>
            Restore previously saved axis settings.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.AxisScaleSegment.Position">
            <summary>
            Axis segment position in axis size percentage.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.AxisScaleSegment.Size">
            <summary>
            Axis segment size in axis size percentage.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.AxisScaleSegment.Spacing">
            <summary>
            Axis segment spacing in axis size percentage.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.AxisScaleSegment.ScaleMaximum">
            <summary>
            Axis segment scale maximum value.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.AxisScaleSegment.ScaleMinimum">
            <summary>
            Axis segment scale minimum value.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.AxisScaleSegment.Interval">
            <summary>
            Axis segment interval size.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.AxisScaleSegment.IntervalOffset">
            <summary>
            Axis segment interval offset.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.AxisScaleSegment.IntervalType">
            <summary>
            Axis segment interval type.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.AxisScaleSegment.IntervalOffsetType">
            <summary>
            Axis segment interval offset type.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.AxisScaleSegment.Tag">
            <summary>
            Object associated with axis scale segment.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.AxisScaleSegmentCollection">
            <summary>
            <b>AxisScaleSegmentCollection</b> is a strongly typed collection 
            of AxisScaleSegment objects.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisScaleSegmentCollection.#ctor">
            <summary>
            Default public constructor.
            </summary>
            <remarks>
            This constructor is for internal use and should not be part of documentation.
            </remarks>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisScaleSegmentCollection.#ctor(Dundas.Olap.WebUIControls.Axis)">
            <summary>
            Default public constructor.
            </summary>
            <remarks>
            This constructor is for internal use and should not be part of documentation.
            </remarks>
            <param name="axis">
            Chart axis this collection belongs to
            </param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisScaleSegmentCollection.Remove(Dundas.Olap.WebUIControls.AxisScaleSegment)">
            <summary>
            Removes the given segment from the collection.
            </summary>
            <param name="segment">
            <see cref="T:Dundas.Olap.WebUIControls.AxisScaleSegment"/> object to be removed.
            </param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisScaleSegmentCollection.Add(Dundas.Olap.WebUIControls.AxisScaleSegment)">
            <summary>
            Adds a segment to the end of the collection.
            </summary>
            <param name="segment">
            <see cref="T:Dundas.Olap.WebUIControls.AxisScaleSegment"/> object to add.
            </param>
            <returns>
            Index of the newly added object.
            </returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisScaleSegmentCollection.OnInsertComplete(System.Int32,System.Object)">
            <summary>
            After new item inserted.
            </summary>
            <param name="index">Item index.</param>
            <param name="value">Item object.</param>
            <remarks>
            This is an internal method and should not be part of the documentation.
            </remarks>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisScaleSegmentCollection.OnSetComplete(System.Int32,System.Object,System.Object)">
            <summary>
            After items is set.
            </summary>
            <param name="index">The zero-based index at which oldValue can be found.</param>
            <param name="oldValue">The value to replace with newValue.</param>
            <param name="newValue">The new value of the element at index.</param>
            <remarks>
            This is an internal method and should not be part of the documentation.
            </remarks>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisScaleSegmentCollection.EnforceSegment(Dundas.Olap.WebUIControls.AxisScaleSegment)">
            <summary>
            Ensures that specified axis scale segmnent is used for all coordinate transformations.
            Set tot NULL to reset.
            </summary>
            <param name="segment"></param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisScaleSegmentCollection.FindScaleSegmentForAxisValue(System.Double)">
            <summary>
            Find axis scale segment that should be used to translate axis value to relative coordinates.
            </summary>
            <param name="axisValue">Axis value to convert.</param>
            <returns>Scale segment to use for the convertion.</returns>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.AxisScaleSegmentCollection.Item(System.Int32)">
            <summary>
            Axis scale segment collection indexer.
            </summary>
            <remarks>
            The <b>AxisScaleSegment</b> object index can be provided as a parameter. Returns the <see cref="T:Dundas.Olap.WebUIControls.AxisScaleSegment"/> object. 
            </remarks>
        </member>
        <member name="T:Dundas.Charting.WebControl.Formulas.TimeSeriesAndForecasting">
            <summary>
            This class is used for calculations of 
            time series and forecasting
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Formulas.TimeSeriesAndForecasting.#ctor">
            <summary>
            Public constructor.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Formulas.TimeSeriesAndForecasting.Formula(System.String,System.Double[][],System.Double[][]@,System.String[],System.String[],System.String[][]@)">
            <summary>
            The first method in the module, which converts a formula 
            name to the corresponding private method.
            </summary>
            <param name="formulaName">String which represent a fomula name</param>
            <param name="inputValues">Arrays of doubles - Input values</param>
            <param name="outputValues">Arrays of doubles - Output values</param>
            <param name="parameterList">Array of strings - Formula parameters</param>
            <param name="extraParameterList">Array of strings - Extra Formula parameters from DataManipulator object</param>
            <param name="outLabels">Array of strings - Used for Labels. Description for ouput results.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Formulas.TimeSeriesAndForecasting.Forecasting(System.Double[][],System.Double[][]@,System.String[],System.String[])">
            <summary>
            Forecasting formula predicts future values of the time series variable. 
            Multiple regressions are used for this forecasting model. Any method 
            of fitting equations to data may be called regression. Such equations 
            are valuable for at least two purposes: making predictions and judging 
            the strength of relationships. Of the various methods of performing 
            regression, Last Square is the most widely used. This formula returns 
            two more series, which represents upper and lower bond of error. Error 
            is based on standard deviation and represents a linear combination of 
            approximation error and forecasting error.
            ---------------------------------------------------------
            Input: 
            	- Y values.
            Output: 
            	- Forecasting
            	- uper bond error
            	- lower bond error
            Parameters: 
            	- Polynomial degree (Default: 2 - Linear regresion )
            	- Forecasting period (Default: Half of the series length )
            	- Returns Approximation error (Default: true)
            	- Returns Forecasting error (Default: true)
            Extra Parameters: 
            	- 
            
            </summary>
            <param name="inputValues">Arrays of doubles - Input values</param>
            <param name="outputValues">Arrays of doubles - Output values</param>
            <param name="parameterList">Array of strings - Parameters</param>
            <param name="extraParameterList">Array of strings - Extra parameters</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Formulas.TimeSeriesAndForecasting.Regression(Dundas.Charting.WebControl.Formulas.TimeSeriesAndForecasting.RegressionType,System.Double[][],System.Double[][]@,System.Int32,System.Int32)">
            <summary>
            Any method of fitting equations to data may be called regression. 
            Such equations are valuable for at least two purposes: making 
            predictions and judging the strength of relationships. Of the 
            various methods of performing regression, Last Square is the 
            most widely used. 
            </summary>
            <param name="regressionType">Type of regresion, Polynomial, exponential, etc.</param>
            <param name="inputValues">Arrays of doubles - Input values</param>
            <param name="outputValues">Arrays of doubles - Output values</param>
            <param name="polynomialDegree">Polynomial degree (Default: 2 - Linear regresion )</param>
            <param name="forecastingPeriod">Forecasting period (Default: Half of the series length )</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Formulas.TimeSeriesAndForecasting.PolynomialRegression(Dundas.Charting.WebControl.Formulas.TimeSeriesAndForecasting.RegressionType,System.Double[][],System.Double[][]@,System.Int32,System.Int32,System.Double)">
            <summary>
            Any method of fitting equations to data may be called regression. 
            Such equations are valuable for at least two purposes: making 
            predictions and judging the strength of relationships. Of the 
            various methods of performing regression, Last Square is the 
            most widely used. 
            </summary>
            <param name="regressionType">Type of regresion, Polynomial, exponential, etc.</param>
            <param name="inputValues">Arrays of doubles - Input values</param>
            <param name="outputValues">Arrays of doubles - Output values</param>
            <param name="polynomialDegree">Polynomial degree (Default: 2 - Linear regresion )</param>
            <param name="forecastingPeriod">Forecasting period (Default: Half of the series length )</param>
            <param name="logInterval">Interval for logarithmic scale</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Formulas.TimeSeriesAndForecasting.Determinant(System.Double[][])">
            <summary>
            This method recalculates determinant. This method is used for 
            recursive calls for sub determinants too.
            </summary>
            <param name="inputDeterminant">Input determinant</param>
            <returns>Result of determinant</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Formulas.TimeSeriesAndForecasting.MakeSubDeterminant(System.Double[][],System.Int32)">
            <summary>
            This method will create a new determinant, which is 
            smaller by one rank (dimension). Specified column 
            and zero rows will be skipped.
            </summary>
            <param name="inputDeterminant">Input determinant</param>
            <param name="columnPos">Position of column, which has to be skipped</param>
            <returns>New determinant</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Formulas.TimeSeriesAndForecasting.CopyDeterminant(System.Double[][])">
            <summary>
            This method will copy determinant
            </summary>
            <param name="inputDeterminant">Input determinant</param>
            <returns>New determinant</returns>
        </member>
        <member name="P:Dundas.Charting.WebControl.Formulas.TimeSeriesAndForecasting.Name">
            <summary>
            Formula Module name
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.Formulas.TimeSeriesAndForecasting.RegressionType">
            <summary>
            Type of regression
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Formulas.TimeSeriesAndForecasting.RegressionType.Polynomial">
            <summary>
            Polynomial trend
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Formulas.TimeSeriesAndForecasting.RegressionType.Logarithmic">
            <summary>
            Logarithmic trend
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Formulas.TimeSeriesAndForecasting.RegressionType.Power">
            <summary>
            Power trend
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Formulas.TimeSeriesAndForecasting.RegressionType.Exponential">
            <summary>
            Exponential trend
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.Commands.CommandRegistry">
            <summary>
            CommandRegistry class contains static methods for 
            intitializing and access to registry with CommandExecutor objects.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Commands.CommandRegistry.DefaultCommands">
            <summary>
            Default top level commands
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Commands.CommandRegistry.registry">
            <summary>
            Registry list
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandRegistry.#cctor">
            <summary>
            Static constructor CommandRegistry class.
            Intializes commands.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandRegistry.GetCommand(Dundas.Olap.WebUIControls.ChartCommandType)">
            <summary>
            Maps and gets CommandExecutor instance corresponded on ChartCommandType
            </summary>
            <param name="type">The ChartCommandType</param>
            <returns>CommandExecutor instance corresponded on type</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandRegistry.GetCommands">
            <summary>
            Gets array of default top level CommandExecutor instances;
            </summary>
            <returns>array of CommandExecutor objects</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandRegistry.Register(Dundas.Olap.WebUIControls.Commands.CommandExecutor)">
            <summary>
            Registers a CommandExecutor object into registry
            </summary>
            <param name="cmd">CommandExecutor object to register</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandRegistry.RegisterCommands">
            <summary>
            Registers known commands into registry
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandRegistry.IsAllowed(System.Security.CodeAccessPermission)">
            <summary>
            Checks the security permision
            </summary>
            <param name="codeAccessPermision">Security permision to check</param>
            <returns>True if permisioon is allowed</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandRegistry.InvokeDemand(System.Security.CodeAccessPermission)">
            <summary>
            Invokes demand of security permision. Expects exception if permission is set.
            </summary>
            <param name="codeAccessPermision">Security permision to check</param>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.Commands.ICommandSupplyImage">
            <summary>
            The <see cref="T:Dundas.Olap.WebUIControls.Commands.CommandExecutor"/> which implement this interface
            perform drawing to supply image.
            Usualy images are in to resource and can be loaded by
            Chart.NamedImages
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.ICommandSupplyImage.GetImage">
            <summary>
            The image which supply this <see cref="T:Dundas.Olap.WebUIControls.Commands.CommandExecutor"/>
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.Commands.ICommandNeedMouse">
            <summary>
            The <see cref="T:Dundas.Olap.WebUIControls.Commands.CommandExecutor"/> which implements this interface
            needs to wait for next mouse click for properly execution.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.Commands.CommandExecutor">
            <summary>
            CommandExecutor is a base internal class for all command implementations. 
            You can find it as <see cref="P:Dundas.Olap.WebUIControls.Command.CommandProxy"/> property.
            This class provides default information - text, images to interfaced Command object.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Commands.CommandExecutor.type">
            <summary>
            The chart command type
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Commands.CommandExecutor.style">
            <summary>
            Default toggle style
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Commands.CommandExecutor.name">
            <summary>
            Name of the command, retrieved from resource
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Commands.CommandExecutor.text">
            <summary>
            Text of the command, retrieved from resource
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Commands.CommandExecutor.description">
            <summary>
            Description of the command, retrieved from resource
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Commands.CommandExecutor.shortcut">
            <summary>
            Default shortcut of the command
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Commands.CommandExecutor.imageName">
            <summary>
            The image name of the command
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Commands.CommandExecutor.Params">
            <summary>
            Parced params
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandExecutor.#ctor(Dundas.Olap.WebUIControls.ChartCommandType)">
            <summary>
            Initializes new instance of CommandExecutor class
            </summary>
            <param name="type">The <see cref="T:Dundas.Olap.WebUIControls.ChartCommandType"/> which implements 
            this CommandExecutor.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandExecutor.IsSupportState">
            <summary>
            Returns true if this command support enable/disable state
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandExecutor.GetToggleState(Dundas.Olap.WebUIControls.Command,System.Object,System.String)">
            <summary>
            Check command togle state against object context.
            </summary>
            <param name="cmd">Command to check</param>
            <param name="context">Object context</param>
            <param name="parameters">additional parameters</param>
            <returns>True if command is in toggle state</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandExecutor.GetEnableState(Dundas.Olap.WebUIControls.Command,System.Object)">
            <summary>
            Check command enable state against object context.
            </summary>
            <param name="cmd">Command to check</param>
            <param name="context">Object context</param>
            <returns>True if command is in toggle state</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandExecutor.GetEnableState(Dundas.Olap.WebUIControls.Command,System.Object,System.String)">
            <summary>
            Check command enable state against object context.
            </summary>
            <param name="cmd">Command to check</param>
            <param name="context">Object context</param>
            <param name="parameters">Parameters context</param>
            <returns>True if command is in toggle state</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandExecutor.Execute(Dundas.Olap.WebUIControls.Command,System.Object,System.String)">
            <summary>
            Executes a command.
            </summary>
            <param name="cmd">The original <see cref="T:Dundas.Olap.WebUIControls.Command"/> object which invoke this call</param>
            <param name="selectedObject">The context object which command to apply. It can be array of objects.</param>
            <param name="parameters">Parameters for additional tunning of the execution</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandExecutor.GetSubCommandTypes">
            <summary>
            Gets array of ChartCommandType which represents default sub commands.
            </summary>
            <returns>Array of ChartCommandType</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandExecutor.GetSupportedElements">
            <summary>
            Returns set of supportwd elements of this command
            </summary>
            <returns>Returns set of supportwd elements of this command</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandExecutor.GetCommandIType">
            <summary>
            Gets defined  <see cref="P:Dundas.Olap.WebUIControls.Commands.CommandExecutor.CommandInterfaceType"/> of this command executor
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandExecutor.GetCommandPopupStyle">
            <summary>
            Gets defined  <see cref="T:Dundas.Olap.WebUIControls.CommandPopupStyle"/> of this command executor.
            Default is Menu.
            </summary>
            <returns>The command popup style</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandExecutor.SetDefaultItems">
            <summary>
            Reads object fields from resources
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandExecutor.GetImageName">
            <summary>
            Gets image name registered in Chart.NamedImageCollection 
            or dynamicaly loaded from resources
            </summary>
            <returns>Formated image name</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandExecutor.LoadProperty(System.String)">
            <summary>
            Loads property (string) from string resource. 
            </summary>
            <param name="propertyName">Property name to load</param>
            <returns>String read from resource</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandExecutor.ParseParams(System.String)">
            <summary>
            Parses command parameter string and fills string dictionary with key value pairs
            </summary>
            <param name="p">Parameter string to parse</param>
            <returns>Dictionary with key/value pairs</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandExecutor.GetChartElements(Dundas.Olap.WebUIControls.Command,Dundas.Olap.WebUIControls.ContextElementType,System.Boolean)">
            <summary>
            Creates list with chart elements in defined context type.
            </summary>
            <param name="cmd">Command which targets specified chart elements. 
            Used for chart object access</param>
            <param name="contextType">Target context elements</param>
            <param name="first">True to return only first element, false to return all elements</param>
            <returns>List with ObjectInfo instances which hold chart elements </returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandExecutor.CreateMergeContext(Dundas.Olap.WebUIControls.Command,System.Object,System.String,Dundas.Olap.WebUIControls.ContextElementType)">
            <summary>
            Creates list with chart elements (ObjectInfo instances) from defined context and parameters.
            </summary>
            <param name="cmd">Command which targets specified chart elements. 
            Used for chart object access</param>
            <param name="context">The context of elements for inspection</param>
            <param name="parameters">Command string parameters</param>
            <param name="contextFilter">Target context type to filter ouput</param>
            <returns>List with ObjectInfo instances which hold chart elements </returns>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Commands.CommandExecutor.Type">
            <summary>
            Gets the command type.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Commands.CommandExecutor.Name">
            <summary>
            Gets the default name against <see cref="T:Dundas.Olap.WebUIControls.ChartCommandType"/>
            from internationalized resource.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Commands.CommandExecutor.Text">
            <summary>
            Gets the default text against <see cref="T:Dundas.Olap.WebUIControls.ChartCommandType"/>
            from internationalized resource.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Commands.CommandExecutor.Description">
            <summary>
            Gets the default description against <see cref="T:Dundas.Olap.WebUIControls.ChartCommandType"/>
            from internationalized resource.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Commands.CommandExecutor.Shortcut">
            <summary>
            Gets the default shortcut against <see cref="T:Dundas.Olap.WebUIControls.ChartCommandType"/>
            from internationalized resource.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Commands.CommandExecutor.ImageName">
            <summary>
            Gets the default image name. The image can be loaded from Chart.NamedImages
            in case this CommandExecutor doesnot implement ICommandSupplyImage interface.
            In this case image starts with "$$$" and cannot be loaded from Chart.NamedImages
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Commands.CommandExecutor.PopUpStyle">
            <summary>
            Gets the default <see cref="T:Dundas.Olap.WebUIControls.CommandPopupStyle"/>.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Commands.CommandExecutor.SupportedElements">
            <summary>
            Gets the default <see cref="T:Dundas.Olap.WebUIControls.ContextElementType"/>
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Commands.CommandExecutor.SubCommands">
            <summary>
            Gets array with default SubCommands this <see cref="T:Dundas.Olap.WebUIControls.ChartCommandType"/>
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Commands.CommandExecutor.CommandInterfaceType">
            <summary>
            Gets the <see cref="P:Dundas.Olap.WebUIControls.Commands.CommandExecutor.CommandInterfaceType"/> which represents 
            if command is empty and do nothing ( <see cref="!:CommandInterfaceType.Container"/> ) or 
            executable ( <see cref="!:CommandInterfaceType.Executable"/> ) or both
            ( <see cref="!:CommandInterfaceType.Mixed"/> ).
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.ChartTypes.ColumnChart">
            <summary>
            ColumnChart class provides 2D/3D drawing and hit testing 
            functionality for the Column and RangeColumn charts. The 
            only difference between the RangeColumn and Column chart 
            is that 2 Y values are used to position top and bottom 
            side of each RangeColumn column.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.ChartTypes.ColumnChart.shiftedX">
            <summary>
            Labels and markers have to be shifted if there 
            is more than one series for column chart.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.ChartTypes.ColumnChart.shiftedSerName">
            <summary>
            Labels and markers have to be shifted if there 
            is more than one series for column chart. This property 
            will give a name of the series, which is used, for 
            labels and markers. Point chart 
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.ChartTypes.ColumnChart.useTwoValues">
            <summary>
            Indicates that two Y values are used to calculate column position
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.ChartTypes.ColumnChart.drawSeriesSideBySide">
            <summary>
            Indicates that columns from different series are drawn side by side
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.ChartTypes.ColumnChart.coordinates">
            <summary>
            Coordinates of COP used when sorting 3D points order
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.ColumnChart.GetImage(Dundas.Charting.WebControl.ChartTypes.ChartTypeRegistry)">
            <summary>
            Gets chart type image.
            </summary>
            <param name="registry">Chart types registry object.</param>
            <returns>Chart type image.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.ColumnChart.GetLegendImageStyle(Dundas.Olap.WebUIControls.Series)">
            <summary>
            How to draw series/points in legend:
            Filled rectangle, Line or Marker
            </summary>
            <param name="series">Legend item series.</param>
            <returns>Legend item style.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.ColumnChart.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.ColumnChart.Paint(Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.CommonElements,Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.Series)">
            <summary>
            Paint Column Chart.
            </summary>
            <param name="graph">The Chart Graphics object.</param>
            <param name="common">The Common elements object.</param>
            <param name="area">Chart area for this chart.</param>
            <param name="seriesToDraw">Chart series to draw.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.ColumnChart.ProcessChartType(System.Boolean,System.Boolean,Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.CommonElements,Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.Series)">
            <summary>
            This method recalculates size of the columns and paint them or do the hit test.
            This method is used from Paint or Select method.
            </summary>
            <param name="labels">Mode which draws only labels and markers.</param>
            <param name="selection">If True selection mode is active, otherwise paint mode is active.</param>
            <param name="graph">The Chart Graphics object.</param>
            <param name="common">The Common elements object.</param>
            <param name="area">Chart area for this chart.</param>
            <param name="seriesToDraw">Chart series to draw.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.ColumnChart.GetLabelDrawingStyle(Dundas.Olap.WebUIControls.DataPoint,Dundas.Olap.WebUIControls.Series)">
            <summary>
            Returns column drawing style
            </summary>
            <param name="point">Point.</param>
            <param name="ser">Series.</param>
            <returns>Drawing Style</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.ColumnChart.GetLabelPosition(Dundas.Olap.WebUIControls.DataPoint,Dundas.Olap.WebUIControls.Series,System.Int32,System.Drawing.SizeF,System.Drawing.SizeF,System.Single,System.Drawing.PointF)">
            <summary>
            Returns column label position
            </summary>
            <param name="point">Point.</param>
            <param name="series">Series.</param>
            <param name="pointIndex">Point index.</param>
            <returns>Label position.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.ColumnChart.DrawColumn2D(Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.Axis,System.Drawing.RectangleF,Dundas.Olap.WebUIControls.DataPoint,Dundas.Olap.WebUIControls.Series)">
            <summary>
            Draws 2D column.
            </summary>
            <param name="graph">Chart graphics.</param>
            <param name="vAxis">Vertical axis.</param>
            <param name="rectSize">Column position and size.</param>
            <param name="point">Column data point.</param>
            <param name="ser">Column series.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.ColumnChart.GetAutoLabelPosition(Dundas.Olap.WebUIControls.Series,System.Int32)">
            <summary>
            Gets label position for the column depending on the Y value.
            </summary>
            <returns>Return automaticly detected label position.</returns>
            <param name="series">Data series.</param>
            <param name="pointIndex">Point index.</param>
            <returns>Label aligning.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.ColumnChart.ShouldDrawMarkerOnViewEdgeX">
            <summary>
            Indicates that markers are drawnd on the X edge of the data view.
            </summary>
            <returns>False. Column chart never draws markers on the edge.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.ColumnChart.ProcessChartType3D(System.Boolean,System.Boolean,Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.CommonElements,Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.Series)">
            <summary>
            This method recalculates size of the columns and paint them or do the hit test in 3d space.
            This method is used from Paint or Select method.
            </summary>
            <param name="labels">Mode which draws only labels and markers.</param>
            <param name="selection">If True selection mode is active, otherwise paint mode is active.</param>
            <param name="graph">The Chart Graphics object.</param>
            <param name="common">The Common elements object.</param>
            <param name="area">Chart area for this chart.</param>
            <param name="seriesToDraw">Chart series to draw.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.ColumnChart.Init3DAnimation(Dundas.Olap.WebUIControls.CommonElements,System.Drawing.RectangleF,System.Single,System.Single,Dundas.Olap.WebUIControls.Matrix3D,Dundas.Olap.WebUIControls.ChartGraphics,System.Boolean,Dundas.Olap.WebUIControls.DataPoint)">
            <summary>
            This method prepares animation coordinates for 
            3D Column chart.
            </summary>
            <param name="common">Common Elements</param>
            <param name="position">Position of 3d projection of the cube without transformations.</param>
            <param name="positionZ">Z position of the cube without transformations</param>
            <param name="depth">Depth of 3D cube</param>
            <param name="matrix">Transformation matrix</param>
            <param name="graph">Chart Graphics</param>
            <param name="negativeValue">Point has negative value</param>
            <param name="point">Data Point</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.ColumnChart.ProcessSinglePoint3D(Dundas.Olap.WebUIControls.DataPoint3D,System.Boolean,Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.CommonElements,Dundas.Olap.WebUIControls.ChartArea,System.Drawing.RectangleF,System.Int32)">
            <summary>
            Draws\Hit tests single 3D point.
            </summary>
            <param name="pointEx">3D point information.</param>
            <param name="selection">If True selection mode is active, otherwise paint mode is active.</param>
            <param name="graph">The Chart Graphics object.</param>
            <param name="common">The Common elements object.</param>
            <param name="area">Chart area for this chart.</param>
            <param name="columnPosition">Column position</param>
            <param name="pointIndex">Point index.</param>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.ColumnChart.Name">
            <summary>
            Chart type name
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.ColumnChart.Stacked">
            <summary>
            True if chart type is stacked
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.ColumnChart.RequireAxes">
            <summary>
            True if chart type supports axeses
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.ColumnChart.SupportLogarithmicAxes">
            <summary>
            True if chart type supports logarithmic axes
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.ColumnChart.SwitchValueAxes">
            <summary>
            True if chart type requires to switch the value (Y) axes position
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.ColumnChart.SideBySideSeries">
            <summary>
            True if chart series can be placed side-by-side.
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.ColumnChart.DataPointsInLegend">
            <summary>
            True if each data point of a chart must be represented in the legend
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.ColumnChart.ExtraYValuesConnectedToYAxis">
            <summary>
            Indicates that extra Y values are connected to the scale of the Y axis
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.ColumnChart.ApplyPaletteColorsToPoints">
            <summary>
            True if palette colors should be applied for each data paoint.
            Otherwise the color is applied to the series.
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.ColumnChart.YValuesPerPoint">
            <summary>
            Number of supported Y value(s) per point 
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.ColumnChart.ZeroCrossing">
            <summary>
            If the crossing value is auto Crossing value should be 
            automatically set to zero for some chart 
            types (Bar, column, area etc.)
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.ColumnChart.ShiftedX">
            <summary>
            Labels and markers have to be shifted if there 
            is more than one series for column chart.
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.ColumnChart.ShiftedSerName">
            <summary>
            Labels and markers have to be shifted if there 
            is more than one series for column chart. This property 
            will give a name of the series, which is used, for 
            labels and markers.
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.ChartTypes.RangeColumnChart">
            <summary>
            ColumnChart class contains all the code necessary to draw 
            both Column and RangeColumn charts. The RangeColumnChart class 
            is used to override few default settings, so that 2 Y values 
            will be used to define top and bottom position of each column.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.RangeColumnChart.#ctor">
            <summary>
            Public constructor
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.RangeColumnChart.GetYValue(Dundas.Olap.WebUIControls.CommonElements,Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.Series,Dundas.Olap.WebUIControls.DataPoint,System.Int32,System.Int32)">
            <summary>
            Helper function, which returns the Y value of the point.
            </summary>
            <param name="common">Chart common elements.</param>
            <param name="area">Chart area the series belongs to.</param>
            <param name="series">Sereis of the point.</param>
            <param name="point">Point object.</param>
            <param name="pointIndex">Index of the point.</param>
            <param name="yValueIndex">Index of the Y value to get.</param>
            <returns>Y value of the point.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.RangeColumnChart.DrawLabel(Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.CommonElements,System.Drawing.RectangleF,Dundas.Olap.WebUIControls.DataPoint,Dundas.Olap.WebUIControls.Series,System.Int32)">
            <summary>
            This method draws label.
            </summary>
            <param name="graph">The Chart Graphics object</param>
            <param name="common">The Common elements object</param>
            <param name="area">Chart area for this chart</param>
            <param name="columnPosition">Column position</param>
            <param name="point">Data point</param>
            <param name="series">Data series</param>
            <param name="pointIndex">Data point index.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.RangeColumnChart.ProcessSinglePoint3D(Dundas.Olap.WebUIControls.DataPoint3D,System.Boolean,Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.CommonElements,Dundas.Olap.WebUIControls.ChartArea,System.Drawing.RectangleF,System.Int32)">
            <summary>
            Draws\Hit tests single 3D point.
            </summary>
            <param name="pointEx">3D point information.</param>
            <param name="selection">If True selection mode is active, otherwise paint mode is active.</param>
            <param name="graph">The Chart Graphics object.</param>
            <param name="common">The Common elements object.</param>
            <param name="area">Chart area for this chart.</param>
            <param name="columnPosition">Column position</param>
            <param name="pointIndex">Point index.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.RangeColumnChart.Paint(Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.CommonElements,Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.Series)">
            <summary>
            Paint Range Column Chart.
            </summary>
            <param name="graph">The Chart Graphics object.</param>
            <param name="common">The Common elements object.</param>
            <param name="area">Chart area for this chart.</param>
            <param name="seriesToDraw">Chart series to draw.</param>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.RangeColumnChart.Name">
            <summary>
            Chart type name
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.RangeColumnChart.ZeroCrossing">
            <summary>
            If the crossing value is auto Crossing value should be 
            automatically set to zero for some chart 
            types (Bar, column, area etc.)
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.RangeColumnChart.YValuesPerPoint">
            <summary>
            Number of supported Y value(s) per point 
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.RangeColumnChart.ExtraYValuesConnectedToYAxis">
            <summary>
            Indicates that extra Y values are connected to the scale of the Y axis
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.Ajax.PropertyPages3DClassControl">
            <summary>
            PropertyPages3DClassControl is an user control for setup 3D appearance of the chart. 
            Part of property pages.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.PropertyPages3DClassControl.GetChartArea">
            <summary>
            Gets the chart area.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.PropertyPages3DClassControl.IsVisible">
            <summary>
            Determines whether this instance is visible.
            </summary>
            <returns>
            	<c>true</c> if this instance is visible; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.PropertyPages3DClassControl.ApplyChanges(Dundas.Olap.WebUIControls.ChartArea)">
            <summary>
            Applies changes to the specified chart area.
            </summary>
            <param name="area">Chart area the changes apply to.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.PropertyPages3DClassControl.ApplyChanges">
            <summary>
            Applies the changes.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.PropertyPages3DClassControl.InitPage(Dundas.Olap.WebUIControls.Ajax.PropertyPagesClassControl)">
            <summary>
            Inits the page.
            </summary>
            <param name="control">The control.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.PropertyPages3DClassControl.OnPreRender(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Web.UI.Control.PreRender"></see> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"></see> object that contains the event data.</param>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.Ajax.DundasScrollbar">
            <summary>
            DundasScrollbar is a web control used in scrolling feature
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.DundasScrollbar.#ctor(Dundas.Olap.WebUIControls.Chart,System.String,Dundas.Olap.WebUIControls.AxisScrollBar)">
            <summary>
            Initializes a new instance of the <see cref="T:DundasScrollbar"/> class.
            </summary>
            <param name="chart">The chart.</param>
            <param name="resetParams">The reset params.</param>
            <param name="scrollbar">The scrollbar.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.DundasScrollbar.TumbCompensation">
            <summary>
            Gets the Tumb compensation.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.DundasScrollbar.GetShortDimension">
            <summary>
            Gets the short dimension.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.DundasScrollbar.GetLongDimension">
            <summary>
            Gets the long dimension.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.DundasScrollbar.GetOuterTumbLength">
            <summary>
            Gets the length of the outer tumb.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.DundasScrollbar.GetStartTumbPos">
            <summary>
            Gets the start tumb position.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.DundasScrollbar.HasButtons">
            <summary>
            Determines whether this instance has buttons.
            </summary>
            <returns>
            	<c>true</c> if this instance has buttons; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.DundasScrollbar.HasResetButton">
            <summary>
            Determines whether has reset button.
            </summary>
            <returns>
            	<c>true</c> if [has reset button]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.DundasScrollbar.GetButtonsCount">
            <summary>
            Gets the buttons count.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.DundasScrollbar.GetTumbLength">
            <summary>
            Gets the length of the tumb.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.DundasScrollbar.GetEmptyImage">
            <summary>
            Gets the empty image.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.DundasScrollbar.SetBackgroundImage(System.Web.UI.WebControls.WebControl,System.String)">
            <summary>
            Sets the background image.
            </summary>
            <param name="control">The control.</param>
            <param name="imageName">Name of the image.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.DundasScrollbar.GetImage(System.String)">
            <summary>
            Gets the image.
            </summary>
            <param name="imageName">Name of the image.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.DundasScrollbar.GetImage(System.String,System.Int32)">
            <summary>
            Gets the positioned image.
            </summary>
            <param name="imageName">Name of the image.</param>
            <param name="position">The position.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.DundasScrollbar.GetDivElement(System.Int32)">
            <summary>
            Gets the div element.
            </summary>
            <param name="position">The position.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.DundasScrollbar.GetTumb">
            <summary>
            Gets the tumb.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.DundasScrollbar.SetBackground(System.Web.UI.WebControls.WebControl,System.Drawing.Color,System.Boolean)">
            <summary>
            Sets the background.
            </summary>
            <param name="control">The control.</param>
            <param name="color">The color.</param>
            <param name="tryDark">if set to <c>true</c> [try dark].</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.DundasScrollbar.GetBackground">
            <summary>
            Gets the background.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.DundasScrollbar.GetCell(Dundas.Olap.WebUIControls.Ajax.DundasScrollbar.ScrollbarItem)">
            <summary>
            Gets the cell.
            </summary>
            <param name="itemType">Type of the item.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.DundasScrollbar.PopulateScript">
            <summary>
            Populates the java script.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.DundasScrollbar.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the control to the specified HTML writer.
            </summary>
            <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter"></see> object that receives the control content.</param>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Ajax.DundasScrollbar.IsVertical">
            <summary>
            Gets a value indicating whether this instance is vertical.
            </summary>
            <value>
            	<c>true</c> if this instance is vertical; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Ajax.DundasScrollbar.MaxScroll">
            <summary>
            Gets or sets the max scroll.
            </summary>
            <value>The max scroll.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Ajax.DundasScrollbar.MinScroll">
            <summary>
            Gets or sets the min scroll.
            </summary>
            <value>The min scroll.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Ajax.DundasScrollbar.Position">
            <summary>
            Gets or sets the position.
            </summary>
            <value>The position.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Ajax.DundasScrollbar.ScrollElementID">
            <summary>
            Gets or sets the scroll element ID.
            </summary>
            <value>The scroll element ID.</value>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.ChartCallbackManager">
            <summary>
            ChartCallbackManager is a class exposed into the chart and handle
            with callbacks, chart viewstate, chart rendering in user interactive mode 
            and contain several public methods for helping callback calls. 
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCallbackManager.service">
            <summary>
            The parent service container;
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCallbackManager.chart">
            <summary>
            The parent chart
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCallbackManager.zoomEngine">
            <summary>
            The ZoomEngine reference
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCallbackManager.callbackArgument">
            <summary>
            Current callback argument
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCallbackManager.currentCommandArgs">
            <summary>
            Current callback info for context menu and for down menus.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCallbackManager.commandPrefix">
            <summary>
            Default system command prefix used for all internal commands.
            All internal command names starts with this prefix.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCallbackManager.renderChartImage">
            <summary>
            Flag that indicates if the chart should be rendered. For example
            when popup a menu from the toolbar chart should not be rendered.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCallbackManager.suppressSaveState">
            <summary>
            Flag that indicates if the chart will save state into the session.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCallbackManager.viewStateLoaded">
            <summary>
            Flag that indicates that the viewstate has been loaded.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCallbackManager.viewStateLoadedForChart">
            <summary>
            Flag that indicates that the viewstate has been loaded for chart.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCallbackManager.viewStateSaved">
            <summary>
            Flag that indicates that the viewstate has been saved.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCallbackManager.container">
            <summary>
            The inner chart container in interactive mode named (ChartName)Ex
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCallbackManager.panelContainer">
            <summary>
            The outer chart container in interactive mode named (ChartName)Panel
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCallbackManager.elementOffsets">
            <summary>
            Relative Y offset for next element
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCallbackManager.callbackStateContent">
            <summary>
            Callback state content propery shadow
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCallbackManager.callbackRenderMode">
            <summary>
            Determines  whether the contol is rendered in callback or normal render
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCallbackManager.toolBars">
            <summary>
            List of attached external toolbars
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartCallbackManager.#ctor(System.ComponentModel.Design.ServiceContainer)">
            <summary>
            Initializes a new instance of the <see cref="T:ChartCallbackManager"/> class.
            </summary>
            <param name="service">The service.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartCallbackManager.GetZoomingState(Dundas.Olap.WebUIControls.Ajax.ZoomEngineState)">
            <summary>
            Gets the state of the zooming. This state is used during drawing in order to be performed different logic like enlarged axis drawing
            </summary>
            <param name="state">The state.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartCallbackManager.DisableUpdate(System.Boolean)">
            <summary>
            Disables the chart update. Suppress chart rendering during callbacks.
            </summary>
            <param name="disable">if set to <c>true</c> chart will be not rendered.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartCallbackManager.GetCallbackEventReference(System.String,System.String)">
            <summary>
            Obtains a reference to a client-side function that, when invoked, 
            initiates a client call back to a server-side event which is handled
            by the Chart. The browser event bubbling will be canceled. 
            </summary>
            <param name="command">The control which handles the <b>arguments</b></param>
            <param name="arguments">String which is passed to the targetControl</param>
            <returns>String which represents javascript function.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartCallbackManager.GetCallbackMethodReference(System.String,System.String)">
            <summary>
            Obtains a reference to a client-side function that, when invoked, 
            initiates a client call back to a server-side event which is handled
            by the Chart.  The browser event will not be passed and event bubbling will not be canceled.
            </summary>
            <param name="command">The control which handles the <b>arguments</b></param>
            <param name="arguments">String which is passed to the targetControl</param>
            <returns>String which represents javascript function.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartCallbackManager.GetCallbackAsyncMethodReference(System.String,System.String)">
            <summary>
            Obtains a reference to a client-side function that, when invoked, 
            initiates a client call back to a server-side event which is handled
            by the Chart.  The call will be asyncronous and the browser event 
            will not be passed and event bubbling will not be canceled.
            </summary>
            <param name="command">The control which handles the <b>arguments</b></param>
            <param name="arguments">String which is passed to the targetControl</param>
            <returns>String which represents javascript function.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartCallbackManager.GetCallbackEventReference(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Obtains a reference to a client-side function that, when invoked,
            initiates a client call back to a server-side event which is handled
            by the Chart.
            </summary>
            <param name="command">The control which handles the <b>arguments</b></param>
            <param name="arguments">String which is passed to the targetControl</param>
            <param name="showCursorWait">if set to <c>true</c> then cursor wait is shown. Also the call will be asynchronous.</param>
            <param name="passEvent">if set to <c>true</c> then document event is passed as parameter and bubbling will be canceled. It is useful for element events - onlick, onmousedown, etc.</param>
            <returns>
            String which represents javascript function.
            </returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartCallbackManager.GetCallbackClientHyperlink(System.String,System.String)">
            <summary>
            Gets the callback client hyperlink.
            </summary>
            <param name="command">The command.</param>
            <param name="arguments">The arguments.</param>
            <returns>String which represents javascript function.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartCallbackManager.UpdateClientControl(System.String,System.String)">
            <summary>
            Updates the client control.
            </summary>
            <param name="controlId">The control id.</param>
            <param name="controlContent">Content of the control.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartCallbackManager.UpdateClientControl(System.Web.UI.Control)">
            <summary>
            Updates the client control.
            </summary>
            <param name="control">The control.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartCallbackManager.ExecuteClientScript(System.String)">
            <summary>
            Executes the client script.
            </summary>
            <param name="jsSourceCode">The javascript source code.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartCallbackManager.AddAToolbar(Dundas.Olap.WebUIControls.ChartToolbar)">
            <summary>
            Adds the a toolbar.
            </summary>
            <param name="t">The t.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartCallbackManager.RemoveAToolbar(Dundas.Olap.WebUIControls.ChartToolbar)">
            <summary>
            Removes the a toolbar.
            </summary>
            <param name="t">The t.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartCallbackManager.GetToolbarIDs">
            <summary>
            Gets the toolbar identificators (Unique ClientIDs).
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartCallbackManager.GetToolbars">
            <summary>
            Gets the toolbars.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartCallbackManager.SuppressSaveState(System.Boolean)">
            <summary>
            Sets the save chart state flag. This flag can suppress saving the chart state into session.It is used to avoid unnessesary savings.
            </summary>
            <param name="value">if set to <c>true</c> the chart will be saved.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartCallbackManager.SetRenderChartImage(System.Boolean)">
            <summary>
            Sets the render chart image flag. This flag can suppress rendering the chart to avoid unnessesary renderings.
            </summary>
            <param name="value">if set to <c>true</c> the chart will be rendered.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartCallbackManager.GetCallbackEventReferenceInt(System.String,System.String)">
            <summary>
            Gets the callback event reference for internal commands.
            </summary>
            <param name="command">The command.</param>
            <param name="arguments">The arguments.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartCallbackManager.HasImageMaps">
            <summary>
            Determines whether chart has image maps.
            </summary>
            <returns>
            	<c>true</c> if chart has image maps; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartCallbackManager.AddCallbackOutput(System.String,System.String)">
            <summary>
            Adds to the callback output given content by name ( param). The param could be html item ID or "javascript" or "ds_popup"
            </summary>
            <param name="param">The param.</param>
            <param name="content">The content.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartCallbackManager.AddCallbackOutput(System.Web.UI.WebControls.WebControl)">
            <summary>
            Adds a web control to the callback output. It renders the control and add it to the output list.
            </summary>
            <param name="control">The control.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartCallbackManager.GetClickPoint(System.String)">
            <summary>
            Gets the click point.
            </summary>
            <param name="arg">The arg.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartCallbackManager.ProcessClickEvent">
            <summary>
            Processes the click event.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartCallbackManager.ProcessScrolling">
            <summary>
            Processes the axis scroll event.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartCallbackManager.ProcessColorDlg">
            <summary>
            Processes the color dialog request.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartCallbackManager.RenderGradientBox(System.String,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Renders the gradient image box (the small image into DundasHatchGradientListBox).
            </summary>
            <param name="data">The data.</param>
            <param name="color1">The color1.</param>
            <param name="color2">The color2.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartCallbackManager.ProcessGradientControls">
            <summary>
            Processes request and render the gradient control (DundasHatchGradientListBox).
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartCallbackManager.ProcessFontDlg">
            <summary>
            Processes the request for the font dialog (when press the button of DundasFontEditor
            to popup the font dialog.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartCallbackManager.ProcessRefreshEvent">
            <summary>
            Processes the internall command event (from UI ) request.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartCallbackManager.ProcessCommandEvent">
            <summary>
            Processes the internall command event (from UI ) request.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartCallbackManager.ProcessContextMenuEvent">
            <summary>
            Processes the request for context menu.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartCallbackManager.ProcessInternalEvents">
            <summary>
            Processes all the internal events.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartCallbackManager.GetCallbackStateContent">
            <summary>
            Gets the type of CallbackStateContent. Determines the CallbackStateContent if it is "Auto"
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartCallbackManager.ChartOnInit">
            <summary>
            Initialize the view state engine.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartCallbackManager.ChartOnPostRender">
            <summary>
            Charts remove viewstate on post render .
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartCallbackManager.IsViewStateLoaded">
            <summary>
            Determines whether view state is loaded.
            </summary>
            <returns>
            	<c>true</c> if view state is loaded; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartCallbackManager.IsViewStateSaved">
            <summary>
            Determines whether view state is saved.
            </summary>
            <returns>
            	<c>true</c> if view state is saved; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartCallbackManager.GetSessionKey">
            <summary>
            Gets the session key.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartCallbackManager.GetMacKeyModifier">
            <summary>
            Gets the mac key modifier used for ciphering the custom view state.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartCallbackManager.IsChartIsTarget">
            <summary>
            Determines whether is chart is target for the callback. 
            Eliminates loading the viewstate if the chart will not handle the current callback.
            </summary>
            <returns>
            	<c>true</c> if chart is target; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartCallbackManager.LoadCallbackState">
            <summary>
            Loads the chart viewstate data from a session variable. 
            </summary>
            <returns>Returns true if the chart state is loaded successfully</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartCallbackManager.LoadChartState">
            <summary>
            Loads the state of the chart.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartCallbackManager.LoadChartState(System.Boolean)">
            <summary>
            Loads the state of the chart.
            </summary>
            <param name="force">if set to <c>true</c> force load chart data.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartCallbackManager.SaveCallbackState">
            <summary>
            Saves the chart viewstate data to a session variable.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartCallbackManager.SaveChartState">
            <summary>
            Saves the state of the chart (unforced).
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartCallbackManager.SaveChartState(System.Boolean)">
            <summary>
            Saves the state of the chart.
            </summary>
            <param name="force">if set to <c>true</c> the saving is forced.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartCallbackManager.CleanupAutoDetectTypes">
            <summary>
            Cleanups the auto detect value types of the series.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartCallbackManager.RevertAutoDetectTypes">
            <summary>
            Reverts the auto detect value types of the series.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartCallbackManager.CleanupCustomLabels">
            <summary>
            Cleanups the custom labels.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartCallbackManager.GetChartState">
            <summary>
            Gets the state of the chart as object Pair.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartCallbackManager.GetChartSeriesDataState">
            <summary>
            Gets the chart series data.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartCallbackManager.SetChartStateContent(Dundas.Olap.WebUIControls.LoadStateEventArgs)">
            <summary>
            Sets the content of the chart state.
            </summary>
            <param name="e">The <see cref="T:Dundas.Charting.WebControl.LoadStateEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartCallbackManager.GetNonSerializableContent">
            <summary>
            Gets non-serializable chart content for the template serialization.
            </summary>
            <returns>
            Non-serializable chart content string for the template serialization.
            </returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartCallbackManager.RegisterDialogPattern">
            <summary>
            Registers the dialog pattern.
            The dialog pattern is used from DHTML to create poup dialogs
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartCallbackManager.ProcessStaticResources">
            <summary>
            Processes and register the chart static resources.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartCallbackManager.GetElementTopOffset(System.Int32)">
            <summary>
            Gets the element top offset.
            </summary>
            <param name="controlHeight">Height of the control.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartCallbackManager.GetElementTopOffset(System.Web.UI.WebControls.Unit)">
            <summary>
            Gets the element top offset.
            </summary>
            <param name="controlHeight">Height of the control.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartCallbackManager.BuildChartImage(System.String)">
            <summary>
            Builds the chart image.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartCallbackManager.FixPanelInlineDisplay(System.Web.UI.WebControls.Panel)">
            <summary>
            Fixes the panel inline display. 
            The ordinary chart represents an img element which is inline element (doesn't break the page).
            This makes the interactive chart which is div element to behaive as a img element.
            </summary>
            <param name="panel">The panel.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartCallbackManager.BuildPanel">
            <summary>
            Builds the outer chart panel which contains all elements.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartCallbackManager.RenderInteractiveChart(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the interactive chart (not callback rendering).
            </summary>
            <param name="writer">The writer.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartCallbackManager.GetService(System.Type)">
            <summary>
            Gets the service.
            </summary>
            <param name="serviceType">Type of the service.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartCallbackManager.GetLastEvaluateMostSmallArea">
            <summary>
            Gets the last evaluated most small area.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartCallbackManager.EvaluateMostSmallArea">
            <summary>
            Evaluates the most small area. 
            Calculates ans fix the area size and position with biggest axis labels in order to reserve the space for 
            them.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartCallbackManager.RestoreMostSmallArea">
            <summary>
            Restores the most small area position changed from <see cref="M:Dundas.Olap.WebUIControls.ChartCallbackManager.EvaluateMostSmallArea"/>.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartCallbackManager.GetCallbackResult">
            <summary>
            Returns the results of a callback event that targets the control.
            </summary>
            <returns>The result of the callback.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartCallbackManager.RaiseCallbackEvent(System.String)">
            <summary>
            Processes a callback event that targets a control.
            </summary>
            <param name="eventArgument">A string that represents an event argument to pass to the event handler.</param>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartCallbackManager.RenderChartImage">
            <summary>
            returns chart image rendering flag
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartCallbackManager.CallbackStateContent">
            <summary>
            Determines the <see cref="P:Dundas.Olap.WebUIControls.ChartCallbackManager.CallbackStateContent"/> type.
            </summary>
            <value>The <see cref="P:Dundas.Olap.WebUIControls.ChartCallbackManager.CallbackStateContent"/> type.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartCallbackManager.Activated">
            <summary>
            Gets a value indicating whether this <see cref="T:ChartCallbackManager"/> is activated to deploy scripts.
            </summary>
            <value><c>true</c> if activated; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartCallbackManager.UIActivated">
            <summary>
            Gets a value indicating whether UI is activated.
            </summary>
            <value><c>true</c> if UI is activated; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartCallbackManager.Chart">
            <summary>
            Gets the chart.
            </summary>
            <value>The chart.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartCallbackManager.Page">
            <summary>
            Gets the chart parent page.
            </summary>
            <value>The page.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartCallbackManager.CurrentArgs">
            <summary>
            Gets the current callback arguments.
            </summary>
            <value>The current args.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartCallbackManager.SessionKey">
            <summary>
            Gets or sets the session key - the string which is used as 
            key for session variable to save chart state into session.
            </summary>
            <value>The session key.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartCallbackManager.ZoomEngine">
            <summary>
            Gets the zoom engine.
            </summary>
            <value>The zoom engine.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartCallbackManager.Container">
            <summary>
            Gets the inner container which contain all objects including the chart.
            </summary>
            <value>The container.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartCallbackManager.PanelContainer">
            <summary>
            Gets the outer panel container.
            </summary>
            <value>The panel container.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartCallbackManager.CurrentAjaxArgs">
            <summary>
            Gets the current ajax arguments.
            </summary>
            <value>The current ajax arguments.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartCallbackManager.CurrentContext">
            <summary>
            Gets the current context for context menu and toolbar.
            </summary>
            <value>The current context.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartCallbackManager.Formater">
            <summary>
            Gets the formater.
            </summary>
            <value>The formater.</value>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.ChartCallbackManager.CommandAjaxArgs">
            <summary>
            CommandAjaxArgs contain information for context and dropdown menus as click point and 
            flag for drop down. The information comming from specialized callback parameters
            gerenated by AjaxUtils.CreateCommandStub and AjaxUtils.GetDropDownCallback.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartCallbackManager.CommandAjaxArgs.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CommandAjaxArgs"/> class.
            </summary>
            <param name="query">The query.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartCallbackManager.CommandAjaxArgs.ParsePointInfo(System.String)">
            <summary>
            Parses the point info.
            </summary>
            <param name="pointInfo">The point info.</param>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartCallbackManager.CommandAjaxArgs.CommandName">
            <summary>
            Gets or sets the name of the command.
            </summary>
            <value>The name of the command.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartCallbackManager.CommandAjaxArgs.DropDown">
            <summary>
            Gets or sets a value indicating whether dropdown menu command.
            </summary>
            <value><c>true</c> if is dropdown menu command; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartCallbackManager.CommandAjaxArgs.CommandParams">
            <summary>
            Gets or sets the command params.
            </summary>
            <value>The command params.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartCallbackManager.CommandAjaxArgs.ClickPoint">
            <summary>
            Gets or sets the click point.
            </summary>
            <value>The click point.</value>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.SaveStateEventArgs">
            <summary>
            Provides data for the <see cref="E:Dundas.Olap.WebUIControls.Chart.SaveState"/> event.  
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.SaveStateEventArgs.#ctor(Dundas.Olap.WebUIControls.Chart,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:SaveStateEventArgs"/> class.
            </summary>
            <param name="chart">The chart.</param>
            <param name="cancelSaveState">if set to <c>true</c> chart state will not be saved.</param>
            <param name="cancelSaveData">if set to <c>true</c> chart data (series data) will not be saved.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.SaveStateEventArgs.#ctor(Dundas.Olap.WebUIControls.Chart)">
            <summary>
            Initializes a new instance of the <see cref="T:SaveStateEventArgs"/> class.
            </summary>
            <param name="chart">The chart.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.SaveStateEventArgs.SaveToStream(System.IO.Stream)">
            <summary>
            Saves chart state to stream.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.SaveStateEventArgs.ToByteArray">
            <summary>
            Converts chart state to byte array.
            </summary>
            <returns>The byte array</returns>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.SaveStateEventArgs.ChartState">
            <summary>
            Gets the state of the chart without series data.
            </summary>
            <value>The state of the chart.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.SaveStateEventArgs.ChartData">
            <summary>
            Gets the chart series data.
            </summary>
            <value>The chart data.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.SaveStateEventArgs.CancelSaveState">
            <summary>
            Gets or sets a value indicating whether to cancel saving the chart state without series data.
            </summary>
            <value><c>true</c> to cancel saving chart state otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.SaveStateEventArgs.CancelSaveData">
            <summary>
            Gets or sets a value indicating whether to cancel saving chart series data.
            </summary>
            <value><c>true</c> if to cancel saving series data; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.LoadStateEventArgs">
            <summary>
            Provides data for the <see cref="E:Dundas.Olap.WebUIControls.Chart.LoadState"/> event.  
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.LoadStateEventArgs.#ctor(Dundas.Olap.WebUIControls.Chart)">
            <summary>
            Initializes a new instance of the <see cref="T:LoadStateEventArgs"/> class.
            </summary>
            <param name="chart">The chart.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.LoadStateEventArgs.LoadFromStream(System.IO.Stream)">
            <summary>
            Loads chart state from stream.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.LoadStateEventArgs.FromByteArray(System.Byte[])">
            <summary>
            Loads chart state from a byte array.
            </summary>
            <param name="bytes">The bytes.</param>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.LoadStateEventArgs.ChartState">
            <summary>
            Gets or sets the state of the chart without series data.
            </summary>
            <value>The state of the chart.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.LoadStateEventArgs.ChartData">
            <summary>
            Gets or sets the chart series data.
            </summary>
            <value>The chart data.</value>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.SaveStateEventHandler">
            <summary>
            Chart save state event handler delegate.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.LoadStateEventHandler">
            <summary>
            Chart load state event handler delegate.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.CallbackStateContent">
            <summary>
            Indicates what type of chart state must be keeped into session variable
            to track chart callback changes.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.CallbackStateContent.Auto">
            <summary>
            Automated selection of save/restore behaviour: 
            <remarks>
            The Auto works under folowing rules:    
            <para>All - if UI is activated (toolbar and context menu)</para>
            <para>SeriesDataOnly if only zooming and scrolling is enabled and the particular series is not databinded.</para>
            <para>None in all other cases including when user callback is used.</para>
            </remarks>
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.CallbackStateContent.ChartStateOnly">
            <summary>
            Saves and restores the all chart state without series data points.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.CallbackStateContent.SeriesDataOnly">
            <summary>
            Saves and restores the only chart series data points.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.CallbackStateContent.All">
            <summary>
            Saves and restores the all chart state including series data points.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.CallbackStateContent.None">
            <summary>
            Saving and restoring will be not performed.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.ZoomResetEventHandler">
            <summary>
            Axis view zoom reset event handler delegate
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.ZoomResetEventArgs">
            <summary>
            Axis data view zoom reset changing event arguments.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ZoomResetEventArgs.#ctor(Dundas.Olap.WebUIControls.Axis,System.Int32)">
            <summary>
            Creates axis data view event arguments.
            </summary>
            <param name="axis">Axis of the data view.</param>
            <param name="numberOfViews">The number of views.</param>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ZoomResetEventArgs.Axis">
            <summary>
            Axis of the event.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ZoomResetEventArgs.ChartArea">
            <summary>
            Chart area of the event.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ZoomResetEventArgs.NumberOfViews">
            <summary>
            New data view start position.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.DynamicSessionManager">
            <summary>
            Dynamic session manager
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DynamicSessionManager.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DynamicSessionManager.InitSession(System.Boolean)">
            <summary>
            Initializes or gets session guid.
            </summary>
            <param name="refresh">Session guid should be regenerated.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DynamicSessionManager.CheckSession(System.String)">
            <summary>
            Checks session guid
            </summary>
            <param name="eventArgument">argument to be checked</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DynamicSessionManager.CheckSessionStatus">
            <summary>
            Checks status and re-throws exception if any
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.OlapUtils">
            <summary>
            OlapUtils contains static helper methods for 
            registering scripts, object convertors, axis manipulations...
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapUtils.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OlapUtils"/> class.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapUtils.DimDescrToString(Dundas.Olap.Data.DimensionDescriptor)">
            <summary>
            Converts DimensionDescriptor to string.
            </summary>
            <param name="descr">
            Dimension descriptor object to convert.
            </param>
            <returns>
            String representation of specified DimensionDescriptor.
            </returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapUtils.StringToDimDescr(System.String)">
            <summary>
            Creates DimensionDescriptor from string.
            </summary>
            <param name="outerText">
            String to create the dimension descriptor from.
            </param>
            <returns>
            Newly created DimensionDescriptor object.
            </returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapUtils.TryDesignTimeGetObjByName(System.Web.UI.Control,System.String)">
            <summary>
            Tries to get object by name in design time.
            </summary>
            <param name="parent">The parent.</param>
            <param name="name">The name.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapUtils.GetObjByName(System.Web.UI.Control,System.String)">
            <summary>
            Gets object by it's name.
            </summary>
            <param name="parent">
            Object parent.
            </param>
            <param name="name">
            Object name.
            </param>
            <returns>
            Found object or Null.
            </returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapUtils.RegisterJavaStriptSrcBlock(System.Web.UI.Page,System.String,System.String)">
            <summary>
            Helper method that registers Java Script source block.
            </summary>
            <param name="page">
            Page object.
            </param>
            <param name="key">
            Key.
            </param>
            <param name="filename">
            Filename.
            </param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapUtils.MeasureToString(Dundas.Olap.Data.Measure)">
            <summary>
            Convert measure to string.
            </summary>
            <param name="measure">The measure.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapUtils.StringToMeasure(Dundas.Olap.Manager.OlapManager,System.String)">
            <summary>
            Converts string to measure.
            </summary>
            <param name="manager">The manager.</param>
            <param name="measureID">The measure ID.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapUtils.MemberToString(Dundas.Olap.Data.Member)">
            <summary>
            Converts dimension member to a string.
            </summary>
            <param name="member">
            Dimension member to convert.
            </param>
            <returns>
            String representation of the specified dimension member.
            </returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapUtils.StringToMember(Dundas.Olap.Manager.OlapManager,System.String)">
            <summary>
            Creates new dimension member from the string.
            </summary>
            <param name="manager">
            Reference to the Olap Manager.
            </param>
            <param name="memberID">
            Member ID.
            </param>
            <returns>
            Newly created dimension member.
            </returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapUtils.FindMemberByHashCode(Dundas.Olap.Manager.OlapManager,System.Int32,System.Int32)">
            <summary>
            Finds dimension member by hash code.
            </summary>
            <param name="manager">
            Reference to the olap manager..
            </param>
            <param name="levelId">
            Level ID.
            </param>
            <param name="uniqueId">
            Member unique ID.
            </param>
            <returns>
            Found dimension member or Null.
            </returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapUtils.AddAxisDimensionDescriptor(System.String,Dundas.Olap.Manager.DataAxisType,Dundas.Olap.Manager.OlapManager,System.Int32)">
            <summary>
            Adds the axis dimension descriptor to an axis.
            </summary>
            <param name="nodeName">Name of the node.</param>
            <param name="axisType">Type of the axis.</param>
            <param name="manager">The manager.</param>
            <param name="index">The index.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapUtils.GetSlicerDimensionDescriptor(Dundas.Olap.Data.Dimension,Dundas.Olap.Data.Hierarchy,Dundas.Olap.Manager.OlapManager)">
            <summary>
            Get dimension descriptor from slicer axis for the specified dimension.
            </summary>
            <param name="dimension">
            Dimension to get descriptor for.
            </param>
            <param name="hierarchy">
            Dimension hierarchy to use or NULL if default should be used.
            </param>
            <returns>
            Dimension descriptor.
            </returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapUtils.RegisterAllScripts(System.Web.UI.Page)">
            <summary>
            Registers all scripts.
            </summary>
            <param name="page">The page.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapUtils.RegisterSessionVars(System.Web.UI.Page)">
            <summary>
            Registers the session variables.
            </summary>
            <param name="page">The page.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapUtils.RegisterDundasLib(System.Web.UI.Page)">
            <summary>
            Registers the dundas script lib.
            </summary>
            <param name="page">The page.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapUtils.RegisterPopupDialogHTML(System.Web.UI.Page)">
            <summary>
            Registers the popup dialog HTML.
            </summary>
            <param name="page">The page.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapUtils.AddParentsToMembers(Dundas.Olap.Data.DimensionDescriptor,Dundas.Olap.Data.MemberCollection,Dundas.Olap.Data.CubeDataSchema)">
            <summary>
            
            </summary>
            <param name="checkedMembersCollection"></param>
            <param name="currentSchema"></param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapUtils.AddMembersToDescriptor(Dundas.Olap.Data.CubeDataSchema,Dundas.Olap.Data.DimensionDescriptor,Dundas.Olap.Data.Level,Dundas.Olap.Data.MemberCollection,Dundas.Olap.Data.Member,System.Collections.Generic.List{Dundas.Olap.Data.Member})">
            <summary>
            Add members to dimension descriptor in tree load order
            </summary>
            <param name="parentMember"></param>
            <param name="parentMembers"></param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapUtils.CanAddMemberToDescriptor(Dundas.Olap.Data.DimensionDescriptor,Dundas.Olap.Data.DimensionMemberDescriptor,Dundas.Olap.Data.Level)">
            <summary>
            Checks if member is already added or it is default level 
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapUtils.CompareLevels(Dundas.Olap.Data.Member,Dundas.Olap.Data.Member)">
            <summary>
            Compare memebrs by levels
            </summary>
            <param name="m1">member 1</param>
            <param name="m2">member 2</param>
            <returns>comparasion result</returns>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.OlapReportList">
            <summary>
            Web UI control that shows the list of all available OLAP reports in the <b>OlapManager</b>.
            <seealso cref="T:Dundas.Olap.Manager.OlapManager"/>
            <seealso cref="T:Dundas.Olap.Manager.OlapReport"/>
            </summary>
            <remarks>
            The <b>OlapReportList</b> control is associated with the <b>OlapManager</b>
            object by using the <see cref="P:Dundas.Olap.WebUIControls.OlapReportList.OlapManagerID"/> property.  The control allows the 
            end user to operate on a list of available reports.
            
            <p>Reports can be added, removed or renamed. The Revert to Original report 
            feature allows the end user to discard recent changes to the report. When 
            the selected report in the list is changed, it is automatically set as the
            <see cref="P:Dundas.Olap.Manager.OlapManager.CurrentOlapReport"/> in the associated OlapManager.</p>
            
            <p>All available reports of the <b>OlapManager</b> are exposed using the 
            <see cref="P:Dundas.Olap.Manager.OlapManager.OlapReports"/> property. They can be loaded from or saved into a
            file using the <see cref="M:Dundas.Olap.Manager.OlapManager.LoadReports(System.String)"/> and <see cref="M:Dundas.Olap.Manager.OlapManager.SaveReports(System.String)"/> methods.</p>
            </remarks>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.OlapReportList.listBox">
            <summary>
            The olap list list box
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.OlapReportList.toolBar">
            <summary>
            The internal toolbar 
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.OlapReportList.lastBoxCell">
            <summary>
            the last empty table cell.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapReportList.#ctor">
            <summary>
            Initializes new instance of OlapReportList class.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapReportList.ShouldSerializeOlapManagerID">
            <summary>
            Indicates whether the OlapManagerID property should be persisted.
            </summary>
            <returns>
            true if the property value has changed from its default; otherwise, false.
            </returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapReportList.LocateReportByName(System.String)">
            <summary>
            Locates the name of the report by.
            </summary>
            <param name="name">The name.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapReportList.OnReportChanged(System.String)">
            <summary>
            Handles click event.
            </summary>
            <param name="reportName">The report name to change to</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapReportList.CreateChildControls">
            <summary>
            This member overrides <see cref="M:System.Web.UI.Control.CreateChildControls"/>
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapReportList.LoadReportList">
            <summary>
            Loads the report list.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapReportList.OnLoad(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Web.UI.Control.Load"></see> event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"></see> object that contains the event data.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapReportList.OnPreRender(System.EventArgs)">
            <summary>
            This member overrides <see cref="M:System.Web.UI.Control.OnPreRender(System.EventArgs)"/>
            </summary>
            <param name="e">Events argument</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapReportList.Render(System.Web.UI.HtmlTextWriter)">
            <summary> 
            Render this control to the output parameter specified.
            </summary>
            <param name="writer"> The HTML writer to write out to </param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapReportList.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)">
            <summary>
            When implemented by a class, enables a server control to process an event raised when a form is posted to the server.
            </summary>
            <param name="eventArgument">A <see cref="T:System.String"></see> that represents an optional event argument to be passed to the event handler.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapReportList.Dundas#Olap#Manager#IOlapCallbackHandler#PopulateCallbackContent(System.Web.UI.HtmlTextWriter,System.String)">
            <summary>
            Returns internal content of the control used to visual ( DHTML) or script updating.
            </summary>
            <param name="output">A <see cref="T:System.Web.UI.HtmlTextWriter"/> used for output</param>
            <param name="contentType">The requested type of content</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapReportList.Dundas#Olap#Manager#IOlapConditionalCallbackHandler#ShouldPopulateCallbackContent">
            <summary>
            Returns true if this control should populate its callback content
            </summary>
            <returns></returns>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapReportList.OlapManager">
            <summary>
            Gets or sets the associated <b>OlapManager</b> object.
            <seealso cref="T:Dundas.Olap.Manager.OlapManager"/>
            </summary>
            <remarks>
            The <b>OlapReportList</b> control works with a list of reports 
            defined in the <see cref="P:Dundas.Olap.Manager.OlapManager.OlapReports"/> collection of the <see cref="T:Dundas.Olap.Manager.OlapManager"/>
            object. Any change to that list will automatically update the list content.
            
            If the end user adds, deletes or renames reports in the list, it will 
            automatically be reflected in the <b>OlapManager</b>. When the selected 
            report in the list is changed, it is automatically set as the <see cref="P:Dundas.Olap.Manager.OlapManager.CurrentOlapReport"/>
            in the associated <b>OlapManager</b> object.
            </remarks>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapReportList.OlapManagerID">
            <summary>
            Gets or sets the corresponded name of associated <b>OlapManager</b> object.
            <seealso cref="T:Dundas.Olap.Manager.OlapManager"/>
            </summary>
            <remarks>
            The <b>OlapReportList</b> control works with a list of reports 
            defined in the <see cref="P:Dundas.Olap.Manager.OlapManager.OlapReports"/> collection of the <see cref="T:Dundas.Olap.Manager.OlapManager"/>
            object. Any change to that list will automatically update the list content.
            
            If the end user adds, deletes or renames reports in the list, it will 
            automatically be reflected in the <b>OlapManager</b>. When the selected 
            report in the list is changed, it is automatically set as the <see cref="P:Dundas.Olap.Manager.OlapManager.CurrentOlapReport"/>
            in the associated <b>OlapManager</b> object.
            </remarks>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapReportList.AllowReportSaving">
            <summary>
            Gets or sets a flag that indicates if a report can be saved from the control UI.
            </summary>
            <value>
            <b>True</b> if the report list control allows the end user to save reports 
            using the toolbar or context menu.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapReportList.AllowReportLoading">
            <summary>
            Gets or sets a flag that indicates if a report can be loaded from the control UI.
            </summary>
            <value>
            <b>True</b> if the report list control allows the end user to load reports 
            using the toolbar or context menu.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapReportList.AllowReportAdding">
            <summary>
            Gets or sets a flag that indicates if a report can be added from the control UI.
            </summary>
            <value>
            <b>True</b> if the report list control allows the end user to add reports 
            using the toolbar or context menu.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapReportList.AllowReportRemoving">
            <summary>
            Gets or sets a flag that indicates if a report can be deleted from the control UI.
            </summary>
            <value>
            <b>True</b> if report list control allows the end user to delete reports 
            using the toolbar or context menu.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapReportList.AllowReportRenaming">
            <summary>
            Gets or sets a flag that indicates if a report can be renamed from the control UI.
            </summary>
            <value>
            <b>True</b> if the report list control allows the end user to rename reports 
            using toolbar or context menu.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapReportList.AllowReportReverting">
            <summary>
            Gets or sets a flag that indicates if a report can be reverted to original 
            from the control UI.
            </summary>
            <value>
            <b>True</b> if report list control allows the end user to revert the report 
            to original using the toolbar or context menu.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapReportList.Rows">
            <summary>
            Gets or sets the number of rows displayed in the OlapReportList control.
            </summary>
            <value>
            The number of rows displayed in the OlapReportList control. The default value is 4.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapReportList.ShowToolbar">
            <summary>
            Gets or sets a flag that indicates if a toolbar with report list manipulation
            buttons should be shown on top of the report list.
            </summary>
            <value>
            <b>True</b> if the report list manipulation toolbar should be shown on top 
            of the report list control.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapReportList.EnableViewState">
            <summary>
            Gets or sets a value indicating whether the server control persists its view state, and the view state of any child controls it contains, to the requesting client.
            </summary>
            <value>
            true if the server control maintains its view state; otherwise false. The default is false.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapReportList.Enabled">
            <summary>
            Gets or sets a value indicating whether the report list control is enabled.
            </summary>
            <value></value>
            <returns>true if control is enabled; otherwise, false. The default is true.</returns>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapReportList.VerticalLayout">
            <summary>
            Gets or sets a value indicating whether the report list has a vertical layout.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapReportList.Width">
            <summary>
            Gets or sets the width of the Web server control.
            </summary>
            <value></value>
            <returns>A <see cref="T:System.Web.UI.WebControls.Unit"></see> that represents the width of the control. The default is <see cref="F:System.Web.UI.WebControls.Unit.Empty"></see>.</returns>
            <exception cref="T:System.ArgumentException">The width of the Web server control was set to a negative value. </exception>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapReportList.Controls">
            <summary>
            Gets a <see cref="T:System.Web.UI.ControlCollection"></see> object that represents the child controls for a specified server control in the UI hierarchy.
            </summary>
            <value></value>
            <returns>The collection of child controls for the specified server control.</returns>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.OlapChartToolbar">
            <summary>
            Represents a UI toolbar. This control provides the end user with a visible 
            row of button icons that, when clicked with the mouse, perform an action or functionality 
            relating to Dundas OLAP Services.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.OlapToolbar">
            <summary>
            Represents a UI toolbar.  This control can be used to modify options 
            of an associated OlapChart component.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.ChartToolbar">
            <summary>
            Represents a UI toolbar.  This control can be used to modify options 
            of an associated OlapChart component.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartToolbar.innerTable">
            <summary>
            Inner table control which contains the toolbar items
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartToolbar.renderInside">
            <summary>
            Determines id this toolbar is port if the chart or external
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartToolbar.toolbarPosition">
            <summary>
            Determines toolbat position when the toolbar is internal
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartToolbar.imagesTable">
            <summary>
            Table with toolbar images (left center right)
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartToolbar.#ctor">
            <summary>
            Initializes new instance of OlapChartToolbar class.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartToolbar.ShouldSerializeChartID">
            <summary>
            Indicates whether the <b>ChartID</b> property should be persisted.
            </summary>
            <returns>
            Returns true if the property value has changed from its default; otherwise false.
            </returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartToolbar.OnUnload(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Web.UI.Control.Unload"></see> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"></see> object that contains event data.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartToolbar.OnInit(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Web.UI.Control.Init"></see> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"></see> object that contains the event data.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartToolbar.GetToolbarHeight(Dundas.Olap.WebUIControls.BorderSkinStyle)">
            <summary>
            Gets the height of the toolbar.
            </summary>
            <param name="borderSkinStyle">The border skin style.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartToolbar.GetBorderLeftOffset(Dundas.Olap.WebUIControls.BorderSkinStyle)">
            <summary>
            Gets the border left offset.
            </summary>
            <param name="skinStyle">The skin style.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartToolbar.ShouldRenderBorder">
            <summary>
            Determines whether to render border or not.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartToolbar.GetBorderSkinStyle">
            <summary>
            Gets the toolbar border skin style. 
            </summary>
            <value>
            The border skin style.
            </value>
            <remarks>Default value is Emboss.
            </remarks>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartToolbar.GetDefaultColor(System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Gets a color or default chart color if its empty.
            </summary>
            <param name="defaultColor">Default Color .</param>
            <param name="chartColor">Chart Color .</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartToolbar.GetBackColor">
            <summary>
            Gets the background color .
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartToolbar.GetForeColor">
            <summary>
            Gets the foreground color.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartToolbar.GetFrameBorderColor">
            <summary>
            Gets the foreground color.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartToolbar.GetPageColor">
            <summary>
            Gets the page color.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartToolbar.GetBorderWidth">
            <summary>
            Gets the width of the border.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartToolbar.GetTopOffset">
            <summary>
            Gets the top offset.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartToolbar.GetChartImageTempPath">
            <summary>
            Gets the chart image temp path.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartToolbar.CreateButtonCell(System.Boolean)">
            <summary>
            Creates a button cell.
            </summary>
            <param name="menuMode">if set to <c>true</c> if cell is part of menu.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartToolbar.GetDropDownImage">
            <summary>
            Gets the drop down image.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartToolbar.DisableButton(System.Web.UI.WebControls.WebControl,System.Boolean)">
            <summary>
            Disables the button.
            </summary>
            <param name="cntrl">The Control.</param>
            <param name="disable">if set to <c>true</c> control is disabled.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartToolbar.GetDropDownCallback(System.String)">
            <summary>
            Gets the drop down callback.
            </summary>
            <param name="command">The command.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartToolbar.GetSubmenuCallback(System.String)">
            <summary>
            Gets the submenu callback.
            </summary>
            <param name="command">The command.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartToolbar.GetPageCallback(System.String)">
            <summary>
            Gets the submenu callback.
            </summary>
            <param name="command">The command.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartToolbar.GetPostBackEventReference(System.String)">
            <summary>
            Gets the post back event reference.
            </summary>
            <param name="command">The command.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartToolbar.CreateCommandStub(System.String,System.String,System.Boolean,System.Drawing.Point)">
            <summary>
            Creates the command stub - parameters for callback.
            </summary>
            <param name="commandName">Name of the command.</param>
            <param name="commandParams">The command params.</param>
            <param name="dropDown">if set to <c>true</c> [drop down].</param>
            <param name="clickPoint">The click point.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartToolbar.UpdatePosition">
            <summary>
            Updates the position.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartToolbar.AddCommandCell(System.Web.UI.WebControls.TableRow,Dundas.Olap.WebUIControls.CommandUIItem,System.Drawing.Point)">
            <summary>
            Adds the command cell.
            </summary>
            <param name="row">The row.</param>
            <param name="cmdui">The cmdui.</param>
            <param name="clickPoint">The click point.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartToolbar.GetCommandCellID(Dundas.Olap.WebUIControls.Command)">
            <summary>
            Gets the command cell ID.
            </summary>
            <param name="cmd">The CMD.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartToolbar.GetLeftArrow">
            <summary>
            Gets the left arrow.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartToolbar.AddSeparator(System.Web.UI.WebControls.TableRow)">
            <summary>
            Adds the button separator to toolbar.
            </summary>
            <param name="row">The row.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartToolbar.AddMenuSeparator(System.Web.UI.WebControls.TableRow)">
            <summary>
            Adds the menu separator.
            </summary>
            <param name="row">The row.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartToolbar.AddMenuSeparatorMozilla(System.Web.UI.WebControls.TableRow)">
            <summary>
            Adds the menu separator for gecko browsers.
            </summary>
            <param name="row">The row.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartToolbar.AddSpacer(System.Web.UI.WebControls.TableRow)">
            <summary>
            Adds the button spacer to toolbar.
            </summary>
            <param name="row">The row.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartToolbar.GetToolbarFrames">
            <summary>
            Gets the toolbar frames urls.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartToolbar.AddButtonItem(System.Web.UI.WebControls.WebControl,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Adds the button item.
            </summary>
            <param name="parent">The parent.</param>
            <param name="imgUrl">The img URL.</param>
            <param name="text">The text.</param>
            <param name="description">The description.</param>
            <param name="toggled">if set to <c>true</c> [toggled].</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartToolbar.GetArrowCell(System.Web.UI.WebControls.WebControl)">
            <summary>
            Gets the arrow cell.
            </summary>
            <param name="parentCell">The parent cell.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartToolbar.AddMenuItem(System.Web.UI.WebControls.WebControl,System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Adds the menu item.
            </summary>
            <param name="parent">The parent.</param>
            <param name="imgUrl">The img URL.</param>
            <param name="text">The text.</param>
            <param name="description">The description.</param>
            <param name="toggled">if set to <c>true</c> [toggled].</param>
            <param name="subMenu">if set to <c>true</c> [sub menu].</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartToolbar.RenderContextMenu(System.Web.UI.HtmlTextWriter,System.Drawing.Point)">
            <summary>
            Renders the context menu.
            </summary>
            <param name="writer">The writer.</param>
            <param name="clickPoint">The click point.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartToolbar.RenderSubMenu(System.Web.UI.HtmlTextWriter,Dundas.Olap.WebUIControls.Command,System.Drawing.Point,System.String)">
            <summary>
            Renders the sub menu.
            </summary>
            <param name="writer">The writer.</param>
            <param name="cmd">The CMD.</param>
            <param name="clickPoint">The click point.</param>
            <param name="renderPropertyPagesControl">The render property pages control.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartToolbar.RenderMenuItems(System.Web.UI.HtmlTextWriter,System.Collections.Generic.List{Dundas.Olap.WebUIControls.CommandUIItem},System.Boolean,System.Drawing.Point,Dundas.Olap.WebUIControls.HitTestResult,System.String)">
            <summary>
            Renders the menu items.
            </summary>
            <param name="writer">The writer.</param>
            <param name="commandItems">The command items.</param>
            <param name="tableStyle">if set to <c>true</c> [table style].</param>
            <param name="clickPoint">The click point.</param>
            <param name="ht">The ht.</param>
            <param name="renderPropertyPagesControl">The render property pages control.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartToolbar.FilterMenuItems(System.Collections.Generic.List{Dundas.Olap.WebUIControls.CommandUIItem},System.Object)">
            <summary>
            Filters the menu items - removes dublicate separators.
            </summary>
            <param name="commandItems">The command items.</param>
            <param name="ht">The ht.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartToolbar.GetMenuItems(Dundas.Olap.WebUIControls.CommandUIItemCollection)">
            <summary>
            Gets a list menu items from specified CommandUIItem collection.
            </summary>
            <param name="c">The c.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartToolbar.GetMenuItems(Dundas.Olap.WebUIControls.CommandCollection)">
            <summary>
            Gets the menu items from specified Command collection.
            </summary>
            <param name="c">The c.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartToolbar.ResolveClientUrlEx(System.String)">
            <summary>
            Resolves the client URL for design mode (IE7 fix).
            </summary>
            <param name="url">The URL.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartToolbar.PopulateToolbarItems(System.Web.UI.WebControls.TableRow)">
            <summary>
            Populates the toolbar items.
            </summary>
            <param name="innerRow">The inner table row.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartToolbar.CreateChildControls">
            <summary>
            This member overrides <see cref="M:System.Web.UI.Control.CreateChildControls"/> method.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartToolbar.OnLoad(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Web.UI.Control.Load"></see> event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"></see> object that contains the event data.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartToolbar.Render(System.Web.UI.HtmlTextWriter)">
            <summary> 
            Render this control to the output parameter specified.
            </summary>
            <param name="writer"> The HTML writer to write out to </param>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartToolbar.Chart">
            <summary>
            Gets or sets the associated <b>Chart</b> object.
            <seealso cref="P:Dundas.Olap.WebUIControls.ChartToolbar.Chart"/>
            </summary>
            <value>
            An <see cref="P:Dundas.Olap.WebUIControls.ChartToolbar.Chart"/> object.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartToolbar.ChartID">
            <summary>
            Gets or sets the ID of the associated <b>Chart</b> object.
            <seealso cref="P:Dundas.Olap.WebUIControls.ChartToolbar.Chart"/>
            </summary>
            <value>
            A string ID of the associated <see cref="P:Dundas.Olap.WebUIControls.ChartToolbar.Chart"/> object.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartToolbar.Height">
            <summary>
            Gets or sets the height of the Web server control.
            </summary>
            <value>
            A unit that represents the height of the web control.
            </value>
            <remarks>
            The default is Empty, meaning that this property is not set by default.
            </remarks>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartToolbar.PageColor">
            <summary>
            The page color
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartToolbar.FrameBorderColor">
            <summary>
            The page color
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartToolbar.BorderSkinStyle">
            <summary>
            Gets or sets the toolbar border skin style. 
            </summary>
            <value>
            The border skin style.
            </value>
            <remarks>Default value is Emboss.
            </remarks>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartToolbar.ToolbarPosition">
            <summary>
            Gets or sets the toolbar position.
            </summary>
            <value>The toolbar position.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartToolbar.Font">
            <summary>
            Gets the font properties associated with the Web server control.
            </summary>
            <value></value>
            <returns>A <see cref="T:System.Web.UI.WebControls.FontInfo"></see> that represents the font properties of the Web server control.</returns>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartToolbar.ForeColor">
            <summary>
            Gets or sets the foreground color (typically the color of the text) of the Web server control.
            </summary>
            <value></value>
            <returns>A <see cref="T:System.Drawing.Color"></see> that represents the foreground color of the control. The default is <see cref="F:System.Drawing.Color.Empty"></see>.</returns>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartToolbar.BorderStyle">
            <summary>
            Gets or sets the border style of the Web server control.
            </summary>
            <value></value>
            <returns>One of the <see cref="T:System.Web.UI.WebControls.BorderStyle"></see> enumeration values. The default is NotSet.</returns>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartToolbar.CallBackHandler">
            <summary>
            Gets the call back handler.
            </summary>
            <value>The call back handler.</value>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.OlapToolbar.invalidated">
            <summary>
            Determines id the control needs to be rerendered
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.OlapToolbar.olapReportList">
            <summary>
            Internal OlapReportList control
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.OlapToolbar.olapToolbarSettings">
            <summary>
            OlapToolbarSettings reference
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapToolbar.#ctor">
            <summary>
            Initializes new instance of OlapChartToolbar class.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapToolbar.#ctor(Dundas.Olap.WebUIControls.Chart)">
            <summary>
            Initializes new instance of OlapChartToolbar class.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapToolbar.SetToolbarStyle(Dundas.Olap.WebUIControls.BorderSkinStyle)">
            <summary>
            Sets the toolbar style.
            </summary>
            <param name="skin">The skin.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapToolbar.SetBorderSkinStyle(Dundas.Olap.WebUIControls.OlapToolbarStyle)">
            <summary>
            Sets the border skin style.
            </summary>
            <param name="skin">The skin.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapToolbar.ShouldSerializeOlapChartID">
            <summary>
            Indicates whether the <b>OlapChartID</b> property should be persisted.
            </summary>
            <returns>
            Returns true if the property value has changed from its default; otherwise false.
            </returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapToolbar.ShouldSerializeOlapManagerID">
            <summary>
            Indicates whether the OlapManagerID property should be persisted.
            </summary>
            <returns>
            Returns true if the property value has changed from its default; otherwise false.
            </returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapToolbar.Invalidate">
            <summary>
            Invalidates this instance. Force renendering of the control in callback stages.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapToolbar.UnInvalidate">
            <summary>
            UnInvalidates the clients.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapToolbar.GetCommandList(System.Boolean)">
            <summary>
            Gets the command list.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapToolbar.FindCommandHolderStatic(System.Collections.Generic.List{Dundas.Olap.WebUIControls.OlapToolbar.ToolbarCommandHolder},System.String)">
            <summary>
            Finds the command holder.
            </summary>
            <param name="list">The list.</param>
            <param name="commandKey">The command key.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapToolbar.FindCommandHolder(System.Collections.Generic.List{Dundas.Olap.WebUIControls.OlapToolbar.ToolbarCommandHolder},System.String)">
            <summary>
            Finds the command holder.
            </summary>
            <param name="list">The list.</param>
            <param name="commandKey">The command key.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapToolbar.OnInit(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Web.UI.Control.Init"></see> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"></see> object that contains the event data.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapToolbar.ShouldRenderBorder">
            <summary>
            Determines whether to render border or not.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapToolbar.GetTopOffset">
            <summary>
            Gets the top offset.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapToolbar.IsTransparent">
            <summary>
            Determines whether this toolbar is transparent.
            </summary>
            <returns>
            	<c>true</c> if this toolbar is transparent; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapToolbar.CreateChildControls">
            <summary>
            This member overrides <see cref="M:System.Web.UI.Control.CreateChildControls"/> method.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapToolbar.GetBorderSkinStyle">
            <summary>
            Gets the toolbar border skin style.
            </summary>
            <returns></returns>
            <value>
            The border skin style.
            </value>
            <remarks>Default value is Emboss.
            </remarks>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapToolbar.GetPostBackEventReference(System.String)">
            <summary>
            Gets the post back event reference.
            </summary>
            <param name="command">The command.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapToolbar.GetDropDownCallback(System.String)">
            <summary>
            Gets the drop down callback.
            </summary>
            <param name="command">The command.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapToolbar.GetPageCallback(System.String)">
            <summary>
            Gets the submenu callback.
            </summary>
            <param name="command">The command.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapToolbar.GetDropDownImage">
            <summary>
            Gets the drop down image.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapToolbar.PopulateToolbarItems(System.Web.UI.WebControls.TableRow)">
            <summary>
            Populates the toolbar items.
            </summary>
            <param name="innerRow">The inner table row.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapToolbar.PopulateAdornmentsAtBegining(System.Web.UI.WebControls.TableCell)">
            <summary>
            Populates the adornments at begining.
            </summary>
            <param name="centerCell">The center cell.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapToolbar.PopulateAdornmentsAtEnd(System.Web.UI.WebControls.TableCell)">
            <summary>
            Populates the adornments at end.
            </summary>
            <param name="centerCell">The center cell.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapToolbar.GetToolbarFrames">
            <summary>
            Gets the toolbar frames urls.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapToolbar.GetButtonImageUrl(System.String,System.Boolean,Dundas.Olap.WebUIControls.OlapToolbarStyle)">
            <summary>
            Gets the button image URL.
            </summary>
            <param name="imageType">Type of the image.</param>
            <param name="hover">if set to <c>true</c> [hover].</param>
            <param name="style">The style.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapToolbar.AddCommandCell(System.Web.UI.WebControls.TableRow,Dundas.Olap.WebUIControls.OlapToolbar.ToolbarCommandHolder)">
            <summary>
            Adds the command cell.
            </summary>
            <param name="row">The row.</param>
            <param name="cmdui">The cmdui.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapToolbar.ConstructMenu(System.Collections.Generic.List{Dundas.Olap.WebUIControls.Ajax.MenuItemUI},Dundas.Olap.WebUIControls.OlapToolbar.ToolbarCommandHolder)">
            <summary>
            Constructs the menu.
            </summary>
            <param name="items">The items.</param>
            <param name="holder">The holder.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapToolbar.OnClickButton(System.String)">
            <summary>
            Called when a button is clicked.
            </summary>
            <param name="eventArgument">The event argument.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapToolbar.Dundas#Olap#Manager#IToolbarControl#Invalidate">
            <summary>
            Invalidates this instance.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapToolbar.OnClick(System.Object,Dundas.Olap.WebUIControls.OlapToolbar.ToolbarClickEventArgs)">
            <summary>
            Called when a tullbar item is clicked.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:Dundas.Olap.WebUIControls.OlapToolbar.ToolbarClickEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapToolbar.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)">
            <summary>
            When implemented by a class, enables a server control to process an event raised when a form is posted to the server.
            </summary>
            <param name="eventArgument">A <see cref="T:System.String"></see> that represents an optional event argument to be passed to the event handler.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapToolbar.Dundas#Olap#Manager#IOlapCallbackHandler#PopulateCallbackContent(System.Web.UI.HtmlTextWriter,System.String)">
            <summary>
            Returns internal content of the control used to visual ( DHTML) or script updating.
            </summary>
            <param name="output">A <see cref="T:System.Web.UI.HtmlTextWriter"/> used for output</param>
            <param name="contentType">The requested type of content</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapToolbar.Dundas#Olap#Manager#IOlapConditionalCallbackHandler#ShouldPopulateCallbackContent">
            <summary>
            Returns true if this control should populate its callback content
            </summary>
            <returns></returns>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapToolbar.EnableViewState">
            <summary>
            This member overrides the <see cref="P:System.Web.UI.Control.EnableViewState"/> property.
            </summary>
            <value>A boolean value which represents the viewstate flag.  By default, this is false</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapToolbar.Chart">
            <summary>
            Gets or sets the associated <b>Chart</b> object.
            <seealso cref="P:Dundas.Olap.WebUIControls.OlapToolbar.Chart"/>
            </summary>
            <value>An <see cref="P:Dundas.Olap.WebUIControls.OlapToolbar.Chart"/> object.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapToolbar.ChartID">
            <summary>
            Gets or sets the ID of the associated <b>Chart</b> object.
            <seealso cref="P:Dundas.Olap.WebUIControls.OlapToolbar.Chart"/>
            </summary>
            <value>A string ID of the associated <see cref="P:Dundas.Olap.WebUIControls.OlapToolbar.Chart"/> object.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapToolbar.BorderSkinStyle">
            <summary>
            Gets or sets the toolbar border skin style. 
            </summary>
            <value>
            The border skin style.
            </value>
            <remarks>Default value is Emboss.
            </remarks>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapToolbar.ToolbarStyle">
            <summary>
            Gets or sets the toolbar border skin style. 
            </summary>
            <value>
            The border skin style.
            </value>
            <remarks>Default value is Emboss.
            </remarks>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapToolbar.ReportListPlacement">
            <summary>
            Gets or sets a flag which determines the position of the report list in the toolbar.
            </summary>
            <value>
            A boolean flag which determines the position of the report list in the toolbar.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapToolbar.ReportListWidth">
            <summary>
            Gets or sets the width of the report list in the toolbar.
            </summary>
            <value>The width of the report list when it is displayed in the toolbar.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapToolbar.ReportListSettings">
            <summary>
            Gets or sets the report list settings when the report list is in the toolbar.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapToolbar.Commands">
            <summary>
            Gets the list of commands. 
            </summary>
            <value>The list of commands.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapToolbar.OlapChart">
            <summary>
            Gets or sets the associated <b>OlapChart</b> object.
            <seealso cref="P:Dundas.Olap.WebUIControls.OlapToolbar.OlapChart"/>
            </summary>
            <value>
            An <see cref="P:Dundas.Olap.WebUIControls.OlapToolbar.OlapChart"/> object.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapToolbar.OlapChartID">
            <summary>
            Gets or sets the ID of the associated <b>OlapChart</b> object.
            <seealso cref="P:Dundas.Olap.WebUIControls.OlapToolbar.OlapChart"/>
            </summary>
            <value>
            A string ID of the associated <see cref="P:Dundas.Olap.WebUIControls.OlapToolbar.OlapChart"/> object.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapToolbar.OlapManager">
            <summary>
            Gets or sets the associated OlapManager object.
            </summary>
            <value>
            An <b>OlapManager</b> object that this object is associated with.
            </value>
            <remarks>
            The <b>OlapManager</b> must be specified in the AxisBuilder control to
            allow bi-directional automatic updates. All AxisBuilder changes
            will automatically be updated in the <b>OlapManager</b> and new data requests 
            will be sent. If any <see cref="!:AxisDescriptor"/> data is changed in the 
            <b>OlapManager</b>, the content of the AxisBuilder control will 
            automatically be refreshed.
            </remarks>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapToolbar.OlapManagerID">
            <summary>
            Gets or sets the associated OlapManagerID object.
            </summary>
            <seealso cref="T:Dundas.Olap.Manager.OlapManager"/>
            <remarks>
            The <b>OlapReportList</b> control works with a list of reports 
            defined in the <see cref="P:Dundas.Olap.Manager.OlapManager.OlapReports"/> collection of the <see cref="T:Dundas.Olap.Manager.OlapManager"/>
            object. Any change to that list will automatically update the list content.
            
            If the end user adds, deletes or renames reports in the list, it will 
            automatically be reflected in the <b>OlapManager</b>. When the selected 
            report in the list is changed, it is automatically set as the <see cref="P:Dundas.Olap.Manager.OlapManager.CurrentOlapReport"/>
            in the associated <b>OlapManager</b> object.
            </remarks>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapToolbar.OlapReportList">
            <summary>
            Gets the olap report list control.
            </summary>
            <value>The olap report list.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapToolbar.Height">
            <summary>
            Gets or sets the height of the Web server control.
            </summary>
            <value>
            A unit that represents the height of the web control.
            </value>
            <remarks>
            The default is Empty, meaning that this property is not set by default.
            </remarks>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapToolbar.Dundas#Olap#Manager#IToolbarControl#ToolbarClientProvider">
            <summary>
            Gets the toolbar client provider.
            </summary>
            <value>The toolbar client provider.</value>
        </member>
        <member name="E:Dundas.Olap.WebUIControls.OlapToolbar.Click">
            <summary>
            Occurs when the toolbar item is selected.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapToolbar.Dundas#Olap#Manager#IToolbarClient#ToolbarClientID">
            <summary>
            Gets the toolbar client ID.
            </summary>
            <value>The toolbar client ID.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapToolbar.Dundas#Olap#Manager#IToolbarClient#Commands">
            <summary>
            Gets the commands.
            </summary>
            <value>The commands.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapToolbar.Dundas#Olap#Manager#IToolbarClient#GroupOrderBase">
            <summary>
            Gets the Z order base.
            </summary>
            <value>The Z order base.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapToolbar.Dundas#Olap#Manager#IToolbarClient#IsChanged">
            <summary>
            Gets a value indicating whether this instance is changed.
            </summary>
            <value>
            	<c>true</c> if this instance is changed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.OlapToolbar.ToolbarCommandHolder">
            <summary>
            A helper class which holds a ICommand reference
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapToolbar.ToolbarCommandHolder.#ctor(Dundas.Olap.Manager.ICommand,System.Collections.Generic.IEnumerable{Dundas.Olap.Manager.ICommand},System.Web.UI.Control)">
            <summary>
            Initializes a new instance of the <see cref="T:ToolbarCommandHolder"/> class.
            </summary>
            <param name="client">The client.</param>
            <param name="command">The command.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapToolbar.ToolbarCommandHolder.CloneCommand(Dundas.Olap.Manager.ICommand)">
            <summary>
            Clones the command.
            </summary>
            <param name="cmd">The command.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapToolbar.ToolbarCommandHolder.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapToolbar.ToolbarCommandHolder.Control">
            <summary>
            Gets the control.
            </summary>
            <value>The control.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapToolbar.ToolbarCommandHolder.IsControlVisible">
            <summary>
            Gets the control visible flag.
            </summary>
            <value>The client.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapToolbar.ToolbarCommandHolder.Client">
            <summary>
            Gets the client.
            </summary>
            <value>The client.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapToolbar.ToolbarCommandHolder.Command">
            <summary>
            Gets the command.
            </summary>
            <value>The command.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapToolbar.ToolbarCommandHolder.AbsoluteOrder">
            <summary>
            Gets or sets the absolute order.
            </summary>
            <value>The absolute order.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapToolbar.ToolbarCommandHolder.ZOrder">
            <summary>
            Gets the Z order.
            </summary>
            <value>The Z order.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapToolbar.ToolbarCommandHolder.Suffix">
            <summary>
            Gets or sets the suffix.
            </summary>
            <value>The suffix.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapToolbar.ToolbarCommandHolder.CommandKey">
            <summary>
            Gets the command key.
            </summary>
            <value>The command key.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapToolbar.ToolbarCommandHolder.ClientID">
            <summary>
            Gets the client ID.
            </summary>
            <value>The client ID.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapToolbar.ToolbarCommandHolder.CommandHoldersMerged">
            <summary>
            Gets the command holders merged.
            </summary>
            <value>The command holders merged.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapToolbar.ToolbarCommandHolder.CommandHolders">
            <summary>
            Gets the sub command holders.
            </summary>
            <value>The sub command holders.</value>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.OlapToolbar.ToolbarClickEventArgs">
            <summary>
            Provides data for the Click event of the OlapToolbar class.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapToolbar.ToolbarClickEventArgs.#ctor(System.Boolean,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ToolbarClickArgs"/> class.
            </summary>
            <param name="cancel">if set to <c>true</c> [cancel].</param>
            <param name="clientID">The client ID.</param>
            <param name="commandID">The command ID.</param>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapToolbar.ToolbarClickEventArgs.ClientID">
            <summary>
            Gets the client ID.
            </summary>
            <value>The client ID.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapToolbar.ToolbarClickEventArgs.CommandName">
            <summary>
            Gets the command ID.
            </summary>
            <value>The command ID.</value>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.OlapToolbar.ToolbarCommandArgs">
            <summary>
            ToolbarCommandArgs contain information for context and dropdown menus as click point and 
            flag for drop down. The information comming from specialized callback parameters
            gerenated by AjaxUtils.CreateCommandStub and AjaxUtils.GetDropDownCallback.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapToolbar.ToolbarCommandArgs.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Dundas.Olap.WebUIControls.OlapToolbar.ToolbarCommandArgs"/> class.
            </summary>
            <param name="query">The query.</param>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapToolbar.ToolbarCommandArgs.ElementID">
            <summary>
            Gets the element ID.
            </summary>
            <value>The element ID.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapToolbar.ToolbarCommandArgs.CommandKey">
            <summary>
            Gets the command key.
            </summary>
            <value>The command key.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapToolbar.ToolbarCommandArgs.CommandKeys">
            <summary>
            Gets the command keys.
            </summary>
            <value>The command keys.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapToolbar.ToolbarCommandArgs.Suffixes">
            <summary>
            Gets the suffixes.
            </summary>
            <value>The suffixes.</value>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.OlapToolbar.ToolbarClickEventHandler">
            <summary>
            Represents the method that handles a toolbar click event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.OlapReportListSettings">
            <summary>
            This class is used to modify report list settings when the report list is in the toolbar.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapReportListSettings.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OlapToolbarSetup"/> class.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapReportListSettings.#ctor(Dundas.Olap.Manager.IToolbarClient)">
            <summary>
            Initializes a new instance of the <see cref="T:OlapToolbarSetup"/> class.
            </summary>
            <param name="client">The client.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapReportListSettings.OwnerControl_Init(System.Object,System.EventArgs)">
            <summary>
            Handles the Init event of the OwnerControl control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapReportListSettings.IsInitalized">
            <summary>
            Determines whether this instance is initalized.
            </summary>
            <returns>
            	<c>true</c> if this instance is initalized; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapReportListSettings.Invalidate">
            <summary>
            Invalidates the olap toolbar.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapReportListSettings.OwnerControl">
            <summary>
            Gets the owner control.
            </summary>
            <value>The owner control.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapReportListSettings.ViewState">
            <summary>
            Gets the state of the view.
            </summary>
            <value>The state of the view.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapReportListSettings.Owner">
            <summary>
            Gets the owner.
            </summary>
            <value>The owner.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapReportListSettings.AllowReportSaving">
            <summary>
            Gets or sets a flag that indicates if a report can be saved from the control UI.
            </summary>
            <value>
            <b>True</b> if the report list control allows the end user to save reports 
            using the toolbar or context menu.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapReportListSettings.AllowReportLoading">
            <summary>
            Gets or sets a flag that indicates if a report can be loaded from the control UI.
            </summary>
            <value>
            <b>True</b> if the report list control allows the end user to load reports 
            using the toolbar or context menu.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapReportListSettings.AllowReportAdding">
            <summary>
            Gets or sets a flag that indicates if a report can be added from the control UI.
            </summary>
            <value>
            <b>True</b> if the report list control allows the end user to add reports 
            using the toolbar or context menu.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapReportListSettings.AllowReportRemoving">
            <summary>
            Gets or sets a flag that indicates if a report can be deleted from the control UI.
            </summary>
            <value>
            <b>True</b> if report list control allows the end user to delete reports 
            using the toolbar or context menu.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapReportListSettings.AllowReportRenaming">
            <summary>
            Gets or sets a flag that indicates if a report can be renamed from the control UI.
            </summary>
            <value>
            <b>True</b> if the report list control allows the end user to rename reports 
            using toolbar or context menu.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapReportListSettings.AllowReportReverting">
            <summary>
            Gets or sets a flag that indicates if a report can be reverted to original 
            from the control UI.
            </summary>
            <value>
            <b>True</b> if report list control allows the end user to revert the report 
            to original using the toolbar or context menu.
            </value>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.OlapToolbarStyle">
            <summary>
            Specifies the style of the OLAP Toolbar.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.OlapToolbarStyle.None">
            <summary>
            Border not used
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.OlapToolbarStyle.Rounded">
            <summary>
            Office XP border
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.OlapToolbarStyle.Flat1">
            <summary>
            Flat1 border
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.OlapToolbarStyle.Flat2">
            <summary>
            Flat2 border
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.OlapToolbarStyle.Emboss">
            <summary>
            Emboss border
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.OlapToolbarStyle.Raised">
            <summary>
            Raised border
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.OlapToolbarStyle.Sunken">
            <summary>
            Sunken border
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.OlapToolbarStyle.FrameThin1">
            <summary>
            Thin border with rounded corners
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.OlapToolbarStyle.FrameThin2">
            <summary>
            Thin border with rounded top corners
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.OlapToolbarStyle.FrameThin3">
            <summary>
            Thin border with square corners
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.OlapToolbarStyle.FrameThin4">
            <summary>
            Thin border with square outside corners and rounded inside corners
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.OlapToolbarStyle.FrameThin5">
            <summary>
            Thin border with rounded corners and screws
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.OlapToolbarStyle.FrameThin6">
            <summary>
            Thin border with square inside corners and rounded outside corners
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.OlapReportListPlacement">
            <summary>
            Specifies the placement of the report list in the toolbar.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.OlapReportListPlacement.BeforeItems">
            <summary>
            Place report list at the begining of the toolbar
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.OlapReportListPlacement.AfterItems">
            <summary>
            Place report list at the end of the toolbar
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.OlapReportListPlacement.None">
            <summary>
            Hide the olap report list 
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.AxisBuilderDimensionButton">
            <summary>
            AxisButton represents the button of the AxisBuilder.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.AxisBuilderDimensionButton.AllowRemoveMeasures">
            <summary>
            Indicates that measures could be removed from the axis.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.AxisBuilderDimensionButton.axisType">
            <summary>
            The axisType of the button
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.AxisBuilderDimensionButton.dimensionDescriptor">
            <summary>
            DimensionDescriptor reference
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.AxisBuilderDimensionButton.control">
            <summary>
            The parent control
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.AxisBuilderDimensionButton.index">
            <summary>
            DimensionDescriptor index
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.AxisBuilderDimensionButton.text">
            <summary>
            The button text
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.AxisBuilderDimensionButton.hintString">
            <summary>
            The button hint text
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisBuilderDimensionButton.#ctor">
            <summary>
            Creates new instance of AxisBuilderDimensionButton class
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisBuilderDimensionButton.#ctor(Dundas.Olap.WebUIControls.AxisBuilder,System.Int32,Dundas.Olap.Data.DimensionDescriptor)">
            <summary>
            Creates new instance of AxisBuilderDimensionButton class
            </summary>
            <param name="control">Parent AxisBuilder conrol</param>
            <param name="index">Button index</param>
            <param name="dimensionDescriptor">Dimension descriptor</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisBuilderDimensionButton.GetHint">
            <summary>
            Gets the hint.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisBuilderDimensionButton.GetLevelCaption">
            <summary>
            Gets the level caption.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisBuilderDimensionButton.GetDimensionCaption">
            <summary>
            Gets the dimension caption.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisBuilderDimensionButton.IsNameSet">
            <summary>
            Determines whether or not the dimension descriptor is a name set.
            </summary>
            <returns>
            	<c>true</c> if the dimension descriptor is a name set; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisBuilderDimensionButton.GetSpaceImage(System.Int32,System.Int32)">
            <summary>
            Creates and returns spacer image with given width and height
            </summary>
            <param name="width"></param>
            <param name="height"></param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisBuilderDimensionButton.GetCell(Dundas.Olap.WebUIControls.DimensionBtnCommands)">
            <summary>
            Get cell whith represents separate part of button
            </summary>
            <param name="cmd"></param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisBuilderDimensionButton.PrepareInternals">
            <summary>
            Prepares the internals controls.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisBuilderDimensionButton.OnPreRender(System.EventArgs)">
            <summary>
            This member overrides <see cref="M:System.Web.UI.Control.OnPreRender(System.EventArgs)"/> method.
            </summary>
            <param name="e">The event argument</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisBuilderDimensionButton.Render(System.Web.UI.HtmlTextWriter)">
            <summary> 
            Render this control to the output parameter specified.
            </summary>
            <param name="output"> The HTML writer to write out to </param>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.DimensionBtnCommands">
            <summary>
            Represents different button parts and corresponded commands
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.DimensionBtnCommands.Properties">
            <summary>
            Properties command ( small rectangle right )
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.DimensionBtnCommands.Text">
            <summary>
            The text cell
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.DimensionBtnCommands.LeftEdge">
            <summary>
            Left edge part
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.DimensionBtnCommands.RightEdge">
            <summary>
            Right edge part
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.GroupingFunction">
            <summary>
            Grouping functions types
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.GroupingFunction.None">
            <summary>
            Not defined
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.GroupingFunction.Min">
            <summary>
            Minimum value of the group
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.GroupingFunction.Max">
            <summary>
            Maximum value of the group
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.GroupingFunction.Ave">
            <summary>
            Average value of the group
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.GroupingFunction.Sum">
            <summary>
            Total of all values of the group
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.GroupingFunction.First">
            <summary>
            Value of the first point in the group
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.GroupingFunction.Last">
            <summary>
            Value of the last point in the group
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.GroupingFunction.Center">
            <summary>
            Value of the center point in the group
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.GroupingFunction.HiLoOpCl">
            <summary>
            High, Low, Open, Close values in the group
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.GroupingFunction.HiLo">
            <summary>
            High, Low values in the group
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.GroupingFunction.Count">
            <summary>
            Number of points in the group
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.GroupingFunction.DistinctCount">
            <summary>
            Number of unique points in the group
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.GroupingFunction.Variance">
            <summary>
            Variance of points in the group
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.GroupingFunction.Deviation">
            <summary>
            Deviation of points in the group
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.IntervalType">
            <summary>
            Interval type enumeration
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.IntervalType.Number">
            <summary>
            Interval in numbers
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.IntervalType.Years">
            <summary>
            Interval in years
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.IntervalType.Months">
            <summary>
            Interval in months
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.IntervalType.Weeks">
            <summary>
            Interval in weeks
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.IntervalType.Days">
            <summary>
            Interval in days
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.IntervalType.Hours">
            <summary>
            Interval in hours
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.IntervalType.Minutes">
            <summary>
            Interval in minutes
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.IntervalType.Seconds">
            <summary>
            Interval in seconds
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.IntervalType.Milliseconds">
            <summary>
            Interval in milliseconds
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.DateRangeType">
            <summary>
            Date range type enumeration
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.DateRangeType.Year">
            <summary>
            Range defined in years
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.DateRangeType.Month">
            <summary>
            Range defined in months
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.DateRangeType.DayOfWeek">
            <summary>
            Range defined in week days
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.DateRangeType.DayOfMonth">
            <summary>
            Range defined in months day
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.DateRangeType.Hour">
            <summary>
            Range defined in hours
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.DateRangeType.Minute">
            <summary>
            Range defined in minutes
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.CompareMethod">
            <summary>
            Compare method enumeration
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.CompareMethod.More">
            <summary>
            One value is more than another
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.CompareMethod.Less">
            <summary>
            One value is less than another
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.CompareMethod.Equal">
            <summary>
            One value is equal another
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.CompareMethod.MoreOrEqual">
            <summary>
            One value is more or equal to another
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.CompareMethod.LessOrEqual">
            <summary>
            One value is less or equal to another
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.CompareMethod.NotEqual">
            <summary>
            One value is not equal to another
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.IDataPointFilter">
            <summary>
            IDataPointFilter interface used for filtering series data points.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.IDataPointFilter.FilterDataPoint(Dundas.Olap.WebUIControls.DataPoint,Dundas.Olap.WebUIControls.Series,System.Int32)">
            <summary>
            Checks if specified data point must be filtered.
            </summary>
            <param name="point">Data point object.</param>
            <param name="series">Series of the point.</param>
            <param name="pointIndex">Index of the point in the series.</param>
            <returns>True if point must be removed</returns>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.DataManipulator">
            <summary>
            DataManipulator class is used at run-time to perform data manipulation 
            operations, and is exposed using the DataManipulator property of the 
            root Chart object. 
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.FormulaData">
            <summary>
            FormulaData class provides properties and methods, which prepare series 
            data for technical analyses and time series and forecasting formulas 
            and prepare output data to be displayed as a chart.
            
            Early version of the Chart control uses 'Formula' method which takes
            formula name as string parameter. Later all 'Formula' methods were
            depricated and replaced with 'FormulaFinancial' methods which take an
            enumeration as first parameter.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.FormulaData.zeroXValues">
            <summary>
            All X values are zero.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.FormulaData.statistics">
            <summary>
            Utility class for Statistical formulas
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.FormulaData.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.FormulaData.Formula(System.String,System.String,System.String,System.String)">
            <summary>
            This method calls a method from a formula module with 
            specified name.
            </summary>
            <param name="formulaName">Formula Name</param>
            <param name="parameters">Formula parameters</param>
            <param name="inputSeries">Comma separated input data series names and optional X and Y values names.</param>
            <param name="outputSeries">Comma separated output data series names and optional X and Y values names.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.FormulaData.ConvertZeroXToIndex(Dundas.Olap.WebUIControls.Series[]@)">
            <summary>
            This method will set indexes for all x values if they are 0.
            </summary>
            <param name="series">Array of series which indexes has to be converted.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.FormulaData.Formula(System.String,Dundas.Olap.WebUIControls.Series)">
            <summary>
            This method calls a method from a formula module with 
            specified name.
            </summary>
            <param name="formulaName">Formula Name</param>
            <param name="inputSeries">Input Data Series</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.FormulaData.Formula(System.String,Dundas.Olap.WebUIControls.Series,Dundas.Olap.WebUIControls.Series)">
            <summary>
            This method calls a method from a formula module with 
            specified name.
            </summary>
            <param name="formulaName">Formula Name</param>
            <param name="inputSeries">Input Data Series</param>
            <param name="outputSeries">Output Data Series</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.FormulaData.Formula(System.String,System.String,Dundas.Olap.WebUIControls.Series,Dundas.Olap.WebUIControls.Series)">
            <summary>
            This method calls a method from a formula module with 
            specified name.
            </summary>
            <param name="formulaName">Formula Name</param>
            <param name="parameters">Formula parameters</param>
            <param name="inputSeries">Input Data Series</param>
            <param name="outputSeries">Output Data Series</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.FormulaData.Formula(System.String,System.String)">
            <summary>
            This method calls a method from a formula module with 
            specified name.
            </summary>
            <param name="formulaName">Formula Name</param>
            <param name="inputSeries">Comma separated input data series names and optional X and Y values names.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.FormulaData.Formula(System.String,System.String,System.String)">
            <summary>
            This method calls a method from a formula module with 
            specified name.
            </summary>
            <param name="formulaName">Formula Name</param>
            <param name="inputSeries">Comma separated input data series names and optional X and Y values names.</param>
            <param name="outputSeries">Comma separated output data series names and optional X and Y values names.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.FormulaData.SetDoubleArray(Dundas.Olap.WebUIControls.Series[],System.Int32[],System.Double[][],System.String[][])">
            <summary>
            This method will set series X and Y values from matrix of 
            double values.
            </summary>
            <param name="outputSeries">Array of output series</param>
            <param name="valueIndex">Array of Y value indexes</param>
            <param name="outputValues">Array of doubles which will be used to fill series</param>
            <param name="outputLabels">Array of labels</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.FormulaData.ConvertToArrays(System.String,Dundas.Olap.WebUIControls.Series[]@,System.Int32[]@,System.Boolean)">
            <summary>
            This method will convert a string with information about 
            series and y values to two arrays. The first array will 
            contain series and the second array will contain 
            corresponding indexes to y values for every series. 
            The arrays have to have the same number of items.
            </summary>
            <param name="inputString">A string with information about series and Y values</param>
            <param name="seiesArray">Array of Data Series</param>
            <param name="valueArray">Array of Y value indexes</param>
            <param name="inputSeries">Do not create new series if input series are used</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.FormulaData.GetDoubleArray(Dundas.Olap.WebUIControls.Series[],System.Int32[],System.Double[][]@)">
            <summary>
            Returns Jagged Arrays of doubles from array od series. 
            A jagged array is merely an array of arrays and
            it doesn't have to be square. The first item is array of 
            X values from the first series
            </summary>
            <param name="inputSeries">Array of Data Series</param>
            <param name="valueIndex">Array with indexes which represent value from data point: 0 = X, 1 = Y, 2 = Y2, 3 = Y3</param>
            <param name="output">Jagged Arrays of doubles</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.FormulaData.GetDoubleArray(Dundas.Olap.WebUIControls.Series[],System.Int32[],System.Double[][]@,System.Boolean)">
            <summary>
            Returns Jagged Arrays of doubles from array od series. 
            A jagged array is merely an array of arrays and
            it doesn't have to be square. The first item is array of 
            X values from the first series
            </summary>
            <param name="inputSeries">Array of Data Series</param>
            <param name="valueIndex">Array with indexes which represent value from data point: 0 = X, 1 = Y, 2 = Y2, 3 = Y3</param>
            <param name="output">Jagged Arrays of doubles</param>
            <param name="ignoreZeroX">Ignor Zero X values</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.FormulaData.CopySeriesValues(System.String,System.String)">
            <summary>
            Merge, split or move Y values of the series. 
            </summary>
            <param name="inputSeries">Comma separated input data series names and optional X and Y values names.</param>
            <param name="outputSeries">Comma separated output data series names and optional X and Y values names.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.FormulaData.RemoveEmptyValues(System.Double[][],System.Double[][]@)">
            <summary>
            This method will first copy input matrix to output matrix 
            then will remove columns, which have 
            one or more empty values (NaN) from the output matrix. This 
            method will set all values from column of input matrix 
            to be empty (NaN) if one or more values of that column 
            are empty.
            </summary>
            <param name="input">Input matrix with empty values</param>
            <param name="output">Output matrix without empty values</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.FormulaData.InsertEmptyDataPoints(System.Double[][],System.Double[][],System.Double[][]@)">
            <summary>
            This method will compare a input matrix with empty data 
            points and output matrix without empty data points and 
            add empty data points to output matrix according to 
            input matrix empty data point positions.
            </summary>
            <param name="input">Matrix With input data</param>
            <param name="inputWithoutEmpty">Matrix without empty data points</param>
            <param name="output">New Matrix with inserted data points</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.FormulaData.SplitParameters(System.String,System.String[]@)">
            <summary>
            This method splits a string with comma separated 
            parameters to the array of strings with parameters.
            </summary>
            <param name="parameters">a string with comma separated parameters</param>
            <param name="parameterList">the array of strings with parameters</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.FormulaData.DifferentNumberOfSeries(System.Double[][])">
            <summary>
            Check if series have different number of series.
            </summary>
            <param name="input">Input series.</param>
            <returns>true if there is different number of series.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.FormulaData.CheckXValuesAlignment(Dundas.Olap.WebUIControls.Series[])">
            <summary>
            This method will check if X values from different series 
            are aligned.
            </summary>
            <param name="series">Array of series</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.FormulaData.FormulaFinancial(Dundas.Olap.WebUIControls.FinancialFormula,System.String,System.String,System.String)">
            <summary>
            This method calls a method from a formula module with 
            specified name.
            </summary>
            <param name="formulaName">Formula Name</param>
            <param name="parameters">Formula parameters</param>
            <param name="inputSeries">Comma separated input data series names and optional X and Y values names.</param>
            <param name="outputSeries">Comma separated output data series names and optional X and Y values names.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.FormulaData.FormulaFinancial(Dundas.Olap.WebUIControls.FinancialFormula,Dundas.Olap.WebUIControls.Series)">
            <summary>
            This method calls a method from a formula module with 
            specified name.
            </summary>
            <param name="formulaName">Formula Name</param>
            <param name="inputSeries">Input Data Series</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.FormulaData.FormulaFinancial(Dundas.Olap.WebUIControls.FinancialFormula,Dundas.Olap.WebUIControls.Series,Dundas.Olap.WebUIControls.Series)">
            <summary>
            This method calls a method from a formula module with 
            specified name.
            </summary>
            <param name="formulaName">Formula Name</param>
            <param name="inputSeries">Input Data Series</param>
            <param name="outputSeries">Output Data Series</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.FormulaData.FormulaFinancial(Dundas.Olap.WebUIControls.FinancialFormula,System.String,Dundas.Olap.WebUIControls.Series,Dundas.Olap.WebUIControls.Series)">
            <summary>
            This method calls a method from a formula module with 
            specified name.
            </summary>
            <param name="formulaName">Formula Name</param>
            <param name="parameters">Formula parameters</param>
            <param name="inputSeries">Input Data Series</param>
            <param name="outputSeries">Output Data Series</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.FormulaData.FormulaFinancial(Dundas.Olap.WebUIControls.FinancialFormula,System.String)">
            <summary>
            This method calls a method from a formula module with 
            specified name.
            </summary>
            <param name="formulaName">Formula Name</param>
            <param name="inputSeries">Comma separated input data series names and optional X and Y values names.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.FormulaData.FormulaFinancial(Dundas.Olap.WebUIControls.FinancialFormula,System.String,System.String)">
            <summary>
            This method calls a method from a formula module with 
            specified name.
            </summary>
            <param name="formulaName">Formula Name</param>
            <param name="inputSeries">Comma separated input data series names and optional X and Y values names.</param>
            <param name="outputSeries">Comma separated output data series names and optional X and Y values names.</param>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.FormulaData.IgnoreEmptyPoints">
            <summary>
            Indicates that empty points are ignored while performing calculations. 
            Otherwise empty points are treated as zeros. 
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.FormulaData.StartFromFirst">
            <summary>
            Start formulas like rolling average from zero.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.FormulaData.Statistics">
            <summary>
            Resturns Statistical Utility class
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataManipulator.ConvertToSeriesArray(System.Object,System.Boolean)">
            <summary>
            Helper function that converts one series or a comma separated
            list of series names into the Series array.
            </summary>
            <param name="obj">Series or string of series names.</param>
            <param name="createNew">If series with this name do not exist - create new.</param>
            <returns>Array of series.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataManipulator.#ctor">
            <summary>
            Public constructor
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataManipulator.Sort(Dundas.Olap.WebUIControls.PointsSortOrder,System.String,Dundas.Olap.WebUIControls.Series[])">
            <summary>
            Sort series data points in specified order.
            </summary>
            <param name="order">Sorting order.</param>
            <param name="sortBy">Value to sort by.</param>
            <param name="series">Series array to sort.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataManipulator.Sort(System.Collections.IComparer,Dundas.Olap.WebUIControls.Series[])">
            <summary>
            Sort series data points in specified order.
            </summary>
            <param name="comparer">Comparing interface.</param>
            <param name="series">Series array to sort.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataManipulator.Sort(Dundas.Olap.WebUIControls.PointsSortOrder,System.String,System.String)">
            <summary>
            Sort series data points in specified order.
            </summary>
            <param name="order">Sorting order.</param>
            <param name="sortBy">Value to sort by.</param>
            <param name="seriesName">Comma separated sereies names to sort.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataManipulator.Sort(Dundas.Olap.WebUIControls.PointsSortOrder,Dundas.Olap.WebUIControls.Series)">
            <summary>
            Sort series data points in specified order.
            </summary>
            <param name="order">Sorting order.</param>
            <param name="series">Series to sort.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataManipulator.Sort(Dundas.Olap.WebUIControls.PointsSortOrder,System.String)">
            <summary>
            Sort series data points in specified order.
            </summary>
            <param name="order">Sorting order.</param>
            <param name="seriesName">Comma separated series names to sort.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataManipulator.Sort(Dundas.Olap.WebUIControls.PointsSortOrder,System.String,Dundas.Olap.WebUIControls.Series)">
            <summary>
            Sort series data points in specified order.
            </summary>
            <param name="order">Sorting order.</param>
            <param name="sortBy">Value to sort by.</param>
            <param name="series">Series to sort.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataManipulator.Sort(System.Collections.IComparer,Dundas.Olap.WebUIControls.Series)">
            <summary>
            Sort series data points in specified order.
            </summary>
            <param name="comparer">Comparing interface.</param>
            <param name="series">Series to sort.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataManipulator.Sort(System.Collections.IComparer,System.String)">
            <summary>
            Sort series data points in specified order.
            </summary>
            <param name="comparer">Comparing interface.</param>
            <param name="seriesName">Comma separated series names to sort.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataManipulator.InsertEmptyPoints(System.Double,Dundas.Olap.WebUIControls.IntervalType,System.Double,Dundas.Olap.WebUIControls.IntervalType,System.Double,System.Double,Dundas.Olap.WebUIControls.Series[])">
            <summary>
            Insert empty data points using specified interval.
            </summary>
            <param name="interval">Interval size.</param>
            <param name="intervalType">Interval type.</param>
            <param name="intervalOffset">Interval offset size.</param>
            <param name="intervalOffsetType">Interval offset type.</param>
            <param name="fromXValue">Check intervals from this X value.</param>
            <param name="toXValue">Check intervals until this X value.</param>
            <param name="series">Series array.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataManipulator.ConvertIntervalType(Dundas.Olap.WebUIControls.IntervalType)">
            <summary>
            Helper function which converts IntervalType enumeration
            into DateTimeIntervalType enumeration.
            </summary>
            <param name="type">Interval type value.</param>
            <returns>Date time interval type value.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataManipulator.InsertEmptyPoints(System.Double,Dundas.Olap.WebUIControls.IntervalType,Dundas.Olap.WebUIControls.Series)">
            <summary>
            Insert empty data points using specified interval.
            </summary>
            <param name="interval">Interval size.</param>
            <param name="intervalType">Interval type.</param>
            <param name="series">Series to insert the empty points in.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataManipulator.InsertEmptyPoints(System.Double,Dundas.Olap.WebUIControls.IntervalType,System.String)">
            <summary>
            Insert empty data points using specified interval.
            </summary>
            <param name="interval">Interval size.</param>
            <param name="intervalType">Interval type.</param>
            <param name="seriesName">Series name to insert the empty points in.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataManipulator.InsertEmptyPoints(System.Double,Dundas.Olap.WebUIControls.IntervalType,System.Double,Dundas.Olap.WebUIControls.IntervalType,System.String)">
            <summary>
            Insert empty data points using specified interval.
            </summary>
            <param name="interval">Interval size.</param>
            <param name="intervalType">Interval type.</param>
            <param name="intervalOffset">Interval offset size.</param>
            <param name="intervalOffsetType">Interval offset type.</param>
            <param name="seriesName">Series name to insert the empty points in.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataManipulator.InsertEmptyPoints(System.Double,Dundas.Olap.WebUIControls.IntervalType,System.Double,Dundas.Olap.WebUIControls.IntervalType,Dundas.Olap.WebUIControls.Series)">
            <summary>
            Insert empty data points using specified interval.
            </summary>
            <param name="interval">Interval size.</param>
            <param name="intervalType">Interval type.</param>
            <param name="intervalOffset">Interval offset size.</param>
            <param name="intervalOffsetType">Interval offset type.</param>
            <param name="series">Series to insert the empty points in.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataManipulator.InsertEmptyPoints(System.Double,Dundas.Olap.WebUIControls.IntervalType,System.Double,Dundas.Olap.WebUIControls.IntervalType,System.Double,System.Double,System.String)">
            <summary>
            Insert empty data points using specified interval.
            </summary>
            <param name="interval">Interval size.</param>
            <param name="intervalType">Interval type.</param>
            <param name="intervalOffset">Interval offset size.</param>
            <param name="intervalOffsetType">Interval offset type.</param>
            <param name="fromXValue">Check intervals from this X value.</param>
            <param name="toXValue">Check intervals until this X value.</param>
            <param name="seriesName">Series name to insert the empty points in.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataManipulator.InsertEmptyPoints(System.Double,Dundas.Olap.WebUIControls.IntervalType,System.Double,Dundas.Olap.WebUIControls.IntervalType,System.Double,System.Double,Dundas.Olap.WebUIControls.Series)">
            <summary>
            Insert empty data points using specified interval.
            </summary>
            <param name="interval">Interval size.</param>
            <param name="intervalType">Interval type.</param>
            <param name="intervalOffset">Interval offset size.</param>
            <param name="intervalOffsetType">Interval offset type.</param>
            <param name="fromXValue">Check intervals from this X value.</param>
            <param name="toXValue">Check intervals until this X value.</param>
            <param name="series">Series to insert the empty points in.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataManipulator.ExportSeriesValues(Dundas.Olap.WebUIControls.Series[])">
            <summary>
            Export series data into the DataSet object.
            </summary>
            <param name="series">Array of series which should be exported.</param>
            <returns>Data set object with series data.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataManipulator.ExportSeriesValues">
            <summary>
            Export all series from the collection into the DataSet object.
            </summary>
            <returns>Data set object with series data.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataManipulator.ExportSeriesValues(System.String)">
            <summary>
            Export series data into the DataSet object.
            </summary>
            <param name="seriesNames">Comma separated series names which should be exported.</param>
            <returns>Data set object with series data.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataManipulator.ExportSeriesValues(Dundas.Olap.WebUIControls.Series)">
            <summary>
            Export series data into the DataSet object.
            </summary>
            <param name="series">Series which should be exported.</param>
            <returns>Data set object with series data.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataManipulator.FilterTopN(System.Int32,Dundas.Olap.WebUIControls.Series[],Dundas.Olap.WebUIControls.Series[],System.String,System.Boolean)">
            <summary>
            Keeps only N top/bottom points of the series
            </summary>
            <param name="pointCount">Number of top/bottom points to return.</param>
            <param name="inputSeries">Input series array.</param>
            <param name="outputSeries">Output series array.</param>
            <param name="usingValue">Defines which value of the point use in comparison (X, Y, Y2, ...).</param>
            <param name="getTopValues">Indicate that N top values must be retrieved, otherwise N bottom values.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataManipulator.Filter(Dundas.Olap.WebUIControls.IDataPointFilter,Dundas.Olap.WebUIControls.Series[],Dundas.Olap.WebUIControls.Series[])">
            <summary>
            Filter data points using IDataPointFilter interface
            </summary>
            <param name="filterInterface">Data points filtering interface.</param>
            <param name="inputSeries">Input series array.</param>
            <param name="outputSeries">Output series array.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataManipulator.ConvertElementIndexesToArray(System.String)">
            <summary>
            Helper function to convert elements indexes from a string
            into an array of integers
            </summary>
            <param name="rangeElements">Element indexes string. Ex:"3,5,6-9,15"</param>
            <returns>Array of integer indexes.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataManipulator.CheckFilterElementCriteria(Dundas.Olap.WebUIControls.DateRangeType,System.Int32[],Dundas.Olap.WebUIControls.DataPoint,Dundas.Olap.WebUIControls.Series,System.Int32)">
            <summary>
            Helper function, which checks if specified point matches the criteria
            </summary>
            <param name="dateRange">Element type.</param>
            <param name="rangeElements">Array of element indexes ranges (pairs).</param>
            <param name="point">Data point to check.</param>
            <param name="series">Series of the data point.</param>
            <param name="pointIndex">Data Point index.</param>
            <returns>True if point matches the criteria.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataManipulator.Filter(Dundas.Olap.WebUIControls.DateRangeType,System.String,System.String,System.String)">
            <summary>
            Filters points using the elements indexes.
            </summary>
            <param name="dateRange">Element type.</param>
            <param name="rangeElements">Comma separated element indexes.</param>
            <param name="inputSeriesNames">Comma separated input series names.</param>
            <param name="outputSeriesNames">Comma separated output series names.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataManipulator.Filter(Dundas.Olap.WebUIControls.DateRangeType,System.String,Dundas.Olap.WebUIControls.Series)">
            <summary>
            Filters points using the elements indexes.
            </summary>
            <param name="dateRange">Element type.</param>
            <param name="rangeElements">Comma separated element indexes.</param>
            <param name="inputSeries">Input series.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataManipulator.Filter(Dundas.Olap.WebUIControls.DateRangeType,System.String,Dundas.Olap.WebUIControls.Series,Dundas.Olap.WebUIControls.Series)">
            <summary>
            Filters points using the elements indexes.
            </summary>
            <param name="dateRange">Element type.</param>
            <param name="rangeElements">Comma separated element indexes.</param>
            <param name="inputSeries">Input series.</param>
            <param name="outputSeries">Output series.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataManipulator.Filter(Dundas.Olap.WebUIControls.DateRangeType,System.String,System.String)">
            <summary>
            Filters points using the elements indexes.
            </summary>
            <param name="dateRange">Element type.</param>
            <param name="rangeElements">Comma separated element indexes.</param>
            <param name="inputSeriesNames">Comma separated input series names.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataManipulator.Filter(Dundas.Olap.WebUIControls.CompareMethod,System.Double,Dundas.Olap.WebUIControls.Series)">
            <summary>
            Filters points by point's values.
            </summary>
            <param name="compareMethod">Value comparing method.</param>
            <param name="compareValue">Value to compare with.</param>
            <param name="inputSeries">Input series.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataManipulator.Filter(Dundas.Olap.WebUIControls.CompareMethod,System.Double,Dundas.Olap.WebUIControls.Series,Dundas.Olap.WebUIControls.Series)">
            <summary>
            Filters points by point values.
            </summary>
            <param name="compareMethod">Value comparing method.</param>
            <param name="compareValue">Value to compare with.</param>
            <param name="inputSeries">Input series.</param>
            <param name="outputSeries">Output series.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataManipulator.Filter(Dundas.Olap.WebUIControls.CompareMethod,System.Double,Dundas.Olap.WebUIControls.Series,Dundas.Olap.WebUIControls.Series,System.String)">
            <summary>
            Filters points by point values.
            </summary>
            <param name="compareMethod">Value comparing method.</param>
            <param name="compareValue">Value to compare with.</param>
            <param name="inputSeries">Input series.</param>
            <param name="outputSeries">Output series.</param>
            <param name="usingValue">Defines which value of the point use in comparison (X, Y, Y2, ...).</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataManipulator.Filter(Dundas.Olap.WebUIControls.CompareMethod,System.Double,System.String)">
            <summary>
            Filters points by point values.
            </summary>
            <param name="compareMethod">Value comparing method.</param>
            <param name="compareValue">Value to compare with.</param>
            <param name="inputSeriesNames">Comma separated input series names.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataManipulator.Filter(Dundas.Olap.WebUIControls.CompareMethod,System.Double,System.String,System.String)">
            <summary>
            Filters points by point values.
            </summary>
            <param name="compareMethod">Value comparing method.</param>
            <param name="compareValue">Value to compare with.</param>
            <param name="inputSeriesNames">Comma separated input series names.</param>
            <param name="outputSeriesNames">Comma separated output series names.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataManipulator.Filter(Dundas.Olap.WebUIControls.CompareMethod,System.Double,System.String,System.String,System.String)">
            <summary>
            Filters points by point values.
            </summary>
            <param name="compareMethod">Value comparing method.</param>
            <param name="compareValue">Value to compare with.</param>
            <param name="inputSeriesNames">Comma separated input series names.</param>
            <param name="outputSeriesNames">Comma separated output series names.</param>
            <param name="usingValue">Defines which value of the point use in comparison (X, Y, Y2, ...).</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataManipulator.FilterTopN(System.Int32,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Keeps only N top/bottom points of the series.
            </summary>
            <param name="pointCount">Number of top/bottom points to return.</param>
            <param name="inputSeriesNames">Comma separated input series names.</param>
            <param name="outputSeriesNames">Comma separated output series names.</param>
            <param name="usingValue">Defines which value of the point use in comparison (X, Y, Y2, ...).</param>
            <param name="getTopValues">Indicate that N top values must be retrieved, otherwise N bottom values.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataManipulator.FilterTopN(System.Int32,Dundas.Olap.WebUIControls.Series)">
            <summary>
            Keeps only N top/bottom points of the series.
            </summary>
            <param name="pointCount">Number of top/bottom points to return.</param>
            <param name="inputSeries">Input series.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataManipulator.FilterTopN(System.Int32,Dundas.Olap.WebUIControls.Series,Dundas.Olap.WebUIControls.Series)">
            <summary>
            Keeps only N top/bottom points of the series.
            </summary>
            <param name="pointCount">Number of top/bottom points to return.</param>
            <param name="inputSeries">Input series.</param>
            <param name="outputSeries">Output series.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataManipulator.FilterTopN(System.Int32,Dundas.Olap.WebUIControls.Series,Dundas.Olap.WebUIControls.Series,System.String)">
            <summary>
            Keeps only N top/bottom points of the series.
            </summary>
            <param name="pointCount">Number of top/bottom points to return.</param>
            <param name="inputSeries">Input series.</param>
            <param name="outputSeries">Output series.</param>
            <param name="usingValue">Defines which value of the point use in comparison (X, Y, Y2, ...).</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataManipulator.FilterTopN(System.Int32,Dundas.Olap.WebUIControls.Series,Dundas.Olap.WebUIControls.Series,System.String,System.Boolean)">
            <summary>
            Keeps only N top/bottom points of the series.
            </summary>
            <param name="pointCount">Number of top/bottom points to return.</param>
            <param name="inputSeries">Input series.</param>
            <param name="outputSeries">Output series.</param>
            <param name="usingValue">Defines which value of the point use in comparison (X, Y, Y2, ...).</param>
            <param name="getTopValues">Indicate that N top values must be retrieved, otherwise N bottom values.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataManipulator.FilterTopN(System.Int32,System.String)">
            <summary>
            Keeps only N top/bottom points of the series.
            </summary>
            <param name="pointCount">Number of top/bottom points to return.</param>
            <param name="inputSeriesNames">Comma separated input series names.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataManipulator.FilterTopN(System.Int32,System.String,System.String)">
            <summary>
            Keeps only N top/bottom points of the series.
            </summary>
            <param name="pointCount">Number of top/bottom points to return.</param>
            <param name="inputSeriesNames">Comma separated input series names.</param>
            <param name="outputSeriesNames">Comma separated output series names.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataManipulator.FilterTopN(System.Int32,System.String,System.String,System.String)">
            <summary>
            Keeps only N top/bottom points of the series.
            </summary>
            <param name="pointCount">Number of top/bottom points to return.</param>
            <param name="inputSeriesNames">Comma separated input series names.</param>
            <param name="outputSeriesNames">Comma separated output series names.</param>
            <param name="usingValue">Defines which value of the point use in comparison (X, Y, Y2, ...).</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataManipulator.Filter(Dundas.Olap.WebUIControls.IDataPointFilter,Dundas.Olap.WebUIControls.Series)">
            <summary>
            Filters data points using IDataPointFilter interface.
            </summary>
            <param name="filterInterface">Filtering interface.</param>
            <param name="inputSeries">Input series.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataManipulator.Filter(Dundas.Olap.WebUIControls.IDataPointFilter,Dundas.Olap.WebUIControls.Series,Dundas.Olap.WebUIControls.Series)">
            <summary>
            Filters data points using IDataPointFilter interface.
            </summary>
            <param name="filterInterface">Filtering interface.</param>
            <param name="inputSeries">Input series.</param>
            <param name="outputSeries">Output series.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataManipulator.Filter(Dundas.Olap.WebUIControls.IDataPointFilter,System.String)">
            <summary>
            Filters data points using IDataPointFilter interface.
            </summary>
            <param name="filterInterface">Filtering interface.</param>
            <param name="inputSeriesNames">Comma separated input series names.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataManipulator.Filter(Dundas.Olap.WebUIControls.IDataPointFilter,System.String,System.String)">
            <summary>
            Filters data points using IDataPointFilter interface.
            </summary>
            <param name="filterInterface">Filtering interface.</param>
            <param name="inputSeriesNames">Comma separated input series names.</param>
            <param name="outputSeriesNames">Comma separated output series names.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataManipulator.GroupByAxisLabel(System.String,Dundas.Olap.WebUIControls.Series[],Dundas.Olap.WebUIControls.Series[])">
            <summary>
            Grouping by X value, when it’s a string (stored in AxisLabel property).
            </summary>
            <param name="formula">Grouping formula.</param>
            <param name="inputSeries">Array of input series.</param>
            <param name="outputSeries">Array of utput series.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataManipulator.Group(System.String,System.Double,Dundas.Olap.WebUIControls.IntervalType,System.Double,Dundas.Olap.WebUIControls.IntervalType,Dundas.Olap.WebUIControls.Series[],Dundas.Olap.WebUIControls.Series[])">
            <summary>
            Groups series points in the interval with offset
            </summary>
            <param name="formula">Grouping formula.</param>
            <param name="interval">Interval size.</param>
            <param name="intervalType">Interval type.</param>
            <param name="intervalOffset">Interval offset size.</param>
            <param name="intervalOffsetType">Interval offset type.</param>
            <param name="inputSeries">Array of input series.</param>
            <param name="outputSeries">Array of utput series.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataManipulator.ProcessPointValues(Dundas.Olap.WebUIControls.DataManipulator.GroupingFunctionInfo[],System.Double[],Dundas.Olap.WebUIControls.Series,Dundas.Olap.WebUIControls.DataPoint,System.Int32,System.Int32,System.Int32,System.Boolean,System.Int32@)">
            <summary>
            Adds current point values to the temp. formula results.
            </summary>
            <param name="functions">Array of functions type.</param>
            <param name="pointTempValues">Temp. point values.</param>
            <param name="series">Point series.</param>
            <param name="point">Current point.</param>
            <param name="pointIndex">Current point index.</param>
            <param name="intervalFirstIndex">Index of the first point in the interval.</param>
            <param name="intervalLastIndex">Index of the last point in the interval.</param>
            <param name="finalPass">Indicates that interval processing is finished.</param>
            <param name="numberOfEmptyPoints">Number of skiped points in the interval.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataManipulator.GetGroupingFunctions(Dundas.Olap.WebUIControls.Series[],System.String,System.Int32@)">
            <summary>
            Checks the formula format and returns an array of formula types
            for each X and each Y value of the input series.
            </summary>
            <param name="inputSeries">Array of input series.</param>
            <param name="formula">Formula string.</param>
            <param name="outputValuesNumber">Number of values in output series.</param>
            <returns>Array of functions for each Y value.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataManipulator.ParseFormulaAndValueType(System.String,System.Int32@)">
            <summary>
            Parse one formula with optional value prefix.
            Example: "Y2:MAX"
            </summary>
            <param name="formulaString">One formula name with optional value prefix.</param>
            <param name="valueIndex">Return value index.</param>
            <returns>Formula type.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataManipulator.CheckSeriesArrays(Dundas.Olap.WebUIControls.Series[],Dundas.Olap.WebUIControls.Series[])">
            <summary>
            Checks if input/output series parameters are correct.
            If not - fires an exeption.
            </summary>
            <param name="inputSeries">Input series array.</param>
            <param name="outputSeries">Output series array.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataManipulator.Group(System.String,System.Double,Dundas.Olap.WebUIControls.IntervalType,Dundas.Olap.WebUIControls.Series)">
            <summary>
            Groups series points in the interval.
            </summary>
            <param name="formula">Grouping formula.</param>
            <param name="interval">Interval size.</param>
            <param name="intervalType">Interval type.</param>
            <param name="inputSeries">Input data series.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataManipulator.Group(System.String,System.Double,Dundas.Olap.WebUIControls.IntervalType,System.String)">
            <summary>
            Groups series points in the interval.
            </summary>
            <param name="formula">Grouping formula.</param>
            <param name="interval">Interval size.</param>
            <param name="intervalType">Interval type.</param>
            <param name="inputSeriesName">Comma separated input data series names.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataManipulator.Group(System.String,System.Double,Dundas.Olap.WebUIControls.IntervalType,System.Double,Dundas.Olap.WebUIControls.IntervalType,Dundas.Olap.WebUIControls.Series)">
            <summary>
            Groups series points in the interval with offset.
            </summary>
            <param name="formula">Grouping formula.</param>
            <param name="interval">Interval size.</param>
            <param name="intervalType">Interval type.</param>
            <param name="intervalOffset">Interval offset size.</param>
            <param name="intervalOffsetType">Interval offset type.</param>
            <param name="inputSeries">Input data series.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataManipulator.Group(System.String,System.Double,Dundas.Olap.WebUIControls.IntervalType,System.Double,Dundas.Olap.WebUIControls.IntervalType,System.String)">
            <summary>
            Groups series points in the interval with offset.
            </summary>
            <param name="formula">Grouping formula.</param>
            <param name="interval">Interval size.</param>
            <param name="intervalType">Interval type.</param>
            <param name="intervalOffset">Interval offset size.</param>
            <param name="intervalOffsetType">Interval offset type.</param>
            <param name="inputSeriesName">Comma separated input data series names.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataManipulator.GroupByAxisLabel(System.String,System.String,System.String)">
            <summary>
            Grouping by X value, when it’s a string (stored in AxisLabel property).
            </summary>
            <param name="formula">Grouping formula.</param>
            <param name="inputSeriesName">Comma separated input data series names.</param>
            <param name="outputSeriesName">Comma separated output data series names.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataManipulator.GroupByAxisLabel(System.String,Dundas.Olap.WebUIControls.Series)">
            <summary>
            Grouping by X value, when it’s a string (stored in AxisLabel property).
            </summary>
            <param name="formula">Grouping formula.</param>
            <param name="inputSeries">Input data series.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataManipulator.GroupByAxisLabel(System.String,System.String)">
            <summary>
            Grouping by X value, when it’s a string (stored in AxisLabel property).
            </summary>
            <param name="formula">Grouping formula.</param>
            <param name="inputSeriesName">Comma separated input data series names.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataManipulator.Group(System.String,System.Double,Dundas.Olap.WebUIControls.IntervalType,System.Double,Dundas.Olap.WebUIControls.IntervalType,System.String,System.String)">
            <summary>
            Groups series points in the interval with offset.
            </summary>
            <param name="formula">Grouping formula.</param>
            <param name="interval">Interval size.</param>
            <param name="intervalType">Interval type.</param>
            <param name="intervalOffset">Interval offset size.</param>
            <param name="intervalOffsetType">Interval offset type.</param>
            <param name="inputSeriesName">Comma separated input data series names.</param>
            <param name="outputSeriesName">Comma separated output data series names.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataManipulator.Group(System.String,System.Double,Dundas.Olap.WebUIControls.IntervalType,Dundas.Olap.WebUIControls.Series,Dundas.Olap.WebUIControls.Series)">
            <summary>
            Groups series points in the interval.
            </summary>
            <param name="formula">Grouping formula.</param>
            <param name="interval">Interval size.</param>
            <param name="intervalType">Interval type.</param>
            <param name="inputSeries">Input data series.</param>
            <param name="outputSeries">Output data series.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataManipulator.Group(System.String,System.Double,Dundas.Olap.WebUIControls.IntervalType,System.String,System.String)">
            <summary>
            Groups series points in the interval.
            </summary>
            <param name="formula">Grouping formula.</param>
            <param name="interval">Interval size.</param>
            <param name="intervalType">Interval type.</param>
            <param name="inputSeriesName">Comma separated input data series names.</param>
            <param name="outputSeriesName">Comma separated output data series names.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataManipulator.Group(System.String,System.Double,Dundas.Olap.WebUIControls.IntervalType,System.Double,Dundas.Olap.WebUIControls.IntervalType,Dundas.Olap.WebUIControls.Series,Dundas.Olap.WebUIControls.Series)">
            <summary>
            Groups series points in the interval with offset.
            </summary>
            <param name="formula">Grouping formula.</param>
            <param name="interval">Interval size.</param>
            <param name="intervalType">Interval type.</param>
            <param name="intervalOffset">Interval offset size.</param>
            <param name="intervalOffsetType">Interval offset type.</param>
            <param name="inputSeries">Input data series.</param>
            <param name="outputSeries">Output data series.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataManipulator.GroupByAxisLabel(System.String,Dundas.Olap.WebUIControls.Series,Dundas.Olap.WebUIControls.Series)">
            <summary>
            Grouping by X value, when it is a string (stored in AxisLabel property).
            </summary>
            <param name="formula">Grouping formula.</param>
            <param name="inputSeries">Input data series.</param>
            <param name="outputSeries">Output data series.</param>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.DataManipulator.FilterSetEmptyPoints">
            <summary>
            Indicates that data points are only marked as empty when filtering,
            otherwise they are removed from the series.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.DataManipulator.FilterMatchedPoints">
            <summary>
            Indicates that data points are filtered when they match the criteria,
            otherwise they are filtered when they do not match the criteria.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.DataManipulator.PointElementFilter">
            <summary>
            Data point filter. 
            Filters points using element type and index
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataManipulator.PointElementFilter.#ctor(Dundas.Olap.WebUIControls.DataManipulator,Dundas.Olap.WebUIControls.DateRangeType,System.String)">
            <summary>
            Public constructor.
            </summary>
            <param name="dataManipulator">Data manipulator object.</param>
            <param name="dateRange">Range type.</param>
            <param name="rangeElements">Range elements to filter.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataManipulator.PointElementFilter.FilterDataPoint(Dundas.Olap.WebUIControls.DataPoint,Dundas.Olap.WebUIControls.Series,System.Int32)">
            <summary>
            Data points filtering method.
            </summary>
            <param name="point">Data point.</param>
            <param name="series">Data point series.</param>
            <param name="pointIndex">Data point index.</param>
            <returns>Indicates that point should be filtered.</returns>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.DataManipulator.PointValueFilter">
            <summary>
            Data point filter. 
            Filters points using point values
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataManipulator.PointValueFilter.#ctor">
            <summary>
            Default constructor is not accesiable
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataManipulator.PointValueFilter.#ctor(Dundas.Olap.WebUIControls.DataManipulator,Dundas.Olap.WebUIControls.CompareMethod,System.Double,System.String)">
            <summary>
            Public constructor.
            </summary>
            <param name="dataManipulator">Data manipulator reference.</param>
            <param name="compareMethod">Comaring method.</param>
            <param name="compareValue">Comparing constant.</param>
            <param name="usingValue">Value used in comparison.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataManipulator.PointValueFilter.FilterDataPoint(Dundas.Olap.WebUIControls.DataPoint,Dundas.Olap.WebUIControls.Series,System.Int32)">
            <summary>
            IDataPointFilter interface method implementation
            </summary>
            <param name="point">Data point.</param>
            <param name="series">Data point series.</param>
            <param name="pointIndex">Data point index.</param>
            <returns>Indicates that point should be filtered.</returns>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.DataManipulator.GroupingFunctionInfo">
            <summary>
            Class stores information about the grouping function type and
            index of output value.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataManipulator.GroupingFunctionInfo.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataManipulator.GroupingFunctionInfo.#ctor(Dundas.Olap.WebUIControls.GroupingFunction,System.Int32)">
            <summary>
            Constructor.
            </summary>
            <param name="func">Grouping function.</param>
            <param name="index">Output value index.</param>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.RenderingType">
            <summary>
            Specify Rendering Type
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.RenderingType.Gdi">
            <summary>
            GDI+ Type
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.RenderingType.Svg">
            <summary>
            SVG Type
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.ChartRenderingEngine">
            <summary>
            ChartRenderingEngine class provides a common interface to the 
            graphics rendering and animation engines. Internally it uses 
            SvgChartGraphics, FlashGraphics or GdiGraphics classes depending 
            on the ActiveRenderingType property settings.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartRenderingEngine.shadowDrawingMode">
            <summary>
            Indicates that chart element shadow is drawn.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartRenderingEngine.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartRenderingEngine.DrawLine(System.Drawing.Pen,System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Draws a line connecting two PointF structures.
            </summary>
            <param name="pen">Pen object that determines the color, width, and style of the line.</param>
            <param name="pt1">PointF structure that represents the first point to connect.</param>
            <param name="pt2">PointF structure that represents the second point to connect.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartRenderingEngine.DrawLine(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws a line connecting the two points specified by coordinate pairs.
            </summary>
            <param name="pen">Pen object that determines the color, width, and style of the line.</param>
            <param name="x1">x-coordinate of the first point.</param>
            <param name="y1">y-coordinate of the first point.</param>
            <param name="x2">x-coordinate of the second point.</param>
            <param name="y2">y-coordinate of the second point.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartRenderingEngine.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
            <summary>
            Draws the specified portion of the specified Image object at the specified location and with the specified size.
            </summary>
            <param name="image">Image object to draw.</param>
            <param name="destRect">Rectangle structure that specifies the location and size of the drawn image. The image is scaled to fit the rectangle.</param>
            <param name="srcX">x-coordinate of the upper-left corner of the portion of the source image to draw.</param>
            <param name="srcY">y-coordinate of the upper-left corner of the portion of the source image to draw.</param>
            <param name="srcWidth">Width of the portion of the source image to draw.</param>
            <param name="srcHeight">Height of the portion of the source image to draw.</param>
            <param name="srcUnit">Member of the GraphicsUnit enumeration that specifies the units of measure used to determine the source rectangle.</param>
            <param name="imageAttr">ImageAttributes object that specifies recoloring and gamma information for the image object.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartRenderingEngine.DrawEllipse(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws an ellipse defined by a bounding rectangle specified by 
            a pair of coordinates, a height, and a width.
            </summary>
            <param name="pen">Pen object that determines the color, width, and style of the ellipse.</param>
            <param name="x">x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</param>
            <param name="y">y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</param>
            <param name="width">Width of the bounding rectangle that defines the ellipse.</param>
            <param name="height">Height of the bounding rectangle that defines the ellipse.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartRenderingEngine.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Int32,System.Int32,System.Single)">
            <summary>
            Draws a cardinal spline through a specified array of PointF structures 
            using a specified tension. The drawing begins offset from 
            the beginning of the array.
            </summary>
            <param name="pen">Pen object that determines the color, width, and height of the curve.</param>
            <param name="points">Array of PointF structures that define the spline.</param>
            <param name="offset">Offset from the first element in the array of the points parameter to the starting point in the curve.</param>
            <param name="numberOfSegments">Number of segments after the starting point to include in the curve.</param>
            <param name="tension">Value greater than or equal to 0.0F that specifies the tension of the curve.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartRenderingEngine.DrawRectangle(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws a rectangle specified by a coordinate pair, a width, and a height.
            </summary>
            <param name="pen">Pen object that determines the color, width, and style of the rectangle.</param>
            <param name="x">x-coordinate of the upper-left corner of the rectangle to draw.</param>
            <param name="y">y-coordinate of the upper-left corner of the rectangle to draw.</param>
            <param name="width">Width of the rectangle to draw.</param>
            <param name="height">Height of the rectangle to draw.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartRenderingEngine.DrawPolygon(System.Drawing.Pen,System.Drawing.PointF[])">
            <summary>
            Draws a polygon defined by an array of PointF structures.
            </summary>
            <param name="pen">Pen object that determines the color, width, and style of the polygon.</param>
            <param name="points">Array of PointF structures that represent the vertices of the polygon.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartRenderingEngine.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.RectangleF,System.Drawing.StringFormat)">
            <summary>
            Draws the specified text string in the specified rectangle with the specified Brush and Font objects using the formatting attributes of the specified StringFormat object.
            </summary>
            <param name="s">String to draw.</param>
            <param name="font">Font object that defines the text format of the string.</param>
            <param name="brush">Brush object that determines the color and texture of the drawn text.</param>
            <param name="layoutRectangle">RectangleF structure that specifies the location of the drawn text.</param>
            <param name="format">StringFormat object that specifies formatting attributes, such as line spacing and alignment, that are applied to the drawn text.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartRenderingEngine.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.PointF,System.Drawing.StringFormat)">
            <summary>
            Draws the specified text string at the specified location with the specified Brush and Font objects using the formatting attributes of the specified StringFormat object.
            </summary>
            <param name="s">String to draw.</param>
            <param name="font">Font object that defines the text format of the string.</param>
            <param name="brush">Brush object that determines the color and texture of the drawn text.</param>
            <param name="point">PointF structure that specifies the upper-left corner of the drawn text.</param>
            <param name="format">StringFormat object that specifies formatting attributes, such as line spacing and alignment, that are applied to the drawn text.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartRenderingEngine.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
            <summary>
            Draws the specified portion of the specified Image object at the specified location and with the specified size.
            </summary>
            <param name="image">Image object to draw.</param>
            <param name="destRect">Rectangle structure that specifies the location and size of the drawn image. The image is scaled to fit the rectangle.</param>
            <param name="srcX">x-coordinate of the upper-left corner of the portion of the source image to draw.</param>
            <param name="srcY">y-coordinate of the upper-left corner of the portion of the source image to draw.</param>
            <param name="srcWidth">Width of the portion of the source image to draw.</param>
            <param name="srcHeight">Height of the portion of the source image to draw.</param>
            <param name="srcUnit">Member of the GraphicsUnit enumeration that specifies the units of measure used to determine the source rectangle.</param>
            <param name="imageAttrs">ImageAttributes object that specifies recoloring and gamma information for the image object.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartRenderingEngine.DrawRectangle(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws a rectangle specified by a coordinate pair, a width, and a height.
            </summary>
            <param name="pen">A Pen object that determines the color, width, and style of the rectangle.</param>
            <param name="x">The x-coordinate of the upper-left corner of the rectangle to draw.</param>
            <param name="y">The y-coordinate of the upper-left corner of the rectangle to draw.</param>
            <param name="width">The width of the rectangle to draw.</param>
            <param name="height">The height of the rectangle to draw.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartRenderingEngine.DrawPath(System.Drawing.Pen,System.Drawing.Drawing2D.GraphicsPath)">
            <summary>
            Draws a GraphicsPath object.
            </summary>
            <param name="pen">Pen object that determines the color, width, and style of the path.</param>
            <param name="path">GraphicsPath object to draw.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartRenderingEngine.DrawPie(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws a pie shape defined by an ellipse specified by a coordinate pair, a width, and a height and two radial lines.
            </summary>
            <param name="pen">Pen object that determines the color, width, and style of the pie shape.</param>
            <param name="x">x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie shape comes.</param>
            <param name="y">y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie shape comes.</param>
            <param name="width">Width of the bounding rectangle that defines the ellipse from which the pie shape comes.</param>
            <param name="height">Height of the bounding rectangle that defines the ellipse from which the pie shape comes.</param>
            <param name="startAngle">Angle measured in degrees clockwise from the x-axis to the first side of the pie shape.</param>
            <param name="sweepAngle">Angle measured in degrees clockwise from the startAngle parameter to the second side of the pie shape.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartRenderingEngine.DrawArc(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws an arc representing a portion of an ellipse specified by a pair of coordinates, a width, and a height.
            </summary>
            <param name="pen">Pen object that determines the color, width, and style of the arc.</param>
            <param name="x">x-coordinate of the upper-left corner of the rectangle that defines the ellipse.</param>
            <param name="y">y-coordinate of the upper-left corner of the rectangle that defines the ellipse.</param>
            <param name="width">Width of the rectangle that defines the ellipse.</param>
            <param name="height">Height of the rectangle that defines the ellipse.</param>
            <param name="startAngle">Angle in degrees measured clockwise from the x-axis to the starting point of the arc.</param>
            <param name="sweepAngle">Angle in degrees measured clockwise from the startAngle parameter to ending point of the arc.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartRenderingEngine.DrawImage(System.Drawing.Image,System.Drawing.RectangleF)">
            <summary>
            Draws the specified Image object at the specified location and with the specified size.
            </summary>
            <param name="image">Image object to draw.</param>
            <param name="rect">RectangleF structure that specifies the location and size of the drawn image.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartRenderingEngine.DrawEllipse(System.Drawing.Pen,System.Drawing.RectangleF)">
            <summary>
            Draws an ellipse defined by a bounding RectangleF.
            </summary>
            <param name="pen">Pen object that determines the color, width, and style of the ellipse.</param>
            <param name="rect">RectangleF structure that defines the boundaries of the ellipse.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartRenderingEngine.DrawLines(System.Drawing.Pen,System.Drawing.PointF[])">
            <summary>
            Draws a series of line segments that connect an array of PointF structures.
            </summary>
            <param name="pen">Pen object that determines the color, width, and style of the line segments.</param>
            <param name="points">Array of PointF structures that represent the points to connect.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartRenderingEngine.FillEllipse(System.Drawing.Brush,System.Drawing.RectangleF)">
            <summary>
            Fills the interior of an ellipse defined by a bounding rectangle 
            specified by a RectangleF structure.
            </summary>
            <param name="brush">Brush object that determines the characteristics of the fill.</param>
            <param name="rect">RectangleF structure that represents the bounding rectangle that defines the ellipse.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartRenderingEngine.FillPath(System.Drawing.Brush,System.Drawing.Drawing2D.GraphicsPath)">
            <summary>
            Fills the interior of a GraphicsPath object.
            </summary>
            <param name="brush">Brush object that determines the characteristics of the fill.</param>
            <param name="path">GraphicsPath object that represents the path to fill.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartRenderingEngine.FillRegion(System.Drawing.Brush,System.Drawing.Region)">
            <summary>
            Fills the interior of a Region object.
            </summary>
            <param name="brush">Brush object that determines the characteristics of the fill.</param>
            <param name="region">Region object that represents the area to fill.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartRenderingEngine.FillRectangle(System.Drawing.Brush,System.Drawing.RectangleF)">
            <summary>
            Fills the interior of a rectangle specified by a RectangleF structure.
            </summary>
            <param name="brush">Brush object that determines the characteristics of the fill.</param>
            <param name="rect">RectangleF structure that represents the rectangle to fill.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartRenderingEngine.FillRectangle(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Fills the interior of a rectangle specified by a pair of coordinates, a width, and a height.
            </summary>
            <param name="brush">Brush object that determines the characteristics of the fill.</param>
            <param name="x">x-coordinate of the upper-left corner of the rectangle to fill.</param>
            <param name="y">y-coordinate of the upper-left corner of the rectangle to fill.</param>
            <param name="width">Width of the rectangle to fill.</param>
            <param name="height">Height of the rectangle to fill.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartRenderingEngine.FillPolygon(System.Drawing.Brush,System.Drawing.PointF[])">
            <summary>
            Fills the interior of a polygon defined by an array of points specified by PointF structures .
            </summary>
            <param name="brush">Brush object that determines the characteristics of the fill.</param>
            <param name="points">Array of PointF structures that represent the vertices of the polygon to fill.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartRenderingEngine.FillPie(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Fills the interior of a pie section defined by an ellipse 
            specified by a pair of coordinates, a width, and a height 
            and two radial lines.
            </summary>
            <param name="brush">Brush object that determines the characteristics of the fill.</param>
            <param name="x">x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie section comes.</param>
            <param name="y">y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie section comes.</param>
            <param name="width">Width of the bounding rectangle that defines the ellipse from which the pie section comes.</param>
            <param name="height">Height of the bounding rectangle that defines the ellipse from which the pie section comes.</param>
            <param name="startAngle">Angle in degrees measured clockwise from the x-axis to the first side of the pie section.</param>
            <param name="sweepAngle">Angle in degrees measured clockwise from the startAngle parameter to the second side of the pie section.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartRenderingEngine.Open(System.Xml.XmlTextWriter,System.Drawing.Size,Dundas.Charting.WebControl.Svg.SvgOpenParameters)">
            <summary>
            Open Svg File for writing
            </summary>
            <param name="svgWriter">Output Svg File</param>
            <param name="pictureSize">Size of the picture</param>
            <param name="extraParameters">Structure with extra parameters</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartRenderingEngine.SetGradient(System.Drawing.Color,System.Drawing.Color,Dundas.Olap.WebUIControls.GradientType)">
            <summary>
            This method sets gradient type for SVG rendering
            </summary>
            <param name="firstColor">The first color used for gradient</param>
            <param name="secondColor">The second color used for gradient</param>
            <param name="gradientType">The gradient Type</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartRenderingEngine.Close">
            <summary>
            Close Svg File
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartRenderingEngine.StartHotRegion(System.String,System.String)">
            <summary>
            This method starts SVG Selection mode
            </summary>
            <param name="hRef">The location of the referenced object, expressed as a URI reference.</param>
            <param name="title">Title which could be used for tooltips.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartRenderingEngine.StartHotRegion(Dundas.Olap.WebUIControls.DataPoint)">
            <summary>
            This method starts SVG Selection mode
            </summary>
            <param name="point">Data Point which attributes are used for SVG selection</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartRenderingEngine.StartHotRegion(Dundas.Olap.WebUIControls.DataPoint,System.Boolean)">
            <summary>
            This method starts SVG Selection mode
            </summary>
            <param name="point">Data Point which attributes are used for SVG selection</param>
            <param name="labelRegion">Indicates if point label region is processed.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartRenderingEngine.EndHotRegion">
            <summary>
            This method stops SVG Selection mode
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartRenderingEngine.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF,System.Drawing.StringFormat)">
            <summary>
            Measures the specified string when drawn with the specified 
            Font object and formatted with the specified StringFormat object.
            </summary>
            <param name="text">String to measure.</param>
            <param name="font">Font object defines the text format of the string.</param>
            <param name="layoutArea">SizeF structure that specifies the maximum layout area for the text.</param>
            <param name="stringFormat">StringFormat object that represents formatting information, such as line spacing, for the string.</param>
            <returns>This method returns a SizeF structure that represents the size, in pixels, of the string specified in the text parameter as drawn with the font parameter and the stringFormat parameter.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartRenderingEngine.MeasureString(System.String,System.Drawing.Font)">
            <summary>
            Measures the specified string when drawn with the specified 
            Font object and formatted with the specified StringFormat object.
            </summary>
            <param name="text">String to measure.</param>
            <param name="font">Font object defines the text format of the string.</param>
            <returns>This method returns a SizeF structure that represents the size, in pixels, of the string specified in the text parameter as drawn with the font parameter and the stringFormat parameter.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartRenderingEngine.Save">
            <summary>
            Saves the current state of this Graphics object and identifies the saved state with a GraphicsState object.
            </summary>
            <returns>This method returns a GraphicsState object that represents the saved state of this Graphics object.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartRenderingEngine.Restore(System.Drawing.Drawing2D.GraphicsState)">
            <summary>
            Restores the state of this Graphics object to the state represented by a GraphicsState object.
            </summary>
            <param name="gstate">GraphicsState object that represents the state to which to restore this Graphics object.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartRenderingEngine.ResetClip">
            <summary>
            Resets the clip region of this Graphics object to an infinite region.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartRenderingEngine.SetClip(System.Drawing.RectangleF)">
            <summary>
            Sets the clipping region of this Graphics object to the rectangle specified by a RectangleF structure.
            </summary>
            <param name="rect">RectangleF structure that represents the new clip region.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartRenderingEngine.SetTitle(System.String)">
            <summary>
            Set Title for SCG Document
            </summary>
            <param name="title">Title Text</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartRenderingEngine.SetClip(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.CombineMode)">
            <summary>
            Sets the clipping region of this Graphics object to the result of the 
            specified operation combining the current clip region and the 
            specified GraphicsPath object.
            </summary>
            <param name="path">GraphicsPath object to combine.</param>
            <param name="combineMode">Member of the CombineMode enumeration that specifies the combining operation to use.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartRenderingEngine.TranslateTransform(System.Single,System.Single)">
            <summary>
            Prepends the specified translation to the transformation matrix of this Graphics object.
            </summary>
            <param name="dx">x component of the translation.</param>
            <param name="dy">y component of the translation.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartRenderingEngine.BeginSelection(System.String,System.String)">
            <summary>
            This method starts Selection mode
            </summary>
            <param name="hRef">The location of the referenced object, expressed as a URI reference.</param>
            <param name="title">Title which could be used for tooltips.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartRenderingEngine.EndSelection">
            <summary>
            This method stops Selection mode
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartRenderingEngine.RenderingObject">
            <summary>
            Gets current rendering object.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartRenderingEngine.ActiveRenderingType">
            <summary>
            Gets and sets active rendering type.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartRenderingEngine.TextRenderingHint">
            <summary>
            Gets or sets the rendering mode for text associated with this Graphics object.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartRenderingEngine.Transform">
            <summary>
            Gets or sets the world transformation for this Graphics object.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartRenderingEngine.SmoothingMode">
            <summary>
            Gets or sets the rendering quality for this Graphics object.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartRenderingEngine.Clip">
            <summary>
            Gets or sets a Region object that limits the drawing region of this Graphics object.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartRenderingEngine.IsClipEmpty">
            <summary>
            Gets a value indicating whether the clipping region of this Graphics object is empty.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartRenderingEngine.Graphics">
            <summary>
            Reference to the Graphics object
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.ValueA">
            <summary>
            Class which contains information about animated 
            values: times, values end repeating. 
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ValueA.StartValue">
            <summary>
            Start Value used at the beginning of animation. 
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ValueA.EndValue">
            <summary>
            End Value used at the end of animation. 
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ValueA.StartTime">
            <summary>
            Start time for this animation segment. 
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ValueA.EndTime">
            <summary>
            End time for this animation segment. 
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ValueA.Repeat">
            <summary>
            If true this animation segment should be repeated.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ValueA.RepeatDelay">
            <summary>
            Time between two animation segments.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.ColorA">
            <summary>
            Class which contains information about animated 
            colors: times, values end repeating.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ColorA.StartColor">
            <summary>
            Start Color for animation
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ColorA.EndColor">
            <summary>
            End Color for animation
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ColorA.StartTime">
            <summary>
            Start time for this animation segment. 
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ColorA.EndTime">
            <summary>
            End time for this animation segment. 
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ColorA.Repeat">
            <summary>
            If true this animation segment should be repeated.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ColorA.RepeatDelay">
            <summary>
            Time between two animation segments.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.PointA">
            <summary>
            Class which contains information about animated 
            Point: times, values end repeating. This class 
            uses floating points.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.PointA.ToPointF">
            <summary>
            Convert PointA to PointF
            </summary>
            <returns>RectangleF structure.</returns>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.PointA.X">
            <summary>
            X animated coordinate. 
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.PointA.Y">
            <summary>
            Y animated coordinate. 
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.RectangleA">
            <summary>
            Class which contains information about animated 
            rectangle: times, values end repeating. This class 
            uses floating points.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.RectangleA.ToRectangleF">
            <summary>
            Convert RectangleA to RectangleF
            </summary>
            <returns>RectangleF structure.</returns>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.RectangleA.X">
            <summary>
            X animated coordinate. 
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.RectangleA.Y">
            <summary>
            Y animated coordinate. 
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.RectangleA.Width">
            <summary>
            Animated width of the rectangle. 
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.RectangleA.Height">
            <summary>
            Animated height of the rectangle. 
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.AutoBool">
            <summary>
            Enumerations extends the Boolean time allowing for
            the automatic behaviour option.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.AutoBool.Auto">
            <summary>
            Auto mode
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.AutoBool.True">
            <summary>
            Enabled
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.AutoBool.False">
            <summary>
            Disabled
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.LabelAlignment">
            <summary>
            Data point label alignment.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.LabelAlignment.Top">
            <summary>
            Label aligned on the top of the marker.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.LabelAlignment.Bottom">
            <summary>
            Label aligned on the bottom of the marker.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.LabelAlignment.Right">
            <summary>
            Label aligned on the right of the marker.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.LabelAlignment.Left">
            <summary>
            Label aligned on the left of the marker.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.LabelAlignment.TopLeft">
            <summary>
            Label aligned on the top-left of the marker.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.LabelAlignment.TopRight">
            <summary>
            Label aligned on the top-right of the marker.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.LabelAlignment.BottomLeft">
            <summary>
            Label aligned on the bottom-left of the marker.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.LabelAlignment.BottomRight">
            <summary>
            Label aligned on the bottom-right of the marker.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.LabelAlignment.Center">
            <summary>
            Label aligned in the center of the marker.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.SeriesChartType">
            <summary>
            Series chart type.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.SeriesChartType.Point">
            <summary>
            Point chart type.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.SeriesChartType.FastPoint">
            <summary>
            FastPoint chart type.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.SeriesChartType.Bubble">
            <summary>
            Bubble chart type.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.SeriesChartType.Line">
            <summary>
            Line chart type.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.SeriesChartType.Spline">
            <summary>
            Spline chart type.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.SeriesChartType.StepLine">
            <summary>
            StepLine chart type.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.SeriesChartType.FastLine">
            <summary>
            FastLine chart type.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.SeriesChartType.Bar">
            <summary>
            Bar chart type.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.SeriesChartType.StackedBar">
            <summary>
            Stacked bar chart type.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.SeriesChartType.StackedBar100">
            <summary>
            Hundred percent stacked bar chart type.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.SeriesChartType.Column">
            <summary>
            Column chart type.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.SeriesChartType.StackedColumn">
            <summary>
            Stacked column chart type.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.SeriesChartType.StackedColumn100">
            <summary>
            Hundred percent stacked column chart type.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.SeriesChartType.Area">
            <summary>
            Area chart type.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.SeriesChartType.SplineArea">
            <summary>
            Spline area chart type.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.SeriesChartType.StackedArea">
            <summary>
            Stacked area chart type.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.SeriesChartType.StackedArea100">
            <summary>
            Hundred percent stacked area chart type.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.SeriesChartType.Pie">
            <summary>
            Pie chart type.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.SeriesChartType.Doughnut">
            <summary>
            Doughnut chart type.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.SeriesChartType.Stock">
            <summary>
            Stock chart type.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.SeriesChartType.CandleStick">
            <summary>
            CandleStick chart type.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.SeriesChartType.Range">
            <summary>
            Range chart type.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.SeriesChartType.SplineRange">
            <summary>
            Spline range chart type.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.SeriesChartType.Gantt">
            <summary>
            Gantt chart type.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.SeriesChartType.RangeColumn">
            <summary>
            Range column chart type.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.SeriesChartType.Radar">
            <summary>
            Radar chart type.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.SeriesChartType.Polar">
            <summary>
            Polar chart type.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.SeriesChartType.ErrorBar">
            <summary>
            Error bar chart type.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.SeriesChartType.BoxPlot">
            <summary>
            Box plot chart type.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.SeriesChartType.Renko">
            <summary>
            Renko chart type.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.SeriesChartType.ThreeLineBreak">
            <summary>
            ThreeLineBreak chart type.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.SeriesChartType.Kagi">
            <summary>
            Kagi chart type.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.SeriesChartType.PointAndFigure">
            <summary>
            PointAndFigure chart type.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.SeriesChartType.Funnel">
            <summary>
            Funnel chart type.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.SeriesChartType.Pyramid">
            <summary>
            Pyramid chart type.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.ArrowOrientation">
            <summary>
            Axis Arrow orientation
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ArrowOrientation.Left">
            <summary>
            Arrow direction is Right - Left
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ArrowOrientation.Right">
            <summary>
            Arrow direction is Left - Right
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ArrowOrientation.Top">
            <summary>
            Arrow direction is Bottom - Top
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ArrowOrientation.Bottom">
            <summary>
            Arrow direction is Top - Bottom
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.ChartImageAlign">
            <summary>
            Chart image alignment type.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartImageAlign.TopLeft">
            <summary>
            Image aligned to the top left corner
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartImageAlign.Top">
            <summary>
            Image aligned to the top boundary
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartImageAlign.TopRight">
            <summary>
            Image aligned to the top right corner
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartImageAlign.Right">
            <summary>
            Image aligned to the right boundary
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartImageAlign.BottomRight">
            <summary>
            Image aligned to the bottom right corner
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartImageAlign.Bottom">
            <summary>
            Image aligned to the bottom boundary
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartImageAlign.BottomLeft">
            <summary>
            Image aligned to the bottom left corner
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartImageAlign.Left">
            <summary>
            Image aligned to the left boundary
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartImageAlign.Center">
            <summary>
            Image aligned in the center
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.ChartImageWrapMode">
            <summary>
            Specifies how a texture or gradient is tiled when 
            it is larger than the area being filled
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartImageWrapMode.Scaled">
            <summary>
            Clamps the texture or gradient to the object boundary.
            </summary>		
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartImageWrapMode.Tile">
            <summary>
            Tiles the gradient or texture.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartImageWrapMode.TileFlipX">
            <summary>
            Reverses the texture or gradient horizontally and 
            then tiles the texture or gradient.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartImageWrapMode.TileFlipXY">
            <summary>
            Reverses the texture or gradient horizontally and 
            vertically and then tiles the texture or gradient.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartImageWrapMode.TileFlipY">
            <summary>
            Reverses the texture or gradient vertically and 
            then tiles the texture or gradient.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartImageWrapMode.Unscaled">
            <summary>
            Unscaled
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.AxisEnabled">
            <summary>
            Axis Enabled mode
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.AxisEnabled.Auto">
            <summary>
            Auto mode
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.AxisEnabled.True">
            <summary>
            Always enabled
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.AxisEnabled.False">
            <summary>
            Always disabled
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.DateTimeIntervalType">
            <summary>
            Date Time Interval Type
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.DateTimeIntervalType.Auto">
            <summary>
            Auto Mode
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.DateTimeIntervalType.Number">
            <summary>
            The Interval is Number
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.DateTimeIntervalType.Years">
            <summary>
            The Interval is Year
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.DateTimeIntervalType.Months">
            <summary>
            The Interval is Months
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.DateTimeIntervalType.Weeks">
            <summary>
            The Interval is Weeks
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.DateTimeIntervalType.Days">
            <summary>
            The Interval is Days
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.DateTimeIntervalType.Hours">
            <summary>
            The Interval is Hours
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.DateTimeIntervalType.Minutes">
            <summary>
            The Interval is Minutes
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.DateTimeIntervalType.Seconds">
            <summary>
            The Interval is Seconds
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.DateTimeIntervalType.Milliseconds">
            <summary>
            The Interval is Milliseconds
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.DateTimeIntervalType.NotSet">
            <summary>
            Interval type is not defined.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.ChartValueTypes">
            <summary>
            Chart Value Types
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartValueTypes.Auto">
            <summary>
            Auto value
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartValueTypes.Double">
            <summary>
            Double value
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartValueTypes.Single">
            <summary>
            Single value
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartValueTypes.Int">
            <summary>
            Integer value
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartValueTypes.Long">
            <summary>
            Long value
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartValueTypes.UInt">
            <summary>
            Unsigned integer
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartValueTypes.ULong">
            <summary>
            Unsigned long
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartValueTypes.String">
            <summary>
            String
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartValueTypes.DateTime">
            <summary>
            Date Time
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartValueTypes.Date">
            <summary>
            Date only
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartValueTypes.Time">
            <summary>
            Time only
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.ChartHatchStyle">
            <summary>
            Chart hatching style
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartHatchStyle.None">
            <summary>
            No hatching
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartHatchStyle.BackwardDiagonal">
            <summary>
            BackwardDiagonal
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartHatchStyle.Cross">
            <summary>
            Cross
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartHatchStyle.DarkDownwardDiagonal">
            <summary>
            DarkDownwardDiagonal
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartHatchStyle.DarkHorizontal">
            <summary>
            DarkHorizontal
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartHatchStyle.DarkUpwardDiagonal">
            <summary>
            DarkUpwardDiagonal
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartHatchStyle.DarkVertical">
            <summary>
            DarkVertical
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartHatchStyle.DashedDownwardDiagonal">
            <summary>
            DashedDownwardDiagonal
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartHatchStyle.DashedHorizontal">
            <summary>
            DashedHorizontal
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartHatchStyle.DashedUpwardDiagonal">
            <summary>
            DashedUpwardDiagonal
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartHatchStyle.DashedVertical">
            <summary>
            DashedVertical
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartHatchStyle.DiagonalBrick">
            <summary>
            DiagonalBrick
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartHatchStyle.DiagonalCross">
            <summary>
            DiagonalCross
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartHatchStyle.Divot">
            <summary>
            Divot
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartHatchStyle.DottedDiamond">
            <summary>
            DottedDiamond
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartHatchStyle.DottedGrid">
            <summary>
            DottedGrid
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartHatchStyle.ForwardDiagonal">
            <summary>
            ForwardDiagonal
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartHatchStyle.Horizontal">
            <summary>
            Horizontal
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartHatchStyle.HorizontalBrick">
            <summary>
            HorizontalBrick
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartHatchStyle.LargeCheckerBoard">
            <summary>
            LargeCheckerBoard
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartHatchStyle.LargeConfetti">
            <summary>
            LargeConfetti
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartHatchStyle.LargeGrid">
            <summary>
            LargeGrid
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartHatchStyle.LightDownwardDiagonal">
            <summary>
            LightDownwardDiagonal
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartHatchStyle.LightHorizontal">
            <summary>
            LightHorizontal
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartHatchStyle.LightUpwardDiagonal">
            <summary>
            LightUpwardDiagonal
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartHatchStyle.LightVertical">
            <summary>
            LightVertical
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartHatchStyle.NarrowHorizontal">
            <summary>
            NarrowHorizontal
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartHatchStyle.NarrowVertical">
            <summary>
            NarrowVertical
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartHatchStyle.OutlinedDiamond">
            <summary>
            OutlinedDiamond
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartHatchStyle.Percent05">
            <summary>
            Percent05
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartHatchStyle.Percent10">
            <summary>
            Percent10
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartHatchStyle.Percent20">
            <summary>
            Percent20
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartHatchStyle.Percent25">
            <summary>
            Percent25
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartHatchStyle.Percent30">
            <summary>
            Percent30
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartHatchStyle.Percent40">
            <summary>
            Percent40
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartHatchStyle.Percent50">
            <summary>
            Percent50
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartHatchStyle.Percent60">
            <summary>
            Percent60
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartHatchStyle.Percent70">
            <summary>
            Percent70
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartHatchStyle.Percent75">
            <summary>
            Percent75
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartHatchStyle.Percent80">
            <summary>
            Percent80
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartHatchStyle.Percent90">
            <summary>
            Percent90
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartHatchStyle.Plaid">
            <summary>
            Plaid
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartHatchStyle.Shingle">
            <summary>
            Shingle
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartHatchStyle.SmallCheckerBoard">
            <summary>
            SmallCheckerBoard
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartHatchStyle.SmallConfetti">
            <summary>
            SmallConfetti
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartHatchStyle.SmallGrid">
            <summary>
            SmallGrid
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartHatchStyle.SolidDiamond">
            <summary>
            SolidDiamond
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartHatchStyle.Sphere">
            <summary>
            Sphere
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartHatchStyle.Trellis">
            <summary>
            Trellis
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartHatchStyle.Vertical">
            <summary>
            Vertical
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartHatchStyle.Wave">
            <summary>
            Wave
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartHatchStyle.Weave">
            <summary>
            Weave
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartHatchStyle.WideDownwardDiagonal">
            <summary>
            WideDownwardDiagonal
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartHatchStyle.WideUpwardDiagonal">
            <summary>
            WideUpwardDiagonal
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartHatchStyle.ZigZag">
            <summary>
            ZigZag
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.AntiAlias">
            <summary>
            Anti Alias Mode
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.AntiAlias.On">
            <summary>
            Anti aliasing is enabled
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.AntiAlias.Off">
            <summary>
            Anti aliasing is disabled
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.TextAntiAliasingQuality">
            <summary>
            Text AntiAliasing quality.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.TextAntiAliasingQuality.Normal">
            <summary>
            Normal antialiasing quality.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.TextAntiAliasingQuality.High">
            <summary>
            High antialiasing quality.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.TextAntiAliasingQuality.SystemDefault">
            <summary>
            System default antialiasing quality.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.AntiAliasing">
            <summary>
            Anti Aliasing flags
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.AntiAliasing.None">
            <summary>
            No anti aliasing.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.AntiAliasing.Text">
            <summary>
            Use anti aliasing when drawing text.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.AntiAliasing.Graphics">
            <summary>
            Use anti aliasing when drawing grahics primitives (lines, rectangle, ...)
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.AntiAliasing.All">
            <summary>
            Anti alias everything.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.MarkerStyle">
            <summary>
            Marker Style
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.MarkerStyle.None">
            <summary>
            Marker disabled
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.MarkerStyle.Square">
            <summary>
            The marker style is Square
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.MarkerStyle.Circle">
            <summary>
            The marker style is Circle
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.MarkerStyle.Diamond">
            <summary>
            The marker style is Diamond
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.MarkerStyle.Triangle">
            <summary>
            The marker style is Triangle
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.MarkerStyle.Cross">
            <summary>
            The marker style is Cross
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.MarkerStyle.Star4">
            <summary>
            The marker style is 4 corner star
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.MarkerStyle.Star5">
            <summary>
            The marker style is 5 corner star
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.MarkerStyle.Star6">
            <summary>
            The marker style is 6 corner star
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.MarkerStyle.Star10">
            <summary>
            The marker style is 10 corner star
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.GradientType">
            <summary>
            Gradient Types
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.GradientType.None">
            <summary>
            Disabled
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.GradientType.LeftRight">
            <summary>
            Specifies a gradient from Left to Right.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.GradientType.TopBottom">
            <summary>
            Specifies a gradient from Top to Bottom.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.GradientType.Center">
            <summary>
            Specifies a gradient from Center.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.GradientType.DiagonalLeft">
            <summary>
            Specifies a gradient from Top Left to Bottom Right.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.GradientType.DiagonalRight">
            <summary>
            Specifies a gradient from Top Right to Bottom Left.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.GradientType.HorizontalCenter">
            <summary>
            Specifies a gradient from Center to Left and Right.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.GradientType.VerticalCenter">
            <summary>
            Specifies a gradient from Center to Top and Bottom.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.AreaAlignOrientation">
            <summary>
            Chart areas aligment orientation.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.AreaAlignOrientation.None">
            <summary>
            No alignment.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.AreaAlignOrientation.Vertical">
            <summary>
            Vertical alignment.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.AreaAlignOrientation.Horizontal">
            <summary>
            Horizontal alignment.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.AreaAlignOrientation.All">
            <summary>
            Horizontal and vertical alignment.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.AreaAlignType">
            <summary>
            Chart areas aligment orientation.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.AreaAlignType.None">
            <summary>
            No alignment.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.AreaAlignType.Position">
            <summary>
            Align areas position.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.AreaAlignType.PlotPosition">
            <summary>
            Align areas inner plot position.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.AreaAlignType.Cursor">
            <summary>
            Cursor and Selection alignment.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.AreaAlignType.AxesView">
            <summary>
            Align axes views of the chart areas.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.AreaAlignType.All">
            <summary>
            Complete alignment.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.ChartArea">
            <summary>
            This class is used to create and display a chart 
            area on the chart picture. The chart area is rectangle 
            area on the chart picture, which has 4 axes, 
            horizontal and vertical grids and different or 
            same chart types. A Chart area can contain more 
            than one different chart type.
            
            ChartArea class expose all the properties and methods
            of its base ChartArea3D class.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.ChartArea3D">
            <summary>
            ChartArea3D class represents 3D chart area. It contains all the 3D 
            scene settings and methods for drawing the 3D plotting area calculating 
            the depth of chart elements and others.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartArea3D.#ctor">
            <summary>
            Public constructor
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartArea3D.reverseSeriesOrder">
            <summary>
            Indicates that series order should be reversed to simulate Y axis rotation.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartArea3D.oldReverseX">
            <summary>
            Old X axis reverse flag
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartArea3D.oldReverseY">
            <summary>
            Old Y axis reverse flag
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartArea3D.oldYAngle">
            <summary>
            Old Y axis rotation angle
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartArea3D.seriesDrawingOrder">
            <summary>
            Drawing order of series
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartArea3D.stackGroupNames">
            <summary>
            List of all stack group names
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartArea3D.seriesClusters">
            <summary>
            This list contains an arry of series names for each 3D cluster
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartArea3D.TransformPoints(Dundas.Olap.WebUIControls.Point3D[])">
            <summary>
            Apply 3D transformations on the array of 3D Points. 
            </summary>
            <param name="points">3D Points array.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartArea3D.DrawArea3DScene(Dundas.Olap.WebUIControls.ChartGraphics,System.Drawing.RectangleF)">
            <summary>
            Draws chart area 3D scene, which consists of 3 or 2 walls.
            </summary>
            <param name="graph">Chart graphics object.</param>
            <param name="position">Chart area 2D position.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartArea3D.IsBottomSceneWallVisible">
            <summary>
            Helper method which return True if bottom wall of the 
            chart area scene is visible.
            </summary>
            <returns>True if bottom wall is visible.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartArea3D.IsMainSceneWallOnFront">
            <summary>
            Helper method which return True if main wall of the 
            chart area scene is displated on the front side.
            </summary>
            <returns>True if front wall is visible.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartArea3D.IsSideSceneWallOnLeft">
            <summary>
            Helper method which return True if side wall of the 
            chart area scene is displated on the left side.
            </summary>
            <returns>True if bottom wall is visible.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartArea3D.GetSeriesZPosition(Dundas.Olap.WebUIControls.Series)">
            <summary>
            Calculates the Z position of specified series center.
            </summary>
            <param name="series">Series object.</param>
            <returns>Returns series Z position (center).</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartArea3D.GetSeriesDepth(Dundas.Olap.WebUIControls.Series)">
            <summary>
            Calculates the depth of specified series.
            </summary>
            <param name="series">Series object.</param>
            <returns>Returns series depth.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartArea3D.GetArea3DSceneDepth">
            <summary>
            Calculates area 3D scene depth depending on the number of clustered 
            series and interval between points.
            </summary>
            <returns>Returns the depth of the chart area scene.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartArea3D.GetSeriesZPositionAndDepth(Dundas.Olap.WebUIControls.Series,System.Single@,System.Single@)">
            <summary>
            Calculates the depth and Z position for specified series.
            </summary>
            <param name="series">Series object.</param>
            <param name="depth">Returns series depth.</param>
            <param name="positionZ">Returns series Z position.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartArea3D.GetNumberOfClusters">
            <summary>
            Returns number of clusters on the Z axis.
            </summary>
            <returns>Number of clusters on the Z axis.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartArea3D.GetSeriesClusterIndex(Dundas.Olap.WebUIControls.Series)">
            <summary>
            Get series cluster index.
            </summary>
            <param name="series">Series object.</param>
            <returns>Series cluster index.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartArea3D.GetEstimatedSceneDepth">
            <summary>
            This method is used to calculate estimated scene 
            depth. Regular scene depth method can not be used 
            because Plot area position is zero. Instead, Chart 
            area position is used to find depth of the scene. 
            Algorithm which draws axis labels will decide what 
            should be size and position of plotting area.
            </summary>
            <returns>Returns estimated scene depth</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartArea3D.Estimate3DInterval(Dundas.Olap.WebUIControls.ChartGraphics)">
            <summary>
            Estimate Interval for 3D Charts. When scene is rotated the 
            number of labels should be changed.
            </summary>
            <param name="graph">Chart graphics object.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartArea3D.GetRealYAngle">
            <summary>
            Calculates real Y angle from Y angle and reverseSeriesOrder field
            </summary>
            <returns>Real Y angle</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartArea3D.ShouldDrawOnSurface(Dundas.Olap.WebUIControls.SurfaceName,System.Boolean,System.Boolean)">
            <summary>
            Check if surface element should be drawn on the Back or Front layer.
            </summary>
            <param name="surfaceName">Surface name.</param>
            <param name="backLayer">Back/front layer.</param>
            <param name="onEdge">Indicates that element is on the edje (drawn on the back layer).</param>
            <returns>True if element should be drawn.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartArea3D.DrawPointsInReverseOrder">
            <summary>
            Indicates that data points in all series of this 
            chart area should be drawn in reverse order.
            </summary>
            <returns>True if series points should be drawn in reverse order.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartArea3D.DrawPointsToCenter(Dundas.Olap.WebUIControls.COPCoordinates@)">
            <summary>
            Checks if points should be drawn from sides to center.
            </summary>
            <param name="coord">Which coordinate of COP (X, Y or Z) to test for surface everlapping.</param>
            <returns>True if points should be drawn from sides to center.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartArea3D.DrawSeriesToCenter">
            <summary>
            Checks if series should be drawn from sides to center.
            </summary>
            <returns>True if series should be drawn from sides to center.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartArea3D.PaintChartSeries3D(Dundas.Olap.WebUIControls.ChartGraphics)">
            <summary>
            Draws 3D series in the chart area.
            </summary>
            <param name="graph">Chart graphics object.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartArea3D.GetClusterSeriesNames(System.String)">
            <summary>
            Gets a list of series names that belong to the same 3D cluster.
            </summary>
            <param name="seriesName">One of the series names that belongs to the cluster.</param>
            <returns>List of all series names that belong to the same cluster as specified series.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartArea3D.GetSeriesDrawingOrder(System.Boolean)">
            <summary>
            Gets the series list in drawing order.
            </summary>
            <param name="reverseSeriesOrder">Series order shoud be reversed because of the Y axis angle.</param>
            <returns>Gets the series list in drawing order.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartArea3D.GetNumberOfStackGroups(System.Collections.ArrayList)">
            <summary>
            Gets number of stack groups in specified array of series names.
            </summary>
            <param name="seriesNamesList">Array of series names.</param>
            <returns>Number of stack groups. One by default.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartArea3D.GetSeriesStackGroupIndex(Dundas.Olap.WebUIControls.Series,System.String@)">
            <summary>
            Gets index of the series stack group.
            </summary>
            <param name="series">Series to get the index for.</param>
            <param name="stackGroupName">Group name this series belongs to.</param>
            <returns>Index of series stack group.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartArea3D.GetDataPointDrawingOrder(System.Collections.ArrayList,Dundas.Charting.WebControl.ChartTypes.IChartType,System.Boolean,Dundas.Olap.WebUIControls.COPCoordinates,System.Collections.IComparer,System.Int32,System.Boolean)">
            <summary>
            Determine the order of points drawing from one or several series of the same type.
            </summary>
            <param name="seriesNamesList">List of series names.</param>
            <param name="chartType">Chart type.</param>
            <param name="selection">If True selection mode is active (points order should be reversed).</param>
            <param name="coord">Which coordinate of COP (X, Y or Z) to test for surface everlapping.</param>
            <param name="comparer">Points comparer class. Can be Null.</param>
            <param name="mainYValueIndex">Index of the main Y value.</param>
            <param name="sideBySide">Series should be drawn side by side.</param>
            <returns>Array list of points in drawing order.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartArea3D.GetCenterOfProjection(Dundas.Olap.WebUIControls.COPCoordinates)">
            <summary>
            Returns one or many (X, Y, Z) coordinates of the center of projection.
            </summary>
            <param name="coord">Defines coordinates to return.</param>
            <returns>Center of projection. Value can be set to float.NaN if not defined or outside plotting area.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartArea3D.CheckSurfaceOrientation(Dundas.Olap.WebUIControls.COPCoordinates,Dundas.Olap.WebUIControls.Point3D,Dundas.Olap.WebUIControls.Point3D,System.Boolean@,System.Boolean@,System.Boolean@)">
            <summary>
            Checks orientations of two normal surfaces for each coordinate X, Y and Z.
            </summary>
            <param name="coord">Defines coordinates to return.</param>
            <param name="point1">First point.</param>
            <param name="point2">Second point.</param>
            <param name="xSameOrientation">X surfaces orientation is the same.</param>
            <param name="ySameOrientation">Y surfaces orientation is the same.</param>
            <param name="zSameOrientation">Z surfaces orientation is the same.</param>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartArea3D.Area3DStyle">
            <summary>
            Chart area 3D style.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.ChartArea3D.PointsDrawingOrderComparer">
            <summary>
            Used to compare points in array and sort them by drawing order.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartArea3D.PointsDrawingOrderComparer.area">
            <summary>
            Chart area object reference.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartArea3D.PointsDrawingOrderComparer.areaProjectionCenter">
            <summary>
            Area X position where visible sides are switched.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartArea3D.PointsDrawingOrderComparer.selection">
            <summary>
            Selection mode. Points order should be reversed.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartArea3D.PointsDrawingOrderComparer.#ctor(Dundas.Olap.WebUIControls.ChartArea,System.Boolean,Dundas.Olap.WebUIControls.COPCoordinates)">
            <summary>
            Public constructor.
            </summary>
            <param name="area">Chart area.</param>
            <param name="selection">Selection indicator.</param>
            <param name="coord">Which coordinate of COP (X, Y or Z) to test for surface everlapping.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartArea3D.PointsDrawingOrderComparer.Compare(System.Object,System.Object)">
            <summary>
            Comarer method.
            </summary>
            <param name="o1">First object.</param>
            <param name="o2">Second object.</param>
            <returns>Comparison result.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartArea.ShouldSerializeAxes">
            <summary>
            Avoid serialization of the axes array
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartArea.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartArea.Invalidate(System.Boolean)">
            <summary>
            Invalidate chart (or just chart area ) when collection is changed
            </summary>
            <param name="invalidateAreaOnly">Indicates that only chart area must be invalidated.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartArea.Restore3DAnglesAndReverseMode">
            <summary>
            Restores series order and X axis reverse mode for the 3D charts.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartArea.Set3DAnglesAndReverseMode">
            <summary>
            Sets series order and X axis reverse mode for the 3D charts.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartArea.SetTempValues">
            <summary>
            Save all automatic values like Minimum and Maximum.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartArea.GetTempValues">
            <summary>
            Load all automatic values like Minimum and Maximum with original values.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartArea.Initialize">
            <summary>
            Initialize Chart area and axes
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartArea.ResetMinMaxFromData">
            <summary>
            Minimum and maximum do not have to be calculated 
            from data series every time. It is very time 
            consuming. Minimum and maximum are buffered 
            and only when this flags are set Minimum and 
            Maximum are refreshed from data.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartArea.ReCalc">
            <summary>
            Recalculates the chart area axes scale.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartArea.ReCalcInternal">
            <summary>
            Recalculate the chart area
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartArea.ResetAutoValues">
            <summary>
            Reset auto calculated chart area values.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartArea.GetBackgroundPosition(System.Boolean)">
            <summary>
            Calculates Position for the background.
            </summary>
            <param name="withScrollBars">Calculate with scroll bars</param>
            <returns>Background rectangle</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartArea.SetCommon(Dundas.Olap.WebUIControls.CommonElements)">
            <summary>
            Set common elements for chart area and axes.
            </summary>
            <param name="common">Common Elements</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartArea.Resize(Dundas.Olap.WebUIControls.ChartGraphics)">
            <summary>
            Call when the chart area is resized.
            </summary>
            <param name="chartGraph">Chart graphics object.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartArea.FindAxis(Dundas.Olap.WebUIControls.AxisPosition)">
            <summary>
            Finds axi by it's position. Can be Null.
            </summary>
            <param name="axisPosition">Axis position to find</param>
            <returns>Found axis.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartArea.PreventTopBottomAxesLabelsOverlapping(Dundas.Olap.WebUIControls.Axis)">
            <summary>
            Shift top/bottom labels so they will not overlap with left/right labels.
            </summary>
            <param name="axis">Axis to shift up/down.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartArea.GetHAxis(Dundas.Olap.WebUIControls.Series)">
            <summary>
            Returns horizontal axis
            </summary>
            <param name="series">series</param>
            <returns>Axis instance</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartArea.GetVAxis(Dundas.Olap.WebUIControls.Series)">
            <summary>
            Returns horizontal axis for given series
            </summary>
            <param name="series"></param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartArea.GetMultWidth(System.Double,System.Int32)">
            <summary>
            Returns width 
            </summary>
            <param name="width"></param>
            <param name="seriesNum"></param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartArea.GetNonStackedWidth(System.Double,System.Int32)">
            <summary>
            Returns width change for non-stacked columns/bars
            </summary>
            <param name="width">width value</param>
            <param name="seriesNum">number of series</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartArea.GetStackedWidth(System.Double,System.Int32)">
            <summary>
            Returns width for stacked bar/column
            </summary>
            <param name="width">widht value</param>
            <param name="seriesNum">series number</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartArea.PaintAreaBack(Dundas.Olap.WebUIControls.ChartGraphics,System.Drawing.RectangleF,System.Boolean)">
            <summary>
            Draws chart area background and/or border.
            </summary>
            <param name="graph">Chart graphics.</param>
            <param name="position">Background position.</param>
            <param name="borderOnly">Draws chart area border only.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartArea.Paint(Dundas.Olap.WebUIControls.ChartGraphics)">
            <summary>
            Paint the chart area.
            </summary>
            <param name="graph">Chart graphics.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartArea.IsBorderOnTopSeries">
            <summary>
            Checks if chart area border should be drawn on top of series.
            </summary>
            <returns>True if border should be darwn on top.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartArea.PaintCursors(Dundas.Olap.WebUIControls.ChartGraphics,System.Boolean)">
            <summary>
            Paint the chart area cursors.
            </summary>
            <param name="graph">Chart graphics.</param>
            <param name="cursorOnly">Indicates that only cursors are redrawn.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartArea.GetCircularChartType">
            <summary>
            Gets a curcular chart type interface that belongs to this chart area.
            </summary>
            <returns>ICircularChartType interface or null.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartArea.FitCircularLabels(Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.ElementPosition,System.Drawing.RectangleF@,System.Single,System.Single)">
            <summary>
            Calculate size of the circular axis labels and sets auto-fit font.
            </summary>
            <param name="chartGraph">Chart graphics object.</param>
            <param name="chartAreaPosition">The Chart area position.</param>
            <param name="plotArea">Plotting area size.</param>
            <param name="xTitleSize">Size of title on the axis.</param>
            <param name="yTitleSize">Size of title on the axis.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartArea.GetCircularLabelsSize(Dundas.Olap.WebUIControls.ChartGraphics,System.Drawing.RectangleF,System.Drawing.RectangleF,System.Drawing.SizeF)">
            <summary>
            Calculate size of the circular axis labels.
            </summary>
            <param name="chartGraph">Chart graphics object.</param>
            <param name="areaRectAbs">The Chart area position.</param>
            <param name="plotAreaRectAbs">Plotting area size.</param>
            <param name="titleSize">Size of title on the axes.</param>
            <returns>Circulat labels style.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartArea.GetCircularAxisLabelsStyle">
            <summary>
            Gets circular area axis labels style.
            </summary>
            <returns>Axis labels style.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartArea.GetCircularSectorNumber">
            <summary>
            Gets number of sectors in the circular chart area.
            </summary>
            <returns>Number of sectors.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartArea.GetCircularAxisList">
            <summary>
            Fills a list of circular axis.
            </summary>
            <returns>Axes list.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartArea.CircularPositionToAngle(System.Double)">
            <summary>
            Converts circular position of the X axis to angle in degrees.
            </summary>
            <param name="position">X axis position.</param>
            <returns>Angle in degrees.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartArea.ResetRoseInnerRadius">
            <summary>
            
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartArea.GetChartTypesAndSeriesToDraw">
            <summary>
            Helper method that returns a list of 'ChartTypeAndSeriesInfo' objects.
            This list is used for chart area series drawing in 2D mode. Each
            object may represent an individual series or all series that belong
            to one chart type.
            
            This method is intended to fix issues #6443 and #5385 when area chart 
            type incorrectly overlaps point or line chart type.
            </summary>
            <returns>List of 'ChartTypeAndSeriesInfo' objects.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartArea.GetBottomPoint(Dundas.Olap.WebUIControls.ChartGraphics,System.Int32)">
            <summary>
            Calc bottom point coordinates
            </summary>
            <param name="graph"></param>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartArea.GetBottomPoint(System.Drawing.PointF)">
            <summary>
            Returns first point for rose sector
            </summary>
            <param name="point"></param>
            <returns></returns>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartArea.CursorX">
            <summary>
            Chart area X axis cursor and range selection.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartArea.CursorY">
            <summary>
            Chart area Y axis cursor and range selection.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartArea.Visible">
            <summary>
            Gets or sets a flag that specifies whether the chart area is visible.
            </summary>
            <remarks>
            When set to false all series, legends, titles and annotation objects 
            associated with the chart area will also be hidden.
            </remarks>
            <value>
            <b>True</b> if the chart area is visible, <b>false</b> otherwise.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartArea.AlignWithChartArea">
            <summary>
            Name of the chart area which is used for alignment.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartArea.AlignOrientation">
            <summary>
            Chart areas alignment orientation.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartArea.AlignType">
            <summary>
            Chart areas alignment type.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartArea.Axes">
            <summary>
            Reference to the Axes
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartArea.AxisY">
            <summary>
            Reference to the Primary Y Axis
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartArea.AxisX">
            <summary>
            Reference to the Primary X axis
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartArea.AxisX2">
            <summary>
            Reference to the Secondary X axis
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartArea.AxisY2">
            <summary>
            Reference to the Secondary Y axis
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartArea.Position">
            <summary>
            Chart area position
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartArea.InnerPlotPosition">
            <summary>
            Chart area position
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartArea.BackColor">
            <summary>
            Chart area Background color
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartArea.BackHatchStyle">
            <summary>
            Chart area Background Hatch Style
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartArea.BackImage">
            <summary>
            Chart area background image
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartArea.BackImageMode">
            <summary>
            Chart area background image drawing mode.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartArea.BackImageTranspColor">
            <summary>
            Background image transparent color.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartArea.BackImageAlign">
            <summary>
            Background image alignment used by ClampUnscale drawing mode.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartArea.BackGradientType">
            <summary>
            Chart area Background Gradient Type
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartArea.BackGradientEndColor">
            <summary>
            The second color which is used for a gradient
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartArea.ShadowColor">
            <summary>
            The color of the shadow. Use alpha value for real shadow
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartArea.ShadowOffset">
            <summary>
            The distance between the chart area 
            and a shadow of the chart area
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartArea.BorderColor">
            <summary>
            The border line color
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartArea.BorderWidth">
            <summary>
            The width of the border line
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartArea.BorderStyle">
            <summary>
            The style of the border line
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartArea.Name">
            <summary>
            The name of the chart area
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartArea.EquallySizedAxesFont">
            <summary>
            Indicates that same auto-fit font size will be used for all axes labels.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartArea.CircularUsePolygons">
            <summary>
            True if polygons should be used instead of the circles for the chart area.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartArea.CircularSectorsNumber">
            <summary>
            Number of sectors in the circular area.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartArea.RoseInnerRadius">
            <summary>
            Returns rose inner radius in relative coordinates
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.ChartArea.GetWidth">
            <summary>
            Calc wth width depending on chart type
            </summary>
            <param name="width">width value</param>
            <param name="numberOfSeries">number of series</param>
            <returns></returns>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.ChartArea.GetBaseAxis">
            <summary>
            Get axis for chart type
            </summary>
            <param name="series">series</param>
            <returns>base axis for given series</returns>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.ChartArea.ChartTypeAndSeriesInfo">
            <summary>
            Internal data structure that stores chart type name and optionally series object.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartArea.ChartTypeAndSeriesInfo.#ctor">
            <summary>
            Object constructor.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartArea.ChartTypeAndSeriesInfo.#ctor(System.String)">
            <summary>
            Object constructor.
            </summary>
            <param name="chartType">Chart type name to initialize with.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartArea.ChartTypeAndSeriesInfo.#ctor(Dundas.Olap.WebUIControls.Series)">
            <summary>
            Object constructor.
            </summary>
            <param name="series">Series to initialize with.</param>
        </member>
        <member name="T:Dundas.Charting.WebControl.Formulas.FinancialMarkers">
            <summary>
            Draws financial markers as Fibonacci arcs, fans, etc.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Formulas.FinancialMarkers.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Formulas.FinancialMarkers.DrawMarkers(Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.ChartPicture,Dundas.Olap.WebUIControls.FinancialMarkerType,Dundas.Olap.WebUIControls.Series,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Color,System.Int32,Dundas.Olap.WebUIControls.ChartDashStyle,System.Drawing.Color,System.Drawing.Font)">
            <summary>
            Draw financial markers
            </summary>
            <param name="graph">Chart graphics object</param>
            <param name="chart">Chart picture object</param>
            <param name="markerName">Name of a Financial Marker</param>
            <param name="series">Input data series</param>
            <param name="firstPoint">First Data Point used for markers</param>
            <param name="firstYValue">Index of y value from first data point used for Financial markers</param>
            <param name="secondPoint">Second Data Point used for markers</param>
            <param name="secondYValue">Index of y value from second data point used for Financial markers</param>
            <param name="lineColor">Color of lines</param>
            <param name="lineWidth">The width of lines</param>
            <param name="lineStyle">Line style.</param>
            <param name="textColor">Color of text</param>
            <param name="textFont">Text font</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Formulas.FinancialMarkers.FibonacciArcs(Dundas.Olap.WebUIControls.ChartGraphics,System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Fibonnaci Arcs are displayed using trend line between two data 
            points, example, a trough and opposing peak. Three arcs are then 
            drawn, centered on the second extreme point, so they intersect 
            the trend line at the Fibonacci levels of 38.2%, 50% and 61.8%.
            </summary>
            <param name="graph">Reference to the chart graphics object</param>
            <param name="firstPoint">First Data Point</param>
            <param name="secondPoint">Second data point</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Formulas.FinancialMarkers.FibonacciFans(Dundas.Olap.WebUIControls.ChartGraphics,System.Drawing.PointF,System.Drawing.PointF,Dundas.Olap.WebUIControls.ChartArea)">
            <summary>
            Fibonacci Fan Lines are displayed by drawing a trendline between 
            two extreme points, for example, a trough and opposing peak. Then 
            an "invisible" vertical line is drawn through the second extreme point. 
            Three trendlines are then drawn from the first extreme point so they pass 
            through the invisible vertical line at the Fibonacci levels of 38.2%, 
            50.0%, and 61.8%..
            </summary>
            <param name="graph">Graphics object</param>
            <param name="firstPoint">First Data Point</param>
            <param name="secondPoint">Second Data Point</param>
            <param name="area">Chart Area</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Formulas.FinancialMarkers.SpeedResistanceLines(Dundas.Olap.WebUIControls.ChartGraphics,System.Drawing.PointF,System.Drawing.PointF,Dundas.Olap.WebUIControls.ChartArea)">
            <summary>
            Speed Resistance Lines ("SRL"), sometimes called 1/3-2/3 lines, 
            are a series of trendlines that divide a price move into three 
            equal sections. They are similar in construction and 
            interpretation to Fibonacci Fan Lines.
            </summary>
            <param name="graph">Graphics object</param>
            <param name="firstPoint">First Data Point</param>
            <param name="secondPoint">Second Data Point</param>
            <param name="area">Chart Area</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Formulas.FinancialMarkers.FibonacciRetracements(Dundas.Olap.WebUIControls.ChartGraphics,System.Drawing.PointF,System.Drawing.PointF,Dundas.Olap.WebUIControls.ChartArea)">
            <summary>
            Fibonacci Retracements are displayed by first drawing 
            a trendline between two extreme points, for example, 
            a trough and opposing peak. A series of nine horizontal 
            lines are drawn intersecting the trendline at the Fibonacci 
            levels of 0.0%, 23.6%, 38.2%, 50%, 61.8%, 100%, 161.8%, 261.8%, and 423.6%. 
            (Some of the lines will probably not be visable because they will 
            be off the scale.)
            </summary>
            <param name="graph">Chart Graphics Object</param>
            <param name="firstPoint">First Data Point</param>
            <param name="secondPoint">Second Data Point</param>
            <param name="area">Chart Area Position</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Formulas.FinancialMarkers.QuadrantLines(Dundas.Olap.WebUIControls.ChartGraphics,System.Drawing.PointF,System.Drawing.PointF,Dundas.Olap.WebUIControls.ChartArea)">
            <summary>
            Quadrant Lines are a series of horizontal lines that 
            divide the highest and lowest values (usually prices) 
            into four equal sections. Quadrant Lines are primarily 
            intended to aid in the visual inspection of price 
            movements. They help you see the highest, lowest, and 
            average price during a specified period.
            </summary>
            <param name="graph">Chart Graphics Object</param>
            <param name="firstPoint">First Data Point</param>
            <param name="secondPoint">Second Data Point</param>
            <param name="area">Chart Area</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Formulas.FinancialMarkers.TrendLine(Dundas.Olap.WebUIControls.ChartGraphics,System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            This method draws trend line
            </summary>
            <param name="graph">Chart Graphics object</param>
            <param name="firstPoint">First data point</param>
            <param name="secondPoint">Second Data Point</param>
        </member>
        <member name="T:Dundas.Charting.WebControl.Design.CustomAttributeTypeConverter">
            <summary>
            Custom attributes object type converter.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.CustomAttributeTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Overrides the CanConvertFrom method of TypeConverter.
            </summary>
            <param name="context">Descriptor context.</param>
            <param name="sourceType">Convertion source type.</param>
            <returns>Indicates if convertion is possible.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.CustomAttributeTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Overrides the CanConvertTo method of TypeConverter.
            </summary>
            <param name="context">Descriptor context.</param>
            <param name="destinationType">Destination type.</param>
            <returns>Indicates if convertion is possible.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.CustomAttributeTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Overrides the ConvertTo method of TypeConverter.
            </summary>
            <param name="context">Descriptor context.</param>
            <param name="culture">Culture information.</param>
            <param name="value">Value to convert.</param>
            <param name="destinationType">Convertion destination type.</param>
            <returns>Converted object.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.CustomAttributeTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Overrides the ConvertFrom method of TypeConverter.
            Converts from string with comma separated values.
            </summary>
            <param name="context">Descriptor context.</param>
            <param name="culture">Culture information.</param>
            <param name="value">Value to convert from.</param>
            <returns>Indicates if convertion is possible.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.CustomAttributeTypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Returns whether this object supports properties.
            </summary>
            <param name="context">An ITypeDescriptorContext that provides a format context.</param>
            <returns>true if GetProperties should be called to find the properties of this object; otherwise, false.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.CustomAttributeTypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>
            Returns a collection of properties for the type of array specified by the value parameter,
            using the specified context and attributes.
            </summary>
            <param name="context">An ITypeDescriptorContext that provides a format context.</param>
            <param name="obj">An Object that specifies the type of array for which to get properties.</param>
            <param name="attributes">An array of type Attribute that is used as a filter.</param>
            <returns>A PropertyDescriptorCollection with the properties that are exposed for this data type, or a null reference (Nothing in Visual Basic) if there are no properties.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.CustomAttributeTypeConverter.IsApplicableCustomAttribute(Dundas.Charting.WebControl.Utilities.CustomAttributeInfo,System.Object)">
            <summary>
            Checks if provided custom attribute appies to the selected points or series.
            </summary>
            <param name="attrInfo">Custom attribute information.</param>
            <param name="obj">Selected series or points.</param>
            <returns>True if custom attribute applies.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.CustomAttributeTypeConverter.IsDataPoint(System.Object)">
            <summary>
            Checks if specified object represent a single or array of data points.
            </summary>
            <param name="obj">Object to test.</param>
            <returns>True if specified object contains one or more data points.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.CustomAttributeTypeConverter.Is3DChartType(System.Object)">
            <summary>
            Checks if specified object represent a single or array of data points.
            </summary>
            <param name="obj">Object to test.</param>
            <returns>True if specified object contains one or more data points.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.CustomAttributeTypeConverter.GetSelectedSeries(System.Object)">
            <summary>
            Get array of selected series.
            </summary>
            <param name="obj">Selected objects.</param>
            <returns>Selected series array.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.CustomAttributeTypeConverter.GetSelectedChartTypes(System.Object)">
            <summary>
            Get array of chart types from the selected series.
            </summary>
            <param name="obj">Selected series or data points.</param>
            <returns>Array of selected chart types.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.CustomAttributeTypeConverter.GetPropertyAttributes(Dundas.Charting.WebControl.Utilities.CustomAttributeInfo)">
            <summary>
            Gets array of attributes for the dynamic property.
            </summary>
            <param name="attrInfo">Custom attribute information.</param>
            <returns>Array of attributes.</returns>
        </member>
        <member name="T:Dundas.Charting.WebControl.Design.CustomAttributeTypeConverter.CustomAttributesPropertyDescriptor">
            <summary>
            Custom attributes inner property descriptor class.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.CustomAttributeTypeConverter.CustomAttributesPropertyDescriptor.#ctor(System.Type,System.String,System.Type,System.Attribute[],Dundas.Charting.WebControl.Utilities.CustomAttributeInfo)">
            <summary>
            Property descriptor constructor.
            </summary>
            <param name="componentType">Component type.</param>
            <param name="name">Property name.</param>
            <param name="propertyType">Property type.</param>
            <param name="attributes">Property attributes.</param>
            <param name="customAttributeInfo">Custom attribute information.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.CustomAttributeTypeConverter.CustomAttributesPropertyDescriptor.GetValue(System.Object)">
            <summary>
            Gets the current value of the property on a component.
            </summary>
            <param name="component">The component with the property for which to retrieve the value.</param>
            <returns>The value of a property for a given component.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.CustomAttributeTypeConverter.CustomAttributesPropertyDescriptor.SetValue(System.Object,System.Object)">
            <summary>
            Sets the value of the component to a different value.
            </summary>
            <param name="component">The component with the property value that is to be set.</param>
            <param name="value">The new value.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.CustomAttributeTypeConverter.CustomAttributesPropertyDescriptor.IsDefaultValue(System.String)">
            <summary>
            Checks if specified value is the default value of the attribute.
            </summary>
            <param name="val">Value to check.</param>
            <returns>True if specified value is the default attribute value.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.CustomAttributeTypeConverter.CustomAttributesPropertyDescriptor.GetValueFromString(System.Object)">
            <summary>
            Gets value from string a native type of attribute.
            </summary>
            <param name="obj">Object to convert to string.</param>
            <returns>String representation of the specified object.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.CustomAttributeTypeConverter.CustomAttributesPropertyDescriptor.GetStringFromValue(System.Object)">
            <summary>
            Converts attribute value to string.
            </summary>
            <param name="value">Attribute value to convert.</param>
            <returns>Return attribute value converted to string.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.CustomAttributeTypeConverter.CustomAttributesPropertyDescriptor.ValidateValue(System.String,System.Object)">
            <summary>
            Validates attribute value. Method throws exception in case of any issues.
            </summary>
            <param name="attrName">Attribute name.</param>
            <param name="value">Attribute value to validate.</param>
        </member>
        <member name="T:Dundas.Charting.WebControl.Design.DynamicPropertyDescriptor">
            <summary>
            Property descriptor with ability to dynamically change attributes 
            of the base property descriptor object.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.DynamicPropertyDescriptor.#ctor(System.ComponentModel.PropertyDescriptor,System.String)">
            <summary>
            Constructor of the dynamic property descriptor.
            </summary>
            <param name="basePropertyDescriptor">Base property descriptor.</param>
            <param name="displayName">New display name of the property.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.DynamicPropertyDescriptor.CanResetValue(System.Object)">
            <summary>
            Returns whether resetting an object changes its value.
            </summary>
            <param name="component">The component to test for reset capability.</param>
            <returns>true if resetting the component changes its value; otherwise, false.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.DynamicPropertyDescriptor.GetValue(System.Object)">
            <summary>
            Gets the current value of the property on a component.
            </summary>
            <param name="component">The component with the property for which to retrieve the value.</param>
            <returns>The value of a property for a given component.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.DynamicPropertyDescriptor.ResetValue(System.Object)">
            <summary>
            Resets the value for this property of the component to the default value.
            </summary>
            <param name="component">The component with the property value that is to be reset to the default value.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.DynamicPropertyDescriptor.ShouldSerializeValue(System.Object)">
            <summary>
            Determines a value indicating whether the value of this property needs to be persisted.
            </summary>
            <param name="component">The component with the property to be examined for persistence.</param>
            <returns>True if the property should be persisted; otherwise, false.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.DynamicPropertyDescriptor.SetValue(System.Object,System.Object)">
            <summary>
            Sets the value of the component to a different value.
            </summary>
            <param name="component">The component with the property value that is to be set.</param>
            <param name="value">The new value.</param>
        </member>
        <member name="P:Dundas.Charting.WebControl.Design.DynamicPropertyDescriptor.ComponentType">
            <summary>
            Gets the type of the component this property is bound to.
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.Design.DynamicPropertyDescriptor.DisplayName">
            <summary>
            Gets the name that can be displayed in a window, such as a Properties window.
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.Design.DynamicPropertyDescriptor.IsBrowsable">
            <summary>
            Gets a value indicating whether this property is browsable.
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.Design.DynamicPropertyDescriptor.IsReadOnly">
            <summary>
            Gets a value indicating whether this property is read-only.
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.Design.DynamicPropertyDescriptor.PropertyType">
            <summary>
            Gets the type of the property.
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.ChartTypes.PolarChart">
            <summary>
            PolarChart class uses its base class RadarChart to perform most of the 
            drawing and calculation operations.
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.ChartTypes.RadarChart">
            <summary>
            RadarChart class provides 2D/3D drawing and hit testing 
            functionality for the Radar chart. It is also used as a
            base class for the PolarChart. 
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.ChartTypes.ICircularChartType">
            <summary>
            ICircularChartType interface provides behaviuour information for circular 
            chart types like Radar or Polar. This interface is similar to IChartType 
            interface.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.ICircularChartType.RequireClosedFigure">
            <summary>
            Checks if closed figure should be drawn even in Line drawing mode.
            </summary>
            <returns>True if closed figure should be drawn even in Line drawing mode.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.ICircularChartType.XAxisCrossingSupported">
            <summary>
            Checks if Y axis position may be changed using X axis Crossing property.
            </summary>
            <returns>True if Y axis position may be changed using X axis Crossing property.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.ICircularChartType.XAxisLabelsSupported">
            <summary>
            Checks if automatic X axis labels are supported.
            </summary>
            <returns>True if automatic X axis labels are supported.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.ICircularChartType.RadialGridLinesSupported">
            <summary>
            Checks if radial grid lines (X axis) are supported by the chart type.
            </summary>
            <returns>True if radial grid lines are supported.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.ICircularChartType.GetNumerOfSectors(Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.SeriesCollection)">
            <summary>
            Gets number of sectors in the circular chart area.
            </summary>
            <param name="area">Chart area to get number of sectors for.</param>
            <param name="seriesCollection">Collection of series.</param>
            <returns>Returns number of sectors in circular chart.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.ICircularChartType.GetYAxisLocations(Dundas.Olap.WebUIControls.ChartArea)">
            <summary>
            Get a location of each Y axis in degrees.
            </summary>
            <param name="area">Chart area to get Y axes locations for.</param>
            <returns>Returns an array of one or more locations of Y axis.</returns>
        </member>
        <member name="F:Dundas.Charting.WebControl.ChartTypes.RadarChart.common">
            <summary>
            Common elements object
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.ChartTypes.RadarChart.area">
            <summary>
            Chart area object
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.ChartTypes.RadarChart.autoLabelPosition">
            <summary>
            Auto label position flag
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.ChartTypes.RadarChart.labelPosition">
            <summary>
            Label position
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.RadarChart.#ctor">
            <summary>
            Class public constructor.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.RadarChart.GetLegendImageStyle(Dundas.Olap.WebUIControls.Series)">
            <summary>
            How to draw series/points in legend:
            Filled rectangle, Line or Marker
            </summary>
            <param name="series">Legend item series.</param>
            <returns>Legend item style.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.RadarChart.GetImage(Dundas.Charting.WebControl.ChartTypes.ChartTypeRegistry)">
            <summary>
            Gets chart type image.
            </summary>
            <param name="registry">Chart types registry object.</param>
            <returns>Chart type image.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.RadarChart.RequireClosedFigure">
            <summary>
            Checks if closed figure should be drawn even in Line drawing mode.
            </summary>
            <returns>True if closed figure should be drawn even in Line drawing mode.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.RadarChart.XAxisCrossingSupported">
            <summary>
            Checks if Y axis position may be changed using X axis Crossing property.
            </summary>
            <returns>True if Y axis position may be changed using X axis Crossing property.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.RadarChart.XAxisLabelsSupported">
            <summary>
            Checks if automatic X axis labels are supported.
            </summary>
            <returns>True if automatic X axis labels are supported.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.RadarChart.RadialGridLinesSupported">
            <summary>
            Checks if radial grid lines (X axis) are supported by the chart type.
            </summary>
            <returns>True if radial grid lines are supported.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.RadarChart.GetNumerOfSectors(Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.SeriesCollection)">
            <summary>
            Gets number of sectors in the circular chart area.
            </summary>
            <param name="area">Chart area to get number of sectors for.</param>
            <param name="seriesCollection">Collection of series.</param>
            <returns>Returns number of sectors in circular chart.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.RadarChart.GetYAxisLocations(Dundas.Olap.WebUIControls.ChartArea)">
            <summary>
            Get a location of each Y axis in degrees.
            </summary>
            <param name="area">Chart area to get Y axes locations for.</param>
            <returns>Returns an array of one or more locations of Y axis.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.RadarChart.Paint(Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.CommonElements,Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.Series)">
            <summary>
            Paint Radar Chart.
            </summary>
            <param name="graph">The Chart Graphics object.</param>
            <param name="common">The Common elements object.</param>
            <param name="area">Chart area for this chart.</param>
            <param name="seriesToDraw">Chart series to draw.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.RadarChart.ProcessChartType(System.Boolean,Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.CommonElements,Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.Series)">
            <summary>
            This method recalculates size of the bars. This method is used 
            from Paint or Select method.
            </summary>
            <param name="selection">If True selection mode is active, otherwise paint mode is active.</param>
            <param name="graph">The Chart Graphics object.</param>
            <param name="common">The Common elements object.</param>
            <param name="area">Chart area for this chart.</param>
            <param name="seriesToDraw">Chart series to draw.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.RadarChart.AddSelectionPath(Dundas.Olap.WebUIControls.ChartArea,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.PointF[],System.Int32,System.Int32,System.Drawing.PointF,System.Int32)">
            <summary>
            Creates selection path for one data point.
            </summary>
            <param name="area">Chart area object.</param>
            <param name="selectionPath">Selection path used for data storing.</param>
            <param name="dataPointPos">Array of points positions.</param>
            <param name="firstPointIndex">First point index.</param>
            <param name="secondPointIndex">Second point index.</param>
            <param name="centerPoint">Center point for segment area.</param>
            <param name="borderWidth">Border width</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.RadarChart.GetMiddlePoint(System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Gets the middle point of the line.
            </summary>
            <param name="p1">First line point.</param>
            <param name="p2">Second line point.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.RadarChart.GetMarkerSize(Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.CommonElements,Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.DataPoint,System.Int32,System.String)">
            <summary>
            Returns marker size.
            </summary>
            <param name="graph">The Chart Graphics object.</param>
            <param name="common">The Common elements object.</param>
            <param name="area">Chart area for this chart.</param>
            <param name="point">Data point.</param>
            <param name="markerSize">Marker size.</param>
            <param name="markerImage">Marker image.</param>
            <returns>Marker width and height.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.RadarChart.GetPointsPosition(Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.Series)">
            <summary>
            Fills a PointF array of data points absolute pixel positions.
            </summary>
            <param name="graph">Graphics object.</param>
            <param name="area">Chart area.</param>
            <param name="series">Point series.</param>
            <returns>Array of data points position.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.RadarChart.DrawLabels(Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.CommonElements,System.Drawing.PointF,System.Int32,Dundas.Olap.WebUIControls.DataPoint,Dundas.Olap.WebUIControls.Series,System.Int32)">
            <summary>
            This method draws labels in point chart.
            </summary>
            <param name="graph">The Chart Graphics object</param>
            <param name="common">The Common elements object</param>
            <param name="area">Chart area for this chart</param>
            <param name="markerPosition">Marker position</param>
            <param name="markerSize">Marker size</param>
            <param name="point">Data point</param>
            <param name="ser">Data series</param>
            <param name="pointIndex">Data point index.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.RadarChart.GetAutoLabelPosition(Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.Series,System.Int32)">
            <summary>
            Gets label position depending on the prev/next point values.
            This method will reduce label overlapping with the chart itself (line).
            </summary>
            <param name="area">Chart area for this chart</param>
            <param name="series">Series.</param>
            <param name="pointIndex">Data point index in series.</param>
            <returns>Return automaticly detected label position.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.RadarChart.GetDrawingStyle(Dundas.Olap.WebUIControls.Series,Dundas.Olap.WebUIControls.DataPoint)">
            <summary>
            Gets radar chart drawing style.
            </summary>
            <param name="ser">Chart series.</param>
            <param name="point">Series point.</param>
            <returns>Returns radar drawing style.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.RadarChart.GetYValue(Dundas.Olap.WebUIControls.CommonElements,Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.Series,Dundas.Olap.WebUIControls.DataPoint,System.Int32,System.Int32)">
            <summary>
            Helper function that returns the Y value of the point.
            </summary>
            <param name="common">Chart common elements.</param>
            <param name="area">Chart area the series belongs to.</param>
            <param name="series">Sereis of the point.</param>
            <param name="point">Point object.</param>
            <param name="pointIndex">Index of the point.</param>
            <param name="yValueIndex">Index of the Y value to get.</param>
            <returns>Y value of the point.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.RadarChart.GetEmptyPointValue(Dundas.Olap.WebUIControls.DataPoint,System.Int32)">
            <summary>
            This method will find previous and next data point, which is not 
            empty and recalculate a new value for current empty data point. 
            New value depends on custom attribute “EmptyPointValue” and 
            it could be zero or average.
            </summary>
            <param name="point">Empty data point.</param>
            <param name="pointIndex">Empty data point index.</param>
            <returns>A Value for empty data point.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.RadarChart.AddSmartLabelMarkerPositions(Dundas.Olap.WebUIControls.CommonElements,Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.Series,System.Collections.ArrayList)">
            <summary>
            Adds markers position to the list. Used to check SmartLabels overlapping.
            </summary>
            <param name="common">Common chart elements.</param>
            <param name="area">Chart area.</param>
            <param name="series">Series values to be used.</param>
            <param name="list">List to add to.</param>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.RadarChart.Name">
            <summary>
            Chart type name
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.RadarChart.Stacked">
            <summary>
            True if chart type is stacked
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.RadarChart.SupportStackedGroups">
            <summary>
            True if stacked chart type supports groups
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.RadarChart.StackSign">
            <summary>
            True if stacked chart type should draw separately positive and 
            negative data points ( Bar and column Stacked types ).
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.RadarChart.RequireAxes">
            <summary>
            True if chart type supports axes
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.RadarChart.SecondYScale">
            <summary>
            Chart type with two y values used for scale ( bubble chart type )
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.RadarChart.CircularChartArea">
            <summary>
            True if chart type requires circular chart area.
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.RadarChart.SupportLogarithmicAxes">
            <summary>
            True if chart type supports logarithmic axes
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.RadarChart.SwitchValueAxes">
            <summary>
            True if chart type requires to switch the value (Y) axes position
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.RadarChart.SideBySideSeries">
            <summary>
            True if chart series can be placed side-by-side.
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.RadarChart.DataPointsInLegend">
            <summary>
            True if each data point of a chart must be represented in the legend
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.RadarChart.ZeroCrossing">
            <summary>
            If the crossing value is auto Crossing value should be 
            automatically set to zero for some chart 
            types (Bar, column, area etc.)
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.RadarChart.ApplyPaletteColorsToPoints">
            <summary>
            True if palette colors should be applied for each data point.
            Otherwise the color is applied to the series.
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.RadarChart.ExtraYValuesConnectedToYAxis">
            <summary>
            Indicates that extra Y values are connected to the scale of the Y axis
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.RadarChart.HundredPercent">
            <summary>
            Indicates that this is a one hundred percent chart.
            Axis scale from 0 to 100 percent should be used.
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.RadarChart.HundredPercentSupportNegative">
            <summary>
            Indicates that negative 100% stacked values are shown on
            the other side of the X axis
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.RadarChart.YValuesPerPoint">
            <summary>
            Number of supported Y value(s) per point 
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.PolarChart.#ctor">
            <summary>
            Class public constructor.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.PolarChart.RequireClosedFigure">
            <summary>
            Checks if closed figure should be drawn even in Line drawing mode.
            </summary>
            <returns>True if closed figure should be drawn even in Line drawing mode.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.PolarChart.XAxisCrossingSupported">
            <summary>
            Checks if Y axis position may be changed using X axis Crossing property.
            </summary>
            <returns>True if Y axis position may be changed using X axis Crossing property.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.PolarChart.XAxisLabelsSupported">
            <summary>
            Checks if automatic X axis labels are supported.
            </summary>
            <returns>True if automatic X axis labels are supported.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.PolarChart.RadialGridLinesSupported">
            <summary>
            Checks if radial grid lines (X axis) are supported by the chart type.
            </summary>
            <returns>True if radial grid lines are supported.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.PolarChart.GetNumerOfSectors(Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.SeriesCollection)">
            <summary>
            Gets number of sectors in the circular chart area.
            </summary>
            <param name="area">Chart area to get number of sectors for.</param>
            <param name="seriesCollection">Collection of series.</param>
            <returns>Returns number of sectors in circular chart.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.PolarChart.GetYAxisLocations(Dundas.Olap.WebUIControls.ChartArea)">
            <summary>
            Get a location of Y axis in degrees.
            </summary>
            <param name="area">Chart area to get Y axes locations for.</param>
            <returns>Returns an array of one or more locations of Y axis.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.PolarChart.GetDrawingStyle(Dundas.Olap.WebUIControls.Series,Dundas.Olap.WebUIControls.DataPoint)">
            <summary>
            Gets polar chart drawing style.
            </summary>
            <param name="ser">Chart series.</param>
            <param name="point">Series point.</param>
            <returns>Returns polar drawing style.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.PolarChart.GetPointsPosition(Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.Series)">
            <summary>
            Fills a PointF array of data points absolute pixel positions.
            </summary>
            <param name="graph">Graphics object.</param>
            <param name="area">Chart area.</param>
            <param name="series">Point series.</param>
            <returns>Array of data points position.</returns>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.PolarChart.Name">
            <summary>
            Chart type name
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.ChartTypes.PointAndFigureChart">
            <summary>
            PointAndFigureChart class contains all the code necessary for calculation
            and drawing Point and Figure chart.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.ChartTypes.PointAndFigureChart.customizeSubscribed">
            <summary>
            Indicates that class subscribed fro the customize event.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.PointAndFigureChart.PrepareData(Dundas.Olap.WebUIControls.Series,System.ComponentModel.Design.IServiceContainer)">
            <summary>
            Prepares PointAndFigure chart type for rendering. We hide original series
            during rendering and only using the data for calculations. New RangeColumn
            type series is added wich displayes the columns of Os or Xs.
            All the changes in this method are reversed back in the UnPrepareData method. 
            </summary>
            <param name="series">Series to be prepared.</param>
            <param name="serviceContainer">Reference to service container.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.PointAndFigureChart.UnPrepareData(Dundas.Olap.WebUIControls.Series,System.ComponentModel.Design.IServiceContainer)">
            <summary>
            Remove any changes done while preparing PointAndFigure chart type for rendering.
            </summary>
            <param name="series">Series to be un-prepared.</param>
            <param name="serviceContainer">Reference to service container.</param>
            <returns>True if series was removed from collection.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.PointAndFigureChart.GetPriceRange(Dundas.Olap.WebUIControls.Series,System.Int32,System.Int32,System.Double@,System.Double@)">
            <summary>
            Gets price range in the point and figure chart.
            </summary>
            <param name="originalData">Series with original data.</param>
            <param name="yValueHighIndex">Index of the Y value to use as High price.</param>
            <param name="yValueLowIndex">Index of the Y value to use as Low price.</param>
            <param name="minPrice">Returns max price.</param>
            <param name="maxPrice">Returns min price.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.PointAndFigureChart.GetBoxSize(Dundas.Olap.WebUIControls.Series,Dundas.Olap.WebUIControls.Series,System.Int32,System.Int32,System.Double,System.Double)">
            <summary>
            Gets box size of the renko chart.
            </summary>
            <param name="series">Range column chart series used to dispaly the renko chart.</param>
            <param name="originalData">Series with original data.</param>
            <param name="yValueHighIndex">Index of the Y value to use as High price.</param>
            <param name="yValueLowIndex">Index of the Y value to use as Low price.</param>
            <param name="minPrice">Max price.</param>
            <param name="maxPrice">Min price.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.PointAndFigureChart.GetReversalAmount(Dundas.Olap.WebUIControls.Series,Dundas.Olap.WebUIControls.Series,System.Int32,System.Int32,System.Double,System.Double)">
            <summary>
            Gets reversal amount of the pointAndFigure chart.
            </summary>
            <param name="series">Step line chart series used to dispaly the pointAndFigure chart.</param>
            <param name="originalData">Series with original data.</param>
            <param name="yValueHighIndex">Index of the Y value to use as High price.</param>
            <param name="yValueLowIndex">Index of the Y value to use as Low price.</param>
            <param name="minPrice">Max price.</param>
            <param name="maxPrice">Min price.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.PointAndFigureChart.FillPointAndFigureData(Dundas.Olap.WebUIControls.Series,Dundas.Olap.WebUIControls.Series)">
            <summary>
            Fills step line series with data to draw the PointAndFigure chart.
            </summary>
            <param name="series">Step line chart series used to dispaly the PointAndFigure chart.</param>
            <param name="originalData">Series with original data.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.PointAndFigureChart.OnCustomize(Dundas.Olap.WebUIControls.Chart)">
            <summary>
            Customize chart event, used to add empty points to make point and
            figure chart symbols look proportional.
            </summary>
            <param name="chart"></param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.PointAndFigureChart.DrawColumn2D(Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.Axis,System.Drawing.RectangleF,Dundas.Olap.WebUIControls.DataPoint,Dundas.Olap.WebUIControls.Series)">
            <summary>
            Draws 2D column using 'X' or 'O' symbols.
            </summary>
            <param name="graph">Chart graphics.</param>
            <param name="vAxis">Vertical axis.</param>
            <param name="rectSize">Column position and size.</param>
            <param name="point">Column data point.</param>
            <param name="ser">Column series.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.PointAndFigureChart.GetImage(Dundas.Charting.WebControl.ChartTypes.ChartTypeRegistry)">
            <summary>
            Gets chart type image.
            </summary>
            <param name="registry">Chart types registry object.</param>
            <returns>Chart type image.</returns>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.PointAndFigureChart.Name">
            <summary>
            Chart type name
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.ChartTypes.PyramidValueType">
            <summary>
            Value type of the pyramid chart.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.ChartTypes.PyramidValueType.Linear">
            <summary>
            Each point value defines linear height of each segment.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.ChartTypes.PyramidValueType.Surface">
            <summary>
            Each point value defines surface of each segment.
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.ChartTypes.FunnelStyle">
            <summary>
            Funnel chart drawing style.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.ChartTypes.FunnelStyle.YIsHeight">
            <summary>
            Shape of the funnel is fixed and point Y value controls the height of the segments.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.ChartTypes.FunnelStyle.YIsWidth">
            <summary>
            Height of each segment is the same and point Y value controls the diameter of the segment.
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.ChartTypes.FunnelLabelPlacement">
            <summary>
            Outside labels placement.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.ChartTypes.FunnelLabelPlacement.Right">
            <summary>
            Labels are placed on the right side of the funnel.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.ChartTypes.FunnelLabelPlacement.Left">
            <summary>
            Labels are placed on the left side of the funnel.
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.ChartTypes.FunnelLabelVerticalAlignment">
            <summary>
            Vertical alignment of the data point labels
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.ChartTypes.FunnelLabelVerticalAlignment.Center">
            <summary>
            Label placed in the middle.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.ChartTypes.FunnelLabelVerticalAlignment.Top">
            <summary>
            Label placed on top.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.ChartTypes.FunnelLabelVerticalAlignment.Bottom">
            <summary>
            Label placed on the bottom.
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.ChartTypes.Funnel3DDrawingStyle">
            <summary>
            Funnel chart 3D drawing style.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.ChartTypes.Funnel3DDrawingStyle.CircularBase">
            <summary>
            Circle will be used as a shape of the base.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.ChartTypes.Funnel3DDrawingStyle.SquareBase">
            <summary>
            Square will be used as a shape of the base.
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.ChartTypes.FunnelLabelStyle">
            <summary>
            Funnel chart labels style enumeration.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.ChartTypes.FunnelLabelStyle.Inside">
            <summary>
            Data point labels are located inside of the funnel.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.ChartTypes.FunnelLabelStyle.Outside">
            <summary>
            Data point labels are located outside of the funnel.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.ChartTypes.FunnelLabelStyle.OutsideInColumn">
            <summary>
            Data point labels are located outside of the funnel in a column.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.ChartTypes.FunnelLabelStyle.Disabled">
            <summary>
            Data point labels are disabled.
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.ChartTypes.FunnelChart">
            <summary>
            FunnelChart class provides 2D/3D drawing and hit testing functionality 
            for the Funnel and Pyramid charts.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.FunnelChart.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.FunnelChart.GetLegendImageStyle(Dundas.Olap.WebUIControls.Series)">
            <summary>
            How to draw series/points in legend:
            Filled rectangle, Line or Marker
            </summary>
            <param name="series">Legend item series.</param>
            <returns>Legend item style.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.FunnelChart.GetImage(Dundas.Charting.WebControl.ChartTypes.ChartTypeRegistry)">
            <summary>
            Gets chart type image.
            </summary>
            <param name="registry">Chart types registry object.</param>
            <returns>Chart type image.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.FunnelChart.Paint(Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.CommonElements,Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.Series)">
            <summary>
            Paint Funnel Chart.
            </summary>
            <param name="graph">The Chart Graphics object.</param>
            <param name="common">The Common elements object.</param>
            <param name="area">Chart area for this chart.</param>
            <param name="seriesToDraw">Chart series to draw.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.FunnelChart.ProcessChartType">
            <summary>
            Process chart type drawing.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.FunnelChart.GetPointWidthAndHeight(Dundas.Olap.WebUIControls.Series,System.Int32,System.Single,System.Single@,System.Single@,System.Single@)">
            <summary>
            Gets funnel data point segment height and width.
            </summary>
            <param name="series">Chart type series.</param>
            <param name="pointIndex">Data point index in the series.</param>
            <param name="location">Segment top location. Bottom location if reversed drawing order.</param>
            <param name="height">Returns the height of the segment.</param>
            <param name="startWidth">Returns top width of the segment.</param>
            <param name="endWidth">Returns botom width of the segment.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.FunnelChart.ShouldDrawFirstPoint">
            <summary>
            Checks if first point in the series should be drawn.
            When point Y value is used to define the diameter of the funnel
            segment 2 points are required to draw 1 segment. In this case first
            data point is not drawn.
            </summary>
            <returns>True if first point in the series should be drawn.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.FunnelChart.DrawFunnel3DSquareSegment(Dundas.Olap.WebUIControls.DataPoint,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Draws funnel 3D square segment.
            </summary>
            <param name="point">Data point</param>
            <param name="pointIndex">Data point index.</param>
            <param name="startWidth">Segment top width.</param>
            <param name="endWidth">Segment bottom width.</param>
            <param name="location">Segment top location.</param>
            <param name="height">Segment height.</param>
            <param name="nothingOnTop">True if nothing is on the top of that segment.</param>
            <param name="nothingOnBottom">True if nothing is on the bottom of that segment.</param>
            <param name="drawSegment">True if segment shadow should be drawn.</param>
            <param name="drawSegmentShadow">True if segment shadow should be drawn.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.FunnelChart.DrawFunnelCircularSegment(Dundas.Olap.WebUIControls.DataPoint,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Draws funnel segment.
            </summary>
            <param name="point">Data point</param>
            <param name="pointIndex">Data point index.</param>
            <param name="startWidth">Segment top width.</param>
            <param name="endWidth">Segment bottom width.</param>
            <param name="location">Segment top location.</param>
            <param name="height">Segment height.</param>
            <param name="nothingOnTop">True if nothing is on the top of that segment.</param>
            <param name="nothingOnBottom">True if nothing is on the bottom of that segment.</param>
            <param name="drawSegment">True if segment shadow should be drawn.</param>
            <param name="drawSegmentShadow">True if segment shadow should be drawn.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.FunnelChart.GetFunnelSegmentPositions">
            <summary>
            Fill list with information about every segment of the funnel.
            </summary>
            <returns>Funnel segment information list.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.FunnelChart.DrawLabels">
            <summary>
            Draws funnel data point labels.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.FunnelChart.CreateLabelsInfoList">
            <summary>
            Creates a list of structures with the data point labels information.
            </summary>
            <returns>Array list of labels information.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.FunnelChart.FitPointLabels">
            <summary>
            Changes required plotting area spacing, so that all labels fit.
            </summary>
            <returns>Return True if no resizing required.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.FunnelChart.GetLabelsPosition">
            <summary>
            Loops through the point labels list and calculates labels position
            based on their size, position and funnel chart shape.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.FunnelChart.IsLabelsOverlap(Dundas.Charting.WebControl.ChartTypes.FunnelPointLabelInfo)">
            <summary>
            Checks if specified label overlaps any previous labels.
            </summary>
            <param name="testLabelInfo">Label to test.</param>
            <returns>True if labels overlapp.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.FunnelChart.GetLabelStyle(Dundas.Olap.WebUIControls.DataPointAttributes)">
            <summary>
            Gets label style of the data point.
            </summary>
            <returns>Label style of the data point.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.FunnelChart.GetPlotAreaSpacing">
            <summary>
            Calculate the spacing required for the labels.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.FunnelChart.GetPlotAreaPosition">
            <summary>
            Gets a rectangle in relative coordinates where the funnel will chart
            will be drawn.
            </summary>
            <returns>Plotting are of the chart in relative coordinates.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.FunnelChart.CheckMinHeight(System.Single)">
            <summary>
            Checks for minimum segment height.
            </summary>
            <param name="height">Current segment height.</param>
            <returns>Adjusted segment height.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.FunnelChart.GetFunnelMinPointHeight(Dundas.Olap.WebUIControls.DataPointAttributes)">
            <summary>
            Gets minimum point height in pixels.
            </summary>
            <returns>Minimum point height in pixels.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.FunnelChart.GetFunnelRotation(Dundas.Olap.WebUIControls.DataPointAttributes)">
            <summary>
            Gets 3D funnel rotation angle.
            </summary>
            <returns>Rotation angle.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.FunnelChart.GetCalloutLineColor(Dundas.Olap.WebUIControls.DataPointAttributes)">
            <summary>
            Gets callout line color.
            </summary>
            <returns>Callout line color.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.FunnelChart.GetFunnelNeckSize(Dundas.Olap.WebUIControls.DataPointAttributes)">
            <summary>
            Gets funnel neck size when shape of the funnel do not change.
            </summary>
            <returns>Funnel neck width and height.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.FunnelChart.GetFunnelPointGap(Dundas.Olap.WebUIControls.DataPointAttributes)">
            <summary>
            Gets gap between points in pixels.
            </summary>
            <returns>Gap between funnel points.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.FunnelChart.GetFunnelStyle(Dundas.Olap.WebUIControls.DataPointAttributes)">
            <summary>
            Gets funnel drawing style.
            </summary>
            <returns>funnel drawing style.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.FunnelChart.GetOutsideLabelPlacement(Dundas.Olap.WebUIControls.DataPointAttributes)">
            <summary>
            Gets outside labels placement.
            </summary>
            <returns>Outside labels placement.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.FunnelChart.GetInsideLabelAlignment(Dundas.Olap.WebUIControls.DataPointAttributes)">
            <summary>
            Gets inside labels vertical alignment.
            </summary>
            <returns>Inside labels vertical alignment.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.FunnelChart.GetFunnel3DDrawingStyle(Dundas.Olap.WebUIControls.DataPointAttributes)">
            <summary>
            Gets funnel 3D drawing style.
            </summary>
            <returns>funnel drawing style.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.FunnelChart.GetDataPointValuesStatistic">
            <summary>
            Get data point Y and X values statistics:
              - Total of all Y values
              - Total of all X values
              - Maximum Y value
            Negative values are treated as positive.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.FunnelChart.GetDataSeries">
            <summary>
            Gets funnel chart series that belongs to the current chart area.
            Method also checks that only one visible Funnel series exists in the chart area.
            </summary>
            <returns>Funnel chart type series.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.FunnelChart.GetPyramidValueType(Dundas.Olap.WebUIControls.DataPointAttributes)">
            <summary>
            Gets pyramid value type. Each point value may represent a "Linear" height of
            the segment or "Surface" of the segment.
            </summary>
            <returns>Pyramid value type.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.FunnelChart.GetYValue(Dundas.Olap.WebUIControls.DataPoint,System.Int32)">
            <summary>
            Helper function, which returns the Y value of the point.
            </summary>
            <param name="point">Point object.</param>
            <param name="pointIndex">Point index.</param>
            <returns>Y value of the point.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.FunnelChart.GetXValue(Dundas.Olap.WebUIControls.DataPoint)">
            <summary>
            Helper function, which returns the X value of the point.
            </summary>
            <param name="point">Point object.</param>
            <returns>X value of the point.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.FunnelChart.GetYValue(Dundas.Olap.WebUIControls.CommonElements,Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.Series,Dundas.Olap.WebUIControls.DataPoint,System.Int32,System.Int32)">
            <summary>
            Helper function, which returns the Y value of the point.
            </summary>
            <param name="common">Chart common elements.</param>
            <param name="area">Chart area the series belongs to.</param>
            <param name="series">Sereis of the point.</param>
            <param name="point">Point object.</param>
            <param name="pointIndex">Index of the point.</param>
            <param name="yValueIndex">Index of the Y value to get.</param>
            <returns>Y value of the point.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.FunnelChart.AddSmartLabelMarkerPositions(Dundas.Olap.WebUIControls.CommonElements,Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.Series,System.Collections.ArrayList)">
            <summary>
            Adds markers position to the list. Used to check SmartLabels overlapping.
            </summary>
            <param name="common">Common chart elements.</param>
            <param name="area">Chart area.</param>
            <param name="series">Series values to be used.</param>
            <param name="list">List to add to.</param>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.FunnelChart.Name">
            <summary>
            Chart type name
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.FunnelChart.Stacked">
            <summary>
            True if chart type is stacked
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.FunnelChart.SupportStackedGroups">
            <summary>
            True if stacked chart type supports groups
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.FunnelChart.StackSign">
            <summary>
            True if stacked chart type should draw separately positive and 
            negative data points ( Bar and column Stacked types ).
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.FunnelChart.RequireAxes">
            <summary>
            True if chart type supports axeses
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.FunnelChart.SecondYScale">
            <summary>
            Chart type with two y values used for scale ( bubble chart type )
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.FunnelChart.CircularChartArea">
            <summary>
            True if chart type requires circular chart area.
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.FunnelChart.SupportLogarithmicAxes">
            <summary>
            True if chart type supports logarithmic axes
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.FunnelChart.SwitchValueAxes">
            <summary>
            True if chart type requires to switch the value (Y) axes position
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.FunnelChart.SideBySideSeries">
            <summary>
            True if chart series can be placed side-by-side.
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.FunnelChart.DataPointsInLegend">
            <summary>
            True if each data point of a chart must be represented in the legend
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.FunnelChart.ZeroCrossing">
            <summary>
            If the crossing value is auto Crossing value should be 
            automatically set to zero for some chart 
            types (Bar, column, area etc.)
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.FunnelChart.ApplyPaletteColorsToPoints">
            <summary>
            True if palette colors should be applied for each data paoint.
            Otherwise the color is applied to the series.
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.FunnelChart.ExtraYValuesConnectedToYAxis">
            <summary>
            Indicates that extra Y values are connected to the scale of the Y axis
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.FunnelChart.HundredPercent">
            <summary>
            Indicates that it's a hundredred percent chart.
            Axis scale from 0 to 100 percent should be used.
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.FunnelChart.HundredPercentSupportNegative">
            <summary>
            Indicates that it's a hundredred percent chart.
            Axis scale from 0 to 100 percent should be used.
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.FunnelChart.YValuesPerPoint">
            <summary>
            Number of supported Y value(s) per point 
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.ChartTypes.PyramidChart">
            <summary>
            PyramidChart class overrides some of the functionality of FunnelChart class.
            Most of drawing and othere processing is done in the FunnelChart.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.PyramidChart.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.PyramidChart.GetPointWidthAndHeight(Dundas.Olap.WebUIControls.Series,System.Int32,System.Single,System.Single@,System.Single@,System.Single@)">
            <summary>
            Gets pyramid data point segment height and width.
            </summary>
            <param name="series">Chart type series.</param>
            <param name="pointIndex">Data point index in the series.</param>
            <param name="location">Segment top location. Bottom location if reversed drawing order.</param>
            <param name="height">Returns the height of the segment.</param>
            <param name="startWidth">Returns top width of the segment.</param>
            <param name="endWidth">Returns botom width of the segment.</param>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.PyramidChart.Name">
            <summary>
            Chart type name
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.ChartTypes.FunnelSegmentInfo">
            <summary>
            Helper data structure used to store information about single funnel segment.
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.ChartTypes.FunnelPointLabelInfo">
            <summary>
            Helper data structure used to store information about funnel data point label.
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.ChartTypes.SplineAreaChart">
            <summary>
            SplineAreaChart class extends the AreaChart class by 
            providing a different initial tension for the line.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.SplineAreaChart.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.SplineAreaChart.GetImage(Dundas.Charting.WebControl.ChartTypes.ChartTypeRegistry)">
            <summary>
            Gets chart type image.
            </summary>
            <param name="registry">Chart types registry object.</param>
            <returns>Chart type image.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.SplineAreaChart.GetDefaultTension">
            <summary>
            Gets default line tension. For spline charts it's always 0.5.
            </summary>
            <returns>Line tension.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.SplineAreaChart.IsLineTensionSupported">
            <summary>
            Checks if line tension is supported by the chart type.
            </summary>
            <returns>True if line tension is supported.</returns>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.SplineAreaChart.Name">
            <summary>
            Chart type name
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.Ajax.PropertyPagesAppearanceClassControl">
             <summary>
            PropertyPagesAppearanceXXX is an user control for setup appearance of the different chart objects:
            chart, series, chartarea, legends and so on. 
            Part of property pages.
             </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.PropertyPagesAppearanceClassControl.IsVisible">
            <summary>
            Check if specified context supported by the properties control.
            </summary>
            <returns>True if property control can be shown in specified context.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.PropertyPagesAppearanceClassControl.ApplyChanges(System.Object)">
            <summary>
            Applies changes to the specified chart element.
            </summary>
            <param name="element">Chart element the changes apply to.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.PropertyPagesAppearanceClassControl.ApplyChanges">
            <summary>
            Applies the changes.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.PropertyPagesAppearanceClassControl.InitPage(Dundas.Olap.WebUIControls.Ajax.PropertyPagesClassControl)">
            <summary>
            Inits the page.
            </summary>
            <param name="control">The control.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.PropertyPagesAppearanceClassControl.PrepareControls">
            <summary>
            Prepares the controls.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.PropertyPagesAppearanceClassControl.OnPreRender(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Web.UI.Control.PreRender"></see> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"></see> object that contains the event data.</param>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.Ajax.DundasColorEditor">
            <summary>
            DundasColorEditor is a web control used in Property Pages 
            and represents input control with color selector
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.DundasColorEditor.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DundasColorEditor"/> class.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.DundasColorEditor.String2Color(System.String)">
            <summary>
            Converts string to a color with alpha.
            </summary>
            <param name="input">The string to convert.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.DundasColorEditor.Color2String(System.Drawing.Color)">
            <summary>
            Converts color with alpha to a string.
            </summary>
            <param name="input">The color to convert.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.DundasColorEditor.CreateChildControls">
            <summary>
            Called by the ASP.NET page framework to notify server controls that 
            use composition-based implementation to create any child controls 
            they contain in preparation for posting back or rendering.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.DundasColorEditor.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the control to the specified HTML writer.
            </summary>
            <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter"></see> object 
            that receives the control content.</param>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Ajax.DundasColorEditor.Color">
            <summary>
            Gets or sets the color.
            </summary>
            <value>The color.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Ajax.DundasColorEditor.OnValueChangeScript">
            <summary>
            Gets or sets the on value change script.
            </summary>
            <value>The on value change script.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Ajax.DundasColorEditor.Chart">
            <summary>
            Gets or sets the chart.
            </summary>
            <value>The chart.</value>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.Utils">
            <summary>
            The Utils class contains utility methods.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Utils.CreateImage">
            <summary>
            Creates the image.
            </summary>
            <returns>An Image</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Utils.RegisterJavaScriptSrcBlock(System.Web.UI.Page,System.String,System.String)">
            <summary>
            Registers the java script SRC block.
            </summary>
            <param name="page">The page.</param>
            <param name="key">The key.</param>
            <param name="filename">The filename.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Utils.RegisterJavaScriptBlock(System.Web.UI.Page,System.String,System.String)">
            <summary>
            Registers the java script block.
            </summary>
            <param name="page">The page.</param>
            <param name="key">The key.</param>
            <param name="source">The source.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Utils.GetScriptsList(System.String)">
            <summary>
            Gets the scripts list.
            </summary>
            <param name="scriptName">Name of the script.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Utils.DumpStartFuncs(System.String)">
            <summary>
            Dumps the start funcs.
            </summary>
            <param name="scriptName">Name of the script.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Utils.DumpStartFuncs">
            <summary>
            Dumps the start funcs.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Utils.GetCallBackScripts">
            <summary>
            Gets the call back scripts.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Utils.RegisterJavaExprCallBack(System.String,System.String)">
            <summary>
            Registers the java expr call back.
            </summary>
            <param name="key">The key.</param>
            <param name="source">The source.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Utils.RegisterJavaExpr(System.String,System.String)">
            <summary>
            Registers the java expression.
            </summary>
            <param name="key">The key.</param>
            <param name="source">The source.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Utils.RegisterTransparentPngHandler">
            <summary>
            Registers the transparent PNG handler.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Utils.RegisterStartFunc(System.String,System.String)">
            <summary>
            Registers the start func.
            </summary>
            <param name="key">The key.</param>
            <param name="source">The source.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Utils.RegisterJavaStartupScriptBlock(System.Web.UI.Page,System.String,System.String)">
            <summary>
            Registers the java startup script block.
            </summary>
            <param name="page">The page.</param>
            <param name="key">The key.</param>
            <param name="source">The source.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Utils.RegisterCSSFile(System.Web.UI.Page,System.String)">
            <summary>
            Registers the CSS file.
            </summary>
            <param name="page">The page.</param>
            <param name="file">The file.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Utils.RegisterCSS(System.Web.UI.Page,System.String,System.String)">
            <summary>
            Registers the CSS.
            </summary>
            <param name="page">The page.</param>
            <param name="cssBody">The CSS body.</param>
            <param name="cssId">id of css element</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Utils.RegisterCSS(System.Web.UI.Page,System.String)">
            <summary>
            Registers the CSS.
            </summary>
            <param name="page">The page.</param>
            <param name="cssBody">The CSS body.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Utils.RegisterCallbackScript">
            <summary>
            Registers the callback script.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Utils.RegisterCallbackScript(System.Web.UI.Page)">
            <summary>
            Registers the callback script.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Utils.FixMozilla_(System.Web.UI.Control,System.Web.UI.HtmlTextWriter)">
            <summary>
            Fixes the mozilla broswer.
            </summary>
            <param name="control">The control.</param>
            <param name="writer">The writer.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Utils.GetDivWriter(System.Web.UI.HtmlTextWriter)">
            <summary>
            Gets the div writer.
            </summary>
            <param name="writer">The writer.</param>
            <returns>A HtmlTextWriter</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Utils.IsExistsContext">
            <summary>
            Determines whether is exists ASP context.
            </summary>
            <returns>
            	<c>true</c> if is exists ASP context; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Utils.GetEmptyDesignTimeText(System.ComponentModel.IComponent)">
            <summary>
            Gets the empty design time text.
            </summary>
            <param name="component">The component.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Utils.DisableControl(System.Web.UI.WebControls.WebControl,System.Boolean)">
            <summary>
            Disables the control.
            </summary>
            <param name="control">The control.</param>
            <param name="condition">if set to <c>true</c> [condition].</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Utils.SearchPageForType(System.Web.UI.ControlCollection,System.Type)">
            <summary>
            Searches the type of the page for.
            </summary>
            <param name="c">The control collection.</param>
            <param name="type">The type.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Utils.GetPostBackScript(System.Web.UI.WebControls.WebControl,System.String)">
            <summary>
            Gets the post back script.
            </summary>
            <param name="control">The control.</param>
            <param name="args">The args.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Utils.GetPostBackScriptAsLink(System.Web.UI.WebControls.WebControl,System.String)">
            <summary>
            Gets the post back script as link.
            </summary>
            <param name="control">The control.</param>
            <param name="args">The args.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Utils.InitDragAndDrop(System.Web.UI.Page)">
            <summary>
            Inits the drag and drop script.
            </summary>
            <param name="page">The page.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Utils.IsGecko">
            <summary>
            Determines whether this client is gecko browser.
            </summary>
            <returns>
            	<c>true</c> if this client is gecko; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Utils.IsIE">
            <summary>
            Determines whether this client is IE browsr.
            </summary>
            <returns>
            	<c>true</c> if this client is IE; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Utils.IsFramework2">
            <summary>
            Determines whether this .net framework is framework2.
            </summary>
            <returns>
            	<c>true</c> if this .net framework is framework2; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Utils.IsXHTML">
            <summary>
            Determines whether current page is XHTML.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Utils.IsDesignMode(System.Web.UI.Control)">
            <summary>
            Determines whether [is design mode] [the specified CTRL].
            </summary>
            <param name="ctrl">The CTRL.</param>
            <returns>
            	<c>true</c> if [is design mode] [the specified CTRL]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Utils.ConvertWebControlToLiteralControl(System.Web.UI.WebControls.WebControl)">
            <summary>
            Converts the web control to literal control.
            </summary>
            <param name="control">The control.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Utils.DivWriterEx.#ctor(System.IO.TextWriter)">
            <summary>
            Initializes a new instance of the <see cref="T:DivWriterEx"/> class.
            </summary>
            <param name="writer">The writer.</param>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.Utils.HtmlBufferEx">
            <summary>
            Implements Buffered HtmlTextWriter
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Utils.HtmlBufferEx.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:HtmlBufferEx"/> class.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Utils.HtmlBufferEx.Close">
            <summary>
            Closes this instance.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Utils.HtmlBufferEx.Clear">
            <summary>
            Clears this instance.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Utils.HtmlBufferEx.Writer">
            <summary>
            Gets the writer.
            </summary>
            <value>The writer.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Utils.HtmlBufferEx.Buffer">
            <summary>
            Gets the buffer.
            </summary>
            <value>The buffer.</value>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.QueryValues.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:QueryValues"/> class.
            </summary>
            <param name="input">The input.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.QueryValues.LoadFromString(System.String)">
            <summary>
            Loads from string.
            </summary>
            <param name="s">The s.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.QueryValues.CreateFromString(System.String)">
            <summary>
            Creates from string.
            </summary>
            <param name="input">The input.</param>
            <returns></returns>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.Pages.dspropmt">
            <summary>
            Summary description for dspropmt.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Pages.dspropmt.Button1">
            <summary>
            
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Pages.dspropmt.Button2">
            <summary>
            
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Pages.dspropmt.OlapManager">
            <summary>
            
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Pages.dspropmt.TextBox1">
            <summary>
            
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Pages.dspropmt.OnInit(System.EventArgs)">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Pages.dspropmt.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.Pages.FilterDlg">
            <summary>
            Summary description for FilterDlg.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Pages.FilterDlg.btnOK">
            <summary>
            
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Pages.FilterDlg.checkBoxFilter">
            <summary>
            
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Pages.FilterDlg.checkBoxFiltertopBottom">
            <summary>
            
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Pages.FilterDlg.checkBoxSorting">
            <summary>
            
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Pages.FilterDlg.comboBoxFilterCondition">
            <summary>
            
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Pages.FilterDlg.textBoxFilterValue">
            <summary>
            
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Pages.FilterDlg.textBoxFilterValue2">
            <summary>
            
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Pages.FilterDlg.comboBoxFilterMeasure">
            <summary>
            
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Pages.FilterDlg.comboBoxTopBottomFilterType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Pages.FilterDlg.numericUpDownTopBottomValue">
            <summary>
            
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Pages.FilterDlg.comboBoxTopBottomValueType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Pages.FilterDlg.comboBoxTopBottomFilterMeasure">
            <summary>
            
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Pages.FilterDlg.checkBoxTopFilterBreakHirarchy">
            <summary>
            
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Pages.FilterDlg.checkBoxSortBreakHirarchy">
            <summary>
            
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Pages.FilterDlg.OlapManager">
            <summary>
            
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Pages.FilterDlg.sortingAndFiltering">
             <summary>  
            Sorting and filtering object that is beign edited 
             </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Pages.FilterDlg.comboBoxSortOrder">
            <summary>
            
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Pages.FilterDlg.comboBoxSortingMeasure">
            <summary>
            
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Pages.FilterDlg.OnInit(System.EventArgs)">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Pages.FilterDlg.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Pages.FilterDlg.GetStyleSheetURL">
            <summary>
            Returns a style sheet URL.
            </summary>
            <returns>String that represents stylesheet URL</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Pages.FilterDlg.Initialize(Dundas.Olap.Data.MemberSortingAndFiltering,Dundas.Olap.Manager.DataAxisType)">
            <summary>
            Initializes the editor form.
            </summary>
            <remarks>
            </remarks>
            <param name="sortingAndFiltering">
            A <see cref="T:Dundas.Olap.Data.MemberSortingAndFiltering"/> object to edit.
            </param>
            <param name="axisType">
            An <see cref="T:Dundas.Olap.Manager.DataAxisType"/> enumeration value that represents the 
            axis type of the edited settings.
            </param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Pages.FilterDlg.LoadData">
            <summary>
            Helper method that load data into the form.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.Dialogs.Controls_RenameReportDlg">
            <summary>
            The classes represents the RenameReport Dialog
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Dialogs.Controls_RenameReportDlg.FrameworkInitialize">
            <summary>
            Frameworks the initialize.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Dialogs.Controls_RenameReportDlg.OnLoad(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Web.UI.Control.Load"></see> event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"></see> object that contains the event data.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Dialogs.Controls_RenameReportDlg.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Dialogs.Controls_RenameReportDlg.BtnOK_Click(System.Object,System.EventArgs)">
            <summary>
            Handles the Click event of the BtnOK control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Dialogs.Controls_RenameReportDlg.PrepareForRender">
            <summary>
            Prepares for render.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Dialogs.Controls_RenameReportDlg.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Sends server control content to a provided <see cref="T:System.Web.UI.HtmlTextWriter"></see> object, which writes the content to be rendered on the client.
            </summary>
            <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter"></see> object that receives the server control content.</param>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Dialogs.Controls_RenameReportDlg.OlapManager">
            <summary>
            Gets or sets the olap manager.
            </summary>
            <value>The olap manager.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Dialogs.Controls_RenameReportDlg.Dundas#Olap#Manager#IOlapPopupDialog#OlapManager">
            <summary>
            Gets or sets the olap manager.
            </summary>
            <value>The olap manager.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Dialogs.Controls_RenameReportDlg.Dundas#Olap#Manager#IOlapPopupDialog#Parameters">
            <summary>
            Gets or sets the parameters.
            </summary>
            <value>The parameters.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Dialogs.Controls_RenameReportDlg.Dundas#Olap#Manager#IOlapPopupDialog#DialogPostBack">
            <summary>
            Gets or sets a value indicating whether that dialog is in post back stage.
            </summary>
            <value><c>true</c> if [dialog post back]; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.Dialogs.Controls_DimensionBrowserDlg">
            <summary>
            This user controls represents the Dimension Browser Dialog
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Dialogs.Controls_DimensionBrowserDlg.FrameworkInitialize">
            <summary>
            Frameworks the initialize.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Dialogs.Controls_DimensionBrowserDlg.OnLoad(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Web.UI.Control.Load"></see> event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"></see> object that contains the event data.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Dialogs.Controls_DimensionBrowserDlg.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Dialogs.Controls_DimensionBrowserDlg.BtnOK_Click(System.Object,System.EventArgs)">
            <summary>
            Handles the Click event of the BtnOK control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Dialogs.Controls_DimensionBrowserDlg.PrepareForRender">
            <summary>
            Prepares dialog for render.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Dialogs.Controls_DimensionBrowserDlg.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Sends server control content to a provided <see cref="T:System.Web.UI.HtmlTextWriter"></see> object, which writes the content to be rendered on the client.
            </summary>
            <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter"></see> object that receives the server control content.</param>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Dialogs.Controls_DimensionBrowserDlg.PopupInterface">
            <summary>
            Gets the popup interface.
            </summary>
            <value>The popup interface.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Dialogs.Controls_DimensionBrowserDlg.OlapManager">
            <summary>
            Gets or sets the olap manager.
            </summary>
            <value>The olap manager.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Dialogs.Controls_DimensionBrowserDlg.DimensionDescriptorID">
            <summary>
            Gets or sets the dimension descriptor ID.
            </summary>
            <value>The dimension descriptor ID.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Dialogs.Controls_DimensionBrowserDlg.DataAxisType">
            <summary>
            Gets or sets the type of the data axis.
            </summary>
            <value>The type of the data axis.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Dialogs.Controls_DimensionBrowserDlg.Dundas#Olap#Manager#IOlapPopupDialog#OlapManager">
            <summary>
            Gets or sets the olap manager.
            </summary>
            <value>The olap manager.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Dialogs.Controls_DimensionBrowserDlg.Dundas#Olap#Manager#IOlapPopupDialog#Parameters">
            <summary>
            Gets or sets the parameters.
            </summary>
            <value>The parameters.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Dialogs.Controls_DimensionBrowserDlg.Dundas#Olap#Manager#IOlapPopupDialog#DialogPostBack">
            <summary>
            Gets or sets a value indicating whether that dialog is in post back stage.
            </summary>
            <value><c>true</c> if [dialog post back]; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.CubeSelector">
            <summary>
            UI control that shows the combo box with the list of all available cubes
            in the associated <b>OlapManager</b>.
            <seealso cref="T:Dundas.Olap.Manager.OlapManager"/>
            </summary>
            <remarks>
            The CubeSelector allows the end-user to select the current cube from a 
            list of all available cubes.  The CubeSelector must be associated with 
            the <b>OlapManager</b> by making use of the <see cref="P:Dundas.Olap.WebUIControls.CubeSelector.OlapManager"/> property. 
            
            <p>Any changes to the <see cref="P:Dundas.Olap.Manager.OlapManager.CurrentCubeName"/> property of the 
            <b>OlapManger</b> will automatically be reflected in the CubeSelector.</p>
            </remarks>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.CubeSelector.cubeItemsLoaded">
            <summary>
            Determines if cube items are loaded
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CubeSelector.#ctor">
            <summary>
            Initializes new instance of CubeSelector class
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CubeSelector.ShouldSerializeOlapManagerID">
            <summary>
            Indicates whether the OlapManagerID property should be persisted.
            </summary>
            <returns>
            Returns true if the property value has changed from its default; otherwise false.
            </returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CubeSelector.EnsureCubeItemsLoaded">
            <summary>
            Loads cubes names into the list box
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CubeSelector.OnCubeChanged(System.String)">
            <summary>
            PostBack / CallBack handler
            </summary>
            <param name="cubeName"></param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CubeSelector.OnLoad(System.EventArgs)">
            <summary>
            This member overrides <see cref="M:System.Web.UI.Control.OnLoad(System.EventArgs)"/> method
            </summary>
            <param name="e">The event argument</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CubeSelector.OnPreRender(System.EventArgs)">
            <summary>
            This member overrides <see cref="M:System.Web.UI.Control.OnPreRender(System.EventArgs)"/> method
            </summary>
            <param name="e">The event argument</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CubeSelector.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            This member overrides <see cref="M:System.Web.UI.Control.OnPreRender(System.EventArgs)"/> method
            </summary>
            <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter"/> object</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CubeSelector.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)">
            <summary>
            When implemented by a class, enables a server control to process an event raised when a form is posted to the server.
            </summary>
            <param name="eventArgument">A <see cref="T:System.String"></see> that represents an optional event argument to be passed to the event handler.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CubeSelector.Dundas#Olap#Manager#IOlapCallbackHandler#PopulateCallbackContent(System.Web.UI.HtmlTextWriter,System.String)">
            <summary>
            Returns internal content of the control used to visual ( DHTML) or script updating.
            </summary>
            <param name="output">A <see cref="T:System.Web.UI.HtmlTextWriter"/> used for output</param>
            <param name="contentType">The requested type of content</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CubeSelector.Dundas#Olap#Manager#IOlapConditionalCallbackHandler#ShouldPopulateCallbackContent">
            <summary>
            Returns true if this control should populate its callback content
            </summary>
            <returns></returns>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.CubeSelector.OlapManager">
            <summary>
            Gets or sets the associated <b>OlapManager</b> object.
            <seealso cref="T:Dundas.Olap.Manager.OlapManager"/>
            </summary>
            <remarks>
            The <b>OlapReportList</b> control works with a list of reports 
            defined in the <see cref="P:Dundas.Olap.Manager.OlapManager.OlapReports"/> collection of the <see cref="T:Dundas.Olap.Manager.OlapManager"/>
            object. Any change to that list will automatically update the list content.
            
            If the end user adds, deletes or renames reports in the list, it will 
            automatically be reflected in the <b>OlapManager</b>. When the selected 
            report in the list is changed, it is automatically set as the <see cref="P:Dundas.Olap.Manager.OlapManager.CurrentOlapReport"/>
            in the associated <b>OlapManager</b> object.
            </remarks>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.CubeSelector.OlapManagerID">
            <summary>
            Gets or sets the ID of the associated <b>OlapManager</b> object.
            <seealso cref="T:Dundas.Olap.Manager.OlapManager"/>
            </summary>
            <remarks>
            The <b>OlapReportList</b> control works with a list of reports 
            defined in the <see cref="P:Dundas.Olap.Manager.OlapManager.OlapReports"/> collection of the <see cref="T:Dundas.Olap.Manager.OlapManager"/>
            object. Any change to that list will automatically update the list content.
            
            If the end user adds, deletes or renames reports in the list, it will 
            automatically be reflected in the <b>OlapManager</b>. When the selected 
            report in the list is changed, it is automatically set as the <see cref="P:Dundas.Olap.Manager.OlapManager.CurrentOlapReport"/>
            in the associated <b>OlapManager</b> object.
            </remarks>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.CubeSelector.DataMember">
            <summary>
            This member cannot be used.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.CubeSelector.DataSource">
            <summary>
            This member cannot be used.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.CubeSelector.DataValueField">
            <summary>
            This member cannot be used.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.CubeSelector.DataTextField">
            <summary>
            This member cannot be used.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.CubeSelector.Items">
            <summary>
            This member cannot be used.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.CubeSelector.DataTextFormatString">
            <summary>
            This member cannot be used.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.CubeSelector.EnableViewState">
            <summary>
            Gets or sets a value indicating whether the server control persists its view state, and the view state of any child controls it contains, to the requesting client.
            </summary>
            <value>
            true if the server control maintains its view state; otherwise false. The default is false.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.CubeSelector.AutoPostBack">
            <summary>
            This member cannot be used.
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.Utilities.KeywordsRegistry">
            <summary>
            KeywordRegistry class stores information about all 
            chart formatting keywords. It automatically registers 
            all known keywords when object is constructed. This 
            data is exposed as ArrayList through the ‘registeredKeywords’ 
            field. Each item in this ArrayList is a KeywordInfo 
            object which describes a single formatting keyword.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Utilities.KeywordsRegistry.#ctor">
            <summary>
            Default private constructor.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Utilities.KeywordsRegistry.#ctor(System.ComponentModel.Design.IServiceContainer)">
            <summary>
            Keywords registry public constructor.
            </summary>
            <param name="container">Reference to the service container.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Utilities.KeywordsRegistry.GetService(System.Type)">
            <summary>
            Returns Keywords registry service object.
            </summary>
            <param name="serviceType">Service type to get.</param>
            <returns>Custom attributes registry service.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Utilities.KeywordsRegistry.RegisterKeywords">
            <summary>
            Registers all chart formatting keywords.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Utilities.KeywordsRegistry.Register(System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Adds keyword information into the registry.
            </summary>
            <param name="name">Keyword full name.</param>
            <param name="keyword">Keyword text.</param>
            <param name="keywordAliases">Keyword alternative text.</param>
            <param name="description">Keyword description.</param>
            <param name="appliesToTypes">Comma separated list of applicable classe.</param>
            <param name="appliesToProperties">Comma separated list of applicable properties.</param>
            <param name="supportsFormatting">True if formatting is supported.</param>
            <param name="supportsValueIndex">True if different point Y values are supported.</param>
        </member>
        <member name="T:Dundas.Charting.WebControl.Utilities.KeywordInfo">
            <summary>
            KeywordInfo class stores information about a single 
            formatting keyword. This information includes Name, 
            Description, list of data types and properties it 
            applies to and other information.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Utilities.KeywordInfo.Name">
            <summary>
            Keyword full name.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Utilities.KeywordInfo.Keyword">
            <summary>
            String that represent this keyword in the property (keyword).
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Utilities.KeywordInfo.KeywordAliases">
            <summary>
            Comma separated strings that may alternatively represent this 
            keyword in the property.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Utilities.KeywordInfo.Description">
            <summary>
            Keyword description.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Utilities.KeywordInfo.AppliesToTypes">
            <summary>
            Comma separated names of classes this keyword applies to.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Utilities.KeywordInfo.AppliesToProperties">
            <summary>
            Comma separated names of properties this keyword applies to.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Utilities.KeywordInfo.SupportsFormatting">
            <summary>
            True if keyword value can be formatted.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Utilities.KeywordInfo.SupportsValueIndex">
            <summary>
            True if keyword can be used with different point Y values.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Utilities.KeywordInfo.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Keyword information object constructor
            </summary>
            <param name="name">Keyword full name.</param>
            <param name="keyword">Keyword text.</param>
            <param name="keywordAliases">Keyword alternative text.</param>
            <param name="description">Keyword description.</param>
            <param name="appliesToTypes">Comma separated list of applicable classe.</param>
            <param name="appliesToProperties">Comma separated list of applicable properties.</param>
            <param name="supportsFormatting">True if formatting is supported.</param>
            <param name="supportsValueIndex">True if different point Y values are supported.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Utilities.KeywordInfo.ToString">
            <summary>
            Returns a String that represents the current keyword Information.
            </summary>
            <returns>Returns keyword name.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Utilities.KeywordInfo.GetKeywords">
            <summary>
            Gets an array of keywords names including the aliases.
            </summary>
            <returns>A string array of keyword names that represent this keyword.</returns>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.MapAreaShape">
            <summary>
            Defines the map areas shape types
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.MapAreaShape.Rectangle">
            <summary>
            Rectangle defines the map area shape
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.MapAreaShape.Circle">
            <summary>
            Circle defines the map area shape
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.MapAreaShape.Polygon">
            <summary>
            Polygon defines the map area shape
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.MapArea">
            <summary>
            MapArea class represents an area of the chart with end-user 
            interactivity like tooltip, HREF or custom attributes.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.MapArea.#ctor">
            <summary>
            Public constructor
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.MapArea.GetTag(Dundas.Olap.WebUIControls.ChartGraphics)">
            <summary>
            Gets HTML tag which represent this map area.
            </summary>
            <param name="graph">Reference to the chart graphics object.</param>
            <returns>Map area HTML tag.</returns>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.MapArea.Custom">
            <summary>
            Indicates that map area is custom.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.MapArea.Coordinates">
            <summary>
            Coordinates of the area.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.MapArea.Shape">
            <summary>
            Shape of the area.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.MapArea.Name">
            <summary>
            Map area name.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.MapArea.ToolTip">
            <summary>
            Tooltip of the area.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.MapArea.Href">
            <summary>
            URL target of the area.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.MapArea.MapAreaAttributes">
            <summary>
            Other attributes of the area.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.MapAreasCollection">
            <summary>
            MapAreasCollection class is a strongly typed collection of MapAreas
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.MapAreasCollection.#ctor">
            <summary>
            Data Point Collection object constructor
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.MapAreasCollection.Clear">
            <summary>
            Removes all items from the collection.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.MapAreasCollection.Contains(System.Object)">
            <summary>
            Check if specified object exists in the collection.
            </summary>
            <param name="value">Object to check.</param>
            <returns>True if object exist.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.MapAreasCollection.IndexOf(System.Object)">
            <summary>
            Gets first index of the collection item equal to the object provided.
            </summary>
            <param name="value">Object to look for.</param>
            <returns>Index of found object.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.MapAreasCollection.Remove(System.Object)">
            <summary>
            Remove object from the collection
            </summary>
            <param name="value">Value to be removed.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.MapAreasCollection.RemoveAt(System.Int32)">
            <summary>
            Remove item from the collection by index.
            </summary>
            <param name="index">Zero based index.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.MapAreasCollection.Add(System.Object)">
            <summary>
            Add data point object into the collection.
            </summary>
            <param name="value">Data point to add.</param>
            <returns>Index of the newly added object.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.MapAreasCollection.Insert(System.Int32,Dundas.Olap.WebUIControls.MapArea)">
            <summary>
            Insert data point object into the collection.
            </summary>
            <param name="index">Zero based index.</param>
            <param name="value">Data point to insert.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.MapAreasCollection.Insert(System.Int32,System.Object)">
            <summary>
            Insert data point object into the collection.
            </summary>
            <param name="index">Zero based index.</param>
            <param name="value">Data point to insert.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.MapAreasCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies all the elements of the current collection to the specified one-dimensional 
            collection starting at the specified destination index.
            </summary>
            <param name="array">Destination collection.</param>
            <param name="index">The index in collection at which copying begins.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.MapAreasCollection.GetEnumerator">
            <summary>
            Get collection enumerator.
            </summary>
            <returns>Collection enumerator.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.MapAreasCollection.Add(System.String,System.String,System.String,System.Drawing.Drawing2D.GraphicsPath)">
            <summary>
            Add new map area item into the collection.
            </summary>
            <param name="toolTip">Tool tip.</param>
            <param name="href">Jump URL.</param>
            <param name="attr">Other area attributes.</param>
            <param name="path">Area coordinates as graphis path</param>
            <returns>Index of the newly added item.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.MapAreasCollection.Add(System.String,System.String,System.String,System.Drawing.RectangleF)">
            <summary>
            Add new map area item into the collection.
            </summary>
            <param name="toolTip">Tool tip.</param>
            <param name="href">Jump URL.</param>
            <param name="attr">Other area attributes.</param>
            <param name="rect">Rect coordinates</param>
            <returns>Index of the newly added item.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.MapAreasCollection.Add(Dundas.Olap.WebUIControls.MapAreaShape,System.String,System.String,System.String,System.Single[])">
            <summary>
            Add new map area item into the collection.
            </summary>
            <param name="shape">Area shape.</param>
            <param name="toolTip">Tool tip.</param>
            <param name="href">Jump URL.</param>
            <param name="attr">Other area attributes.</param>
            <param name="coord">Array of coordinates</param>
            <returns>Index of the newly added item.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.MapAreasCollection.Insert(System.Int32,System.String,System.String,System.String,System.Drawing.Drawing2D.GraphicsPath)">
            <summary>
            Insert new map area item into the collection.
            </summary>
            <param name="index">Index to insert at.</param>
            <param name="toolTip">Tool tip.</param>
            <param name="href">Jump URL.</param>
            <param name="attr">Other area attributes.</param>
            <param name="path">Area coordinates as graphis path</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.MapAreasCollection.Insert(System.Int32,System.String,System.String,System.String,System.Drawing.Drawing2D.GraphicsPath,System.Boolean,Dundas.Olap.WebUIControls.ChartGraphics)">
            <summary>
            Insert new map area item into the collection.
            </summary>
            <param name="index">Index to insert at.</param>
            <param name="toolTip">Tool tip.</param>
            <param name="href">Jump URL.</param>
            <param name="attr">Other area attributes.</param>
            <param name="path">Area coordinates as graphis path.</param>
            <param name="absCoordinates">Absolute coordinates in the graphis path.</param>
            <param name="graph">Chart graphics object.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.MapAreasCollection.InsertSubpath(System.Int32,System.String,System.String,System.String,System.Drawing.Drawing2D.GraphicsPath,System.Boolean,Dundas.Olap.WebUIControls.ChartGraphics)">
            <summary>
            Insert new map area item into the collection.
            </summary>
            <param name="index">Index to insert at.</param>
            <param name="toolTip">Tool tip.</param>
            <param name="href">Jump URL.</param>
            <param name="attr">Other area attributes.</param>
            <param name="path">Area coordinates as graphis path.</param>
            <param name="absCoordinates">Absolute coordinates in the graphis path.</param>
            <param name="graph">Chart graphics object.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.MapAreasCollection.Insert(System.Int32,System.String,System.String,System.String,System.Drawing.RectangleF)">
            <summary>
            Insert new map area item into the collection.
            </summary>
            <param name="index">Index to insert at.</param>
            <param name="toolTip">Tool tip.</param>
            <param name="href">Jump URL.</param>
            <param name="attr">Other area attributes.</param>
            <param name="rect">Rect coordinates</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.MapAreasCollection.Insert(System.Int32,Dundas.Olap.WebUIControls.MapAreaShape,System.String,System.String,System.String,System.Single[])">
            <summary>
            Insert new map area item into the collection.
            </summary>
            <param name="index">Index to insert at.</param>
            <param name="shape">Area shape.</param>
            <param name="toolTip">Tool tip.</param>
            <param name="href">Jump URL.</param>
            <param name="attr">Other area attributes.</param>
            <param name="coord">Array of coordinates</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.MapAreasCollection.Add(System.String,System.Drawing.Drawing2D.GraphicsPath)">
            <summary>
            Add new map area item into the collection.
            </summary>
            <param name="href">Jump URL.</param>
            <param name="path">Area coordinates as graphis path</param>
            <returns>Index of the newly added item.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.MapAreasCollection.Add(System.String,System.Drawing.RectangleF)">
            <summary>
            Add new map area item into the collection.
            </summary>
            <param name="href">Jump URL.</param>
            <param name="rect">Rect coordinates</param>
            <returns>Index of the newly added item.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.MapAreasCollection.Add(Dundas.Olap.WebUIControls.MapAreaShape,System.String,System.Single[])">
            <summary>
            Add new map area item into the collection.
            </summary>
            <param name="shape">Area shape.</param>
            <param name="href">Jump URL.</param>
            <param name="coord">Array of coordinates</param>
            <returns>Index of the newly added item.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.MapAreasCollection.Insert(System.Int32,System.String,System.Drawing.Drawing2D.GraphicsPath)">
            <summary>
            Insert new map area item into the collection.
            </summary>
            <param name="index">Index to insert at.</param>
            <param name="href">Jump URL.</param>
            <param name="path">Area coordinates as graphis path</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.MapAreasCollection.Insert(System.Int32,System.String,System.Drawing.RectangleF)">
            <summary>
            Insert new map area item into the collection.
            </summary>
            <param name="index">Index to insert at.</param>
            <param name="href">Jump URL.</param>
            <param name="rect">Rect coordinates</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.MapAreasCollection.Insert(System.Int32,Dundas.Olap.WebUIControls.MapAreaShape,System.String,System.Single[])">
            <summary>
            Insert new map area item into the collection.
            </summary>
            <param name="index">Index to insert at.</param>
            <param name="shape">Area shape.</param>
            <param name="href">Jump URL.</param>
            <param name="coord">Array of coordinates</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.MapAreasCollection.RemoveNonCustom">
            <summary>
            Removes all non custom map areas items from the collection.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.MapAreasCollection.Item(System.Int32)">
            <summary>
            Indexer of the class. Returns the MapArea object by integer index.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.MapAreasCollection.IsFixedSize">
            <summary>
            Gets a value indicating whether the collection has a fixed size.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.MapAreasCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the collection is read-only.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.MapAreasCollection.Count">
            <summary>
            Number of items in the collection.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.MapAreasCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the collection is synchronized (thread-safe).
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.MapAreasCollection.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the collection.
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.Formulas.Oscillators">
            <summary>
            This class is used to calculate oscillator 
            indicators used in Technical Analyses.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Formulas.Oscillators.ChaikinOscillator(System.Double[][],System.Double[][]@,System.String[],System.String[])">
            <summary>
            The Chaikin Oscillator is created by subtracting a 10 period 
            exponential moving average of the Accumulation/Distribution 
            line from a 3 period moving average of the 
            Accumulation/Distribution Line. 
            ---------------------------------------------------------
            Input: 
            	- 4 Y values ( Hi, Low, Close, Volume ).
            Output: 
            	- 1 Y value Chaikin Oscillator
            Parameters: 
            	- Short Period for Exponential Moving average (default=3)
            	- Long Period for Exponential Moving average (default=10)
            Extra Parameters: 
            	- Start from First
            </summary>
            <param name="inputValues">Arrays of doubles - Input values</param>
            <param name="outputValues">Arrays of doubles - Output values</param>
            <param name="parameterList">Array of strings - Parameters</param>
            <param name="extraParameterList">Array of strings - Extra parameters</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Formulas.Oscillators.DetrendedPriceOscillator(System.Double[][],System.Double[][]@,System.String[],System.String[])">
            <summary>
            The Detrended Price Oscillator ("DPO") attempts to 
            eliminate the trend in prices. Detrended prices allow 
            you to more easily identify cycles and overbought/oversold 
            levels. To calculate the DPO, you specify a time period. 
            Cycles longer than this time period are removed from 
            prices, leaving the shorter-term cycles. 
            ---------------------------------------------------------
            Input: 
            	- 1 Y value ( Close ).
            Output: 
            	- 1 Y value Detrended Price Oscillator
            Parameters: 
            	- Period
            Extra Parameters: 
            	-
            </summary>
            <param name="inputValues">Arrays of doubles - Input values</param>
            <param name="outputValues">Arrays of doubles - Output values</param>
            <param name="parameterList">Array of strings - Parameters</param>
            <param name="extraParameterList">Array of strings - Extra parameters</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Formulas.Oscillators.VolatilityChaikins(System.Double[][],System.Double[][]@,System.String[],System.String[])">
            <summary>
            Chaikin's Volatility indicator compares the spread 
            between a security's high and low prices. 
            It quantifies volatility as a widening of the range 
            between the high and the low price. There are two ways 
            to interpret this measure of volatility. One method 
            assumes that market tops are generally accompanied by 
            increased volatility (as investors get nervous and 
            indecisive) and that the latter stages of a market 
            bottom are generally accompanied by decreased volatility 
            (as investors get bored). Another method (Mr. Chaikin's) 
            assumes that an increase in the Volatility indicator over 
            a relatively short time period indicates that a bottom is 
            near (e.g., a panic sell-off) and that a decrease in 
            volatility over a longer time period indicates an 
            approaching top (e.g., a mature bull market). As with 
            almost all experienced investors, Mr. Chaikin recommends 
            that you do not rely on any one indicator. He suggests 
            using a moving average penetration or trading band system 
            to confirm this (or any) indicator.
            ---------------------------------------------------------
            Input: 
            	- 2 Y values ( Hi, Low ).
            Output: 
            	- 1 Y value Volatility Chaikins
            Parameters: 
            	- Periods (default 10)- is used to specify the Shift days, By default this property is set to 10.
                - SignalPeriod (default 10)- is used to calculate Exponential Moving Avg of the Signal line, By default this property is set to 10.
            Extra Parameters: 
            	-
            </summary>
            <param name="inputValues">Arrays of doubles - Input values</param>
            <param name="outputValues">Arrays of doubles - Output values</param>
            <param name="parameterList">Array of strings - Parameters</param>
            <param name="extraParameterList">Array of strings - Extra parameters</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Formulas.Oscillators.VolumeOscillator(System.Double[][],System.Double[][]@,System.String[],System.String[])">
            <summary>
            The Volume Oscillator displays the difference between two 
            moving averages of a security's volume. The difference 
            between the moving averages can be expressed in either 
            points or percentages. You can use the difference between 
            two moving averages of volume to determine if the overall 
            volume trend is increasing or decreasing. When the Volume 
            Oscillator rises above zero, it signifies that the 
            shorter-term volume moving average has risen above 
            the longer-term volume moving average, and thus, that 
            the short-term volume trend is higher (i.e., more volume) 
            than the longer-term volume trend.
            ---------------------------------------------------------
            Input: 
            	- 1 Y values ( Volume ).
            Output: 
            	- 1 Y value VolumeOscillator
            Parameters: 
            	- ShortPeriod (Default 5)= is used to configure the short period.
            	- LongPeriod (Default 10)= is used to configure the Long period.
            	- Percentage (Default true)= The Volume Oscillator can display the difference between the two moving averages as either points or percentages.
            Extra Parameters: 
            	-
            </summary>
            <param name="inputValues">Arrays of doubles - Input values</param>
            <param name="outputValues">Arrays of doubles - Output values</param>
            <param name="parameterList">Array of strings - Parameters</param>
            <param name="extraParameterList">Array of strings - Extra parameters</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Formulas.Oscillators.StochasticIndicator(System.Double[][],System.Double[][]@,System.String[],System.String[])">
            <summary>
            The Stochastic Indicator is based on the observation that 
            as prices increase, closing prices tend to accumulate ever 
            closer to the highs for the period. Conversely, as prices 
            decrease, closing prices tend to accumulate ever closer to 
            the lows for the period. Trading decisions are made with 
            respect to divergence between % of "D" (one of the two 
            lines generated by the study) and the item's price. For 
            example, when a commodity or stock makes a high, reacts, 
            and subsequently moves to a higher high while corresponding 
            peaks on the % of "D" line make a high and then a lower 
            high, a bearish divergence is indicated. When a commodity 
            or stock has established a new low, reacts, and moves to a 
            lower low while the corresponding low points on the % of 
            "D" line make a low and then a higher low, a bullish 
            divergence is indicated. Traders act upon this divergence 
            when the other line generated by the study (K) crosses on 
            the right-hand side of the peak of the % of "D" line in the 
            case of a top, or on the right-hand side of the low point 
            of the % of "D" line in the case of a bottom. The Stochastic 
            Oscillator is displayed as two lines. The main line is 
            called "%K." The second line, called "%D," is a moving 
            average of %K. 
            ---------------------------------------------------------
            Input: 
            	- 3 Y values ( Hi, Low, Close ).
            Output: 
            	- 2 Y value ( %K, %D )
            Parameters: 
            	- PeriodD (Default 10) = is used for %D calculation as SMA of %K.
                - PeriodK (Default 10) = is used to calculate %K.
            Extra Parameters: 
            	- 
            </summary>
            <param name="inputValues">Arrays of doubles - Input values</param>
            <param name="outputValues">Arrays of doubles - Output values</param>
            <param name="parameterList">Array of strings - Parameters</param>
            <param name="extraParameterList">Array of strings - Extra parameters</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Formulas.Oscillators.WilliamsR(System.Double[][],System.Double[][]@,System.String[],System.String[])">
            <summary>
            Williams’ %R (pronounced "percent R") is a momentum 
            indicator that measures overbought/oversold levels. 
            Williams’ %R was developed by Larry Williams. The 
            interpretation of Williams' %R is very similar to that 
            of the Stochastic Oscillator except that %R is plotted 
            upside-down and the Stochastic Oscillator has internal 
            smoothing. To display the Williams’ %R indicator on an 
            upside-down scale, it is usually plotted using negative 
            values (e.g., -20%). Readings in the range of 80 to 100% 
            indicate that the security is oversold while readings in 
            the 0 to 20% range suggest that it is overbought.
            As with all overbought/oversold indicators, it is best to 
            wait for the security's price to change direction before 
            placing your trades. For example, if an overbought/oversold 
            indicator (such as the Stochastic Oscillator or Williams' 
            %R) is showing an overbought condition, it is wise to wait 
            for the security's price to turn down before selling the 
            security. (The MACD is a good indicator to monitor change 
            in a security's price.) It is not unusual for 
            overbought/oversold indicators to remain in an 
            overbought/oversold condition for a long time period as 
            the security's price continues to climb/fall. Selling 
            simply because the security appears overbought may take 
            you out of the security long before its price shows signs 
            of deterioration.
            ---------------------------------------------------------
            Input: 
            	- 3 Y values ( Hi, Low, Close ).
            Output: 
            	- 2 Y value ( %R )
            Parameters: 
            	- Period (Default 14) = is used to configure the number of periods to calculate the WilliamsR
            Extra Parameters: 
            	- 
            </summary>
            <param name="inputValues">Arrays of doubles - Input values</param>
            <param name="outputValues">Arrays of doubles - Output values</param>
            <param name="parameterList">Array of strings - Parameters</param>
            <param name="extraParameterList">Array of strings - Extra parameters</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Formulas.Oscillators.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Formulas.Oscillators.Formula(System.String,System.Double[][],System.Double[][]@,System.String[],System.String[],System.String[][]@)">
            <summary>
            The first method in the module, which converts a formula 
            name to the corresponding private method.
            </summary>
            <param name="formulaName">String which represent a fomula name</param>
            <param name="inputValues">Arrays of doubles - Input values</param>
            <param name="outputValues">Arrays of doubles - Output values</param>
            <param name="parameterList">Array of strings - Formula parameters</param>
            <param name="extraParameterList">Array of strings - Extra Formula parameters from DataManipulator object</param>
            <param name="outLabels">Array of strings - Used for Labels. Description for ouput results.</param>
        </member>
        <member name="P:Dundas.Charting.WebControl.Formulas.Oscillators.Name">
            <summary>
            Formula Module name
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.Design.ObjectPropertyTab">
            <summary>
            Our sample PropertyTab.  It is connected to an instance of FunkyButton
            and displayes each of its vertices as a different property.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Design.ObjectPropertyTab.img">
            <summary>
            The FunkyButton that we are attached to.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.ObjectPropertyTab.CanExtend(System.Object)">
            <summary>
            We like FunkyButtons!
            </summary>
            <param name="o"></param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.ObjectPropertyTab.GetProperties(System.Object,System.Attribute[])">
            <summary>
            Just call the other version...
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.ObjectPropertyTab.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>
            Our main function.  We display the vertices of a FunkyButton as properties by creating
            PropertyDescriptors for each one.
            </summary>
            <param name="context"></param>
            <param name="component"></param>
            <param name="attrs"></param>
            <returns></returns>
        </member>
        <member name="P:Dundas.Charting.WebControl.Design.ObjectPropertyTab.TabName">
            <summary>
            This is the tooltip string that will be displayed
            for this tab button.
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.Design.ObjectPropertyTab.Bitmap">
            <summary>
            The Image that will be displayed on the PropertyGrid toolbar.
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.Design.ChartActionList">
            <summary>
            Defines a list of items used to create a DesignerActionPanel.
            Extends Dundas Chart design time functionality in VS 2005
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Design.ChartActionList.selectedItemInfo">
            <summary>
            Keeps information for the custom property dialog
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Design.ChartActionList.suppresList">
            <summary>
            Disables of enables action list ( returns empty list )
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Design.ChartActionList.ChartActList">
            <summary>
            Contains list of ChartActionType items
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Design.ChartActionList.chartMirror">
            <summary>
            Intyance of  ChartMirror class which contain custom properties
            which doesnot exists in tha chart object model
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.ChartActionList.#ctor(Dundas.Charting.WebControl.Design.DundasChartDesigner)">
            <summary>
            Creates new instance of ChartActionList with specified parameters
            </summary>
            <param name="chartDesigner">Parent Chart Designer</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.ChartActionList.GetSortedActionItems">
            <summary>
            Returns the collection of DesignerActionItem objects contained in the list. 
            </summary>
            <returns>Collection of DesignerActionItem objects contained in the list</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.ChartActionList.GetSelectedActionType">
            <summary>
            Locates and returns ChartActionType againts selected chart object
            </summary>
            <returns>Corresponed ChartActionType</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.ChartActionList.GetObjectInfo">
            <summary>
            Gets the selected ObjectInfo class ( contains ionformation for clicked object into designer).
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.ChartActionList.EnableActionList">
            <summary>
            Enables action list population
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.ChartActionList.DisableActionList">
            <summary>
            Disables action list population
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.ChartActionList.IsEnabled">
            <summary>
            Determines whether this instance is enabled.
            </summary>
            <returns>
            	<c>true</c> if this instance is enabled; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.ChartActionList.GetDesigner">
            <summary>
            Returns the parent designer
            </summary>
            <returns>The chart designer</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.ChartActionList.GetSelectedObject">
            <summary>
            Gets the selected chart object
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.ChartActionList.GetSelectedItemInfo">
            <summary>
            Gets the selected object context as SelectedItemInfo object
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.ChartActionList.GetSelectedCollection">
            <summary>
            Gets the colection which contains the selected chart object 
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.ChartActionList.IsObjectSelected">
            <summary>
            Returns true if any chart object is selected
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.ChartActionList.ExpandNames(System.String)">
            <summary>
            Helper fuction which converts property name 
            to expression - "ChangePropertyName" to "Change Property Name"
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.ChartActionList.System#IServiceProvider#GetService(System.Type)">
            <summary>
            Gets the service object of the specified type. 
            </summary>
            <param name="serviceType">An object that specifies the type of service object to get. </param>
            <returns>A service object of type serviceType. -or- null if there is no service object of type serviceType. </returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.ChartActionList.System#Windows#Forms#Design#IWindowsFormsEditorService#CloseDropDown">
            <summary>
            Closes any previously opened drop down control area
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.ChartActionList.System#Windows#Forms#Design#IWindowsFormsEditorService#DropDownControl(System.Windows.Forms.Control)">
            <summary>
            Displays the specified control in a drop down area below a value field of the property grid that provides this service. 
            </summary>
            <param name="control"></param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.ChartActionList.System#Windows#Forms#Design#IWindowsFormsEditorService#ShowDialog(System.Windows.Forms.Form)">
            <summary>
            Shows the specified Form. 
            </summary>
            <param name="dialog"></param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.ChartActionList.System#ComponentModel#ICustomTypeDescriptor#GetProperties">
            <summary>
            Returns collection of properties of this object.
            </summary>
            <returns>Collection of properties descriptors.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.ChartActionList.System#ComponentModel#ICustomTypeDescriptor#GetProperties(System.Attribute[])">
            <summary>
            Returns collection of properties of this object.
            </summary>
            <param name="attributes">Attributes for filtering.</param>
            <returns>Collection of properties descriptors.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.ChartActionList.System#ComponentModel#ICustomTypeDescriptor#GetClassName">
            <summary>
            Gets object class name.
            </summary>
            <returns>Object class name.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.ChartActionList.System#ComponentModel#ICustomTypeDescriptor#GetAttributes">
            <summary>
            Gets object attributes.
            </summary>
            <returns>Object attributes</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.ChartActionList.System#ComponentModel#ICustomTypeDescriptor#GetComponentName">
            <summary>
            Gets object component name.
            </summary>
            <returns>Object component name.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.ChartActionList.System#ComponentModel#ICustomTypeDescriptor#GetConverter">
            <summary>
            Gets object converter.
            </summary>
            <returns>Object converter.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.ChartActionList.System#ComponentModel#ICustomTypeDescriptor#GetDefaultEvent">
            <summary>
            Gets object default event.
            </summary>
            <returns>Object default event.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.ChartActionList.System#ComponentModel#ICustomTypeDescriptor#GetDefaultProperty">
            <summary>
            Gets object default property.
            </summary>
            <returns>Object default property.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.ChartActionList.System#ComponentModel#ICustomTypeDescriptor#GetEditor(System.Type)">
            <summary>
            Gets object editor.
            </summary>
            <param name="editorBaseType">Editor base type.</param>
            <returns>object editor.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.ChartActionList.System#ComponentModel#ICustomTypeDescriptor#GetEvents(System.Attribute[])">
            <summary>
            Gets object events.
            </summary>
            <param name="attributes">Filtering attributes.</param>
            <returns>Object events.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.ChartActionList.System#ComponentModel#ICustomTypeDescriptor#GetEvents">
            <summary>
            Gets object events.
            </summary>
            <returns>Object events.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.ChartActionList.System#ComponentModel#ICustomTypeDescriptor#GetPropertyOwner(System.ComponentModel.PropertyDescriptor)">
            <summary>
            Get property owner.
            </summary>
            <param name="pd">Property descriptor.</param>
            <returns>Property owner.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.ChartActionList.InvokeMethodTransaction(System.Web.UI.Design.TransactedChangeCallback,System.Object,System.String)">
            <summary>
            Invoke propery change in transaction context
            </summary>
            <param name="callback">change callback</param>
            <param name="context">object context</param>
            <param name="transactionName">name of transaction</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.ChartActionList.ChartAreaAddSeriesCallBack(System.Object)">
            <summary>
            Adds chart series as callback in transaction context
            </summary>
            <param name="context">the object context</param>
            <returns>true for success</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.ChartActionList.ChartAreaAddSeries">
            <summary>
            Adds a chart series to the chart
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.ChartActionList.ChartAddAreaCallBack(System.Object)">
            <summary>
            Adds a chart area in transacton
            </summary>
            <param name="context">object context</param>
            <returns>frue for success</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.ChartActionList.ChartAddArea">
            <summary>
            Adds a chart area
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.ChartActionList.InvokePropertiesCallBack(System.Object)">
            <summary>
            Shows the custom propery editor, handles "Configure XXX..."
            </summary>
            <param name="context">object context</param>
            <returns>frue for success</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.ChartActionList.InvokeProperties">
            <summary>
            Shows the custom propery editor, handles "Configure XXX..."
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.ChartActionList.SeriesDeleteSeriesCallBack(System.Object)">
            <summary>
            Delete series transaction callback
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.ChartActionList.SeriesDeleteSeries">
            <summary>
            Deletes chart series
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.ChartActionList.ChartDeleteAreaCallBack(System.Object)">
            <summary>
            Delete series transaction callback
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.ChartActionList.ChartDeleteArea">
            <summary>
            Deletes chart series
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.Design.ChartActionList.AutoShow">
            <summary>
            Gets or sets a value indicating whether the DesignerActionPanel should automatically be displayed when it is created
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.Design.ChartActionList.Chart">
            <summary>
            Gets the chart object
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.Design.ChartActionList.SeriesDeleteSeriesIsBrowsable">
            <summary>
            Determines if "Delete Series:..." action method is visible
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.Design.ChartActionList.ChartDeleteAreaIsBrowsable">
            <summary>
            Determines if "Delete Series:..." action method is visible
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.Design.ChartActionList.TypeDescriptorContextImpl">
            <summary>
            Custom TypeDescriptorContextImpl to replace or generate ITypeDescriptorContext
            for UIEditors.
            Provides contextual information about a component, such as its container and type descriptor.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.ChartActionList.TypeDescriptorContextImpl.#ctor(Dundas.Charting.WebControl.Design.ChartActionList,System.ComponentModel.PropertyDescriptor)">
            <summary>
            Initializes new instance of TypeDescriptorContextImpl with specified parameters
            </summary>
            <param name="designer">The parent ChartActionList</param>
            <param name="propDescriptor">The target PropertyDescriptor</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.ChartActionList.TypeDescriptorContextImpl.GetService(System.Type)">
            <summary>
            Returns a service by specified type
            </summary>
            <param name="serviceType"></param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.ChartActionList.TypeDescriptorContextImpl.System#ComponentModel#ITypeDescriptorContext#OnComponentChanged">
            <summary>
            Raises the ComponentChanged event. 
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.ChartActionList.TypeDescriptorContextImpl.System#ComponentModel#ITypeDescriptorContext#OnComponentChanging">
            <summary>
            Raises the ComponentChanging event. 
            </summary>
            <returns>true if this object can be changed; otherwise, false. </returns>
        </member>
        <member name="P:Dundas.Charting.WebControl.Design.ChartActionList.TypeDescriptorContextImpl.ComponentChangeService">
            <summary>
            Returns the ComponentChangeService 
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.Design.ChartActionList.TypeDescriptorContextImpl.System#ComponentModel#ITypeDescriptorContext#Container">
            <summary>
            Gets the container representing this TypeDescriptor request.
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.Design.ChartActionList.TypeDescriptorContextImpl.Instance">
            <summary>
            Gets the object that is connected with this type descriptor request.
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.Design.ChartActionList.TypeDescriptorContextImpl.PropertyDescriptor">
            <summary>
            Gets the PropertyDescriptor that is associated with the given context item
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.Design.ChartActionList.SelectedItemInfo">
            <summary>
            The SelectedItemInfo helps to process properly information of selected item.
            Is used mostly  from property editor dialog ( see UIPropertyEditor )
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.ChartActionList.SelectedItemInfo.#ctor">
            <summary>
            Initializes new instance of SelectedItemInfo class
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.ChartActionList.SelectedItemInfo.GetSelectedItemInfo(Dundas.Charting.WebControl.Design.ChartActionList)">
            <summary>
            Gather information from given ChartActionList and 
            returns properly initialzed SelectedItemInfo object
            </summary>
            <param name="list">The ChartActionList object</param>
            <returns>New initialzed SelectedItemInfo object</returns>
        </member>
        <member name="P:Dundas.Charting.WebControl.Design.ChartActionList.SelectedItemInfo.Descriptor">
            <summary>
            Gets and sets the PropertyDescriptor of selected object
            if selected object is a member of collection 
            the property returns the PropertyDescriptor of the collection.
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.Design.ChartActionList.SelectedItemInfo.Index">
            <summary>
            Gets and sets the index of the selected object if selected object 
            is a member of collection
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.Design.ChartActionList.SelectedItemInfo.ObjectName">
            <summary>
            Gets and sets the name of the selected object 
            which appears into the "Configure... " action verb, property editor and undo transactions
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.Design.ChartActionList.SelectedItemInfo.EditableObject">
            <summary>
            The base object which is being edited. Usually is the Chart but for Axis is ChartArea.
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.Design.ChartActionList.SelectedItemInfo.SelectedObject">
            <summary>
            The selected object is being edited , can be IList as series or object as axis
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.Design.ChartActionList.SelectedItemInfo.IsEmpty">
            <summary>
            Returns true if selected object is empty collection or null
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.Design.ChartActionList.SelectedItemInfo.IsArray">
            <summary>
            Returns true if selected object is an array
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.Design.ChartActionList.SelectedItemInfo.IsCollection">
            <summary>
            Returns true if selected object is a collection
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.Design.ChartActionList.SelectedItemInfo.IsChart">
            <summary>
            returns true if selected object is chart.
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.Design.ActionPropertyDescriptor">
            <summary>
            Property descriptor with ability to dynamically change attributes 
            of the base property descriptor object. Used to expose chart properties to
            the design time action list. Note that action list accept and 
            visualize edit property items only on hist own properties.
            See DesignerActionPropertyItem.  The ChartActiolList implements 
            ICustomTypeDescriptor which deploy specified chart properties
            trought this ActionPropertyDescriptor.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.ActionPropertyDescriptor.#ctor(System.Object,System.ComponentModel.PropertyDescriptor,Dundas.Charting.WebControl.Design.ChartActionMember,Dundas.Charting.WebControl.Design.ChartActionList)">
            <summary>
            Constructor of the dynamic property descriptor.
            Initializes new instance of ActionPropertyDescriptor based on specified 
            parameters
            </summary>
            <param name="target">The original object which this propery is bound to</param>
            <param name="basePropertyDescriptor">Base property descriptor.</param>
            <param name="attr">The ChartActionMember which contain additional information</param>
            <param name="actionList">Parent ChartActionList object</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.ActionPropertyDescriptor.GetEditor(System.Type)">
            <summary>
            Returns the property editor. This methos replaces the original editor in some cases 
            in order to mantain properly the ObjectContext which is used by original editor.
            Rreplaces all editors which support painting and data member editors.
            </summary>
            <param name="editorBaseType"></param>
            <returns>The property editor or null</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.ActionPropertyDescriptor.GetPropertyOwner">
            <summary>
            Returns an object that contains the property described by the specified property descriptor. 
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.ActionPropertyDescriptor.CanResetValue(System.Object)">
            <summary>
            Returns whether resetting an object changes its value.
            </summary>
            <param name="component">The component to test for reset capability.</param>
            <returns>true if resetting the component changes its value; otherwise, false.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.ActionPropertyDescriptor.GetValue(System.Object)">
            <summary>
            Gets the current value of the property on a component.
            </summary>
            <param name="component">The component with the property for which to retrieve the value.</param>
            <returns>The value of a property for a given component.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.ActionPropertyDescriptor.ResetValue(System.Object)">
            <summary>
            Resets the value for this property of the component to the default value.
            </summary>
            <param name="component">The component with the property value that is to be reset to the default value.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.ActionPropertyDescriptor.ShouldSerializeValue(System.Object)">
            <summary>
            Determines a value indicating whether the value of this property needs to be persisted.
            </summary>
            <param name="component">The component with the property to be examined for persistence.</param>
            <returns>True if the property should be persisted; otherwise, false.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.ActionPropertyDescriptor.SetValue(System.Object,System.Object)">
            <summary>
            Sets the value of the component to a different value.
            </summary>
            <param name="component">The component with the property value that is to be set.</param>
            <param name="value">The new value.</param>
        </member>
        <member name="P:Dundas.Charting.WebControl.Design.ActionPropertyDescriptor.ComponentType">
            <summary>
            Gets the type of the component this property is bound to.
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.Design.ActionPropertyDescriptor.DisplayName">
            <summary>
            Gets the name that can be displayed in a window, such as a Properties window.
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.Design.ActionPropertyDescriptor.IsBrowsable">
            <summary>
            Gets a value indicating whether this property is browsable.
            The folowing code evaluates the object (Instance) state  
            and returns properly Browsable state
            to achieve visible/unvisible edit item into action list.
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.Design.ActionPropertyDescriptor.IsReadOnly">
            <summary>
            Gets a value indicating whether this property is read-only.
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.Design.ActionPropertyDescriptor.PropertyType">
            <summary>
            Gets the type of the property.
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.Design.ActionPropertyDescriptor.ActionMember">
            <summary>
            Gets the ChartActionMember of this property
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.Design.ActionPropertyDescriptor.Instance">
            <summary>
            Gets the current object instance which this property descriptor is bound to.
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.Design.ActionPropertyDescriptor.ActionList">
            <summary>
            Gets the parent ChartActionList which deploys this descriptor
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.Design.ActionPropertyDescriptor.ExpandedPropertyName">
            <summary>
            Gets the property name separated by words. 
            ie: "ExpandedPropertyName" will return "Expanded Property Name"
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.Design.UITypeEditorProxy">
            <summary>
            Because the action list feature does not support owner draw list boxes 
            which is supported by property editor 
            (see UITypeEditor.GetPaintValueSupported() with enums)
            this is a replacement of original UITypeEditor which emulate property editor behavior 
            in GetPaintValueSupported() part and lefts the original editor to do the rest.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Design.UITypeEditorProxy.targetEditor">
            <summary>
            Instance to the original UITypeEditor
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Design.UITypeEditorProxy.actionPropDesc">
            <summary>
            The parent ActionPropertyDescriptor
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Design.UITypeEditorProxy.listBox">
            <summary>
            ListBox for visualization
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Design.UITypeEditorProxy.edSvc">
            <summary>
            The IWindowsFormsEditorService which display the list box
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.UITypeEditorProxy.#ctor">
            <summary>
            Initializes a new instance of the System.Drawing.Design.UITypeEditor class.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.UITypeEditorProxy.#ctor(System.Drawing.Design.UITypeEditor,Dundas.Charting.WebControl.Design.ActionPropertyDescriptor)">
            <summary>
            Initializes a new instance of the System.Drawing.Design.UITypeEditor class with
            specified UITypeEditor and PropertyDescriptor
            </summary>
            <param name="targetEditor"></param>
            <param name="actionPropDesc"></param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.UITypeEditorProxy.listBox_KeyPress(System.Object,System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            Occurs when a key is pressed while the control has focus.
            Closes the list box.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">Provides data for the KeyPress event.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.UITypeEditorProxy.listBox_Click(System.Object,System.EventArgs)">
            <summary>
            Occurs when the control is clicked.Closes the list box.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e"></param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.UITypeEditorProxy.listBox_DrawItem(System.Object,System.Windows.Forms.DrawItemEventArgs)">
            <summary>
            Occurs when a visual aspect of an owner-drawn ListBox changes.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.UITypeEditorProxy.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Edits the specified object's value using the editor style indicated by
            System.Drawing.Design.UITypeEditor.GetEditStyle().
            </summary>
            <param name="context">
               An System.ComponentModel.ITypeDescriptorContext that can be used to gain
               additional context information. 
            </param>
            <param name="provider">
            An System.IServiceProvider that this editor can use to obtain services. 
            </param>
            <param name="value">
            The object to edit. 
            </param>
            <returns>The new value of the object. If the value of the object hasn't changed, this should return the same object it was passed.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.UITypeEditorProxy.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Gets the editor style used by the System.Drawing.Design.UITypeEditor.EditValue(System.IServiceProvider,System.Object) method.
            </summary>
            <param name="context">An System.ComponentModel.ITypeDescriptorContext that can be used to gain additional context information. </param>
            <returns>
            A System.Drawing.Design.UITypeEditorEditStyle value that indicates the style
            of editor used by
            System.Drawing.Design.UITypeEditor.EditValue(System.IServiceProvider,System.Object).
            If the System.Drawing.Design.UITypeEditor does not support this method, then
            System.Drawing.Design.UITypeEditor.GetEditStyle() will return
            System.Drawing.Design.UITypeEditorEditStyle.None.
            </returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.UITypeEditorProxy.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Indicates whether the specified context supports painting a representation of an object's value within the specified context.
            </summary>
            <param name="context">An System.ComponentModel.ITypeDescriptorContext that can be used to gain additional context information. </param>
            <returns>
            true if System.Drawing.Design.UITypeEditor.PaintValue(System.Object,System.Drawing.Graphics,System.Drawing.Rectangle) is implemented; otherwise, false.
            </returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.UITypeEditorProxy.PaintValue(System.Drawing.Design.PaintValueEventArgs)">
            <summary>
            Paints a representation of the value of an object using the specified System.Drawing.Design.PaintValueEventArgs.
            </summary>
            <param name="e">A System.Drawing.Design.PaintValueEventArgs that indicates what to paint and where to paint it. </param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.UITypeEditorProxy.System#ComponentModel#ITypeDescriptorContext#OnComponentChanged">
            <summary>
            Raises the ComponentChanged event.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.UITypeEditorProxy.System#ComponentModel#ITypeDescriptorContext#OnComponentChanging">
            <summary>
            Returns a value indicating whether this object can be changed.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.UITypeEditorProxy.System#IServiceProvider#GetService(System.Type)">
            <summary>
            Gets the service object of the specified type.
            </summary>
            <param name="serviceType">An object that specifies the type of service object to get.</param>
            <returns>A service object of type serviceType. -or- null</returns>
        </member>
        <member name="P:Dundas.Charting.WebControl.Design.UITypeEditorProxy.IsDropDownResizable">
            <summary>
            Gets a value indicating whether drop-down editors should be resizable by the user.
            </summary>
            <returns>
            true, if drop-down editors are resizable; otherwise, false. 
            </returns>
        </member>
        <member name="P:Dundas.Charting.WebControl.Design.UITypeEditorProxy.System#ComponentModel#ITypeDescriptorContext#Container">
            <summary>
            Gets the container representing this TypeDescriptor request.
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.Design.UITypeEditorProxy.System#ComponentModel#ITypeDescriptorContext#Instance">
            <summary>
            Gets the instance of the object that is connected with this TypeDescriptor request.
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.Design.UITypeEditorProxy.System#ComponentModel#ITypeDescriptorContext#PropertyDescriptor">
            <summary>
            Gets the PropertyDescriptor that describes the given context item.
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.Design.UITypeEditorProxyEx">
            <summary>
            UITypeEditorProxyEx reroute the editor context for not owner draw editors.
            Used to reroute context for data editors.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Design.UITypeEditorProxyEx.targetEditor">
            <summary>
            The original UITypeEditor.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Design.UITypeEditorProxyEx.actionPropDesc">
            <summary>
            Target property
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.UITypeEditorProxyEx.#ctor">
            <summary>
            Initializes a new instance of the UITypeEditorProxyEx class.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.UITypeEditorProxyEx.#ctor(System.Drawing.Design.UITypeEditor,Dundas.Charting.WebControl.Design.ActionPropertyDescriptor)">
            <summary>
            Initializes a new instance of the System.Drawing.Design.UITypeEditor class with
            specified UITypeEditor and PropertyDescriptor
            </summary>
            <param name="targetEditor"></param>
            <param name="actionPropDesc"></param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.UITypeEditorProxyEx.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Edits the specified object's value using the editor style indicated by
            System.Drawing.Design.UITypeEditor.GetEditStyle().
            </summary>
            <param name="context">
               An System.ComponentModel.ITypeDescriptorContext that can be used to gain
               additional context information. 
            </param>
            <param name="provider">
            An System.IServiceProvider that this editor can use to obtain services. 
            </param>
            <param name="value">
            The object to edit. 
            </param>
            <returns>The new value of the object. If the value of the object hasn't changed, this should return the same object it was passed.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.UITypeEditorProxyEx.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Gets the editor style used by the System.Drawing.Design.UITypeEditor.EditValue(System.IServiceProvider,System.Object) method.
            </summary>
            <param name="context">An System.ComponentModel.ITypeDescriptorContext that can be used to gain additional context information. </param>
            <returns>
            A System.Drawing.Design.UITypeEditorEditStyle value that indicates the style
            of editor used by
            System.Drawing.Design.UITypeEditor.EditValue(System.IServiceProvider,System.Object).
            If the System.Drawing.Design.UITypeEditor does not support this method, then
            System.Drawing.Design.UITypeEditor.GetEditStyle() will return
            System.Drawing.Design.UITypeEditorEditStyle.None.
            </returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.UITypeEditorProxyEx.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Indicates whether the specified context supports painting a representation of an object's value within the specified context.
            </summary>
            <param name="context">An System.ComponentModel.ITypeDescriptorContext that can be used to gain additional context information. </param>
            <returns>
            true if System.Drawing.Design.UITypeEditor.PaintValue(System.Object,System.Drawing.Graphics,System.Drawing.Rectangle) is implemented; otherwise, false.
            </returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.UITypeEditorProxyEx.PaintValue(System.Drawing.Design.PaintValueEventArgs)">
            <summary>
            Paints a representation of the value of an object using the specified System.Drawing.Design.PaintValueEventArgs.
            </summary>
            <param name="e">A System.Drawing.Design.PaintValueEventArgs that indicates what to paint and where to paint it. </param>
        </member>
        <member name="P:Dundas.Charting.WebControl.Design.UITypeEditorProxyEx.IsDropDownResizable">
            <summary>
            Gets a value indicating whether drop-down editors should be resizable by the user.
            </summary>
            <returns>
            true, if drop-down editors are resizable; otherwise, false. 
            </returns>
        </member>
        <member name="T:Dundas.Charting.WebControl.Design.DesignerActionVerbItem">
            <summary>
            The DesignerActionVerbItem is used to convert DesignerVerbs to DesignerActionVerbItem
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.DesignerActionVerbItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.ComponentModel.Design.DesignerVerb,System.String)">
            <summary>
            Initializes new instance of DesignerActionVerbItem using specified parameters
            </summary>
            <param name="list">The parent DesignerActionList</param>
            <param name="verb">The verb to emulate</param>
            <param name="category">Category which is used for DesignerActionItem</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.DesignerActionVerbItem.Invoke">
            <summary>
            Programmatically executes the method associated with the DesignerActionMethodItem. 
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.Design.ChartActionType">
            <summary>
            ChartActionType is a top level class of series helper classes which 
            contain information to help population of custom property descriptors 
            of CahrtActionList.
            ChartActionType contain chart object type and list of groups which helps to
            be saparated action list items into groups.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Design.ChartActionType.ChartObjectType">
            <summary>
            The target chart type
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Design.ChartActionType.Groups">
            <summary>
            A list of ChartActionGroup objects
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.ChartActionType.#ctor(System.Type,Dundas.Charting.WebControl.Design.ChartActionGroup[])">
            <summary>
            Initializes new instance of ChartActionType with specified parameters
            </summary>
            <param name="chartObjectType">The chart target type</param>
            <param name="items">List of ChartActionGroup objects</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.ChartActionType.GetChartActionTypeItems">
            <summary>
            Builds the tree like structure of ChartActionType, ChartActionGroup and ChartActionItem objects
            </summary>
            <returns></returns>
        </member>
        <member name="T:Dundas.Charting.WebControl.Design.ChartActionGroup">
            <summary>
            ChartActionGroup contains group name used for devider into action list and 
            list of ChartActionMember objects
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Design.ChartActionGroup.GroupName">
            <summary>
            The group name
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Design.ChartActionGroup.Members">
            <summary>
            List of ChartActionMember objects
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.ChartActionGroup.#ctor(System.String,Dundas.Charting.WebControl.Design.ChartActionMember[])">
            <summary>
            Initializes new instance of ChartActionGroup with specified parameters
            </summary>
            <param name="groupName">The group name</param>
            <param name="items">List of ChartActionMember objects</param>
        </member>
        <member name="T:Dundas.Charting.WebControl.Design.ChartActionMember">
            <summary>
            The ChartActionMember contains information for property name, property label
            
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Design.ChartActionMember.MemberName">
            <summary>
            Property name
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Design.ChartActionMember.MemberText">
            <summary>
            Label or description
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Design.ChartActionMember.TargetPropertyName">
            <summary>
            Internal property name - for second level object 
            for example for Chart.BorderSkin.SkinStyle is represented by
            MemberName = "BorderSkin", TargetPropertyName = "SkinStyle"
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Design.ChartActionMember.ActionListIsTarget">
            <summary>
            Flag which determines if the property is exposed by 
            ChartMirror class or the target object
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.ChartActionMember.#ctor(System.String)">
            <summary>
            Initialize new instance of ChartActionMember with specified parameters
            </summary>
            <param name="memberName">The member name</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.ChartActionMember.#ctor(System.String,System.Boolean)">
            <summary>
            Initialize new instance of ChartActionMember with specified parameters
            </summary>
            <param name="memberName">The Member name</param>
            <param name="actionListIsTarget">determines if the property is exposed by 
            ChartMirror class
            </param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.ChartActionMember.#ctor(System.String,System.String,System.Boolean)">
            <summary>
            Initialize new instance of ChartActionMember with specified parameters
            </summary>
            <param name="memberName">The Member name</param>
            <param name="actionListIsTarget">determines if the property is exposed by 
            ChartMirror class
            </param>
            <param name="memberText">Description</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.ChartActionMember.#ctor(System.String,System.String)">
            <summary>
            Initialize new instance of ChartActionMember with specified parameters
            </summary>
            <param name="memberName">The Member name</param>
            <param name="memberText">Description</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.ChartActionMember.#ctor(System.String,System.String,System.String)">
            <summary>
            Initialize new instance of ChartActionMember with specified parameters
            </summary>
            <param name="memberName">The Member name</param>
            <param name="memberText">Description</param>
            <param name="targetPropetyName">second level property name</param>
        </member>
        <member name="T:Dundas.Charting.WebControl.Design.ChartMirror">
            <summary>
            Exposes property which is not available into chart object model.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Design.ChartMirror.actionList">
            <summary>
            Parent ChartActionList instance
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.ChartMirror.#ctor(Dundas.Charting.WebControl.Design.ChartActionList)">
            <summary>
            Creates new instance of ChartMirror with specified parameters
            </summary>
            <param name="actionList">Parent ChartActionList object</param>
        </member>
        <member name="P:Dundas.Charting.WebControl.Design.ChartMirror.Chart">
            <summary>
            Gets the chart
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.Design.ChartMirror.Context">
            <summary>
            Gets the selected object as context
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.Design.ChartMirror.Title">
            <summary>
            Gets ans sets the chart title
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.Design.ChartMirror.TitlePlacement">
            <summary>
            Gets and sets the chart title placement
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.Design.ChartMirror.LegendPlacement">
            <summary>
            Gets and sets the Legend Placement 
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.Design.ChartMirror.ShowLegend">
            <summary>
            Gets and sets Show Legend flag
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.Design.ChartMirror.TickMarksEnabled">
            <summary>
            Gets and sets Tick Marks visible state
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.Design.ChartMirror.AreaSmartLabels">
            <summary>
            Gets and sets Smart Labels enabled state on Chart Atea state
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.Design.CustomPlacement">
            <summary>
            CustomPlacement appears into chart action list - chart level - to setup placement
            of the legend or title
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Design.CustomPlacement.TopLeft">
            <summary>
            Top Left position
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Design.CustomPlacement.TopCenter">
            <summary>
            Top Center position
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Design.CustomPlacement.TopRight">
            <summary>
            Top Right position
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Design.CustomPlacement.RightTop">
            <summary>
            Right Top position
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Design.CustomPlacement.RightCenter">
            <summary>
            Right Center position
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Design.CustomPlacement.RightBottom">
            <summary>
            Right Bottom position
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Design.CustomPlacement.BottomLeft">
            <summary>
            Bottom Left position
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Design.CustomPlacement.BottomCenter">
            <summary>
            Bottom Center position
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Design.CustomPlacement.BottomRight">
            <summary>
            Bottom Right position
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Design.CustomPlacement.LeftTop">
            <summary>
            Left Top position
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Design.CustomPlacement.LeftCenter">
            <summary>
            Left Center position
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Design.CustomPlacement.LeftBottom">
            <summary>
            Left Bottom position
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.Design.AreaSmartLabels">
            <summary>
            AreaSmartLabels appears in design time to setup smart label state on Chart Area level
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Design.AreaSmartLabels.Enable">
            <summary>
            Enable smart labels on all series 
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Design.AreaSmartLabels.Disable">
            <summary>
            Disable smart labels on all series 
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Design.AreaSmartLabels.NotSet">
            <summary>
            Some series has enabled smart labels some don't
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.ObjectInfo">
            <summary>
            The ObjectInfo inspects unknown chart object in order to collect and fill 
            structured information about this object. For example from one DataPoint object 
            ObjectInfo extracts information about DataPoint's chart series and chart area.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ObjectInfo.ChartArea">
            <summary>
            Chart area object
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ObjectInfo.Legend">
            <summary>
            Legend object
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ObjectInfo.LegendItem">
            <summary>
            Legend item object
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ObjectInfo.Axis">
            <summary>
            Axes object
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ObjectInfo.AxisLabel">
            <summary>
            Axes Label object
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ObjectInfo.AxisLabelAxis">
            <summary>
            Axes Label Axis object
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ObjectInfo.Series">
            <summary>
            Series object
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ObjectInfo.DataPoint">
            <summary>
            Data point object
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ObjectInfo.PointIndex">
            <summary>
            DataPoint index object
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ObjectInfo.Title">
            <summary>
            Title object
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ObjectInfo.Annotation">
            <summary>
            Annotation object
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ObjectInfo.ElementType">
            <summary>
            The selected element type
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ObjectInfo.InspectedObject">
            <summary>
            The inspected object
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ObjectInfo.#ctor">
            <summary>
            Initializes new instance of ObjectInfo class
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ObjectInfo.Inspect(System.Object,Dundas.Olap.WebUIControls.Chart,Dundas.Olap.WebUIControls.HitTestResult)">
            <summary>
            Inspects object o and returns ObjectInfo instance with 
            properly inititialized fields ( area, series, axes and so on)
            </summary>
            <param name="o">Object to inspect, cannot be HitTest</param>
            <param name="chart">The chart component</param>
            <param name="r">The HitTestResult or null.
            If we have correct HitTestResult this will 
            speed up locating the series from data point.
            </param>
            <returns>Initialized ObjectInfo</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ObjectInfo.Get(System.Object,Dundas.Olap.WebUIControls.Chart)">
            <summary>
            Inspects object o and returns ObjectInfo instance with 
            properly inititialized fields ( area, series, axes and so on).
            The diference betrween Inspect and Get methods is that Get method is
            more precise if we have correct HitTestResult object which we can pass
            as parameter o.
            </summary>
            <param name="o">The Object to inspect. Can be HitTestResult ( recommended)</param>
            <param name="chart">The chart control</param>
            <returns>Initialized ObjectInfo</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ObjectInfo.GetContextObject">
            <summary>
            Returns object which hold the context according inspected primary 
            chart element type.
            </summary>
            <returns>The object which represents the context</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ObjectInfo.GetAxis">
            <summary>
            Returns the axis both on axis and axis label context
            </summary>
            <returns>The selected axis</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ObjectInfo.GetContextObjectNoLabel">
            <summary>
            Returns object which hold the context according inspected primary 
            chart element type.
            </summary>
            <returns>The object which represents the context</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ObjectInfo.IsAplicable(Dundas.Olap.WebUIControls.ContextElementType)">
            <summary>
            Check if current ObjectInfo data is applicable against specified object context type.
            </summary>
            <param name="types">The ContextElementType to check against this ObjectInfo</param>
            <returns>True if current ObjectInfo context is 
            applicable against specified element types</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ObjectInfo.GetChartElementType">
            <summary>
            Converts current ContextElementType type to ChartElementType for HitTest syncronization.
            This is used from object selector ( SelectorManager class ). Note that 
            ContextElementType.AxisLabel returns ChartElementType.Axis;
            </summary>
            <returns>Coresponeded ChartElementType type</returns>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.ContextElementType">
            <summary>
            Determines which type of chart objects is supported by a Command.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ContextElementType.None">
            <summary>
            Not applicable
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ContextElementType.ChartArea">
            <summary>
            Applicable to ChartArea object
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ContextElementType.Series">
            <summary>
            Applicable to Series object
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ContextElementType.Axis">
            <summary>
            Applicable to Axis object
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ContextElementType.Title">
            <summary>
            Applicable to Title object
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ContextElementType.Annotation">
            <summary>
            Applicable to Annotation object
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ContextElementType.Legend">
            <summary>
            Applicable to Legend object
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ContextElementType.AxisLabel">
            <summary>
            Applicable to Axis Label ( CustomLabel or Label objects)
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ContextElementType.Any">
            <summary>
            Default command behavior
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.ContextMenuAttributes">
            <summary>
            Exposes chart context menu attributes.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ContextMenuAttributes.#ctor">
            <summary>
            Initializes new instance of <see cref="T:Dundas.Olap.WebUIControls.ContextMenuAttributes"/> object.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ContextMenuAttributes.#ctor(Dundas.Olap.WebUIControls.ICommandElement)">
            <summary>
            Initializes new instance of <see cref="T:Dundas.Olap.WebUIControls.ContextMenuAttributes"/> object.
            </summary>
            <param name="parent">Reference to the parent object.</param>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ContextMenuAttributes.enable">
            <summary>
            The enable flag
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ContextMenuAttributes.ShouldSerializeItems">
            <summary>
            Determines if Items property should be serialized in design time.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ContextMenuAttributes.ResetItems">
            <summary>
            Checks if toolbar items are modified and should be serialized.
            </summary>
            <returns>True if items where modified and they need to be serialized.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ContextMenuAttributes.Initialize">
            <summary>
            Initializes and fill the items collection with default items
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ContextMenuAttributes.OnCommandMessage(Dundas.Olap.WebUIControls.CommandMessage,System.Object,System.Object)">
            <summary>
            Process internal broadcast messages 
            </summary>
            <param name="msg">The message to process</param>
            <param name="source">The object which send the message</param>
            <param name="parameters">The additional parameters</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ContextMenuAttributes.Invalidate">
            <summary>
            Invalidates ChartUI
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ContextMenuAttributes.Enabled">
            <summary>
            Determines if the context menu is enabled in the chart.
            </summary>
            <value>
            <b>true</b> if chart context menu is enabled, <b>false</b> if it is not. Defaults 
            to <b>false</b>.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ContextMenuAttributes.Items">
            <summary>
            Represents the collection of context menu command items.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ContextMenuAttributes.ChartUI">
            <summary>
            Gets the parent ChartUI object. 
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ContextMenuAttributes.Dundas#Olap#WebUIControls#ICommandElement#Parent">
            <summary>
            Reference to the parent element.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ContextMenuAttributes.Dundas#Olap#WebUIControls#ICommandElement#Chart">
            <summary>
            Reference to the chart control.
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.ChartTypes.StepLineChart">
            <summary>
            StepLine class extends its base class LineChart by changing how two 
            neighbouring data points are connected with a line. Step Line chart 
            uses two line segments (horizontal and vertical) to connect data 
            points. Markers and labels drawing code is inherited from the Line chart.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.StepLineChart.#ctor">
            <summary>
            StepLineChart class constructor.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.StepLineChart.GetImage(Dundas.Charting.WebControl.ChartTypes.ChartTypeRegistry)">
            <summary>
            Gets chart type image.
            </summary>
            <param name="registry">Chart types registry object.</param>
            <returns>Chart type image.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.StepLineChart.DrawLine(Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.CommonElements,Dundas.Olap.WebUIControls.DataPoint,Dundas.Olap.WebUIControls.Series,System.Drawing.PointF[],System.Int32,System.Single)">
            <summary>
            Draw chart line using horisontal and vertical lines.
            </summary>
            <param name="graph">Graphics object.</param>
            <param name="common">The Common elements object</param>
            <param name="point">Point to draw the line for.</param>
            <param name="series">Point series.</param>
            <param name="points">Array of points coordinates.</param>
            <param name="pointIndex">Index of point to draw.</param>
            <param name="tension">Line tension</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.StepLineChart.Draw3DSurface(Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.Matrix3D,Dundas.Olap.WebUIControls.LightStyle,Dundas.Olap.WebUIControls.DataPoint3D,System.Single,System.Single,System.Collections.ArrayList,System.Int32,System.Int32,System.Single,Dundas.Olap.WebUIControls.DrawingOperationType,System.Single,System.Single,System.Drawing.PointF,System.Drawing.PointF,System.Boolean)">
            <summary>
            Draws a 3D surface connecting the two specified points in 2D space.
            Used to draw Line based charts.
            </summary>
            <param name="area">Chart area reference.</param>
            <param name="graph">Chart graphics.</param>
            <param name="matrix">Coordinates transformation matrix.</param>
            <param name="lightStyle">Light style (None, Simplistic, Realistic).</param>
            <param name="prevDataPointEx">Previous data point object.</param>
            <param name="positionZ">Z position of the back side of the 3D surface.</param>
            <param name="depth">Depth of the 3D surface.</param>
            <param name="points">Array of points.</param>
            <param name="pointIndex">Index of point to draw.</param>
            <param name="pointLoopIndex">Index of points loop.</param>
            <param name="tension">Line tension.</param>
            <param name="operationType">Type of operation Drawing, Calculating Path or Both</param>
            <param name="topDarkening">Darkenning scale for top surface. 0 - None.</param>
            <param name="bottomDarkening">Darkenning scale for bottom surface. 0 - None.</param>
            <param name="thirdPointPosition">Position where the third point is actually located or float.NaN if same as in "firstPoint".</param>
            <param name="fourthPointPosition">Position where the fourth point is actually located or float.NaN if same as in "secondPoint".</param>
            <param name="clippedSegment">Indicates that drawn segment is 3D clipped. Only top/bottom should be drawn.</param>
            <returns>Returns elemnt shape path if operationType parameter is set to CalcElementPath, otherwise Null.</returns>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.StepLineChart.Name">
            <summary>
            Chart type name
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.ChartTypes.RoseChart">
            <summary>
            RadarChart class provides 2D/3D drawing and hit testing 
            functionality for the Radar chart. It is also used as a
            base class for the PolarChart. 
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.RoseChart.#ctor">
            <summary>
            Class public constructor.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.RoseChart.GetPointPath(Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.Series,System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets sector for rose chart
            </summary>
            <param name="graph">Chart graphics</param>
            <param name="area">area </param>
            <param name="index">point index</param>
            <returns>path for point</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.RoseChart.GetPointPath(Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.Series,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Gets sector for rose chart
            </summary>
            <param name="graph">Chart graphics</param>
            <param name="area">area </param>
            <param name="index">point index</param>
            <param name="closed">path should be closed</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.RoseChart.GetRectangle(System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            returns rectangle to draw arc
            </summary>
            <param name="point">top point</param>
            <param name="c">center point</param>
            <returns>rectangle</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.RoseChart.GetPreviousSeriesPointF(Dundas.Olap.WebUIControls.ChartGraphics,System.Int32,System.Int32,System.Drawing.PointF)">
            <summary>
            returns point from the previous series or center point
            </summary>
            <param name="graph"></param>
            <param name="pointIndex"></param>
            <param name="seriesIndex"></param>
            <param name="point"></param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.RoseChart.PrevSeriesYValue(System.Int32)">
            <summary>
            Returns previous series point value
            </summary>
            <param name="pointIndex">point index</param>
            <returns>double.Nan for 1st series/point index more than points count or YValue for datapoint </returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.RoseChart.ProcessChartType(System.Boolean,Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.CommonElements,Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.Series)">
            <summary>
            This method recalculates size of the bars. This method is used 
            from Paint or Select method.
            </summary>
            <param name="selection">If True selection mode is active, otherwise paint mode is active.</param>
            <param name="graph">The Chart Graphics object.</param>
            <param name="common">The Common elements object.</param>
            <param name="area">Chart area for this chart.</param>
            <param name="seriesToDraw">Chart series to draw.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.RoseChart.GetMiddlePoint(System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Gets the middle point of the line.
            </summary>
            <param name="p1">First line point.</param>
            <param name="p2">Second line point.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.RoseChart.GetPointsPosition(Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.Series)">
            <summary>
            Fills a PointF array of data points absolute pixel positions.
            </summary>
            <param name="graph">Graphics object.</param>
            <param name="area">Chart area.</param>
            <param name="series">Point series.</param>
            <returns>Array of data points position.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.RoseChart.GetDrawingStyle(Dundas.Olap.WebUIControls.Series,Dundas.Olap.WebUIControls.DataPoint)">
            <summary>
            Gets radar chart drawing style.
            </summary>
            <param name="ser">Chart series.</param>
            <param name="point">Series point.</param>
            <returns>Returns radar drawing style.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.RoseChart.AddSmartLabelMarkerPositions(Dundas.Olap.WebUIControls.CommonElements,Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.Series,System.Collections.ArrayList)">
            <summary>
            Adds markers position to the list. Used to check SmartLabels overlapping.
            </summary>
            <param name="common">Common chart elements.</param>
            <param name="area">Chart area.</param>
            <param name="series">Series values to be used.</param>
            <param name="list">List to add to.</param>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.RoseChart.Name">
            <summary>
            Chart type name
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.ChartTypes.StackedRoseChart">
            <summary>
            Stacked rose chart.
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.ChartTypes.FastPointChart">
            <summary>
            FastPointChart class implements a simplified point chart drawing 
            algorithm which is optimized for the performance.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.ChartTypes.FastPointChart.chartArea3DEnabled">
            <summary>
            Indicates that chart is drawn in 3D area
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.ChartTypes.FastPointChart.graph">
            <summary>
            Current chart graphics
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.ChartTypes.FastPointChart.seriesZCoordinate">
            <summary>
            Z coordinate of the 3D series
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.ChartTypes.FastPointChart.matrix3D">
            <summary>
            3D transformation matrix
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.ChartTypes.FastPointChart.common">
            <summary>
            Reference to common chart elements
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.FastPointChart.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.FastPointChart.GetLegendImageStyle(Dundas.Olap.WebUIControls.Series)">
            <summary>
            How to draw series/points in legend:
            Filled rectangle, Line or Marker
            </summary>
            <param name="series">Legend item series.</param>
            <returns>Legend item style.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.FastPointChart.GetImage(Dundas.Charting.WebControl.ChartTypes.ChartTypeRegistry)">
            <summary>
            Gets chart type image.
            </summary>
            <param name="registry">Chart types registry object.</param>
            <returns>Chart type image.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.FastPointChart.Paint(Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.CommonElements,Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.Series)">
            <summary>
            Paint FastPoint Chart.
            </summary>
            <param name="graph">The Chart Graphics object.</param>
            <param name="common">The Common elements object.</param>
            <param name="area">Chart area for this chart.</param>
            <param name="seriesToDraw">Chart series to draw.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.FastPointChart.DrawMarker(Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.DataPoint,System.Int32,System.Drawing.PointF,Dundas.Olap.WebUIControls.MarkerStyle,System.Int32,System.Drawing.SolidBrush,System.Drawing.Pen)">
            <summary>
            Draws a marker that represents a data point in FastPoint series.
            </summary>
            <param name="graph">Chart graphics used to draw the marker.</param>
            <param name="point">Series data point drawn.</param>
            <param name="pointIndex">Data point index in the series.</param>
            <param name="location">Marker location in pixels.</param>
            <param name="markerStyle">Marker style.</param>
            <param name="markerSize">Marker size in pixels.</param>
            <param name="brush">Brush used to fill marker shape.</param>
            <param name="borderPen">Marker border pen.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.FastPointChart.GetYValue(Dundas.Olap.WebUIControls.CommonElements,Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.Series,Dundas.Olap.WebUIControls.DataPoint,System.Int32,System.Int32)">
            <summary>
            Helper function, which returns the Y value of the location.
            </summary>
            <param name="common">Chart common elements.</param>
            <param name="area">Chart area the series belongs to.</param>
            <param name="series">Sereis of the location.</param>
            <param name="point">Point object.</param>
            <param name="pointIndex">Index of the location.</param>
            <param name="yValueIndex">Index of the Y value to get.</param>
            <returns>Y value of the location.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.FastPointChart.AddSmartLabelMarkerPositions(Dundas.Olap.WebUIControls.CommonElements,Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.Series,System.Collections.ArrayList)">
            <summary>
            Adds markers position to the list. Used to check SmartLabels overlapping.
            </summary>
            <param name="common">Common chart elements.</param>
            <param name="area">Chart area.</param>
            <param name="series">Series values to be used.</param>
            <param name="list">List to add to.</param>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.FastPointChart.Name">
            <summary>
            Chart type name
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.FastPointChart.Stacked">
            <summary>
            True if chart type is stacked
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.FastPointChart.SupportStackedGroups">
            <summary>
            True if stacked chart type supports groups
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.FastPointChart.StackSign">
            <summary>
            True if stacked chart type should draw separately positive and 
            negative data points ( Bar and column Stacked types ).
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.FastPointChart.RequireAxes">
            <summary>
            True if chart type supports axeses
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.FastPointChart.SecondYScale">
            <summary>
            Chart type with two y values used for scale ( bubble chart type )
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.FastPointChart.CircularChartArea">
            <summary>
            True if chart type requires circular chart area.
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.FastPointChart.SupportLogarithmicAxes">
            <summary>
            True if chart type supports logarithmic axes
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.FastPointChart.SwitchValueAxes">
            <summary>
            True if chart type requires to switch the value (Y) axes position
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.FastPointChart.SideBySideSeries">
            <summary>
            True if chart series can be placed side-by-side.
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.FastPointChart.DataPointsInLegend">
            <summary>
            True if each data point of a chart must be represented in the legend
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.FastPointChart.ZeroCrossing">
            <summary>
            If the crossing value is auto Crossing value should be 
            automatically set to zero for some chart 
            types (Bar, column, area etc.)
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.FastPointChart.ApplyPaletteColorsToPoints">
            <summary>
            True if palette colors should be applied for each data paoint.
            Otherwise the color is applied to the series.
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.FastPointChart.ExtraYValuesConnectedToYAxis">
            <summary>
            Indicates that extra Y values are connected to the scale of the Y axis
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.FastPointChart.HundredPercent">
            <summary>
            Indicates that it's a hundredred percent chart.
            Axis scale from 0 to 100 percent should be used.
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.FastPointChart.HundredPercentSupportNegative">
            <summary>
            Indicates that it's a hundredred percent chart.
            Axis scale from 0 to 100 percent should be used.
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.FastPointChart.YValuesPerPoint">
            <summary>
            Number of supported Y value(s) per point 
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.CalloutStyle">
            <summary>
            Annotation callout style.
            <seealso cref="P:Dundas.Olap.WebUIControls.CalloutAnnotation.CalloutStyle"/>
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.CalloutStyle.SimpleLine">
            <summary>
            Callout text is underlined and a line is pointing to the anchor point.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.CalloutStyle.BorderLine">
            <summary>
            Border is drawn around text and a line is pointing to the anchor point.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.CalloutStyle.Cloud">
            <summary>
            Callout text is inside the cloud and smaller clouds are pointing to the anchor point.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.CalloutStyle.Rectangle">
            <summary>
            Rectangle is drawn around the callout text, which is connected with the anchor point.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.CalloutStyle.RoundedRectangle">
            <summary>
            Rounded rectangle is drawn around the callout text, which is connected with the anchor point.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.CalloutStyle.Ellipse">
            <summary>
            Ellipse is drawn around the callout text, which is connected with the anchor point.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.CalloutStyle.Perspective">
            <summary>
            Perspective rectangle is drawn around the callout text, which is connected with the anchor point.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.CalloutAnnotation">
            <summary>
            <b>CalloutAnnotation</b> is a class class that represents callout annotation.
            </summary>
            <remarks>
            Callout annotation is the only annotation that draws a connection between 
            annotation position and anchor point. It can display text and automatically 
            calculate required size. Different <see cref="P:Dundas.Olap.WebUIControls.CalloutAnnotation.CalloutStyle"/> are supported.
            </remarks>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.TextAnnotation">
            <summary>
            <b>TextAnnotation</b> is a class that represents a text annotation.
            </summary>
            <remarks>
            Note that other annotations do display inner text (e.g. rectangle, 
            ellipse annotations, etc.).
            <para>
            Text annotations support moving animation.
            </para>
            </remarks>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.TextAnnotation.#ctor">
            <summary>
            Default public constructor.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.TextAnnotation.Paint(Dundas.Olap.WebUIControls.Chart,Dundas.Olap.WebUIControls.ChartGraphics)">
            <summary>
            Paints an annotation object on the specified graphics.
            </summary>
            <param name="graphics">
            A <see cref="T:Dundas.Olap.WebUIControls.ChartGraphics"/> object, used to paint an annotation object.
            </param>
            <param name="chart">
            Reference to the <see cref="T:Dundas.Olap.WebUIControls.Chart"/> owner control.
            </param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.TextAnnotation.DrawText(Dundas.Olap.WebUIControls.ChartGraphics,System.Drawing.RectangleF,System.Boolean,System.Boolean)">
            <summary>
            Draws text in specified rectangle.
            </summary>
            <param name="graphics">Chart graphics.</param>
            <param name="textPosition">Text position.</param>
            <param name="noSpacingForCenteredText">True if text allowed to be outside of position when centered.</param>
            <param name="getTextPosition">True if position text must be returned by the method.</param>
            <returns>Text actual position if required.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.TextAnnotation.GetContentPosition">
            <summary>
            Gets text annotation content size based on the text and font.
            </summary>
            <returns>Annotation content position.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.TextAnnotation.GetTextSpacing(System.Boolean@)">
            <summary>
            Gets text spacing on four different sides in relative coordinates.
            </summary>
            <param name="annotationRelative">Indicates that spacing is in annotation relative coordinates.</param>
            <returns>Rectangle with text spacing values.</returns>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.TextAnnotation.Text">
            <summary>
            Annotation's text.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.TextAnnotation.Multiline">
            <summary>
            Indicates that the annotation text is multiline.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.TextAnnotation.TextFont">
            <summary>
            Annotation text's font.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.TextAnnotation.LineColor">
            <summary>
            Not applicable to this annotation type.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.TextAnnotation.LineWidth">
            <summary>
            Not applicable to this annotation type.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.TextAnnotation.LineStyle">
            <summary>
            Not applicable to this annotation type.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.TextAnnotation.BackColor">
            <summary>
            Not applicable to this annotation type.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.TextAnnotation.BackHatchStyle">
            <summary>
            Not applicable to this annotation type.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.TextAnnotation.BackGradientType">
            <summary>
            Not applicable to this annotation type.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.TextAnnotation.BackGradientEndColor">
            <summary>
            Not applicable to this annotation type.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.TextAnnotation.AnnotationType">
            <summary>
            Annotation type's name.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.TextAnnotation.SelectionPointsStyle">
            <summary>
            Annotation selection points style.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CalloutAnnotation.#ctor">
            <summary>
            Default public constructor.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CalloutAnnotation.GetTextSpacing(System.Boolean@)">
            <summary>
            Gets text spacing on four different sides in relative coordinates.
            </summary>
            <param name="annotationRelative">Indicates that spacing is in annotation relative coordinates.</param>
            <returns>Rectangle with text spacing values.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CalloutAnnotation.Paint(Dundas.Olap.WebUIControls.Chart,Dundas.Olap.WebUIControls.ChartGraphics)">
            <summary>
            Paints annotation object on specified graphics.
            </summary>
            <param name="graphics">
            A <see cref="T:Dundas.Olap.WebUIControls.ChartGraphics"/> used to paint annotation object.
            </param>
            <param name="chart">
            Reference to the <see cref="T:Dundas.Olap.WebUIControls.Chart"/> control.
            </param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CalloutAnnotation.DrawRoundedRectCallout(Dundas.Olap.WebUIControls.ChartGraphics,System.Drawing.RectangleF,System.Drawing.PointF,System.Boolean)">
            <summary>
            Draws Rounded rectangle or Ellipse style callout.
            </summary>
            <param name="graphics">Chart graphics.</param>
            <param name="rectanglePosition">Position of annotation objet.</param>
            <param name="anchorPoint">Anchor location.</param>
            <param name="isEllipse">True if ellipse shape should be used.</param>
            <returns>Hot region of the callout.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CalloutAnnotation.DrawRectangleCallout(Dundas.Olap.WebUIControls.ChartGraphics,System.Drawing.RectangleF,System.Drawing.PointF)">
            <summary>
            Draws Rectangle style callout.
            </summary>
            <param name="graphics">Chart graphics.</param>
            <param name="rectanglePosition">Position of annotation objet.</param>
            <param name="anchorPoint">Anchor location.</param>
            <returns>Hot region of the callout.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CalloutAnnotation.DrawCloudCallout(Dundas.Olap.WebUIControls.ChartGraphics,System.Drawing.RectangleF,System.Drawing.PointF)">
            <summary>
            Draws Perspective style callout.
            </summary>
            <param name="graphics">Chart graphics.</param>
            <param name="rectanglePosition">Position of annotation objet.</param>
            <param name="anchorPoint">Anchor location.</param>
            <returns>Hot region of the cloud.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CalloutAnnotation.DrawPerspectiveCallout(Dundas.Olap.WebUIControls.ChartGraphics,System.Drawing.RectangleF,System.Drawing.PointF)">
            <summary>
            Draws Perspective style callout.
            </summary>
            <param name="graphics">Chart graphics.</param>
            <param name="rectanglePosition">Position of annotation objet.</param>
            <param name="anchorPoint">Anchor location.</param>
            <returns>Hot region of the cloud.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CalloutAnnotation.DrawRectangleLineCallout(Dundas.Olap.WebUIControls.ChartGraphics,System.Drawing.RectangleF,System.Drawing.PointF,System.Boolean)">
            <summary>
            Draws SimpleLine or BorderLine style callout.
            </summary>
            <param name="graphics">Chart graphics.</param>
            <param name="rectanglePosition">Position of annotation objet.</param>
            <param name="anchorPoint">Anchor location.</param>
            <param name="drawRectangle">If true draws BorderLine style, otherwise SimpleLine.</param>
            <returns>Hot region of the cloud.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CalloutAnnotation.IsAnchorDrawn">
            <summary>
            Checks if annotation draw anything in the anchor position (except selection handle)
            </summary>
            <returns>True if annotation "connects" itself and anchor point visually.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CalloutAnnotation.GetCloudOutlinePath(System.Drawing.RectangleF)">
            <summary>
            Gets cloud callout outline graphics path.
            </summary>
            <param name="position">Absolute position of the callout cloud.</param>
            <returns>Cloud outline path.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CalloutAnnotation.GetCloudPath(System.Drawing.RectangleF)">
            <summary>
            Gets cloud callout graphics path.
            </summary>
            <param name="position">Absolute position of the callout cloud.</param>
            <returns>Cloud path.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CalloutAnnotation.GetIntersectionY(System.Drawing.PointF,System.Drawing.PointF,System.Single)">
            <summary>
            Gets intersection point coordinates between point line and and horizontal 
            line specified by Y coordinate.
            </summary>
            <param name="firstPoint">First data point.</param>
            <param name="secondPoint">Second data point.</param>
            <param name="pointY">Y coordinate.</param>
            <returns>Intersection point coordinates.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CalloutAnnotation.GetIntersectionX(System.Drawing.PointF,System.Drawing.PointF,System.Single)">
            <summary>
            Gets intersection point coordinates between point line and and vertical 
            line specified by X coordinate.
            </summary>
            <param name="firstPoint">First data point.</param>
            <param name="secondPoint">Second data point.</param>
            <param name="pointX">X coordinate.</param>
            <returns>Intersection point coordinates.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CalloutAnnotation.PathAddLineAsSegments(System.Drawing.Drawing2D.GraphicsPath,System.Single,System.Single,System.Single,System.Single,System.Int32)">
            <summary>
            Adds a horizontal or vertical line into the path as multiple segments.
            </summary>
            <param name="path">Graphics path.</param>
            <param name="x1">First point X coordinate.</param>
            <param name="y1">First point Y coordinate.</param>
            <param name="x2">Second point X coordinate.</param>
            <param name="y2">Second point Y coordinate.</param>
            <param name="segments">Number of segments to add.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CalloutAnnotation.CreateRoundedRectPath(System.Drawing.RectangleF,System.Single)">
            <summary>
            Helper function which creates a rounded rectangle path.
            Extra points are added on the sides to allow anchor connection.
            </summary>
            <param name="rect">Rectangle coordinates.</param>
            <param name="cornerRadius">Corner radius.</param>
            <returns>Graphics path object.</returns>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.CalloutAnnotation.CalloutStyle">
            <summary>
            Gets or sets annotation calout style.
            </summary>
            <value>
            <see cref="P:Dundas.Olap.WebUIControls.CalloutAnnotation.CalloutStyle"/> of the annotation.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.CalloutAnnotation.CalloutAnchorCap">
            <summary>
            Gets or sets callout line anchor cap.
            </summary>
            <value>
            A <see cref="T:Dundas.Olap.WebUIControls.LineAnchorCap"/> value used as callout line anchor cap.
            </value>
            <remarks>
            This property sets an achor cap for the line connecting annotation with
            the anchor point. It only applies when SimpleLine or BorderLine 
            <see cref="P:Dundas.Olap.WebUIControls.CalloutAnnotation.CalloutStyle"/> are used.
            </remarks>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.CalloutAnnotation.LineColor">
            <summary>
            Gets or sets annotation line color.
            <seealso cref="P:Dundas.Olap.WebUIControls.CalloutAnnotation.LineWidth"/>
            <seealso cref="P:Dundas.Olap.WebUIControls.CalloutAnnotation.LineStyle"/>
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color"/> value used to draw annotation line.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.CalloutAnnotation.LineWidth">
            <summary>
            Gets or sets annotation line width.
            <seealso cref="P:Dundas.Olap.WebUIControls.CalloutAnnotation.LineColor"/>
            <seealso cref="P:Dundas.Olap.WebUIControls.CalloutAnnotation.LineStyle"/>
            </summary>
            <value>
            An integer value defining annotation line width in pixels.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.CalloutAnnotation.LineStyle">
            <summary>
            Gets or sets annotation line style.
            <seealso cref="P:Dundas.Olap.WebUIControls.CalloutAnnotation.LineWidth"/>
            <seealso cref="P:Dundas.Olap.WebUIControls.CalloutAnnotation.LineColor"/>
            </summary>
            <value>
            A <see cref="T:Dundas.Olap.WebUIControls.ChartDashStyle"/> value used to draw annotation line.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.CalloutAnnotation.BackColor">
            <summary>
            Gets or sets annotation background color.
            <seealso cref="P:Dundas.Olap.WebUIControls.CalloutAnnotation.BackGradientEndColor"/>
            <seealso cref="P:Dundas.Olap.WebUIControls.CalloutAnnotation.BackHatchStyle"/>
            <seealso cref="P:Dundas.Olap.WebUIControls.CalloutAnnotation.BackGradientType"/>
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color"/> value used to draw annotation background.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.CalloutAnnotation.BackHatchStyle">
            <summary>
            Gets or sets annotation background hatch style.
            <seealso cref="P:Dundas.Olap.WebUIControls.CalloutAnnotation.BackGradientEndColor"/>
            <seealso cref="P:Dundas.Olap.WebUIControls.CalloutAnnotation.BackColor"/>
            <seealso cref="P:Dundas.Olap.WebUIControls.CalloutAnnotation.BackGradientType"/>
            </summary>
            <value>
            A <see cref="T:Dundas.Olap.WebUIControls.ChartHatchStyle"/> value used to draw annotation background.
            </value>
            <remarks>
            Two colors are used to draw the hatching <see cref="P:Dundas.Olap.WebUIControls.CalloutAnnotation.BackColor"/> and <see cref="P:Dundas.Olap.WebUIControls.CalloutAnnotation.BackGradientEndColor"/>.
            </remarks>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.CalloutAnnotation.BackGradientType">
            <summary>
            Gets or sets annotation background gradient style.
            <seealso cref="P:Dundas.Olap.WebUIControls.CalloutAnnotation.BackGradientEndColor"/>
            <seealso cref="P:Dundas.Olap.WebUIControls.CalloutAnnotation.BackColor"/>
            <seealso cref="P:Dundas.Olap.WebUIControls.CalloutAnnotation.BackHatchStyle"/>
            </summary>
            <value>
            A <see cref="T:Dundas.Olap.WebUIControls.GradientType"/> value used to draw annotation background.
            </value>
            <remarks>
            Two colors are used to draw the gradient <see cref="P:Dundas.Olap.WebUIControls.CalloutAnnotation.BackColor"/> and <see cref="P:Dundas.Olap.WebUIControls.CalloutAnnotation.BackGradientEndColor"/>.
            </remarks>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.CalloutAnnotation.BackGradientEndColor">
            <summary>
            Gets or sets annotation background secondary color.
            <seealso cref="P:Dundas.Olap.WebUIControls.CalloutAnnotation.BackColor"/>
            <seealso cref="P:Dundas.Olap.WebUIControls.CalloutAnnotation.BackHatchStyle"/>
            <seealso cref="P:Dundas.Olap.WebUIControls.CalloutAnnotation.BackGradientType"/>
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color"/> value used to draw annotation background with 
            hatching or gradient fill.
            </value>
            <remarks>
            This color is used with <see cref="P:Dundas.Olap.WebUIControls.CalloutAnnotation.BackColor"/> when <see cref="P:Dundas.Olap.WebUIControls.CalloutAnnotation.BackHatchStyle"/> or
            <see cref="P:Dundas.Olap.WebUIControls.CalloutAnnotation.BackGradientType"/> are used.
            </remarks>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.CalloutAnnotation.AnchorOffsetX">
            <summary>
            Gets or sets annotation X position offset from the anchor point.
            <seealso cref="P:Dundas.Olap.WebUIControls.Annotation.AnchorOffsetY"/>
            <seealso cref="P:Dundas.Olap.WebUIControls.Annotation.AnchorDataPoint"/>
            <seealso cref="P:Dundas.Olap.WebUIControls.Annotation.AnchorX"/>
            <seealso cref="P:Dundas.Olap.WebUIControls.Annotation.AnchorAlignment"/>
            </summary>
            <value>
            A double value that represents annotation X position offset from the anchor point.
            </value>
            <remarks>
            Annotation must be anchored using <see cref="P:Dundas.Olap.WebUIControls.Annotation.AnchorDataPoint"/> or 
            <see cref="P:Dundas.Olap.WebUIControls.Annotation.AnchorX"/> properties and it's <see cref="P:Dundas.Olap.WebUIControls.Annotation.X"/> property must be set
            to <b>Double.NaN</b>.
            </remarks>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.CalloutAnnotation.AnchorOffsetY">
            <summary>
            Gets or sets annotation Y position offset from the anchor point.
            <seealso cref="P:Dundas.Olap.WebUIControls.Annotation.AnchorOffsetX"/>
            <seealso cref="P:Dundas.Olap.WebUIControls.Annotation.AnchorDataPoint"/>
            <seealso cref="P:Dundas.Olap.WebUIControls.Annotation.AnchorY"/>
            <seealso cref="P:Dundas.Olap.WebUIControls.Annotation.AnchorAlignment"/>
            </summary>
            <value>
            A double value that represents annotation Y position offset from the anchor point.
            </value>
            <remarks>
            Annotation must be anchored using <see cref="P:Dundas.Olap.WebUIControls.Annotation.AnchorDataPoint"/> or 
            <see cref="P:Dundas.Olap.WebUIControls.Annotation.AnchorY"/> properties and it's <see cref="P:Dundas.Olap.WebUIControls.Annotation.Y"/> property must be set
            to <b>Double.NaN</b>.
            </remarks>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.CalloutAnnotation.AnchorAlignment">
            <summary>
            Gets or sets annotation position alignment to the anchor point.
            <seealso cref="P:Dundas.Olap.WebUIControls.Annotation.AnchorX"/>
            <seealso cref="P:Dundas.Olap.WebUIControls.Annotation.AnchorY"/>
            <seealso cref="P:Dundas.Olap.WebUIControls.Annotation.AnchorDataPoint"/>
            <seealso cref="P:Dundas.Olap.WebUIControls.Annotation.AnchorOffsetX"/>
            <seealso cref="P:Dundas.Olap.WebUIControls.Annotation.AnchorOffsetY"/>
            </summary>
            <value>
            A <see cref="T:System.Drawing.ContentAlignment"/> value that represents annotation alignment to 
            the anchor point.
            </value>
            <remarks>
            Annotation must be anchored using <see cref="P:Dundas.Olap.WebUIControls.Annotation.AnchorDataPoint"/>, <see cref="P:Dundas.Olap.WebUIControls.Annotation.AnchorX"/> 
            or <see cref="P:Dundas.Olap.WebUIControls.Annotation.AnchorY"/> properties. It's <see cref="P:Dundas.Olap.WebUIControls.Annotation.X"/> and <see cref="P:Dundas.Olap.WebUIControls.Annotation.Y"/> 
            properties must be set to <b>Double.NaN</b>.
            </remarks>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.CalloutAnnotation.AnnotationType">
            <summary>
            Gets or sets annotation type name.
            </summary>
            <remarks>
            This abstract property is used to get the name of each annotation type
            (e.g. Line, Rectangle, Ellipse,...). 
            <para>
            Property is for internal use and is hidden at design and run time. Should
            not be part of the documentation.
            </para>
            </remarks>		
        </member>
        <member name="P:Dundas.Olap.WebUIControls.CalloutAnnotation.SelectionPointsStyle">
            <summary>
            Gets or sets annotation selection points style.
            </summary>
            <value>
            A <see cref="P:Dundas.Olap.WebUIControls.CalloutAnnotation.SelectionPointsStyle"/> value that represents annotation
            selection style.
            </value>
            <remarks>
            Property is for internal use and is hidden at design and run time. 
            Should not be part of the documentation.
            </remarks>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.Ajax.PropertyPagesChartClassControl">
            <summary>
            PropertyPagesChartClassControl is a class represents 
            the chart property page.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.PropertyPagesChartClassControl.Page_Load(System.Object,System.EventArgs)">
            <summary>
            Handles the Load event of the Page control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.PropertyPagesChartClassControl.GetChartType">
            <summary>
            Gets the type of the chart.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.PropertyPagesChartClassControl.IsChartTypeChanged">
            <summary>
            Determines whether the chart type is changed.
            </summary>
            <returns>
            	<c>true</c> if the chart type is changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.PropertyPagesChartClassControl.IsTitlePresent">
            <summary>
            Determines whether the title is present.
            </summary>
            <returns>
            	<c>true</c> if the title is present; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.PropertyPagesChartClassControl.InitPage(Dundas.Olap.WebUIControls.Ajax.PropertyPagesClassControl)">
            <summary>
            Inits the page.
            </summary>
            <param name="control">The control.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.PropertyPagesChartClassControl.IsPaletteApplied">
            <summary>
            Determines whether the palette is applied.
            </summary>
            <returns>
            	<c>true</c> if the palette is applied; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.PropertyPagesChartClassControl.GetDockAlignment(System.String,System.String)">
            <summary>
            Gets the dock alignment.
            </summary>
            <param name="docking">The docking.</param>
            <param name="alignment">The alignment.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.PropertyPagesChartClassControl.ApplyChanges">
            <summary>
            Applies the changes.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.PropertyPagesChartClassControl.OnPreRender(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Web.UI.Control.PreRender"></see> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"></see> object that contains the event data.</param>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.Ajax.IPropertyPage">
            <summary>
            The IPropertyPage interface is used in property pages dialog and 
            and help to build different property pages (Appearance, Chart, ... )
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.IPropertyPage.Apply">
            <summary>
            Applies this instance.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.IPropertyPage.Load">
            <summary>
            Loads this instance.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Ajax.IPropertyPage.PageName">
            <summary>
            Gets the name of the page.
            </summary>
            <value>The name of the page.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Ajax.IPropertyPage.PageControlClientID">
            <summary>
            Gets the page control client ID.
            </summary>
            <value>The page control client ID.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Ajax.IPropertyPage.Visible">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:IPropertyPage"/> is visible.
            </summary>
            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Ajax.IPropertyPage.ImageUrl">
            <summary>
            Gets the image URL.
            </summary>
            <value>The image URL.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Ajax.IPropertyPage.IsContextSupported">
            <summary>
            Gets a value indicating whether this instance is context supported.
            </summary>
            <value>
            	<c>true</c> if this instance is context supported; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Ajax.IPropertyPage.PropertyPages">
            <summary>
            Gets the property pages.
            </summary>
            <value>The property pages.</value>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.OlapChartToolbarSettings">
            <summary>
            Contains data for toolbar setting regarding <see cref="T:Dundas.Olap.WebUIControls.OlapGrid"/>
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapChartToolbarSettings.#ctor(Dundas.Olap.WebUIControls.OlapChart)">
            <summary>
            Initializes a new instance of the <see cref="!:OlapToolbarGridSettings"/> class.
            </summary>
            <param name="parent">The parent.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapChartToolbarSettings.GetEmbededCommands">
            <summary>
            Gets the command list.
            </summary>
            <value>The command list.</value>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapChartToolbarSettings.GetDefaultOrderBase">
            <summary>
            Gets the default order base.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapChartToolbarSettings.GetCommandID(Dundas.Olap.WebUIControls.ChartCommandType)">
            <summary>
            Get string represenantion of the command
            </summary>
            <param name="cmdType">command</param>
            <returns>command ID</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapChartToolbarSettings.GetCommandImage(Dundas.Olap.WebUIControls.Command)">
            <summary>
            Gets the command image.
            </summary>
            <param name="cmd">The CMD.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapChartToolbarSettings.GetCommandText(Dundas.Olap.WebUIControls.Command)">
            <summary>
            Gets the command text.
            </summary>
            <param name="cmd">The CMD.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapChartToolbarSettings.GetCommandDescription(Dundas.Olap.WebUIControls.Command)">
            <summary>
            Gets the command description.
            </summary>
            <param name="cmd">The CMD.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapChartToolbarSettings.GetToolbarCommand(Dundas.Olap.WebUIControls.ChartCommandType)">
            <summary>
            Gets the toolbar command.
            </summary>
            <param name="commandType">Type of the command.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapChartToolbarSettings.OlapToolbarCommand_Execute(System.Object,Dundas.Olap.Manager.OlapToolbarCommand.CommandExecuteEventArgs)">
            <summary>
            Handles the Execute event of the OlapToolbarCommand control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Dundas.Olap.Manager.OlapToolbarCommand.CommandExecuteEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapChartToolbarSettings.GetSeparator(System.Int32)">
            <summary>
            Gets the separator command.
            </summary>
            <param name="order">The order.</param>
            <returns></returns>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapChartToolbarSettings.Parent">
            <summary>
            Parent grid instance
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapChartToolbarSettings.SeparatorPlacement">
            <summary>
            Gets or sets the placement of the separator on the OLAP Toolbar.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapChartToolbarSettings.SaveImage">
            <summary>
            Gets the Save Image command used in the OLAP Toolbar.
            </summary>
            <value>The Save Image command.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapChartToolbarSettings.Copy">
            <summary>
            Gets the Copy command.
            </summary>
            <value>The Copy command.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapChartToolbarSettings.Print">
            <summary>
            Gets the Print command used in the OLAP Toolbar
            </summary>
            <value>The Print command.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapChartToolbarSettings.PrintPreview">
            <summary>
            Gets the Print Preview command.
            </summary>
            <value>The Print Preview command.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapChartToolbarSettings.SelectChartType">
            <summary>
            Gets the Copy command.
            </summary>
            <value>The Copy command.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapChartToolbarSettings.SelectPalette">
            <summary>
            Gets the Select Palette command used in the OLAP Toolbar.
            </summary>
            <value>The Select Palette command.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapChartToolbarSettings.ToggleLegend">
            <summary>
            Gets the Toggle Legend command used in the OLAP Toolbar.
            </summary>
            <value>The Toggle Legend command.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapChartToolbarSettings.Properties">
            <summary>
            Gets the Properties command used in the OLAP Toolbar.
            </summary>
            <value>The properties command.</value>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.NumericUpDown">
            <summary>
            NumericUpDown contols
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.ChartColorPalette">
            <summary>
            Chart color palettes enumeration
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartColorPalette.None">
            <summary>
            Palette not set.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartColorPalette.Default">
            <summary>
            Default palette.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartColorPalette.GrayScale">
            <summary>
            Palette with gray scale colors.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartColorPalette.Excel">
            <summary>
            Palette with Excel style colors.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartColorPalette.Light">
            <summary>
            Palette with Light style colors.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartColorPalette.Pastel">
            <summary>
            Palette with Pastel style colors.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartColorPalette.SeaGreen">
            <summary>
            Palette with SeaGreen style colors.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartColorPalette.Dundas">
            <summary>
            Palette with Dundas style colors.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartColorPalette.EarthTones">
            <summary>
            Palette with Earth Tones style colors.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartColorPalette.Fire">
            <summary>
            Palette with Fire style colors.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartColorPalette.SemiTransparent">
            <summary>
            Palette with Semi Transparent style colors.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartColorPalette.Berry">
            <summary>
            Palette with Berry style colors.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartColorPalette.Chocolate">
            <summary>
            Palette with Chocolate style colors.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartColorPalette.AcidWash">
            <summary>
            Palette with AcidWash style colors.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartColorPalette.ArtDeco">
            <summary>
            Palette with ArtDeco style colors.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartColorPalette.DundasDark">
            <summary>
            Palette with DundasDark style colors.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartColorPalette.Kindergarten">
            <summary>
            Palette with Kindergarten style colors.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartColorPalette.MilkShake">
            <summary>
            Palette with MilkShake style colors.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartColorPalette.MidDay">
            <summary>
            Palette with MidDay style colors.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartColorPalette.RainbowVapors">
            <summary>
            Palette with RainbowVapors style colors.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartColorPalette.Tanzanite">
            <summary>
            Palette with Tanzanite style colors.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartColorPalette.Vegas">
            <summary>
            Palette with Vegas style colors.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartColorPalette.WaterLilies">
            <summary>
            Palette with WaterLilies style colors.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartColorPalette.Tan">
            <summary>
            Palette with Tan style colors.
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.Utilities.ChartPaletteColors">
            <summary>
            ChartPaletteColors is a utility class which provides access 
            to the predefined chart color palettes. These palettes are 
            used to assign unique colors to different chart series. 
            For some chart types, like Pie, different colors are applied 
            on the data point level.
            
            GetPaletteColors method takes a ChartColorPalette enumeration 
            as a parameter and returns back an array of Colors. Each 
            palette contains different number of colors but it is a 
            good practice to keep this number around 15.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Utilities.ChartPaletteColors.#cctor">
            <summary>
            Static constructor.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Utilities.ChartPaletteColors.GetPaletteColors(Dundas.Olap.WebUIControls.ChartColorPalette)">
            <summary>
            Ruturn array of colors for the specified palette. Number of
            colors returned varies depending on the palette selected.
            </summary>
            <param name="palette">Palette to get the colors for.</param>
            <returns>Array of colors.</returns>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.NamedImagesCollection">
            <summary>
            NamedImagesCollection class is a strongly typed collection of NamedImage
            objects. It is exposed as Images chart root property.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.NamedImagesCollection.array">
            <summary>
            Reference to ArrayList class
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.NamedImagesCollection.#ctor(Dundas.Olap.WebUIControls.Chart)">
            <summary>
            Constructor
            </summary>
            <param name="chart">Chart reference.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.NamedImagesCollection.#ctor">
            <summary>
            Default collecton constructor
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.NamedImagesCollection.GetIndex(System.String)">
            <summary>
            Get image index by name.
            </summary>
            <param name="name">Name of the image.</param>
            <returns>Index of the image or -1 if it does not exist.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.NamedImagesCollection.Add(System.String,System.Drawing.Image)">
            <summary>
            Add item to the collection.
            </summary>
            <param name="name">Name of the image.</param>
            <param name="image">Image class.</param>
            <returns>New Chart Area</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.NamedImagesCollection.Add(Dundas.Olap.WebUIControls.NamedImage)">
            <summary>
            Add NamedImage object into the collection
            </summary>
            <param name="img">Named Image object</param>
            <returns>The ArrayList index at which the value has been added.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.NamedImagesCollection.Add(System.Object)">
            <summary>
            Add NamedImage object into the collection
            </summary>
            <param name="value">Named Image object</param>
            <returns>The ArrayList index at which the value has been added.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.NamedImagesCollection.Insert(System.Int32,System.Object)">
            <summary>
            Insert a named image to the collection.
            </summary>
            <param name="index">Position</param>
            <param name="value">Image object</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.NamedImagesCollection.CreateName(System.String)">
            <summary>
            Create Name for image.
            </summary>
            <param name="Name">Recomended Image Name</param>
            <returns>New Chart Area Name</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.NamedImagesCollection.UniqueName(System.String)">
            <summary>
            Checks whether a name is unique.
            </summary>
            <param name="name">Image name</param>
            <returns>true if a name is unique</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.NamedImagesCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the element at the specified index
            </summary>
            <param name="index">The zero-based index of the element to remove</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.NamedImagesCollection.Remove(System.Object)">
            <summary>
            Removes the first occurrence of a specific object
            </summary>
            <param name="value">The Object to remove from the NamedImageCollection</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.NamedImagesCollection.IndexOf(System.Object)">
            <summary>
            Searches for the specified Object and returns the zero-based 
            index of the first occurrence within the entire collection.
            </summary>
            <param name="value">The Object to locate in the collection.</param>
            <returns>The zero-based index of the first occurrence of value within the entire collection, if found; otherwise, -1.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.NamedImagesCollection.Contains(System.Object)">
            <summary>
            Determines whether an element is in the collection.
            </summary>
            <param name="value">The Object to locate in the collection. The element to locate can be a null reference. </param>
            <returns>true if item is found in the collection; otherwise, false.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.NamedImagesCollection.Clear">
            <summary>
            Removes all elements from the collection.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.NamedImagesCollection.GetEnumerator">
            <summary>
            Returns an enumerator for the entire collection
            </summary>
            <returns>An IEnumerator for the entire collection</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.NamedImagesCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the ArrayList or a portion of it to 
            a one-dimensional array.
            </summary>
            <param name="array">The one-dimensional Array that is the destination 
            of the elements copied from ArrayList. The Array must have 
            zero-based indexing.</param>
            <param name="index">The zero-based index in array at which copying begins.</param>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.NamedImagesCollection.Item(System.Object)">
            <summary>
            Indexer of the class. Returns the NamedImage object
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.NamedImagesCollection.System#Collections#IList#Item(System.Int32)">
            <summary>
            IList interface
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.NamedImagesCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the collection is read-only.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.NamedImagesCollection.IsFixedSize">
            <summary>
            Gets a value indicating whether the collection has a fixed size.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.NamedImagesCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the collection is 
            synchronized (thread-safe).
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.NamedImagesCollection.Count">
            <summary>
            Gets the number of elements actually contained in the collection.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.NamedImagesCollection.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the collection.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.NamedImage">
            <summary>
            NamedImage class stores a single Image with it's unique name.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.NamedImage.#ctor">
            <summary>
            Public constructor.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.NamedImage.#ctor(System.String,System.Drawing.Image)">
            <summary>
            Public constructor.
            </summary>
            <param name="name">Image name.</param>
            <param name="image">Image class.</param>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.NamedImage.Name">
            <summary>
            Image name.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.NamedImage.Image">
            <summary>
            Image object.
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.Formulas.GeneralTechnicalIndicators">
            <summary>
            This class is used for calculations of general 
            technical analyses indicators.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Formulas.GeneralTechnicalIndicators.StandardDeviation(System.Double[][],System.Double[][]@,System.String[],System.String[])">
            <summary>
            Standard Deviation is a statistical measure of volatility. 
            Standard Deviation is typically used as a component of 
            other indicators, rather than as a stand-alone indicator. 
            For example, Bollinger Bands are calculated by adding 
            a security's Standard Deviation to a moving average. 
            High Standard Deviation values occur when the data item 
            being analyzed (e.g., prices or an indicator) is changing 
            dramatically. Similarly, low Standard Deviation values 
            occur when prices are stable.
            ---------------------------------------------------------
            Input: 
            	- 1 Y value.
            Output: 
            	- 1 Y value Standard Deviation
            Parameters: 
            	- Periods for standard deviation ( used for moving average )
            Extra Parameters: 
            	-
            </summary>
            <param name="inputValues">Arrays of doubles - Input values</param>
            <param name="outputValues">Arrays of doubles - Output values</param>
            <param name="parameterList">Array of strings - Parameters</param>
            <param name="extraParameterList">Array of strings - Extra parameters</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Formulas.GeneralTechnicalIndicators.AverageTrueRange(System.Double[][],System.Double[][]@,System.String[],System.String[])">
            <summary>
            The Average True Range ("ATR") is a measure of volatility. It was introduced 
            by Welles Wilder in his book, New Concepts in Technical Trading Systems, and 
            has since been used as a component of many indicators and trading systems. Wilder 
            has found that high ATR values often occur at market bottoms following a "panic" 
            sell-off. Low Average True Range values are often found during extended sideways 
            periods, such as those found at tops and after consolidation periods. The Average 
            True Range can be interpreted using the same techniques that are used with 
            the other volatility indicators.
            ---------------------------------------------------------
            Input: 
            	- 3 Y values ( High, Low, Close ).
            Output: 
            	- 1 Y value AverageTrueRange
            Parameters: 
            	- Periods (Default 14) = is used to configure the number of periods to calculate the ATR
            Extra Parameters: 
            	-
            </summary>
            <param name="inputValues">Arrays of doubles - Input values</param>
            <param name="outputValues">Arrays of doubles - Output values</param>
            <param name="parameterList">Array of strings - Parameters</param>
            <param name="extraParameterList">Array of strings - Extra parameters</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Formulas.GeneralTechnicalIndicators.EaseOfMovement(System.Double[][],System.Double[][]@,System.String[],System.String[])">
            <summary>
            The Ease of Movement indicator shows the relationship between volume and price 
            change. This indicator shows how much volume is required to move prices. The Ease 
            of Movement indicator was developed Richard W. Arms, Jr., the creator of Equivolume.
            High Ease of Movement values occur when prices are moving upward on light volume. 
            Low Ease of Movement values occur when prices are moving downward on light volume. 
            If prices are not moving, or if heavy volume is required to move prices, then 
            indicator will also be near zero.
            ---------------------------------------------------------
            Input: 
            	- 3 Y values ( High, Low, Volume ).
            Output: 
            	- 1 Y value Ease Of Movement
            Parameters: 
            	- 
            Extra Parameters: 
            	-
            </summary>
            <param name="inputValues">Arrays of doubles - Input values</param>
            <param name="outputValues">Arrays of doubles - Output values</param>
            <param name="parameterList">Array of strings - Parameters</param>
            <param name="extraParameterList">Array of strings - Extra parameters</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Formulas.GeneralTechnicalIndicators.MassIndex(System.Double[][],System.Double[][]@,System.String[],System.String[])">
            <summary>
            The Mass Index was designed to identify trend reversals by measuring the narrowing 
            and widening of the range between the high and low prices. As this range widens, the 
            Mass Index increases; as the range narrows the Mass Index decreases.
            The Mass Index was developed by Donald Dorsey. According to Mr. Dorsey, the most 
            significant pattern to watch for is a "reversal bulge." A reversal bulge occurs when 
            a 25-period Mass Index rises above 27.0 and subsequently falls below 26.5. A reversal 
            in price is then likely. The overall price trend (i.e., trending or trading range) 
            is unimportant.
            ---------------------------------------------------------
            Input: 
            	- 2 Y values ( High, Low ).
            Output: 
            	- 1 Y value Mass Index
            Parameters: 
            	- Period = is used to calculate the accumulation, By default this property is set to 25.
            	- AveragePeriod = is used to calculate Simple Moving Avg, By default this property is set to 9.
            Extra Parameters: 
            	-
            </summary>
            <param name="inputValues">Arrays of doubles - Input values</param>
            <param name="outputValues">Arrays of doubles - Output values</param>
            <param name="parameterList">Array of strings - Parameters</param>
            <param name="extraParameterList">Array of strings - Extra parameters</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Formulas.GeneralTechnicalIndicators.Performance(System.Double[][],System.Double[][]@,System.String[],System.String[])">
            <summary>
            The Performance indicator displays a security's price performance as 
            a percentage. This is sometimes called a "normalized" chart. The 
            Performance indicator displays the percentage that the security 
            has increased since the first period displayed. For example, if 
            the Performance indicator is 10, it means that the security's 
            price has increased 10% since the first period displayed on the 
            left side of the chart. Similarly, a value of -10% means that 
            the security's price has fallen by 10% since the first period 
            displayed.
            ---------------------------------------------------------
            Input: 
            	- 1 Y value ( Close ).
            Output: 
            	- 1 Y value Performance
            Parameters: 
            	-
            Extra Parameters: 
            	-
            </summary>
            <param name="inputValues">Arrays of doubles - Input values</param>
            <param name="outputValues">Arrays of doubles - Output values</param>
            <param name="parameterList">Array of strings - Parameters</param>
            <param name="extraParameterList">Array of strings - Extra parameters</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Formulas.GeneralTechnicalIndicators.RateOfChange(System.Double[][],System.Double[][]@,System.String[],System.String[])">
            <summary>
            Rate of Change is used to monitor momentum by making direct comparisons between current 
            and past prices on a continual basis. The results can be used to determine the strength 
            of price trends. Note: This study is the same as the Momentum except that Momentum uses 
            subtraction in its calculations while Rate of Change uses division. The resulting lines 
            of these two studies operated over the same data will look exactly the same - only the 
            scale values will differ. The Price Rate-of-Change ("ROC") indicator displays the 
            difference between the current price and the price x-time periods ago. The difference 
            can be displayed in either points or as a percentage. The Momentum indicator displays 
            the same information, but expresses it as a ratio. When the Rate-of-Change displays 
            the price change in points, it subtracts the price x-time periods ago from today’s price.
            When the Rate-of-Change displays the price change as a percentage, it divides 
            the price change by price x-time period’s ago.
            ---------------------------------------------------------
            Input: 
            	- 1 Y value ( Close ).
            Output: 
            	- 1 Y value Rate of Change
            Parameters: 
            	- Periods = is used to configure the number of periods to calculate the rate of Change. By default the Periods property is set to 10.
            Extra Parameters: 
            	-
            </summary>
            <param name="inputValues">Arrays of doubles - Input values</param>
            <param name="outputValues">Arrays of doubles - Output values</param>
            <param name="parameterList">Array of strings - Parameters</param>
            <param name="extraParameterList">Array of strings - Extra parameters</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Formulas.GeneralTechnicalIndicators.RelativeStrengthIndex(System.Double[][],System.Double[][]@,System.String[],System.String[])">
            <summary>
            This indicator was developed by Welles Wilder Jr. Relative Strength is often 
            used to identify price tops and bottoms by keying on specific levels 
            (usually "30" and "70") on the RSI chart which is scaled from from 0-100. 
            The study is also useful to detect the following: 
            	- Movement which might not be as readily apparent on the bar chart
            	- Failure swings above 70 or below 30 which can warn of coming reversals
            	- Support and resistance levels 
            	- Divergence between the RSI and price which is often a useful reversal indicator 
            ---------------------------------------------------------
            Input: 
            	- 1 Y value ( Close ).
            Output: 
            	- 1 Y value RelativeStrenghtIndex 
            Parameters: 
            	- Periods = is used to configure the number of periods to calculate the RSI indicator. By default the Periods property is set to 10.
            Extra Parameters: 
            	-
            </summary>
            <param name="inputValues">Arrays of doubles - Input values</param>
            <param name="outputValues">Arrays of doubles - Output values</param>
            <param name="parameterList">Array of strings - Parameters</param>
            <param name="extraParameterList">Array of strings - Extra parameters</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Formulas.GeneralTechnicalIndicators.Trix(System.Double[][],System.Double[][]@,System.String[],System.String[])">
            <summary>
            TRIX is a momentum indicator that displays the percent rate-of-change of a triple 
            exponentially smoothed moving average of the security's closing price. It is designed 
            to keep you in trends equal to or shorter than the number of periods you specify. 
            The TRIX indicator oscillates around a zero line. Its triple exponential smoothing is 
            designed to filter out "insignificant" cycles (i.e., those that are shorter than 
            the number of periods you specify).	Trades should be placed when the indicator changes 
            direction (i.e., buy when it turns up and sell when it turns down). You may want to 
            plot a 9-period moving average of the TRIX to create a "signal" line (similar to the 
            MACD indicator, and then buy when the TRIX rises above its signal, and sell when it 
            falls below its signal. Divergences between the security and the TRIX can also help 
            identify turning points.
            ---------------------------------------------------------
            Input: 
            	- 1 Y values ( Close ).
            Output: 
            	- 1 Y value ( Trix ).
            Parameters: 
            	- Period = is used to calculate the Exponential Moving Avg, By default this property is set to 12.
            Extra Parameters: 
            	-
            </summary>
            <param name="inputValues">Arrays of doubles - Input values</param>
            <param name="outputValues">Arrays of doubles - Output values</param>
            <param name="parameterList">Array of strings - Parameters</param>
            <param name="extraParameterList">Array of strings - Extra parameters</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Formulas.GeneralTechnicalIndicators.Macd(System.Double[][],System.Double[][]@,System.String[],System.String[])">
            <summary>
            The MACD is used to determine overbought or oversold conditions in the market. Written 
            for stocks and stock indices, MACD can be used for commodities as well. The MACD line 
            is the difference between the long and short exponential moving averages of the chosen 
            item. The signal line is an exponential moving average of the MACD line. Signals are 
            generated by the relationship of the two lines. As with RSI and Stochastics, 
            divergences between the MACD and prices may indicate an upcoming trend reversal. The MACD  
            is a trend following momentum indicator that shows the relationship between two 
            moving averages of prices. The MACD is the difference between a 26-day and 12-day 
            exponential moving average. A 9-day exponential moving average, called the "signal" 
            (or "trigger") line is plotted on top of the MACD to show buy/sell opportunities. The 
            MACD is calculated by subtracting the value of a 26-day exponential moving average 
            from a 12-day exponential moving average. A 9-day dotted exponential moving average of 
            the MACD (the "signal" line) is then plotted on top of the MACD.
            ---------------------------------------------------------
            Input: 
            	- 1 Y value ( Close ).
            Output: 
            	- 1 Y value ( Macd ).
            Parameters: 
            	- ShortPeriod = is used to configure the short Exponential Moving Average, By default this property is set to 12.
            	- LongPeriod = is used to configure the Long Exponential Moving Average, By default this property is set to 26.
            Extra Parameters: 
            	-
            </summary>
            <param name="inputValues">Arrays of doubles - Input values</param>
            <param name="outputValues">Arrays of doubles - Output values</param>
            <param name="parameterList">Array of strings - Parameters</param>
            <param name="extraParameterList">Array of strings - Extra parameters</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Formulas.GeneralTechnicalIndicators.CommodityChannelIndex(System.Double[][],System.Double[][]@,System.String[],System.String[])">
            <summary>
            The CCI is a timing system that is best applied to commodity contracts which 
            have cyclical or seasonal tendencies. CCI does not determine the length of 
            cycles - it is designed to detect when such cycles begin and end through 
            the use of a statistical analysis which incorporates a moving average and a divisor 
            reflecting both the possible and actual trading ranges. Although developed primarily 
            for commodities, the CCI could conceivably be used to analyze stocks as well. The 
            Commodity Channel Index ("CCI") measures the variation of a security’s price from 
            its statistical mean. High values show that prices are unusually high compared to 
            average prices whereas low values indicate that prices are unusually low. 
            1. Calculate today's Typical Price (TP) = (H+L+C)/3 where H = high; L = low, and C = close. 
            2. Calculate today's 20-day Simple Moving Average of the Typical Price (SMATP). 
            3. Calculate today's Mean Deviation. First, calculate the absolute value of the difference 
               between today's SMATP and the typical price for each of the past 20 days. 
               Add all of these absolute values together and divide by 20 to find the Mean Deviation. 
            4. The final step is to apply the Typical Price (TP), the Simple Moving Average of the 
               Typical Price (SMATP), the Mean Deviation and a Constant (.015).
            ---------------------------------------------------------
            Input: 
            	- 3 Y values ( Hi, Low, Close ).
            Output: 
            	- 1 Y value ( CCI ).
            Parameters: 
            	- Periods = is used to configure the number of periods to calculate the CCI. By default the Periods property is set to 10.
            Extra Parameters: 
            	-
            </summary>
            <param name="inputValues">Arrays of doubles - Input values</param>
            <param name="outputValues">Arrays of doubles - Output values</param>
            <param name="parameterList">Array of strings - Parameters</param>
            <param name="extraParameterList">Array of strings - Extra parameters</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Formulas.GeneralTechnicalIndicators.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Formulas.GeneralTechnicalIndicators.Formula(System.String,System.Double[][],System.Double[][]@,System.String[],System.String[],System.String[][]@)">
            <summary>
            The first method in the module, which converts a formula 
            name to the corresponding private method.
            </summary>
            <param name="formulaName">String which represent a fomula name</param>
            <param name="inputValues">Arrays of doubles - Input values</param>
            <param name="outputValues">Arrays of doubles - Output values</param>
            <param name="parameterList">Array of strings - Formula parameters</param>
            <param name="extraParameterList">Array of strings - Extra Formula parameters from DataManipulator object</param>
            <param name="outLabels">Array of strings - Used for Labels. Description for ouput results.</param>
        </member>
        <member name="P:Dundas.Charting.WebControl.Formulas.GeneralTechnicalIndicators.Name">
            <summary>
            Formula Module name
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.Design.ImageValueEditor">
            <summary>
            Image Url editor class
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.ImageValueEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Edit Image Url value. 
            Makes a base class call with a chart control descriptor context.
            </summary>
            <param name="context">Editing context.</param>
            <param name="provider">Provider.</param>
            <param name="value">Value to edit.</param>
            <returns>Result</returns>
        </member>
        <member name="T:Dundas.Charting.WebControl.Design.MapAreaCoordinatesConverter">
            <summary>
            Converter for the array of map area coordinates
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.MapAreaCoordinatesConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Overrides the CanConvertFrom method of TypeConverter.
            The ITypeDescriptorContext interface provides the context for the
            conversion. Typically this interface is used at design time to 
            provide information about the design-time container.
            </summary>
            <param name="context">Descriptor context.</param>
            <param name="sourceType">Convertion source type.</param>
            <returns>Indicates if convertion is possible.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.MapAreaCoordinatesConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Overrides the ConvertFrom method of TypeConverter.
            Convert from comma separated values in the string.
            </summary>
            <param name="context">Descriptor context.</param>
            <param name="culture">Culture information.</param>
            <param name="value">Value to convert from.</param>
            <returns>Indicates if convertion is possible.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.MapAreaCoordinatesConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Overrides the ConvertTo method of TypeConverter.
            Convert coordinates array to comma separated values in string.
            </summary>
            <param name="context">Descriptor context.</param>
            <param name="culture">Culture information.</param>
            <param name="value">Value to convert.</param>
            <param name="destinationType">Convertion destination type.</param>
            <returns>Converted object.</returns>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.ToolbarAttributes">
            <summary>
            Exposes chart toolbar attributes.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ToolbarAttributes.#ctor">
            <summary>
            Initializes new instance of <see cref="T:Dundas.Olap.WebUIControls.ToolbarAttributes"/> object.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ToolbarAttributes.#ctor(Dundas.Olap.WebUIControls.ICommandElement)">
            <summary>
            Creates new instance of <see cref="T:Dundas.Olap.WebUIControls.ToolbarAttributes"/> object.
            </summary>
            <param name="parent">Chart UI object.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ToolbarAttributes.ShouldSerializeItems">
            <summary>
            Checks if toolbar items collection is modified and should be serialized.
            </summary>
            <returns>True if items where modified and they need to be serialized.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ToolbarAttributes.ResetItems">
            <summary>
            Resets toolbar items collection.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ToolbarAttributes.Initialize">
            <summary>
            Initialize toolbar item collection.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ToolbarAttributes.HideToolBar">
            <summary>
            Removes all items from the ToolBar component ( coolBar)
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ToolbarAttributes.ShowToolBar">
            <summary>
            Refreshes the toolbar component ( coolBar)
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ToolbarAttributes.OnCommandMessage(Dundas.Olap.WebUIControls.CommandMessage,System.Object,System.Object)">
            <summary>
            Command message handler.
            </summary>
            <param name="msg">Command message.</param>
            <param name="source">Source of the command.</param>
            <param name="parameters">Command parameters</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ToolbarAttributes.Invalidate">
            <summary>
            Invalidates chart toolbar.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ToolbarAttributes.IsToolbarVisible">
            <summary>
            Checks if toolbar is visible.
            </summary>
            <returns>True if toolbar is visible.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ToolbarAttributes.GetToolBarControlPosition">
            <summary>
            Method updates toolbar control position in pixels using 
            current Position property in relative coordinates.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ToolbarAttributes.GetRequiredHeight(Dundas.Olap.WebUIControls.ChartGraphics)">
            <summary>
            Get height required by the toolbar.
            </summary>
            <param name="chartGraph">Chart graphics.</param>
            <returns>Required toolbar height in relative coordinates.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ToolbarAttributes.AdjustAreasPosition(System.Boolean,Dundas.Olap.WebUIControls.ChartGraphics,System.Drawing.RectangleF@)">
            <summary>
            Calculates position of the toolbar in the chart and adjusts 
            space available for other chart elements.
            </summary>
            <param name="outsideChart">True if this method process tool bar position before chart border.</param>
            <param name="graph">Chart graphics.</param>
            <param name="elementsRect">Current area available for chart elements.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ToolbarAttributes.GetBorderSpacing(Dundas.Olap.WebUIControls.ChartGraphics)">
            <summary>
            Helper method that calculates spacing on each side
            of the 3D toolbar border
            </summary>
            <param name="chartGraph">Chart graphics.</param>
            <returns>Required offset on all 4 sides.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ToolbarAttributes.GetDefaultSpacing">
            <summary>
            Returns default toolbar spacing.
            </summary>
            <returns>Default toolbar spasing</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ToolbarAttributes.DrawToolbarBorder(Dundas.Olap.WebUIControls.ChartGraphics,System.Boolean)">
            <summary>
            Draws toolbar border.
            </summary>
            <param name="chartGraph">Chart graphics.</param>
            <param name="toolbarOnly">Indicates that only top elements are redrawn.</param>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ToolbarAttributes.Enabled">
            <summary>
            Determines if the toolbar is visible on the chart.
            </summary>
            <value>
            <b>true</b> if chart toolbar is enabled, <b>false</b> if it is not. Defaults 
            to <b>false</b>.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ToolbarAttributes.AllowMouseMoving">
            <summary>
            Determines if the toolbar is allowed to be moved with the mouse by the end-user. 
            </summary>
            <value>
            <b>true</b> if chart toolbar can be moved with a mouse, <b>false</b> if it is not. Defaults 
            to <b>true</b>.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ToolbarAttributes.Items">
            <summary>
            Represents the collection of toolbar command items.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ToolbarAttributes.Docking">
            <summary>
            Determines if the toolbar is docked on the top or bottom of the chart. 
            </summary>
            <value>
            A <see cref="T:Dundas.Olap.WebUIControls.ToolbarDocking"/> enumeration value.
            </value>
            <remarks>
            Setting this property will only have an effect if the <see cref="P:Dundas.Olap.WebUIControls.ToolbarAttributes.Position"/> 
            property is set to Auto.
            </remarks>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ToolbarAttributes.Placement">
            <summary>
            Determines if the docked toolbar is placed inside or outside the chart frame. 
            </summary>
            <value>
            A <see cref="T:Dundas.Olap.WebUIControls.ToolbarPlacement"/> enumeration value.
            </value>
            <remarks>
            Setting this property will only have an effect if the <see cref="P:Dundas.Olap.WebUIControls.ToolbarAttributes.Position"/> 
            property is set to Auto.
            </remarks>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ToolbarAttributes.Position">
            <summary>
            Determines the toolbar position.
            </summary>
            <value>
            A <see cref="T:Dundas.Olap.WebUIControls.ElementPosition"/> value.
            </value>
            <remarks>
            Toolbar position in relative coordinates, where (0,0) is top left corner of the chart
            and (100,100) is bottom right corner.
            Automatic toolbar position can also be set, then <seealso cref="P:Dundas.Olap.WebUIControls.ToolbarAttributes.Docking"/> and 
            <seealso cref="P:Dundas.Olap.WebUIControls.ToolbarAttributes.Placement"/> properties determine the position of the toolbar.
            </remarks>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ToolbarAttributes.BorderSkin">
            <summary>
            Determines the toolbar border skin style.
            <seealso cref="T:Dundas.Olap.WebUIControls.BorderSkinAttributes"/>
            </summary>
            <value>
            A <see cref="T:Dundas.Olap.WebUIControls.BorderSkinAttributes"/> value.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ToolbarAttributes.BackColor">
            <summary>
            Gets or sets the background color of the chart toolbar.
            </summary>
            <value>A <see cref="T:System.Drawing.Color"/> object that represents the 
            background color of the chart toolbar. The default value is <b>Color.Empty</b>.
            </value>
            <remarks>
            When set to <b>Color.Empty</b> the background color is automatically determined
            based on the chart background colors.
            </remarks>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ToolbarAttributes.BorderColor">
            <summary>
            Gets or sets the color of the toolbar border. 
            </summary>
            <value>A <see cref="T:System.Drawing.Color"/> object that represents the 
            color of the chart toolbar border. The default value is <b>Color.Black</b>.
            </value>
            <remarks>
            This property will not have any effect if the <see cref="P:Dundas.Olap.WebUIControls.ToolbarAttributes.BorderWidth"/> 
            property is set to 0 or <seealso cref="P:Dundas.Olap.WebUIControls.ToolbarAttributes.BorderStyle"/> property is set to
            <b>NotSet</b>
            </remarks>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ToolbarAttributes.BorderWidth">
            <summary>
            The line width of the chart toolbar border, measured in pixels.
            </summary>
            <value>
            An integer that represents the width of the label's border. Defaults 
            to 1.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ToolbarAttributes.BorderStyle">
            <summary>
            The line style of the chart toolbar border.
            <seealso cref="P:Dundas.Olap.WebUIControls.ToolbarAttributes.BorderWidth"/>
            <seealso cref="P:Dundas.Olap.WebUIControls.ToolbarAttributes.BorderColor"/>
            </summary>
            <value>
            A <see cref="T:Dundas.Olap.WebUIControls.ChartDashStyle"/> enumeration value. The default value is <b>ChartDashStyle.Solid</b>.
            </value>
            <remarks>
            This property will not have any effect if the <see cref="P:Dundas.Olap.WebUIControls.ToolbarAttributes.BorderWidth"/> 
            property is set to 0.
            </remarks>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ToolbarAttributes.ShadowColor">
            <summary>
            Gets or sets the color of the chart toolbar shadow.
            </summary>
            <value>A <see cref="T:System.Drawing.Color"/> object that represents the 
            color of the chart toolbar shadow. The default ARGB value is <b>128,0,0,0</b>.
            </value>
            <remarks>
            This property will not have any effect if the <see cref="P:Dundas.Olap.WebUIControls.ToolbarAttributes.ShadowOffset"/> 
            property is set to 0 and/or <see cref="!:BorderSkin.SkinStyle"/> property 
            is not set to <b>None</b>.
            </remarks>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ToolbarAttributes.ShadowOffset">
            <summary>
            Determines chart toolbar shadow offset.
            </summary>
            <value>
            An integer that represents the toolbar shadow offset, in pixels. Defaults to 0.
            </value>
            <remarks>
            This property will not have any effect if the <see cref="!:BorderSkin.SkinStyle"/> 
            property is not set to <b>None</b>.
            </remarks>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ToolbarAttributes.ChartUI">
            <summary>
            Gets chart UI object.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ToolbarAttributes.Dundas#Olap#WebUIControls#ICommandElement#Parent">
            <summary>
            Gets the reference to the parent element.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ToolbarAttributes.Dundas#Olap#WebUIControls#ICommandElement#Chart">
            <summary>
            Gets the reference to the chart control.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ToolbarAttributes.ButtonState.#ctor(Dundas.Olap.WebUIControls.CommandUIItem)">
            <summary>
            Initializes a new instance of the <see cref="T:Dundas.Olap.WebUIControls.ToolbarAttributes.ButtonState"/> class.
            </summary>
            <param name="cmdUI">The CMD UI.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ToolbarAttributes.ButtonState.TrackState">
            <summary>
            Tracks the state.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ToolbarAttributes.ButtonState.IsPropertiesChanged">
            <summary>
            Determines whether the properties are changed.
            </summary>
            <returns>
            	<c>true</c> if properties are changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ToolbarAttributes.ButtonState.IsChanged">
            <summary>
            Determines whether this instance is changed.
            </summary>
            <returns>
            	<c>true</c> if this instance is changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.ChartCommandType">
            <summary>
            The ChartCommandType represents all standard commands.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCommandType.UserDefined">
            <summary>
            Empty command. Do nothing.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCommandType.Copy">
            <summary>
            Copies chart image and CSV data into clipboard.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCommandType.Paste">
            <summary>
            Pastes CSV data from clipboard, create new series
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCommandType.Delete">
            <summary>
            Deletes selected object.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCommandType.LoadGroup">
            <summary>
            Loads chart template from file.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCommandType.LoadAppearance">
            <summary>
            Loads appearance part from chart template.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCommandType.LoadAll">
            <summary>
            Loads appearance part from chart template.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCommandType.ResetAppearance">
            <summary>
            Resets chart appearance.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCommandType.SaveGroup">
            <summary>
            Saves chart template to file.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCommandType.SaveImage">
            <summary>
            Saves chart image to file.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCommandType.SaveAppearance">
            <summary>
            Saves appearance to file.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCommandType.SaveAll">
            <summary>
            Saves chart template to file.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCommandType.PrintPreview">
            <summary>
            Shows print preview form.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCommandType.Print">
            <summary>
            Prints the chart.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCommandType.Properties">
            <summary>
            Edits element by property dialog.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCommandType.ToggleDataLabels">
            <summary>
            Shows/hides data labels 
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCommandType.ToggleLegend">
            <summary>
            Shows/hides the legend 
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCommandType.Toggle3DGroup">
            <summary>
            Toggles 3D mode, group command
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCommandType.Toggle3D">
            <summary>
            Toggles 3D mode
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCommandType.Toggle3DClustered">
            <summary>
            Toggles 3D Clustering
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCommandType.Toggle3DRightAngle">
            <summary>
            Toggle 3D right angle
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCommandType.Rotate3DGroup">
            <summary>
            Performs rotating of the chart
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCommandType.RotateLeft">
            <summary>
            Performs rotating of the chart
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCommandType.RotateRight">
            <summary>
            Performs rotating of the chart
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCommandType.RotateUp">
            <summary>
            Performs rotating of the chart
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCommandType.RotateDown">
            <summary>
            Performs rotating of the chart
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCommandType.Modify3DPointGapGroup">
            <summary>
            Inrease/decrease 3D point gap.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCommandType.Modify3DPointGapInc">
            <summary>
            Inrease 3D point gap.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCommandType.Modify3DPointGapDec">
            <summary>
            Decrease 3D point gap.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCommandType.Modify3DPointDepthGroup">
            <summary>
            Increase/decrease 3D point depth
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCommandType.Modify3DPointDepthInc">
            <summary>
            Increase 3D point depth
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCommandType.Modify3DPointDepthDec">
            <summary>
            Decrease 3D point depth
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCommandType.Modify3DPerspectiveGroup">
            <summary>
            Increase/decrease 3D perspective
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCommandType.Modify3DPerspectiveInc">
            <summary>
            Increase 3D perspective
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCommandType.Modify3DPerspectiveDec">
            <summary>
            Decrease 3D perspective
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCommandType.SelectChartGroup">
            <summary>
            Changes series chart type.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCommandType.SelectChartPoint">
            <summary>
            Point chart type.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCommandType.SelectChartBubble">
            <summary>
            Bubble chart type.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCommandType.SelectChartLine">
            <summary>
            Line chart type.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCommandType.SelectChartSpline">
            <summary>
            Spline chart type.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCommandType.SelectChartStepLine">
            <summary>
            StepLine chart type.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCommandType.SelectChartFastLine">
            <summary>
            FastLine chart type.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCommandType.SelectChartFastPoint">
            <summary>
            FastPoint chart type.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCommandType.SelectChartBar">
            <summary>
            Bar chart type.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCommandType.SelectChartStackedBar">
            <summary>
            Stacked bar chart type.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCommandType.SelectChartStackedBar100">
            <summary>
            Hundred percent stacked bar chart type.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCommandType.SelectChartColumn">
            <summary>
            Column chart type.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCommandType.SelectChartStackedColumn">
            <summary>
            Stacked column chart type.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCommandType.SelectChartStackedColumn100">
            <summary>
            Hundred percent stacked column chart type.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCommandType.SelectChartArea">
            <summary>
            Area chart type.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCommandType.SelectChartSplineArea">
            <summary>
            Spline area chart type.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCommandType.SelectChartStackedArea">
            <summary>
            Stacked area chart type.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCommandType.SelectChartStackedArea100">
            <summary>
            Hundred percent stacked area chart type.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCommandType.SelectChartPie">
            <summary>
            Pie chart type.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCommandType.SelectChartDoughnut">
            <summary>
            Doughnut chart type.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCommandType.SelectChartStock">
            <summary>
            Stock chart type.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCommandType.SelectChartCandleStick">
            <summary>
            CandleStick chart type.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCommandType.SelectChartRange">
            <summary>
            Range chart type.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCommandType.SelectChartSplineRange">
            <summary>
            Spline range chart type.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCommandType.SelectChartGantt">
            <summary>
            Gantt chart type.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCommandType.SelectChartRangeColumn">
            <summary>
            Range column chart type.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCommandType.SelectChartRadar">
            <summary>
            Radar chart type.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCommandType.SelectChartPolar">
            <summary>
            Polar chart type.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCommandType.SelectChartBoxPlot">
            <summary>
            Box plot chart type.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCommandType.SelectChartRenko">
            <summary>
            Renko chart type.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCommandType.SelectChartThreeLineBreak">
            <summary>
            ThreeLineBreak chart type.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCommandType.SelectChartKagi">
            <summary>
            Kagi chart type.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCommandType.SelectChartPointAndFigure">
            <summary>
            PointAndFigure chart type.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCommandType.SelectChartFunnel">
            <summary>
            Funnel chart type.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCommandType.SelectChartPyramid">
            <summary>
            Pyramid chart type.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCommandType.SelectPaletteGroup">
            <summary>
            Palette not set.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCommandType.SelectPaletteDefault">
            <summary>
            Default palette.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCommandType.SelectPaletteLightSteelBlue">
            <summary>
            Palette with Light style colors.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCommandType.SelectPaletteEarthTones">
            <summary>
            Palette with Earth Tones style colors.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCommandType.SelectPaletteGrayScale">
            <summary>
            Palette with gray scale colors.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCommandType.SelectPaletteSemiTransparent">
            <summary>
            Palette with Semi Transparent style colors.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCommandType.SelectPaletteExcelLike">
            <summary>
            Palette with Excel style colors.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCommandType.SelectPaletteLightBeige">
            <summary>
            Palette with Light style colors.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCommandType.SelectPaletteBerry">
            <summary>
            Palette with Berry style colors.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCommandType.SelectPaletteChocolate">
            <summary>
            Palette with Chocolate style colors.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCommandType.SelectPaletteFire">
            <summary>
            Palette with Fire style colors.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCommandType.SelectPaletteGreenBlue">
            <summary>
            Palette with GreenBlue style colors.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCommandType.SelectPaletteDundas">
            <summary>
            Palette with Dundas style colors.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCommandType.SelectPaletteAcidWash">
            <summary>
            Palette with Acid Wash style colors. 
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCommandType.SelectPaletteDundasDark">
            <summary>
            Palette with Dundas Dark style colors. 
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCommandType.SelectPaletteArtDeco">
            <summary>
            Palette with Art Deco style colors. 
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCommandType.SelectPaletteKindergarten">
            <summary>
            Palette with Kinder garten style colors. 
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCommandType.SelectPaletteMilkShake">
            <summary>
            Palette with Milk Shake style colors. 
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCommandType.SelectPaletteMidDay">
            <summary>
            Palette with Mid Day style colors. 
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCommandType.SelectPaletteRainbowVapors">
            <summary>
            Palette with Rainbow Vapors style colors. 
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCommandType.SelectPaletteTanzanite">
            <summary>
            Palette with Tanzanite style colors. 
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCommandType.SelectPaletteTan">
            <summary>
            Palette with Tan style colors. 
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCommandType.SelectPaletteVegas">
            <summary>
            Palette with Vegas style colors. 
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCommandType.SelectPaletteWaterLilies">
            <summary>
            Palette with Water Liles style colors. 
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCommandType.Separator">
            <summary>
            Represents separator in menus or toolbox.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCommandType.Spacer">
            <summary>
            Represents space in the toolbox.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCommandType.AddAnnotationGroup">
            <summary>
            Adds an annotation. Group command.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCommandType.AddCalloutAnnotation">
            <summary>
            Adds callout annotation
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCommandType.AddArrowAnnotation">
            <summary>
            Adds Arrow annotation
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCommandType.AddBorder3DAnnotation">
            <summary>
            Adds border 3D annotation
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCommandType.AddTextAnnotation">
            <summary>
            Adds text annotation
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCommandType.AddRectangleAnnotation">
            <summary>
            Adds rectangle annotation
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCommandType.AddEllipseAnnotation">
            <summary>
            Adds ellipse annotation
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCommandType.AddPolylineAnnotation">
            <summary>
            Adds polyline annotation
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCommandType.AddPolygonAnnotation">
            <summary>
            Adds polygon annotation
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCommandType.AddLineAnnotation">
            <summary>
            Adds line annotation
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCommandType.AddVerticalLineAnnotation">
            <summary>
            Adds vertical line annotation
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCommandType.AddHorizontalLineAnnotation">
            <summary>
            Adds Horizontal line annotation
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCommandType.SendToBack">
            <summary>
            Sends annotation or series to back.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCommandType.BringToFront">
            <summary>
            Sends annotation or series to front
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCommandType.ToggleMinorGridLines">
            <summary>
            Shows/hides axis grid lines 
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCommandType.ToggleMajorGridLines">
            <summary>
            Shows/hides axis grid lines 
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCommandType.ToggleReverseAxes">
            <summary>
            Reverses axes.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCommandType.ToggleInterlacedAxes">
            <summary>
            Reverses axes.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCommandType.FinancialIndicatorsGroup">
            <summary>
            Financial Inficators Command Group
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCommandType.MovingAverage">
            <summary>
            Moving average command type
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCommandType.ExponentialMovingAverage">
            <summary>
            Exponential Moving Average command type
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCommandType.TriangularMovingAverage">
            <summary>
            Triangular Moving Average command type
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCommandType.WeightedMovingAverage">
            <summary>
            Weighted Moving Average command type
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCommandType.TypicalPrice">
            <summary>
            Typical Price command type
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCommandType.MedianPrice">
            <summary>
            Median Price command type
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCommandType.WeightedClose">
            <summary>
            Weighted Close command type
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCommandType.Envelopes">
            <summary>
            Envelopes command type
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCommandType.BollingerBands">
            <summary>
            BollingerBands command type
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCommandType.ErrorBar">
            <summary>
            ErrorBar command type
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartCommandType.Forecasting">
            <summary>
            Forecasting command type
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.ToggleStyle">
            <summary>
            Represents CommandStyle behavior and appearance
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ToggleStyle.Auto">
            <summary>
            Command with standard behavior and appearance
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ToggleStyle.Toggled">
            <summary>
            Command can have toggled state
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ToggleStyle.Grouped">
            <summary>
            The command is grouped and behave like radio buttons
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.CommandPopupStyle">
            <summary>
            Defines style of the popup objects
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.CommandPopupStyle.Menu">
            <summary>
            The command will deploy menu as popup
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.CommandPopupStyle.Table">
            <summary>
            The command will show table with icons.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.ToolbarDocking">
            <summary>
            Defines tool bar dock style
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ToolbarDocking.Top">
            <summary>
            Tool bar is docked on top on the chart
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ToolbarDocking.Bottom">
            <summary>
            Tool bar is docked on bottom on the chart
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.ToolbarPlacement">
            <summary>
            Defines tool bar placement
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ToolbarPlacement.InsideChart">
            <summary>
            Toolbar is placed inside of the chart
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ToolbarPlacement.OutsideChart">
            <summary>
            Toolbar is placed outside of the chart
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.CommandInterfaceType">
            <summary>
            Defines command behavior is the command has subcommands.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.CommandInterfaceType.Executable">
            <summary>
            Default behavior - simple executable command
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.CommandInterfaceType.Container">
            <summary>
            The command is container.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.CommandInterfaceType.Decorative">
            <summary>
            The command is not executable like separator and spacer.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.CommandInterfaceType.Mixed">
            <summary>
            The command is exececutable and container like Rotate3DGroup 
            which can accept last executed sub command.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.CommandMessage">
            <summary>
            Defines type of message broadcasted via internal ChartUI message system
            see ChartUI.OnCommandMessage and ChartUI.*.OnCommandMessage
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.CommandMessage.CommandElementRemoved">
            <summary>
            Broadcast when command element is removed
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.CommandMessage.CommandElementAdded">
            <summary>
            Broadcast when command element is added 
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.CommandMessage.CommandIDChanging">
            <summary>
            Broadcast when command is about to change ID
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.CommandMessage.CommandIDChanged">
            <summary>
            Broadcast when command ID has been changed
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.CommandMessage.CommandChangingType">
            <summary>
            Broadcast when command hes been deleted
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.CommandMessage.CommandChangedType">
            <summary>
            Broadcast when command has been changed type
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.CommandMessage.CommandExecuted">
            <summary>
            Broadcast when command is about to execute
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.CommandMessage.CommandExecuting">
            <summary>
            Broadcast when command has been executed
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.CommandMessage.BeginInit">
            <summary>
            Broadcast when serialization is about to begin.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.CommandMessage.EndInit">
            <summary>
            Broadcast when serialization is finished
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.UpdateUIPart">
            <summary>
            This enumeration determines what part of the command UI will be
            updated.
            <seealso cref="M:Dundas.Olap.WebUIControls.CommandUI.UpdateUI(Dundas.Olap.WebUIControls.UpdateUIPart)"/>
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.UpdateUIPart.Text">
            <summary>
            Update the command UI's text.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.UpdateUIPart.Image">
            <summary>
            Update the command UI's image.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.UpdateUIPart.Description">
            <summary>
            Update the command UI's description (tooltip).
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.UpdateUIPart.Shortcut">
            <summary>
            Update the command UI's shortcut key.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.UpdateUIPart.State">
            <summary>
            Update the command UI's state (enabled, latched, etc.).
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.UpdateUIPart.Complete">
            <summary>
            Update all parts of the command's user-interface.
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.ChartTypes.DoughnutChart">
            <summary>
            DoughnutChart class provide only the behaviour information for the 
            Doughnut chart, all the drawing routines are located in the PieChart 
            base class.
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.ChartTypes.PieChart">
            <summary>
            PieChart class provides 2D/3D drawing and hit testing functionality 
            for the Pie chart.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.PieChart.GetImage(Dundas.Charting.WebControl.ChartTypes.ChartTypeRegistry)">
            <summary>
            Gets chart type image.
            </summary>
            <param name="registry">Chart types registry object.</param>
            <returns>Chart type image.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.PieChart.GetLegendImageStyle(Dundas.Olap.WebUIControls.Series)">
            <summary>
            How to draw series/points in legend:
            Filled rectangle, Line or Marker
            </summary>
            <param name="series">Legend item series.</param>
            <returns>Legend item style.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.PieChart.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.PieChart.PrepareData(Dundas.Olap.WebUIControls.Series,System.ComponentModel.Design.IServiceContainer)">
            <summary>
            Calculates Collected pie slice if required.	
            </summary>
            <param name="series">Series to be prepared.</param>
            <param name="serviceContainer">Reference to service container.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.PieChart.UnPrepareData(Dundas.Olap.WebUIControls.Series,System.ComponentModel.Design.IServiceContainer)">
            <summary>
            Remove any changes done while preparing Pie/Doughnut charts
            to draw the collected slice.
            </summary>
            <param name="series">Series to be un-prepared.</param>
            <param name="serviceContainer">Reference to service container.</param>
            <returns>True if series was removed from collection.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.PieChart.Paint(Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.CommonElements,Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.Series)">
            <summary>
            Paint Pie Chart
            </summary>
            <param name="graph">The Chart Graphics object</param>
            <param name="common">The Common elements object</param>
            <param name="area">Chart area for this chart</param>
            <param name="seriesToDraw">Chart series to draw.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.PieChart.MinimumRelativePieSize(Dundas.Olap.WebUIControls.ChartArea)">
            <summary>
            Take Relative Minimum Pie Size attribute
            </summary>
            <param name="area">Chart Area</param>
            <returns>Custom attribute value.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.PieChart.SizeCorrection(Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.CommonElements,Dundas.Olap.WebUIControls.ChartArea)">
            <summary>
            Method that is used to resize pie 
            because of labels.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.PieChart.ProcessChartType(System.Boolean,Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.CommonElements,Dundas.Olap.WebUIControls.ChartArea,System.Boolean,Dundas.Charting.WebControl.ChartTypes.PieChart.LabelsMode,Dundas.Olap.WebUIControls.Series)">
            <summary>
            This method recalculates position of pie slices 
            or checks if pie slice is selected.
            </summary>
            <param name="selection">If True selection mode is active, otherwise paint mode is active</param>
            <param name="graph">The Chart Graphics object</param>
            <param name="common">The Common elements object</param>
            <param name="area">Chart area for this chart</param>
            <param name="shadow">Draw pie shadow</param>
            <param name="labels">Pie labels</param>
            <param name="seriesToDraw">Chart series to draw.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.PieChart.GetLabelOffset(Dundas.Olap.WebUIControls.DataPointAttributes)">
            <summary>
            Gets point offset attribute value if any
            </summary>
            <param name="point">point or series</param>
            <returns>Offset point.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.PieChart.DrawLabels(Dundas.Olap.WebUIControls.ChartGraphics,System.Drawing.PointF,System.Drawing.SizeF,System.Single,System.Single,Dundas.Olap.WebUIControls.DataPoint,System.Single,System.Boolean,Dundas.Olap.WebUIControls.ChartArea,System.Boolean,System.Int32,System.Drawing.Color)">
            <summary>
            Draw Pie labels or test for overlaping.
            </summary>
            <param name="graph">Chart Graphics object</param>
            <param name="middlePoint">Center of the pie chart</param>
            <param name="relativeSize">Size of the square, which will be used for drawing pie.</param>
            <param name="startAngle">Starting angle of a pie slice</param>
            <param name="sweepAngle">Sweep angle of a pie slice</param>
            <param name="point">Data point</param>
            <param name="doughnutRadius">Radius for Doughnut Chart in %</param>
            <param name="exploded">The pie slice is exploded</param>
            <param name="area">Chart area</param>
            <param name="overlapTest">True if test mode is on</param>
            <param name="pointIndex">Data Point Index</param>
            <param name="pieLineColor">Color of line labels</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.PieChart.GetLabelRect(System.Drawing.PointF,Dundas.Olap.WebUIControls.ChartArea,System.String,System.Drawing.StringFormat,Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.DataPoint,System.Boolean)">
            <summary>
            This method returns calculated rectangle from point position 
            for outside label. Rectangle mustn’t be out of chart area.
            </summary>
            <param name="labelPosition">The first position for label</param>
            <param name="area">Chart area used for chart area position</param>
            <param name="text">Label text</param>
            <param name="format">Text format</param>
            <param name="graph">Chart Graphics object</param>
            <param name="point">Data point</param>
            <param name="leftOrientation">Orientation for label. It could be left or right.</param>
            <returns>Calculated rectangle for label</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.PieChart.GetLabelStyle(Dundas.Olap.WebUIControls.DataPoint)">
            <summary>
            This method returns Pie Label Style enumeration 
            from Data Point Custom attribute.
            </summary>
            <param name="point">Data Point</param>
            <returns>Pie label style enumeration</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.PieChart.EstimateLabels(Dundas.Olap.WebUIControls.ChartGraphics,System.Drawing.PointF,System.Drawing.SizeF,System.Single,System.Single,Dundas.Olap.WebUIControls.DataPoint,System.Single,System.Boolean,Dundas.Olap.WebUIControls.ChartArea)">
            <summary>
            Estimate Labels.
            </summary>
            <param name="graph">Chart Graphics object</param>
            <param name="middlePoint">Center of the pie chart</param>
            <param name="relativeSize">Size of the square, which will be used for drawing pie.</param>
            <param name="startAngle">Starting angle of a pie slice</param>
            <param name="sweepAngle">Sweep angle of a pie slice</param>
            <param name="point">Data point</param>
            <param name="doughnutRadius">Radius for Doughnut Chart in %</param>
            <param name="exploded">The pie slice is exploded</param>
            <param name="area">Chart area</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.PieChart.Map(Dundas.Olap.WebUIControls.CommonElements,Dundas.Olap.WebUIControls.DataPoint,System.Single,System.Single,System.Drawing.RectangleF,System.Boolean,System.Single,Dundas.Olap.WebUIControls.ChartGraphics,System.Int32)">
            <summary>
            This method adds map area information.
            </summary>
            <param name="common">The Common elements object</param>
            <param name="point">Data Point</param>
            <param name="startAngle">Start Angle</param>
            <param name="sweepAngle">Sweep Angle</param>
            <param name="rectangle">Rectangle of the pie</param>
            <param name="doughnut">True if doughnut</param>
            <param name="doughnutRadius">Doughnut radius in %</param>
            <param name="graph">Chart graphics object</param>
            <param name="pointIndex">Data point index</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.PieChart.CheckPaleteColors(Dundas.Olap.WebUIControls.DataPointCollection)">
            <summary>
            This method is introduced to check colors of palette. For 
            pie chart the first pie slice and the second pie slice can 
            not have same color because they are connected.
            </summary>
            <param name="points">Data points used for pie chart</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.PieChart.PrepareLabels(System.Drawing.RectangleF)">
            <summary>
            This method finds vertical position for left and 
            right labels on that way that labels do not 
            overlap each other.
            </summary>
            <param name="area">Chart area position</param>
            <returns>True if it is possible to find position that labels do not overlap each other.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.PieChart.SortIntervals(System.Double[],System.Double[],System.Int32[])">
            <summary>
            This algorithm sorts labels vertical intervals.
            </summary>
            <param name="startOfIntervals">Double array of label interval start points</param>
            <param name="endOfIntervals">Double array of label interval end points</param>
            <param name="positinIndex">Integer array of label interval indexes</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.PieChart.InsertOverlapLabel(System.Drawing.RectangleF)">
            <summary>
            This method inserts label rectangles 
            into the collection.
            </summary>
            <param name="labelRect">Label Rectangle</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.PieChart.ArrangeOverlappingIntervals(System.Double[],System.Double[],System.Double,System.Double)">
            <summary>
            This method will find the best position for labels. 
            It is based on finding non overlap intervals for 
            left or right side of the pie. This is 
            recursive algorithm.
            </summary>
            <param name="startOfIntervals">The start positions of intervals.</param>
            <param name="endOfIntervals">The end positions of intervals.</param>
            <param name="startArea">Start position of chart area vertical range.</param>
            <param name="endArea">End position of chart area vertical range.</param>
            <returns>False if non overlapping positions for intervals can not be found.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.PieChart.ReduceEmptySpace(System.Double[],System.Double[],System.Double)">
            <summary>
            This method reduces empty space between intervals. 
            </summary>
            <param name="startOfIntervals">The start positions of intervals.</param>
            <param name="endOfIntervals">The end positions of intervals.</param>
            <param name="reduction">Relative value which presents size reduction.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.PieChart.ShiftIntervals(System.Double[],System.Double[],System.Double,System.Double)">
            <summary>
            This algorithm shifts all intervals for the same 
            amount. It is trying to put all intervals inside 
            chart area range.
            </summary>
            <param name="startOfIntervals">The start positions of intervals.</param>
            <param name="endOfIntervals">The end positions of intervals.</param>
            <param name="startArea">Start position of chart area vertical range.</param>
            <param name="endArea">End position of chart area vertical range.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.PieChart.ShiftOverlappingIntervals(System.Double[],System.Double[])">
            <summary>
            This is used to find non overlapping position for intervals.
            </summary>
            <param name="startOfIntervals">The start positions of intervals.</param>
            <param name="endOfIntervals">The end positions of intervals.</param>
            <returns>Returns true if any label overlaps before method is used.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.PieChart.SpreadInterval(System.Double[],System.Double[],System.Int32,System.Double)">
            <summary>
            This method spread all intervals down or up from 
            splitIndex. Intervals are spread only if there is no 
            empty space which will compensate shifting of intervals.
            </summary>
            <param name="startOfIntervals">The start positions of intervals.</param>
            <param name="endOfIntervals">The end positions of intervals.</param>
            <param name="splitIndex">Position of the interval which ovelap.</param>
            <param name="overlapShift">The half of the overlapping range.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.PieChart.GetYValue(Dundas.Olap.WebUIControls.CommonElements,Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.Series,Dundas.Olap.WebUIControls.DataPoint,System.Int32,System.Int32)">
            <summary>
            Helper function, which returns the Y value of the point.
            </summary>
            <param name="common">Chart common elements.</param>
            <param name="area">Chart area the series belongs to.</param>
            <param name="series">Sereis of the point.</param>
            <param name="point">Point object.</param>
            <param name="pointIndex">Index of the point.</param>
            <param name="yValueIndex">Index of the Y value to get.</param>
            <returns>Y value of the point.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.PieChart.ProcessChartType3D(System.Boolean,Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.CommonElements,Dundas.Olap.WebUIControls.ChartArea,System.Boolean,Dundas.Charting.WebControl.ChartTypes.PieChart.LabelsMode,Dundas.Olap.WebUIControls.Series,System.Single)">
            <summary>
            This method recalculates position of pie slices 
            or checks if pie slice is selected.
            </summary>
            <param name="selection">If True selection mode is active, otherwise paint mode is active</param>
            <param name="graph">The Chart Graphics object</param>
            <param name="common">The Common elements object</param>
            <param name="area">Chart area for this chart</param>
            <param name="shadow">Draw pie shadow</param>
            <param name="labels">Pie labels</param>
            <param name="seriesToDraw">Chart series to draw.</param>
            <param name="pieWidth">Pie width.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.PieChart.Draw3DPie(System.Int32,Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.DataPoint,Dundas.Olap.WebUIControls.ChartArea,System.Drawing.RectangleF,System.Single,System.Single,System.Single,System.Single,System.Boolean,System.Boolean@,System.Boolean,System.Boolean,System.Int32)">
            <summary>
            This method draws a part of a pie slice. Which part is drown 
            depend on turn. There is special case if there is a big pie 
            slice (>180) when one pie slice has to be split on parts 
            and between that other small pie slices has to be drawn.
            </summary>
            <param name="turn">Turn for drawing.</param>
            <param name="graph">Chart Graphics</param>
            <param name="point">Data Point to draw</param>
            <param name="area">Chart area</param>
            <param name="rectangle">Rectangle used for drawing pie clice.</param>
            <param name="startAngle">Start angle for pie slice</param>
            <param name="sweepAngle">End angle for pie slice</param>
            <param name="doughnutRadius">Inner Radius if chart is doughnut</param>
            <param name="pieWidth">Width of the pie</param>
            <param name="selection">Selection mode is active</param>
            <param name="isSelected">true if pie slice is selected</param>
            <param name="sameBackFront">Pie slice is >180 and same pie slice is back and front slice</param>
            <param name="exploded">Pie slice is exploded</param>
            <param name="pointIndex">Point Index</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.PieChart.GetPiePoints(Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.ChartArea,System.Single,System.Drawing.RectangleF,System.Single,System.Single,System.Boolean,System.Single,System.Boolean)">
            <summary>
            This method transforms in 3D space important points for 
            doughnut or pie slice.
            </summary>
            <param name="graph">Chart Graphics</param>
            <param name="area">Chart Area</param>
            <param name="pieWidth">The width of a pie.</param>
            <param name="rectangle">Rectangle used for drawing pie clice.</param>
            <param name="startAngle">Start angle for pie slice.</param>
            <param name="sweepAngle">End angle for pie slice.</param>
            <param name="relativeCoordinates">true if relative coordinates has to be returned.</param>
            <param name="doughnutRadius">Doughnut Radius</param>
            <param name="exploded">Exploded pie slice</param>
            <returns>Returns 3D Transformed pie or doughnut points.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.PieChart.DrawPieCurves(Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.DataPoint,System.Single,System.Single,System.Drawing.PointF[],System.Drawing.SolidBrush,System.Drawing.Pen,System.Boolean,System.Boolean,System.Int32)">
            <summary>
            This method is used for drawing curve around pie slices. This is 
            the most complex part of 3D Pie slice. There is special case if 
            pie slice is bigger then 180 degree.
            </summary>
            <param name="graph">Chart Grahics.</param>
            <param name="area">Chart Area.</param>
            <param name="dataPoint">Data Point used for pie slice.</param>
            <param name="startAngle">Start angle of a pie slice.</param>
            <param name="sweepAngle">Sweep angle of a pie slice.</param>
            <param name="points">Important 3d points of a pie slice.</param>
            <param name="brushWithoutLight">Brush without lithing efects.</param>
            <param name="pen">Pen used for border.</param>
            <param name="rightPosition">Position of the curve of big pie slice. Big pie slice coud have to visible curves - left and right</param>
            <param name="sameBackFront">This is big pie slice which is in same time back and front slice.</param>
            <param name="pointIndex">Data Point Index</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.PieChart.DrawPieCurvesBigSlice(Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.DataPoint,System.Single,System.Single,System.Drawing.PointF[],System.Drawing.Brush,System.Drawing.Pen,System.Boolean,System.Boolean,System.Int32)">
            <summary>
            This method is used for special case when big pie slice has to be drawn.
            </summary>
            <param name="graph">Chart Grahics.</param>
            <param name="area">Chart Area.</param>
            <param name="dataPoint">Data Point used for pie slice.</param>
            <param name="startAngle">Start angle of a pie slice.</param>
            <param name="sweepAngle">Sweep angle of a pie slice.</param>
            <param name="points">Important 3d points of a pie slice.</param>
            <param name="brush">Brush without lithing efects.</param>
            <param name="pen">Pen used for border.</param>
            <param name="rightPosition">Position of the curve of big pie slice. Big pie slice coud have to visible curves - left and right</param>
            <param name="sameBackFront">This is big pie slice which is in same time back and front slice.</param>		
            <param name="pointIndex">Data Point Index</param>
            <returns>True if slice is special case and it is drawn as a special case.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.PieChart.DrawDoughnutCurves(Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.DataPoint,System.Single,System.Single,System.Drawing.PointF[],System.Drawing.SolidBrush,System.Drawing.Pen,System.Boolean,System.Boolean,System.Int32)">
            <summary>
            This method is used for drawing curve around doughnut slices - inner curve. 
            This is the most complex part of 3D Doughnut slice. There is special case if 
            pie slice is bigger then 180 degree.
            </summary>
            <param name="graph">Chart Grahics.</param>
            <param name="area">Chart Area.</param>
            <param name="dataPoint">Data Point used for pie slice.</param>
            <param name="startAngle">Start angle of a pie slice.</param>
            <param name="sweepAngle">Sweep angle of a pie slice.</param>
            <param name="points">Important 3d points of a pie slice.</param>
            <param name="brushWithoutLight">Brush without lithing efects.</param>
            <param name="pen">Pen used for border.</param>
            <param name="rightPosition">Position of the curve of big pie slice. Big pie slice coud have to visible curves - left and right</param>
            <param name="sameBackFront">This is big pie slice which is in same time back and front slice.</param>		
            <param name="pointIndex">Data Point Index</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.PieChart.DrawDoughnutCurvesBigSlice(Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.DataPoint,System.Single,System.Single,System.Drawing.PointF[],System.Drawing.Brush,System.Drawing.Pen,System.Boolean,System.Boolean,System.Int32)">
            <summary>
            This method is used for special case when big doughnut slice has to be drawn.
            </summary>
            <param name="graph">Chart Grahics.</param>
            <param name="area">Chart Area.</param>
            <param name="dataPoint">Data Point used for pie slice.</param>
            <param name="startAngle">Start angle of a pie slice.</param>
            <param name="sweepAngle">Sweep angle of a pie slice.</param>
            <param name="points">Important 3d points of a pie slice.</param>
            <param name="brush">Brush without lithing efects.</param>
            <param name="pen">Pen used for border.</param>
            <param name="rightPosition">Position of the curve of big pie slice. Big pie slice coud have to visible curves - left and right</param>
            <param name="sameBackFront">This is big pie slice which is in same time back and front slice.</param>		
            <param name="pointIndex">Data Point Index</param>
            <returns>True if slice is special case and it is drawn as a special case.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.PieChart.PointOrder(Dundas.Olap.WebUIControls.Series,Dundas.Olap.WebUIControls.ChartArea,System.Single[]@,System.Single[]@,System.Int32[]@,System.Boolean@)">
            <summary>
            This method sort data points on specific way. Because 
            of order of drawing in 3D space, the back data point 
            (point which pass throw 270 degree has to be drawn first. 
            After that side data points have to be drawn. At the end 
            front data point (data point which pass throw 0 degree) 
            has to be drawn. There is special case if there is big 
            data point, which is back and front point in same time.
            </summary>
            <param name="series">Data series</param>
            <param name="area">Chart area</param>
            <param name="newStartAngleList">Unsorted List of Start angles.</param>
            <param name="newSweepAngleList">Unsorted List of Sweep angles.</param>
            <param name="newPointIndexList">Data Point index list</param>
            <param name="sameBackFrontPoint">Beck and Fron Points are same - There is a big pie slice.</param>
            <returns>Sorted data point list.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.PieChart.SwitchPoints(System.Int32,Dundas.Olap.WebUIControls.DataPoint[]@,System.Single[]@,System.Single[]@,System.Int32[]@,System.Boolean)">
            <summary>
            This method switches order of data points in the array of points.
            </summary>
            <param name="numOfPoints">Number of data points</param>
            <param name="points">Array of Data points</param>
            <param name="newStartAngleList">List of start angles which has to be switched together with data points</param>
            <param name="newSweepAngleList">List of sweep angles which has to be switched together with data points</param>
            <param name="newPointIndexList">Indexes (position) of data points in the series</param>
            <param name="sameBackFront">There is big pie slice which has same back and front pie slice</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.PieChart.InitPieSize(Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.ChartArea,System.Drawing.RectangleF@,System.Single@,Dundas.Olap.WebUIControls.DataPoint[],System.Single[],System.Single[],System.Int32[],Dundas.Olap.WebUIControls.Series,System.Single)">
            <summary>
            This method calculates initial pie size if outside 3D labels is active.
            </summary>
            <param name="graph">Chart Graphics object.</param>
            <param name="area">Chart Area.</param>
            <param name="pieRectangle">Rectangle which is used for drawing pie.</param>
            <param name="pieWidth">Width of pie slice.</param>
            <param name="dataPoints">List of data points.</param>
            <param name="startAngleList">List of start angles.</param>
            <param name="sweepAngleList">List of sweep angles.</param>
            <param name="pointIndexList">List of point indexes.</param>
            <param name="series">Data series used for drawing pie chart.</param>
            <param name="labelLineSize">Custom Attribute for label line size.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.PieChart.FillPieLabelOutside(Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.ChartArea,System.Drawing.RectangleF,System.Single,Dundas.Olap.WebUIControls.DataPoint,System.Single,System.Single,System.Int32,System.Single,System.Boolean)">
            <summary>
            This method inserts outside 3D labels into array of Label column class.
            </summary>
            <param name="graph">Chart Graphics object.</param>
            <param name="area">Chart Area.</param>
            <param name="pieRectangle">Rectangle used for drawing pie slices.</param>
            <param name="pieWidth">Width of a pie slice.</param>
            <param name="point">Data Point.</param>
            <param name="startAngle">Start angle of a pie slice.</param>
            <param name="sweepAngle">Sweep angle of a pie slice.</param>
            <param name="pointIndx">Data point index.</param>
            <param name="doughnutRadius">Inner Radius of the doughnut.</param>
            <param name="exploded">true if pie slice is exploded.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.PieChart.Draw3DOutsideLabels(Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.ChartArea,System.Drawing.Pen,System.Drawing.PointF[],Dundas.Olap.WebUIControls.DataPoint,System.Single,System.Int32)">
            <summary>
            This method draws outside labels with lines, which 
            connect labels with pie slices.
            </summary>
            <param name="graph">Chart Graphics object</param>
            <param name="area">Chart Area</param>
            <param name="pen">Pen object</param>
            <param name="points">Important pie points</param>
            <param name="point">Data point</param>
            <param name="midAngle">Middle Angle for pie slice</param>
            <param name="pointIndex">Point Index.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.PieChart.Draw3DInsideLabels(Dundas.Olap.WebUIControls.ChartGraphics,System.Drawing.PointF[],Dundas.Olap.WebUIControls.DataPoint,System.Int32)">
            <summary>
            This method draws inside labels.
            </summary>
            <param name="graph">Chart Graphics object</param>
            <param name="points">Important pie points</param>
            <param name="point">Data point</param>
            <param name="pointIndex">Data point index</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.PieChart.GetLabelText(Dundas.Olap.WebUIControls.DataPoint)">
            <summary>
            Take formated text from label or axis label
            </summary>
            <param name="point">Data point which is used.</param>
            <returns>Formated text</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.PieChart.AddSmartLabelMarkerPositions(Dundas.Olap.WebUIControls.CommonElements,Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.Series,System.Collections.ArrayList)">
            <summary>
            Adds markers position to the list. Used to check SmartLabels overlapping.
            </summary>
            <param name="common">Common chart elements.</param>
            <param name="area">Chart area.</param>
            <param name="series">Series values to be used.</param>
            <param name="list">List to add to.</param>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.PieChart.Name">
            <summary>
            Chart type name
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.PieChart.Stacked">
            <summary>
            True if chart type is stacked
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.PieChart.SupportStackedGroups">
            <summary>
            True if stacked chart type supports groups
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.PieChart.StackSign">
            <summary>
            True if stacked chart type should draw separately positive and 
            negative data points ( Bar and column Stacked types ).
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.PieChart.RequireAxes">
            <summary>
            True if chart type supports axeses
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.PieChart.SecondYScale">
            <summary>
            Chart type with two y values used for scale ( bubble chart type )
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.PieChart.CircularChartArea">
            <summary>
            True if chart type requires circular chart area.
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.PieChart.SupportLogarithmicAxes">
            <summary>
            True if chart type supports logarithmic axes
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.PieChart.SwitchValueAxes">
            <summary>
            True if chart type requires to switch the value (Y) axes position
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.PieChart.SideBySideSeries">
            <summary>
            True if chart series can be placed side-by-side.
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.PieChart.ZeroCrossing">
            <summary>
            If the crossing value is auto Crossing value should be 
            automatically set to zero for some chart 
            types (Bar, column, area etc.)
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.PieChart.DataPointsInLegend">
            <summary>
            True if each data point of a chart must be represented in the legend
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.PieChart.ExtraYValuesConnectedToYAxis">
            <summary>
            Indicates that extra Y values are connected to the scale of the Y axis
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.PieChart.HundredPercent">
            <summary>
            Indicates that it's a hundredred percent chart.
            Axis scale from 0 to 100 percent should be used.
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.PieChart.HundredPercentSupportNegative">
            <summary>
            Indicates that it's a hundredred percent chart.
            Axis scale from 0 to 100 percent should be used.
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.PieChart.ApplyPaletteColorsToPoints">
            <summary>
            True if palette colors should be applied for each data paoint.
            Otherwise the color is applied to the series.
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.PieChart.YValuesPerPoint">
            <summary>
            Number of supported Y value(s) per point 
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.PieChart.Doughnut">
            <summary>
            Chart is Doughnut or Pie type
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.ChartTypes.PieChart.LabelsMode">
            <summary>
            Labels Mode for preparing data
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.ChartTypes.PieChart.LabelsMode.Off">
            <summary>
            There are no labels
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.ChartTypes.PieChart.LabelsMode.Draw">
            <summary>
            Drawing labels mode
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.ChartTypes.PieChart.LabelsMode.EstimateSize">
            <summary>
            Labels Estimation mode
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.ChartTypes.PieChart.LabelsMode.LabelsOverlap">
            <summary>
            Labels Overlap Mode
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.ChartTypes.PieChart.LabelColumn">
            <summary>
            LabelColumn class is used for labels manipulation - outside label style
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.PieChart.LabelColumn.#ctor(System.Drawing.RectangleF)">
            <summary>
            Constructor
            </summary>
            <param name="position">Chart Area position.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.PieChart.LabelColumn.GetLabelIndex(System.Single)">
            <summary>
            Return index of label position in the column.
            </summary>
            <param name="y">y coordinate</param>
            <returns>Index of column</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.PieChart.LabelColumn.Sort">
            <summary>
            This method sorts labels by y Position
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.PieChart.LabelColumn.GetLabelPosition(System.Int32)">
            <summary>
            Returns label position y coordinate from index position
            </summary>
            <param name="index">Index position of the row</param>
            <returns>Y coordinate row position</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.PieChart.LabelColumn.GetLabelPosition(Dundas.Olap.WebUIControls.DataPoint)">
            <summary>
            This method finds X and Y position for outside 
            labels. There is discrete number of cells and 
            Y position depends on cell position. X position 
            is connected with angle between invisible 
            line (which connects center of a pie and label) 
            and any horizontal line.
            </summary>
            <param name="dataPoint">Data Point</param>
            <returns>Position of a label</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.PieChart.LabelColumn.InsertLabel(Dundas.Olap.WebUIControls.DataPoint,System.Single,System.Int32)">
            <summary>
            This method inserts outside labels in Column label list. Column label 
            list has defined number of cells. This method has to put labels on 
            the best position in the list. If two labels according to their 
            positions belong to same cell of the list, this method should 
            assign to them different positions.
            </summary>
            <param name="point">Data Point which label has to be inserted</param>
            <param name="yCoordinate">Y coordinate which is the best position for this label</param>
            <param name="pointIndx">Point index of this data point in the series</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.PieChart.LabelColumn.MoveLabels(System.Int32,System.Boolean)">
            <summary>
            This method is used for inserting labels. When label is inserted 
            and that position was previously used, labels have to be 
            moved on proper way. 
            </summary>
            <param name="position">Position which has to be free</param>
            <param name="upDirection">Direction for moving labels</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.PieChart.LabelColumn.AdjustPositions">
            <summary>
            This method is used to center labels in 
            the middle of chart area (vertically).
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.PieChart.LabelColumn.CheckFreeSpace(System.Int32,System.Boolean)">
            <summary>
            Check if there is empty cell Labels column in 
            specified direction from specified position
            </summary>
            <param name="position">Start Position for testing</param>
            <param name="upDirection">True if direction is upward, false if downward</param>
            <returns>True if there is empty cell</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.PieChart.LabelColumn.Initialize(System.Drawing.RectangleF,System.Boolean,System.Int32,System.Single)">
            <summary>
            This method initialize label column.
            </summary>
            <param name="rectangle">Rectangle used for labels</param>
            <param name="rightPosition">True if labels are on the right side of chart area.</param>
            <param name="maxNumOfRows">Maximum nuber of rows.</param>
            <param name="labelLineSize">Value for label line size from custom attribute.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.DoughnutChart.GetImage(Dundas.Charting.WebControl.ChartTypes.ChartTypeRegistry)">
            <summary>
            Gets chart type image.
            </summary>
            <param name="registry">Chart types registry object.</param>
            <returns>Chart type image.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.DoughnutChart.GetLegendImageStyle(Dundas.Olap.WebUIControls.Series)">
            <summary>
            How to draw series/points in legend:
            Filled rectangle, Line or Marker
            </summary>
            <param name="series">Legend item series.</param>
            <returns>Legend item style.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.DoughnutChart.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.DoughnutChart.Name">
            <summary>
            Chart type name
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.DoughnutChart.Stacked">
            <summary>
            True if chart type is stacked
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.DoughnutChart.RequireAxes">
            <summary>
            True if chart type supports axeses
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.DoughnutChart.SupportLogarithmicAxes">
            <summary>
            True if chart type supports logarithmic axes
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.DoughnutChart.SwitchValueAxes">
            <summary>
            True if chart type requires to switch the value (Y) axes position
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.DoughnutChart.SideBySideSeries">
            <summary>
            True if chart series can be placed side-by-side.
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.DoughnutChart.ZeroCrossing">
            <summary>
            If the crossing value is auto Crossing value should be 
            automatically set to zero for some chart 
            types (Bar, column, area etc.)
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.DoughnutChart.DataPointsInLegend">
            <summary>
            True if each data point of a chart must be represented in the legend
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.DoughnutChart.ExtraYValuesConnectedToYAxis">
            <summary>
            Indicates that extra Y values are connected to the scale of the Y axis
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.DoughnutChart.ApplyPaletteColorsToPoints">
            <summary>
            True if palette colors should be applied for each data paint.
            Otherwise the color is applied to the series.
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.DoughnutChart.YValuesPerPoint">
            <summary>
            Number of supported Y value(s) per point 
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.DoughnutChart.Doughnut">
            <summary>
            Chart is Doughnut or Pie type
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.ChartTypes.BarValueLabelDrawingStyle">
            <summary>
            Bar chart value label drawing style.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.ChartTypes.BarValueLabelDrawingStyle.Outside">
            <summary>
            Outside of the bar.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.ChartTypes.BarValueLabelDrawingStyle.Left">
            <summary>
            Inside the bar aligned to the left.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.ChartTypes.BarValueLabelDrawingStyle.Center">
            <summary>
            Inside the bar aligned to the center.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.ChartTypes.BarValueLabelDrawingStyle.Right">
            <summary>
            Inside the bar aligned to the right.
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.ChartTypes.GanttChart">
            <summary>
            BarChart class contains all the code necessary to draw 
            both Bar and Gantt charts. The GanttChart class is used 
            to override few default settings, so that 2 Y values 
            will be used to define left and right position of each bar.
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.ChartTypes.BarChart">
            <summary>
            BarChart class provides 2D/3D drawing and hit testing 
            functionality for the Bar and Gantt charts. The only 
            difference between the Gantt and Bar chart is that 
            2 Y values are used to position left and right side 
            of each Gantt bar.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.ChartTypes.BarChart.useTwoValues">
            <summary>
            Indicates that two Y values are used to calculate bar position
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.ChartTypes.BarChart.drawSeriesSideBySide">
            <summary>
            Indicates that bars from different series are drawn side by side
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.ChartTypes.BarChart.defLabelDrawingStyle">
            <summary>
            Defines the default drawing style of the labels.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.ChartTypes.BarChart.pointLabelsMarkersPresent">
            <summary>
            Indicates that second point loop is required to draw points labels or markers.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.BarChart.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.BarChart.GetImage(Dundas.Charting.WebControl.ChartTypes.ChartTypeRegistry)">
            <summary>
            Gets chart type image.
            </summary>
            <param name="registry">Chart types registry object.</param>
            <returns>Chart type image.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.BarChart.GetLegendImageStyle(Dundas.Olap.WebUIControls.Series)">
            <summary>
            How to draw series/points in legend:
            Filled rectangle, Line or Marker
            </summary>
            <param name="series">Legend item series.</param>
            <returns>Legend item style.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.BarChart.Paint(Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.CommonElements,Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.Series)">
            <summary>
            Paint Bar Chart.
            </summary>
            <param name="graph">The Chart Graphics object.</param>
            <param name="common">The Common elements object.</param>
            <param name="area">Chart area for this chart.</param>
            <param name="seriesToDraw">Chart series to draw.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.BarChart.ProcessChartType(System.Boolean,System.Boolean,Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.CommonElements,Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.Series)">
            <summary>
            Calculates position of each bar in all series and either draws it or checks the selection.
            </summary>
            <param name="labels">Mode which draws only labels and markers.</param>
            <param name="selection">If True selection mode is active, otherwise paint mode is active.</param>
            <param name="graph">The Chart Graphics object.</param>
            <param name="common">The Common elements object.</param>
            <param name="area">Chart area for this chart.</param>
            <param name="seriesToDraw">Chart series to draw.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.BarChart.DrawLabelsAndMarkers(Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.Axis,Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.CommonElements,System.Drawing.RectangleF,Dundas.Olap.WebUIControls.DataPoint,Dundas.Olap.WebUIControls.Series,System.Double,System.Double,System.Double,System.Int32,System.Int32@)">
            <summary>
            Draws labels and markers.
            </summary>
            <param name="area">Chart area for this chart.</param>
            <param name="hAxis">Horizontal Axis for labels and markers</param>
            <param name="graph">The Chart Graphics object.</param>
            <param name="common">The Common elements object.</param>
            <param name="rectSize">Bar rectangle.</param>
            <param name="point">Data point.</param>
            <param name="ser">Data series.</param>
            <param name="barStartPosition">The zero position or the bottom of bars.</param>
            <param name="barSize">The Height of bars.</param>
            <param name="width">The width of bars.</param>
            <param name="pointIndex">Point index.</param>
            <param name="markerIndex">Marker index reference.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.BarChart.SetHotRegions(Dundas.Olap.WebUIControls.CommonElements,Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.DataPoint,System.Drawing.SizeF,System.String,System.Int32,Dundas.Olap.WebUIControls.MarkerStyle,System.Drawing.PointF)">
            <summary>
            Inserts Hot Regions used for image maps, tool tips and 
            hit test function
            </summary>
            <param name="common">Common elements object</param>
            <param name="graph">Chart Graphics object</param>
            <param name="point">Data point used for hot region</param>
            <param name="markerSize">Size of the marker</param>
            <param name="seriesName">Name of the series</param>
            <param name="pointIndex">Data point index</param>
            <param name="pointMarkerStyle">Marker Style</param>
            <param name="markerPosition">Marker Position</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.BarChart.GetYValue(Dundas.Olap.WebUIControls.CommonElements,Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.Series,Dundas.Olap.WebUIControls.DataPoint,System.Int32,System.Int32)">
            <summary>
            Helper function, which returns the Y value of the point.
            </summary>
            <param name="common">Chart common elements.</param>
            <param name="area">Chart area the series belongs to.</param>
            <param name="series">Sereis of the point.</param>
            <param name="point">Point object.</param>
            <param name="pointIndex">Index of the point.</param>
            <param name="yValueIndex">Index of the Y value to get.</param>
            <returns>Y value of the point.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.BarChart.GetEmptyPointValue(Dundas.Olap.WebUIControls.DataPoint,System.Int32,System.Int32)">
            <summary>
            This method will find previous and next data point, which is not 
            empty and recalculate a new value for current empty data point. 
            New value depends on custom attribute “EmptyPointValue” and 
            it could be zero or average.
            </summary>
            <param name="point">Empty data point.</param>
            <param name="pointIndex">Empty data point index.</param>
            <param name="yValueIndex">Index of the Y value to get.</param>
            <returns>A Value for empty data point.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.BarChart.ProcessChartType3D(System.Boolean,Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.CommonElements,Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.Series)">
            <summary>
            Calculates position of each bar in all series and either draws it or checks the selection in 3D space.
            </summary>
            <param name="selection">If True selection mode is active, otherwise paint mode is active.</param>
            <param name="graph">The Chart Graphics object.</param>
            <param name="common">The Common elements object.</param>
            <param name="area">Chart area for this chart.</param>
            <param name="seriesToDraw">Chart series to draw.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.BarChart.DrawMarkers3D(Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.Axis,Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.CommonElements,System.Drawing.RectangleF,Dundas.Olap.WebUIControls.DataPoint3D,Dundas.Olap.WebUIControls.Series,System.Double,System.Double,System.Double,System.Int32)">
            <summary>
            Draws markers in 3D.
            </summary>
            <param name="area">Chart area for this chart.</param>
            <param name="hAxis">Horizontal Axis for labels and markers</param>
            <param name="graph">The Chart Graphics object.</param>
            <param name="common">The Common elements object.</param>
            <param name="rectSize">Bar rectangle.</param>
            <param name="pointEx">Data point.</param>
            <param name="ser">Data series.</param>
            <param name="barStartPosition">The zero position or the bottom of bars.</param>
            <param name="barSize">The Height of bars.</param>
            <param name="width">The width of bars.</param>
            <param name="pointIndex">Point index.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.BarChart.DrawLabels3D(Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.Axis,Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.CommonElements,System.Drawing.RectangleF,Dundas.Olap.WebUIControls.DataPoint3D,Dundas.Olap.WebUIControls.Series,System.Double,System.Double,System.Double,System.Int32)">
            <summary>
            Draws labels in 3D.
            </summary>
            <param name="area">Chart area for this chart.</param>
            <param name="hAxis">Horizontal Axis for labels and markers</param>
            <param name="graph">The Chart Graphics object.</param>
            <param name="common">The Common elements object.</param>
            <param name="rectSize">Bar rectangle.</param>
            <param name="pointEx">Data point.</param>
            <param name="ser">Data series.</param>
            <param name="barStartPosition">The zero position or the bottom of bars.</param>
            <param name="barSize">The Height of bars.</param>
            <param name="width">The width of bars.</param>
            <param name="pointIndex">Point index.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.BarChart.AddSmartLabelMarkerPositions(Dundas.Olap.WebUIControls.CommonElements,Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.Series,System.Collections.ArrayList)">
            <summary>
            Adds markers position to the list. Used to check SmartLabels overlapping.
            </summary>
            <param name="common">Common chart elements.</param>
            <param name="area">Chart area.</param>
            <param name="series">Series values to be used.</param>
            <param name="list">List to add to.</param>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.BarChart.Name">
            <summary>
            Chart type name
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.BarChart.Stacked">
            <summary>
            True if chart type is stacked
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.BarChart.SupportStackedGroups">
            <summary>
            True if stacked chart type supports groups
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.BarChart.StackSign">
            <summary>
            True if stacked chart type should draw separately positive and 
            negative data points ( Bar and column Stacked types ).
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.BarChart.RequireAxes">
            <summary>
            True if chart type supports axeses
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.BarChart.SecondYScale">
            <summary>
            Chart type with two y values used for scale ( bubble chart type )
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.BarChart.CircularChartArea">
            <summary>
            True if chart type requires circular chart area.
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.BarChart.SupportLogarithmicAxes">
            <summary>
            True if chart type supports logarithmic axes
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.BarChart.SwitchValueAxes">
            <summary>
            True if chart type requires to switch the value (Y) axes position
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.BarChart.SideBySideSeries">
            <summary>
            True if chart series can be placed side-by-side.
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.BarChart.ZeroCrossing">
            <summary>
            If the crossing value is auto Crossing value should be 
            automatically set to zero for some chart 
            types (Bar, column, area etc.)
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.BarChart.DataPointsInLegend">
            <summary>
            True if each data point of a chart must be represented in the legend
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.BarChart.ExtraYValuesConnectedToYAxis">
            <summary>
            Indicates that extra Y values are connected to the scale of the Y axis
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.BarChart.HundredPercent">
            <summary>
            Indicates that it's a hundredred percent chart.
            Axis scale from 0 to 100 percent should be used.
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.BarChart.HundredPercentSupportNegative">
            <summary>
            Indicates that it's a hundredred percent chart.
            Axis scale from 0 to 100 percent should be used.
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.BarChart.ApplyPaletteColorsToPoints">
            <summary>
            True if palette colors should be applied for each data paoint.
            Otherwise the color is applied to the series.
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.BarChart.YValuesPerPoint">
            <summary>
            Number of supported Y value(s) per point 
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.GanttChart.#ctor">
            <summary>
            Public constructor
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.GanttChart.Name">
            <summary>
            Chart type name
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.GanttChart.ZeroCrossing">
            <summary>
            If the crossing value is auto Crossing value should be 
            automatically set to zero for some chart 
            types (Bar, column, area etc.)
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.GanttChart.YValuesPerPoint">
            <summary>
            Number of supported Y value(s) per point 
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.GanttChart.ExtraYValuesConnectedToYAxis">
            <summary>
            Indicates that extra Y values are connected to the scale of the Y axis
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.ChartTypes.BarPointsDrawingOrderComparer">
            <summary>
            Chart 3D engine relies on the data point drawing order 
            to achieve correct visual appearance. All data points 
            have to be drawn in the correct order depending on the 
            3D angles, perspective and the depth of the series.
            
            BarPointsDrawingOrderComparer class is used sort data 
            points of the Bar chart type.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.ChartTypes.BarPointsDrawingOrderComparer.area">
            <summary>
            Chart area object reference.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.ChartTypes.BarPointsDrawingOrderComparer.areaProjectionCenter">
            <summary>
            Area X position where visible sides are switched.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.ChartTypes.BarPointsDrawingOrderComparer.selection">
            <summary>
            Selection mode. Points order should be reversed.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.BarPointsDrawingOrderComparer.#ctor(Dundas.Olap.WebUIControls.ChartArea,System.Boolean,Dundas.Olap.WebUIControls.COPCoordinates)">
            <summary>
            Public constructor.
            </summary>
            <param name="area">Chart area.</param>
            <param name="selection">Selection indicator.</param>
            <param name="coord">Which coordinate of COP (X, Y or Z) to test for surface everlapping.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.BarPointsDrawingOrderComparer.Compare(System.Object,System.Object)">
            <summary>
            Comarer method.
            </summary>
            <param name="o1">First object.</param>
            <param name="o2">Second object.</param>
            <returns>Comparison result.</returns>
        </member>
        <member name="T:Dundas.Charting.WebControl.Borders3D.FrameTitle1Border">
            <summary>
            Implements frame border.
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.Borders3D.FrameThin1Border">
            <summary>
            Implements frame border.
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.Borders3D.RaisedBorder">
            <summary>
            Implements raised border.
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.Borders3D.SunkenBorder">
            <summary>
            Implements embed 3D border.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Borders3D.SunkenBorder.defaultRadiusSize">
            <summary>
            Radius for rounded rectangle
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Borders3D.SunkenBorder.outsideShadowRate">
            <summary>
            Outside shadow rate
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Borders3D.SunkenBorder.sunken">
            <summary>
            Indicates that sunken shadows should be drawn
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Borders3D.SunkenBorder.drawBottomShadow">
            <summary>
            Indicates that bottom shadow should be drawn
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Borders3D.SunkenBorder.drawOutsideTopLeftShadow">
            <summary>
            Indicates that top left outside dark shadow must be drawn
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Borders3D.SunkenBorder.cornerRadius">
            <summary>
            Array of corner radius
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Borders3D.SunkenBorder.sizeLeftTop">
            <summary>
            Border top/left size 
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Borders3D.SunkenBorder.sizeRightBottom">
            <summary>
            Border right/bottom size
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Borders3D.SunkenBorder.drawScrews">
            <summary>
            Indicates that screws should be drawn in the corners of the frame
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Borders3D.SunkenBorder.#ctor">
            <summary>
            Public constructor
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Borders3D.SunkenBorder.GetTitlePositionInBorder">
            <summary>
            Returns the position of the rectangular area in the border where
            title should be displayed. Returns empty rect if title can't be shown in the border.
            </summary>
            <returns>Title position in border.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Borders3D.SunkenBorder.AdjustAreasPosition(Dundas.Olap.WebUIControls.ChartGraphics,System.Drawing.RectangleF@)">
            <summary>
            Adjust areas rectangle coordinate to fit the 3D border
            </summary>
            <param name="graph">Graphics to darw the border on.</param>
            <param name="areasRect">Position to adjust.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Borders3D.SunkenBorder.DrawBorder(Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.BorderSkinAttributes,System.Drawing.RectangleF,System.Drawing.Color,Dundas.Olap.WebUIControls.ChartHatchStyle,System.String,Dundas.Olap.WebUIControls.ChartImageWrapMode,System.Drawing.Color,Dundas.Olap.WebUIControls.ChartImageAlign,Dundas.Olap.WebUIControls.GradientType,System.Drawing.Color,System.Drawing.Color,System.Int32,Dundas.Olap.WebUIControls.ChartDashStyle)">
            <summary>
            Draws 3D border
            </summary>
            <param name="graph">Graphics to darw the border on.</param>
            <param name="borderSkin">Border skin object.</param>
            <param name="rect">Rectangle of the border.</param>
            <param name="backColor">Color of rectangle</param>
            <param name="backHatchStyle">Hatch style</param>
            <param name="backImage">Back Image</param>
            <param name="backImageMode">Image mode</param>
            <param name="backImageTranspColor">Image transparent color.</param>
            <param name="backImageAlign">Image alignment</param>
            <param name="backGradientType">Gradient type</param>
            <param name="backGradientEndColor">Gradient End Color</param>
            <param name="borderColor">Border Color</param>
            <param name="borderWidth">Border Width</param>
            <param name="borderStyle">Border Style</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Borders3D.SunkenBorder.DrawScrew(Dundas.Olap.WebUIControls.ChartGraphics,System.Drawing.RectangleF)">
            <summary>
            Helper function, which draws a screw on the frame
            </summary>
            <param name="graph">Chart graphics to use.</param>
            <param name="rect">Screw position.</param>
        </member>
        <member name="P:Dundas.Charting.WebControl.Borders3D.SunkenBorder.Name">
            <summary>
            Chart type name
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Borders3D.RaisedBorder.#ctor">
            <summary>
            Public constructor
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.Borders3D.RaisedBorder.Name">
            <summary>
            Chart type name
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Borders3D.FrameThin1Border.innerCorners">
            <summary>
            Inner corners radius array
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Borders3D.FrameThin1Border.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Borders3D.FrameThin1Border.DrawBorder(Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.BorderSkinAttributes,System.Drawing.RectangleF,System.Drawing.Color,Dundas.Olap.WebUIControls.ChartHatchStyle,System.String,Dundas.Olap.WebUIControls.ChartImageWrapMode,System.Drawing.Color,Dundas.Olap.WebUIControls.ChartImageAlign,Dundas.Olap.WebUIControls.GradientType,System.Drawing.Color,System.Drawing.Color,System.Int32,Dundas.Olap.WebUIControls.ChartDashStyle)">
            <summary>
            Draws 3D border.
            </summary>
            <param name="graph">Graphics to darw the border on.</param>
            <param name="borderSkin">Border skin object.</param>
            <param name="rect">Rectangle of the border.</param>
            <param name="backColor">Color of rectangle</param>
            <param name="backHatchStyle">Hatch style</param>
            <param name="backImage">Back Image</param>
            <param name="backImageMode">Image mode</param>
            <param name="backImageTranspColor">Image transparent color.</param>
            <param name="backImageAlign">Image alignment</param>
            <param name="backGradientType">Gradient type</param>
            <param name="backGradientEndColor">Gradient End Color</param>
            <param name="borderColor">Border Color</param>
            <param name="borderWidth">Border Width</param>
            <param name="borderStyle">Border Style</param>
        </member>
        <member name="P:Dundas.Charting.WebControl.Borders3D.FrameThin1Border.Name">
            <summary>
            Chart type name
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Borders3D.FrameTitle1Border.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Borders3D.FrameTitle1Border.GetTitlePositionInBorder">
            <summary>
            Returns the position of the rectangular area in the border where
            title should be displayed. Returns empty rect if title can't be shown in the border.
            </summary>
            <returns>Title position in border.</returns>
        </member>
        <member name="P:Dundas.Charting.WebControl.Borders3D.FrameTitle1Border.Name">
            <summary>
            Chart type name
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.Borders3D.FrameTitle2Border">
            <summary>
            Implements frame border.
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.Borders3D.FrameThin2Border">
            <summary>
            Implements frame border.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Borders3D.FrameThin2Border.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.Borders3D.FrameThin2Border.Name">
            <summary>
            Chart type name
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Borders3D.FrameTitle2Border.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Borders3D.FrameTitle2Border.GetTitlePositionInBorder">
            <summary>
            Returns the position of the rectangular area in the border where
            title should be displayed. Returns empty rect if title can't be shown in the border.
            </summary>
            <returns>Title position in border.</returns>
        </member>
        <member name="P:Dundas.Charting.WebControl.Borders3D.FrameTitle2Border.Name">
            <summary>
            Chart type name
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.Borders3D.FrameTitle3Border">
            <summary>
            Implements frame border.
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.Borders3D.FrameThin3Border">
            <summary>
            Implements frame border.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Borders3D.FrameThin3Border.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.Borders3D.FrameThin3Border.Name">
            <summary>
            Chart type name
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Borders3D.FrameTitle3Border.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Borders3D.FrameTitle3Border.GetTitlePositionInBorder">
            <summary>
            Returns the position of the rectangular area in the border where
            title should be displayed. Returns empty rect if title can't be shown in the border.
            </summary>
            <returns>Title position in border.</returns>
        </member>
        <member name="P:Dundas.Charting.WebControl.Borders3D.FrameTitle3Border.Name">
            <summary>
            Chart type name
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.Borders3D.FrameTitle4Border">
            <summary>
            Implements frame border.
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.Borders3D.FrameThin4Border">
            <summary>
            Implements frame border.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Borders3D.FrameThin4Border.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.Borders3D.FrameThin4Border.Name">
            <summary>
            Chart type name
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Borders3D.FrameTitle4Border.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Borders3D.FrameTitle4Border.GetTitlePositionInBorder">
            <summary>
            Returns the position of the rectangular area in the border where
            title should be displayed. Returns empty rect if title can't be shown in the border.
            </summary>
            <returns>Title position in border.</returns>
        </member>
        <member name="P:Dundas.Charting.WebControl.Borders3D.FrameTitle4Border.Name">
            <summary>
            Chart type name
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.Borders3D.FrameTitle5Border">
            <summary>
            Implements frame border.
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.Borders3D.FrameThin5Border">
            <summary>
            Implements frame border.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Borders3D.FrameThin5Border.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.Borders3D.FrameThin5Border.Name">
            <summary>
            Chart type name
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Borders3D.FrameTitle5Border.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Borders3D.FrameTitle5Border.GetTitlePositionInBorder">
            <summary>
            Returns the position of the rectangular area in the border where
            title should be displayed. Returns empty rect if title can't be shown in the border.
            </summary>
            <returns>Title position in border.</returns>
        </member>
        <member name="P:Dundas.Charting.WebControl.Borders3D.FrameTitle5Border.Name">
            <summary>
            Chart type name
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.Borders3D.FrameTitle6Border">
            <summary>
            Implements frame border.
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.Borders3D.FrameThin6Border">
            <summary>
            Implements frame border.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Borders3D.FrameThin6Border.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.Borders3D.FrameThin6Border.Name">
            <summary>
            Chart type name
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Borders3D.FrameTitle6Border.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Borders3D.FrameTitle6Border.GetTitlePositionInBorder">
            <summary>
            Returns the position of the rectangular area in the border where
            title should be displayed. Returns empty rect if title can't be shown in the border.
            </summary>
            <returns>Title position in border.</returns>
        </member>
        <member name="P:Dundas.Charting.WebControl.Borders3D.FrameTitle6Border.Name">
            <summary>
            Chart type name
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.Borders3D.FrameTitle7Border">
            <summary>
            Implements frame border.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Borders3D.FrameTitle7Border.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.Borders3D.FrameTitle7Border.Name">
            <summary>
            Chart type name
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.Borders3D.FrameTitle8Border">
            <summary>
            Implements frame border.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Borders3D.FrameTitle8Border.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.Borders3D.FrameTitle8Border.Name">
            <summary>
            Chart type name
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.AnnotationSmartLabelsStyle">
            <summary>
            The <b>AnnotationSmartLabelsStyle</b> class is used to store annotation smart 
            labels attributes.
            <seealso cref="P:Dundas.Olap.WebUIControls.Annotation.SmartLabels"/>
            </summary>
            <remarks>
            This class is derived from the <b>SmartLabelsStyle</b> class TODO LINKS
            used for <b>Series</b> objects.
            </remarks>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.SmartLabelsStyle">
            <summary>
            SmartLabelsStyle class is used to enable and configure the 
            SmartLabels algorithm for data point labels and annotations. 
            In most of the cases it is enough just to enable the algorithm, 
            but this class also contains properties which allow controlling 
            how the labels are moved around to avoid collisions. Visual 
            appearance of callouts can also be set through this class.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.SmartLabelsStyle.#ctor">
            <summary>
            Default public constructor.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.SmartLabelsStyle.#ctor(System.Object)">
            <summary>
            Constructor.
            </summary>
            <param name="chartElement">Chart element this style belongs to.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.SmartLabelsStyle.Invalidate">
            <summary>
            Invalidates assosiated chart element.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.SmartLabelsStyle.Enabled">
            <summary>
            SmartLabels algorithm enabled flag.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.SmartLabelsStyle.MarkerOverlapping">
            <summary>
            Indicates that marker overlapping by label is allowed.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.SmartLabelsStyle.HideOverlapped">
            <summary>
            Indicates that overlapped labels that can't be repositioned will be hidden.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.SmartLabelsStyle.MovingDirection">
            <summary>
            Possible moving directions for the overlapped SmartLabel.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.SmartLabelsStyle.MinMovingDistance">
            <summary>
            Minimum distance the overlapped SmartLabel can be moved from the marker. Distance is measured in pixels.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.SmartLabelsStyle.MaxMovingDistance">
            <summary>
            Maximum distance the overlapped SmartLabel can be moved from the marker. Distance is measured in pixels.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.SmartLabelsStyle.AllowOutsidePlotArea">
            <summary>
            Defines if SmartLabels are allowed to be drawn outside of the plotting area.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.SmartLabelsStyle.CalloutStyle">
            <summary>
            Callout style of the repositioned SmartLabels.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.SmartLabelsStyle.CalloutLineColor">
            <summary>
            Label callout line color.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.SmartLabelsStyle.CalloutLineStyle">
            <summary>
            Label callout line style.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.SmartLabelsStyle.CalloutBackColor">
            <summary>
            Label callout back color. Applies to the Box style only!
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.SmartLabelsStyle.CalloutLineWidth">
            <summary>
            Label callout line width.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.SmartLabelsStyle.CalloutLineAnchorCap">
            <summary>
            Label callout line anchor cap.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AnnotationSmartLabelsStyle.#ctor">
            <summary>
            Default public constructor.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AnnotationSmartLabelsStyle.#ctor(System.Object)">
            <summary>
            Constructor.
            </summary>
            <param name="chartElement">
            Chart element this style belongs to.
            </param>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.AnnotationSmartLabelsStyle.CalloutStyle">
            <summary>
            Callout style of the repositioned smart labels.
            </summary>
            <remarks>
            This method is hidden at design and run time and it should not be part
            of the documentation.
            </remarks>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.AnnotationSmartLabelsStyle.CalloutLineColor">
            <summary>
            Label callout line color.
            </summary>
            <remarks>
            This method is hidden at design and run time and it should not be part
            of the documentation.
            </remarks>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.AnnotationSmartLabelsStyle.CalloutLineStyle">
            <summary>
            Label callout line style.
            </summary>
            <remarks>
            This method is hidden at design and run time and it should not be part
            of the documentation.
            </remarks>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.AnnotationSmartLabelsStyle.CalloutBackColor">
            <summary>
            Label callout back color. Applies to the Box style only!
            </summary>
            <remarks>
            This method is hidden at design and run time and it should not be part
            of the documentation.
            </remarks>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.AnnotationSmartLabelsStyle.CalloutLineWidth">
            <summary>
            Label callout line width.
            </summary>
            <remarks>
            This method is hidden at design and run time and it should not be part
            of the documentation.
            </remarks>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.AnnotationSmartLabelsStyle.CalloutLineAnchorCap">
            <summary>
            Label callout line anchor cap.
            </summary>
            <remarks>
            This method is hidden at design and run time and it should not be part
            of the documentation.
            </remarks>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.LineAnnotation">
            <summary>
            <b>LineAnnotation</b> is a class that represents a line annotation.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.LineAnnotation.#ctor">
            <summary>
            Default public constructor.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.LineAnnotation.AdjustLineCoordinates(System.Drawing.PointF@,System.Drawing.PointF@,System.Drawing.RectangleF@)">
            <summary>
            Adjusts the two coordinates of the line.
            </summary>
            <param name="point1">First line coordinate.</param>
            <param name="point2">Second line coordinate.</param>
            <param name="selectionRect">Selection rectangle.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.LineAnnotation.Paint(Dundas.Olap.WebUIControls.Chart,Dundas.Olap.WebUIControls.ChartGraphics)">
            <summary>
            Paints an annotation object on the specified graphics.
            </summary>
            <param name="graphics">
            A <see cref="T:Dundas.Olap.WebUIControls.ChartGraphics"/> object, used to paint an annotation object.
            </param>
            <param name="chart">
            Reference to the <see cref="T:Dundas.Olap.WebUIControls.Chart"/> owner control.
            </param>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.LineAnnotation.DrawInfinitive">
            <summary>
            Gets or sets a flag that indicates if an infinitive line should be drawn.
            </summary>
            <value>
            <b>True</b> if a line should be drawn infinitively through 2 points provided, <b>false</b> otherwise.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.LineAnnotation.StartCap">
            <summary>
            Gets or sets a cap style used at the start of the annotation line.
            <seealso cref="P:Dundas.Olap.WebUIControls.LineAnnotation.EndCap"/>
            </summary>
            <value>
            A <see cref="T:Dundas.Olap.WebUIControls.LineAnchorCap"/> value, used as a start cap for the line. TODO LINK
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.LineAnnotation.EndCap">
            <summary>
            Gets or sets a cap style used at the end of the annotation line.
            <seealso cref="P:Dundas.Olap.WebUIControls.LineAnnotation.StartCap"/>
            </summary>
            <value>
            A <see cref="T:Dundas.Olap.WebUIControls.LineAnchorCap"/> value, used as an end cap for the line. TODO LINK
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.LineAnnotation.Alignment">
            <summary>
            Not applicable to this annotation type.
            </summary>
            <value>
            A <see cref="T:System.Drawing.ContentAlignment"/> value.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.LineAnnotation.TextColor">
            <summary>
            Not applicable to this annotation type.
            <seealso cref="P:Dundas.Olap.WebUIControls.LineAnnotation.TextFont"/>
            <seealso cref="P:Dundas.Olap.WebUIControls.Annotation.TextStyle"/>
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color"/> value.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.LineAnnotation.TextFont">
            <summary>
            Not applicable to this annotation type.
            <seealso cref="P:Dundas.Olap.WebUIControls.LineAnnotation.TextColor"/>
            <seealso cref="P:Dundas.Olap.WebUIControls.Annotation.TextStyle"/>
            </summary>
            <value>
            A <see cref="T:System.Drawing.Font"/> object.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.LineAnnotation.TextStyle">
            <summary>
            Not applicable to this annotation type.
            <seealso cref="P:Dundas.Olap.WebUIControls.LineAnnotation.TextFont"/>
            <seealso cref="P:Dundas.Olap.WebUIControls.LineAnnotation.TextColor"/>
            </summary>
            <value>
            A <see cref="P:Dundas.Olap.WebUIControls.LineAnnotation.TextStyle"/> value.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.LineAnnotation.BackColor">
            <summary>
            Not applicable to this annotation type.
            <seealso cref="P:Dundas.Olap.WebUIControls.LineAnnotation.BackGradientEndColor"/>
            <seealso cref="P:Dundas.Olap.WebUIControls.LineAnnotation.BackHatchStyle"/>
            <seealso cref="P:Dundas.Olap.WebUIControls.LineAnnotation.BackGradientType"/>
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color"/> value used to draw annotation background.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.LineAnnotation.BackHatchStyle">
            <summary>
            Not applicable to this annotation type.
            </summary>
            <value>
            A <see cref="T:Dundas.Olap.WebUIControls.ChartHatchStyle"/> value.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.LineAnnotation.BackGradientType">
            <summary>
            Not applicable to this annotation type.
            </summary>
            <value>
            A <see cref="T:Dundas.Olap.WebUIControls.GradientType"/> value.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.LineAnnotation.BackGradientEndColor">
            <summary>
            Not applicable to this annotation type.
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color"/> value.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.LineAnnotation.SizeAlwaysRelative">
            <summary>
            Gets or sets the flag that specifies whether the annotation size is always 
            defined in relative chart coordinates.
            <seealso cref="P:Dundas.Olap.WebUIControls.Annotation.Width"/>
            <seealso cref="P:Dundas.Olap.WebUIControls.Annotation.Height"/>
            </summary>
            <value>
            <b>True</b> if this annotation's <see cref="P:Dundas.Olap.WebUIControls.Annotation.Width"/> and <see cref="P:Dundas.Olap.WebUIControls.Annotation.Height"/> are always
            in chart relative coordinates, <b>false</b> otherwise.
            </value>
            <remarks>
            Annotation width and height may be set in chart relative or axes coordinates. 
            By default relative chart coordinates are used. To use axes coordinates for size 
            set this property to <b>false</b> and either anchor the annotation to 
            a data point or set the <see cref="P:Dundas.Olap.WebUIControls.Annotation.AxisX"/> or <see cref="P:Dundas.Olap.WebUIControls.Annotation.AxisY"/> properties.
            </remarks>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.LineAnnotation.AnchorAlignment">
            <summary>
            Gets or sets an annotation's position alignment to the anchor point.
            <seealso cref="P:Dundas.Olap.WebUIControls.Annotation.AnchorX"/>
            <seealso cref="P:Dundas.Olap.WebUIControls.Annotation.AnchorY"/>
            <seealso cref="P:Dundas.Olap.WebUIControls.Annotation.AnchorDataPoint"/>
            <seealso cref="P:Dundas.Olap.WebUIControls.Annotation.AnchorOffsetX"/>
            <seealso cref="P:Dundas.Olap.WebUIControls.Annotation.AnchorOffsetY"/>
            </summary>
            <value>
            A <see cref="T:System.Drawing.ContentAlignment"/> value that represents the annotation alignment to 
            the anchor point.
            </value>
            <remarks>
            An annotation must be anchored using either <see cref="P:Dundas.Olap.WebUIControls.Annotation.AnchorDataPoint"/>, or the <see cref="P:Dundas.Olap.WebUIControls.Annotation.AnchorX"/> 
            and <see cref="P:Dundas.Olap.WebUIControls.Annotation.AnchorY"/> properties. It's <see cref="P:Dundas.Olap.WebUIControls.Annotation.X"/> and <see cref="P:Dundas.Olap.WebUIControls.Annotation.Y"/> 
            properties must also be set to <b>Double.NaN</b>.
            </remarks>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.LineAnnotation.AnnotationType">
            <summary>
            Gets or sets an annotation's type name.
            </summary>
            <remarks>
            This abstract property is used to get the name of each annotation type
            (e.g. Line, Rectangle, Ellipse,...). 
            <para>
            Property is for internal use and is hidden at design and run time. Should
            not be part of the documentation.
            </para>
            </remarks>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.LineAnnotation.SelectionPointsStyle">
            <summary>
            Gets or sets an annotation's selection points style.
            </summary>
            <value>
            A <see cref="P:Dundas.Olap.WebUIControls.LineAnnotation.SelectionPointsStyle"/> value that represents the annotation
            selection style.
            </value>
            <remarks>
            Property is for internal use and is hidden at design and run time. 
            Should not be part of the documentation.
            </remarks>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.VerticalLineAnnotation">
            <summary>
            <b>VerticalLineAnnotation</b> is a class that represents a vertical line annotation.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.VerticalLineAnnotation.#ctor">
            <summary>
            Default public constructor.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.VerticalLineAnnotation.AdjustLineCoordinates(System.Drawing.PointF@,System.Drawing.PointF@,System.Drawing.RectangleF@)">
            <summary>
            Adjusts the two coordinates of the line.
            </summary>
            <param name="point1">First line coordinate.</param>
            <param name="point2">Second line coordinate.</param>
            <param name="selectionRect">Selection rectangle.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.VerticalLineAnnotation.GetContentPosition">
            <summary>
            Gets text annotation content size based on the text and font.
            </summary>
            <returns>Annotation content position.</returns>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.VerticalLineAnnotation.AnnotationType">
            <summary>
            Gets or sets annotation type name.
            </summary>
            <remarks>
            This abstract property is used to get the name of each annotation type
            (e.g. Line, Rectangle, Ellipse,...). 
            <para>
            Property is for internal use and is hidden at design and run time. Should
            not be part of the documentation.
            </para>
            </remarks>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.HorizontalLineAnnotation">
            <summary>
            <b>HorizontalLineAnnotation</b> is a class that represents a horizontal line annotation.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.HorizontalLineAnnotation.#ctor">
            <summary>
            Default public constructor.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.HorizontalLineAnnotation.AdjustLineCoordinates(System.Drawing.PointF@,System.Drawing.PointF@,System.Drawing.RectangleF@)">
            <summary>
            Adjusts the two coordinates of the line.
            </summary>
            <param name="point1">First line coordinate.</param>
            <param name="point2">Second line coordinate.</param>
            <param name="selectionRect">Selection rectangle.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.HorizontalLineAnnotation.GetContentPosition">
            <summary>
            Gets text annotation content size based on the text and font.
            </summary>
            <returns>Annotation content position.</returns>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.HorizontalLineAnnotation.AnnotationType">
            <summary>
            Gets or sets annotation type name.
            </summary>
            <remarks>
            This abstract property is used to get the name of each annotation type
            (e.g. Line, Rectangle, Ellipse,...). 
            <para>
            Property is for internal use and is hidden at design and run time. Should
            not be part of the documentation.
            </para>
            </remarks>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.ChartZoomEngine.#ctor(System.ComponentModel.Design.ServiceContainer)">
            <summary>
            Initializes a new instance of the <see cref="T:ChartZoomEngine"/> class.
            </summary>
            <param name="service">The service.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.ChartZoomEngine.GetState(Dundas.Olap.WebUIControls.Ajax.ZoomEngineState)">
            <summary>
            Gets the zoom engine state.
            </summary>
            <param name="state">The zoom engine state.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.ChartZoomEngine.SetState(Dundas.Olap.WebUIControls.Ajax.ZoomEngineState,System.Boolean)">
            <summary>
            Sets the zoom engine state.
            </summary>
            <param name="state">The state.</param>
            <param name="flag">The flag.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.ChartZoomEngine.GetAxisSection(Dundas.Olap.WebUIControls.Axis)">
            <summary>
            Gets the AxisSection of axis.
            </summary>
            <param name="axis">The axis.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.ChartZoomEngine.AppendControl(System.Web.UI.WebControls.WebControl)">
            <summary>
            Apends the control for rendering.
            </summary>
            <param name="control">The control.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.ChartZoomEngine.GetAreaHashName(Dundas.Olap.WebUIControls.ChartArea)">
            <summary>
            Gets the hash name of the area. Used for generation of area sub control's name.
            </summary>
            <param name="area">The area.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.ChartZoomEngine.GetAreaIndexByHashName(System.String)">
            <summary>
            Gets the name of the area index by hash string.
            </summary>
            <param name="theAreaHashName">Name of the area hash string.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.ChartZoomEngine.Chart_PostPaint(System.Object,Dundas.Olap.WebUIControls.ChartPaintEventArgs)">
            <summary>
            Handles the PostPaint event of the Chart control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Dundas.Charting.WebControl.ChartPaintEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.ChartZoomEngine.GetAxisRectangle(Dundas.Olap.WebUIControls.Axis)">
            <summary>
            Gets the axis rectangle.
            </summary>
            <param name="axis">The axis.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.ChartZoomEngine.GetZoomHelpers">
            <summary>
            Gets the zoom helpers.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.ChartZoomEngine.GetZoomHelper(System.String)">
            <summary>
            Gets the zoom helper by area name.
            </summary>
            <param name="areaName">Name of the area.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.ChartZoomEngine.EnterPrintMode">
            <summary>
            Enters the print mode. Used during printing, hit test.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.ChartZoomEngine.LeavePrintMode">
            <summary>
            Leaves the print mode.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.ChartZoomEngine.Enter">
            <summary>
            Prepares zoom engine for rendering. Called during callbacks and chart rendering.
            Saves the current state of chart.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.ChartZoomEngine.Enter(System.Boolean)">
            <summary>
            Prepares zoom engine for rendering. Called during callbacks and chart rendering.
            Saves the current state of chart.
            </summary>
            <param name="trackPos">if set to <c>true</c> track area scroll positions.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.ChartZoomEngine.Leave">
            <summary>
            Prepares zoom engine after rendering. Called during callbacks and chart rendering.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.ChartZoomEngine.StartTrackPositions">
            <summary>
            Starts to track area scroll positions.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.ChartZoomEngine.EndTrackPositions">
            <summary>
            Ends to track area scroll positions.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.ChartZoomEngine.IsPositionChanged(Dundas.Olap.WebUIControls.Axis)">
            <summary>
            Determines whether the position changed on the specified axis.
            </summary>
            <param name="axis">The axis.</param>
            <returns>
            	<c>true</c> if position is changed on the specified axis; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.ChartZoomEngine.InitChartGraphics(System.Drawing.Graphics)">
            <summary>
            Inittialize the chart graphics.
            </summary>
            <param name="graphics">The graphics.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.ChartZoomEngine.PaintChartAreas(Dundas.Olap.WebUIControls.ChartArea)">
            <summary>
            Paints a chart area.
            </summary>
            <param name="chartArea">The chart area.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.ChartZoomEngine.PaintChartAreas(Dundas.Olap.WebUIControls.ChartArea,System.Drawing.Size)">
            <summary>
            Paints a chart areas. Generates a bitmap with empty chart and a defined chart area on it.
            </summary>
            <param name="chartArea">The chart area.</param>
            <param name="bitmapSize">Size of the bitmap.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.ChartZoomEngine.GetPostBackParams(System.String)">
            <summary>
            Gets the post back params for specified chart area.
            </summary>
            <param name="areaName">Name of the area.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.ChartZoomEngine.RegisterPostBackInfo">
            <summary>
            Registers the post back info into callback output or hidden input during normal rendering.
            for each area. Registers also the zoom engine state in same fashion.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.ChartZoomEngine.GetPostbackOutputString(Dundas.Olap.WebUIControls.ChartArea)">
            <summary>
            Gets the postback output string for specified chart area.
            </summary>
            <param name="area">The area.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.ChartZoomEngine.GetPostbackInputString(Dundas.Olap.WebUIControls.ChartArea)">
            <summary>
            Gets the postback input string for specified chart area.
            </summary>
            <param name="area">The area.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.ChartZoomEngine.LoadPostBackInfo">
            <summary>
            Loads the post back info.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.ChartZoomEngine.IsAreaParamsChanged(Dundas.Olap.WebUIControls.ChartArea)">
            <summary>
            Determines whether the specified area is changed.
            </summary>
            <param name="area">The area.</param>
            <returns>
            	<c>true</c> if the specified area is changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.ChartZoomEngine.ResetViewState(Dundas.Olap.WebUIControls.ChartArea)">
            <summary>
            Resets the state of specified area of the stateBag.
            </summary>
            <param name="area">The area.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.ChartZoomEngine.SaveViewState">
            <summary>
            Saves the ZoomEngine viewstate.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.ChartZoomEngine.LoadViewState">
            <summary>
            Loads the ZoomEngine viewstate.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.ChartZoomEngine.GetAreaStateData(Dundas.Olap.WebUIControls.ChartArea)">
            <summary>
            Gets the area viewstate data.
            </summary>
            <param name="area">The area.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.ChartZoomEngine.GetAxisStateData(Dundas.Olap.WebUIControls.Axis)">
            <summary>
            Gets the axis viewstate data.
            </summary>
            <param name="axis">The axis.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.ChartZoomEngine.GetAreaState(Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.Ajax.ZoomFields)">
            <summary>
            Gets the specified field from the viewstate of the area.
            </summary>
            <param name="area">The area.</param>
            <param name="field">The field.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.ChartZoomEngine.SetAreaState(Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.Ajax.ZoomFields,System.Object)">
            <summary>
            Sets the specified field from the viewstate of the area.
            </summary>
            <param name="area">The area.</param>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.ChartZoomEngine.GetAxisState(Dundas.Olap.WebUIControls.Axis,Dundas.Olap.WebUIControls.Ajax.ZoomFields)">
            <summary>
            Gets the specified field from the viewstate of the axis.
            </summary>
            <param name="axis">The axis.</param>
            <param name="field">The field.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.ChartZoomEngine.SetAxisState(Dundas.Olap.WebUIControls.Axis,Dundas.Olap.WebUIControls.Ajax.ZoomFields,System.Object)">
            <summary>
            Sets the specified field from the viewstate of the axis.
            </summary>
            <param name="axis">The axis.</param>
            <param name="field">The field.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.ChartZoomEngine.ProcessZoomCommand">
            <summary>
            Processes the zoom commands.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.ChartZoomEngine.RenderZoomImages(System.Collections.SortedList)">
            <summary>
            Renders the partitial chart area zoom images.
            </summary>
            <param name="request">The parameters request.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.ChartZoomEngine.PopulateControls">
            <summary>
            Populates the internal chart area controls.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.ChartZoomEngine.GetService(System.Type)">
            <summary>
            Gets the service object of the specified type.
            </summary>
            <param name="serviceType">An object that specifies the type of service object to get.</param>
            <returns>
            A service object of type serviceType.-or- null if there is no service object of type serviceType.
            </returns>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Ajax.ChartZoomEngine.ViewState">
            <summary>
            Gets the viewstate StateBag. It contains data which is serialized into  hidden input named (Chart.ClientID + "ZoomState")
            </summary>
            <value>The viewstate StateBag.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Ajax.ChartZoomEngine.IsActive">
            <summary>
            Gets a value indicating whether this instance has any chart areas in zoom mode.
            </summary>
            <value><c>true</c> if this instance is active; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Ajax.ChartZoomEngine.IsCuttingMode">
            <summary>
            Gets or sets a value indicating whether this instance renders partitial chart area bitmaps.
            </summary>
            <value>
            	<c>true</c> if this instance renders partitial chart area bitmaps; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Ajax.ChartZoomEngine.Chart">
            <summary>
            Gets the chart.
            </summary>
            <value>The chart.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Ajax.ChartZoomEngine.IsCallback">
            <summary>
            Gets a value indicating whether the page is in callback mode.
            </summary>
            <value>
            	<c>true</c> if this the page is in callback mode; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Ajax.ChartZoomEngine.Callback">
            <summary>
            Gets the parent ChartCallbackManager.
            </summary>
            <value>The ChartCallbackManager.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Ajax.ChartZoomEngine.Common">
            <summary>
            Gets the parent CommonElements instance.
            </summary>
            <value>The parent CommonElements instance.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Ajax.ChartZoomEngine.ChartSize">
            <summary>
            Gets the size of the chart.
            </summary>
            <value>The size of the chart.</value>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.Ajax.PropertyPagesLabelClassControl">
            <summary>
            PropertyPagesLabelClassControl is an user control for setup series labels
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.PropertyPagesLabelClassControl.GetChartSeries">
            <summary>
            Gets the chart series.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.PropertyPagesLabelClassControl.IsVisible">
            <summary>
            Determines whether this instance is visible.
            </summary>
            <returns>
            	<c>true</c> if this instance is visible; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.PropertyPagesLabelClassControl.ApplyChanges(Dundas.Olap.WebUIControls.Series)">
            <summary>
            Applies changes to the specified series.
            </summary>
            <param name="series">Series the changes apply to.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.PropertyPagesLabelClassControl.ApplyChanges">
            <summary>
            Applies the changes.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.PropertyPagesLabelClassControl.InitPage(Dundas.Olap.WebUIControls.Ajax.PropertyPagesClassControl)">
            <summary>
            Inits the page.
            </summary>
            <param name="control">The control.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.PropertyPagesLabelClassControl.GeneratePositionItems(Dundas.Olap.WebUIControls.SeriesChartType[],System.Type)">
            <summary>
            Generates the position items.
            </summary>
            <param name="chartTypes">The chart types.</param>
            <param name="labelStyle">The label style.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.PropertyPagesLabelClassControl.GeneratePositionItems">
            <summary>
            Generates the position items.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.PropertyPagesLabelClassControl.ParseLabelStyle(System.String@,System.Type@)">
            <summary>
            Parses the label style.
            </summary>
            <param name="labelStyleAttributeName">Name of the label style attribute.</param>
            <param name="labelStyleType">Type of the label style.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.PropertyPagesLabelClassControl.OnPreRender(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Web.UI.Control.PreRender"></see> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"></see> object that contains the event data.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.PropertyPagesLabelClassControl.ParseFormat(System.String,System.String@,System.String@)">
            <summary>
            Parses the label format string.
            </summary>
            <param name="labelFormat">The label format.</param>
            <param name="format">The format.</param>
            <param name="precision">The precision.</param>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.Ajax.PropertyPagesFormulasClassControl">
            <summary>
            PropertyPagesFormulasXXX is an user control for add or setup formula series on one chart series
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.PropertyPagesFormulasClassControl.IsVisible">
            <summary>
            Determines whether this instance is visible.
            </summary>
            <returns>
            	<c>true</c> if this instance is visible; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.PropertyPagesFormulasClassControl.ApplyChanges">
            <summary>
            Applies the changes.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.PropertyPagesFormulasClassControl.InitPage(Dundas.Olap.WebUIControls.Ajax.PropertyPagesClassControl)">
            <summary>
            Inits the page.
            </summary>
            <param name="control">The control.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.PropertyPagesFormulasClassControl.OnPreRender(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Web.UI.Control.PreRender"></see> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"></see> object that contains the event data.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.PropertyPagesFormulasClassControl.LocateSeriesAndFormula(System.Collections.IEnumerable)">
            <summary>
            Locates the series and formula.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.PropertyPagesFormulasClassControl.GetFormulaRow(System.String,System.String,System.String,System.String)">
            <summary>
            Gets the formula table row.
            </summary>
            <param name="imageUrl">The image URL.</param>
            <param name="name">The name.</param>
            <param name="labelText">The label text.</param>
            <param name="shortText">The short text.</param>
            <returns></returns>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.Ajax.PropertyPagesAxisClassControl">
            <summary>
            PropertyPagesAxisClassControl is an user control which represents axis property page
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.PropertyPagesAxisClassControl.Page_Load(System.Object,System.EventArgs)">
            <summary>
            Handles the Load event of the Page control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.PropertyPagesAxisClassControl.SeriesUseAxis(Dundas.Olap.WebUIControls.Series,System.Boolean)">
            <summary>
            Checks if series uses X or Y axis.
            </summary>
            <param name="series">Series to test.</param>
            <param name="xAxis">Indicates that X axis is tested.</param>
            <returns>True if axis is used.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.PropertyPagesAxisClassControl.GetApplicableAxes">
            <summary>
            Returns list of axis for the current context
            </summary>
            <returns>List of axis.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.PropertyPagesAxisClassControl.IsDateExis(Dundas.Olap.WebUIControls.Axis)">
            <summary>
            Determines whether the specified axis represents date data.
            </summary>
            <param name="axis">The axis.</param>
            <returns>
            	<c>true</c> if the specified axis represents date data; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.PropertyPagesAxisClassControl.IsVisible">
            <summary>
            Determines whether this instance is visible.
            </summary>
            <returns>
            	<c>true</c> if this instance is visible; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.PropertyPagesAxisClassControl.ApplyChanges">
            <summary>
            Applies the changes.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.PropertyPagesAxisClassControl.InitPage(Dundas.Olap.WebUIControls.Ajax.PropertyPagesClassControl)">
            <summary>
            Inits the page.
            </summary>
            <param name="control">The control.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.PropertyPagesAxisClassControl.OnPreRender(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Web.UI.Control.PreRender"></see> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"></see> object that contains the event data.</param>
        </member>
        <member name="T:Dundas.Charting.WebControl.Utilities.BitWriter">
            <summary>
            BitWriter class allows writing bits of data into the underlying Steam 
            which can be passed as an object constructor parameter. If the default 
            constructor is used (no parameters) a MemoryStream will be automatically 
            created.
            
            WriteXXX methods should be used to write data into the stream. Please note, 
            that all data types except byte and bit will be automatically aligned on 
            the byte boundary using Flush method. 
            
            BaseStream and BytesWritten properties may be used to get access to the 
            written data.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Utilities.BitWriter.baseStream">
            <summary>
            Writer underlying stream object.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Utilities.BitWriter.startOffset">
            <summary>
            Offset of the first written byte in the stream.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Utilities.BitWriter.currentByte">
            <summary>
            Stores bits written into the last byte
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Utilities.BitWriter.currentBitIndex">
            <summary>
            Current bit index, where new bits should be added
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Utilities.BitWriter.#ctor">
            <summary>
            Initializes a new instance of the BitWriter class that writes to a stream.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Utilities.BitWriter.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the BitWriter class based on the supplied stream.
            </summary>
            <param name="stream">Stream used to write the bits.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Utilities.BitWriter.Flush">
            <summary>
            Clears all buffers for the current writer and causes any buffered data to be written to the underlying device.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Utilities.BitWriter.Close">
            <summary>
            Closes underlying stream.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Utilities.BitWriter.WriteBit(System.Boolean)">
            <summary>
            Writes one bit into the stream.
            </summary>
            <param name="bitValue">Indicates if 0 or 1 bit should be written.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Utilities.BitWriter.WriteByte(System.Byte)">
            <summary>
            Writes single byte into the stream.
            </summary>
            <param name="byteValue">Byte value to write.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Utilities.BitWriter.WriteBytes(System.Byte[])">
            <summary>
            Writes bytes array into the stream.
            </summary>
            <param name="byteValues">Bytes array.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Utilities.BitWriter.WriteBits(System.Byte[],System.Int32)">
            <summary>
            Writes specified number of bits from byte array into the stream.
            </summary>
            <param name="byteValues">Byte array.</param>
            <param name="bitNumber">Number of bits to be written.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Utilities.BitWriter.WriteSI32(System.Int32)">
            <summary>
            Writes specified unsigned integer value into the stream.
            </summary>
            <param name="intValue">Unsigned integer value to write.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Utilities.BitWriter.WriteSI16(System.Int16)">
            <summary>
            Writes specified short value into the stream.
            </summary>
            <param name="shortValue">Short value to write.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Utilities.BitWriter.WriteBitValue(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Writes specified number of bits from integer value into the stream.
            </summary>
            <param name="intValue">Integer value to write.</param>
            <param name="bitNumber">Number of bits used to store the value.</param>
            <param name="signed">Number of bits used to store the value.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Utilities.BitWriter.SplitAndShiftByte(System.Byte,System.Int32)">
            <summary>
            Split byte into two using specified bit index.
            </summary>
            <param name="byteValue">Byte value to split.</param>
            <param name="splitIndex">Bit index.</param>
            <returns>Array of two bytes.</returns>
        </member>
        <member name="P:Dundas.Charting.WebControl.Utilities.BitWriter.BaseStream">
            <summary>
            Gets the BitWriter's underlying stream.
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.Utilities.BitWriter.BytesWritten">
            <summary>
            Returns number of bytes written into the stream.
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.Svg.SvgOpenParameters">
            <summary>
            This structure is used for Open method 
            in Svg. It contains parameters necessary 
            for creation of Svg document.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Svg.SvgOpenParameters.#ctor(System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Default constructor
            </summary>
            <param name="toolTipsEnabled">Tool Tips enabled</param>
            <param name="resizable">Relative size for Svg</param>
            <param name="preserveAspectRatio">The graphics stretch to fit non-uniformly to take up the entire viewport</param>
        </member>
        <member name="F:Dundas.Charting.WebControl.Svg.SvgOpenParameters.toolTipsEnabled">
            <summary>
            Tool Tips enabled
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Svg.SvgOpenParameters.resizable">
            <summary>
            Relative size for Svg
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Svg.SvgOpenParameters.preserveAspectRatio">
            <summary>
            The graphics stretch to fit non-uniformly to take up the entire viewport
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.FinancialMarkerType">
            <summary>
            Financial marker type.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.FinancialMarkerType.FibonacciArcs">
            <summary>
            Financial marker Fibonacci Arcs
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.FinancialMarkerType.TrendLine">
            <summary>
            Financial marker Trend Line
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.FinancialMarkerType.FibonacciFans">
            <summary>
            Financial marker Fibonacci Fans
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.FinancialMarkerType.FibonacciRetracements">
            <summary>
            Financial marker Fibonacci Retracements
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.FinancialMarkerType.SpeedResistanceLines">
            <summary>
            Financial marker Speed Resistance Lines
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.FinancialMarkerType.QuadrantLines">
            <summary>
            Financial marker Quadrant Lines
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.FinancialMarkersCollection">
            <summary>
            FinancialMarkersCollection class is a strongly typed collection of
            FinancialMarker objects. FinancialMarkers class is used to perform all 
            the calculations and drawing of the markers.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.FinancialMarkersCollection.array">
            <summary>
            Reference to ArrayList class
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.FinancialMarkersCollection.series">
            <summary>
            Series Name
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.FinancialMarkersCollection.markers">
            <summary>
            Financial Markers
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.FinancialMarkersCollection.Add(Dundas.Olap.WebUIControls.FinancialMarkerType,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Color,System.Int32,System.Drawing.Color,System.Drawing.Font)">
            <summary>
            Add Financial Marker item to the collection
            </summary>
            <param name="markerName">Name of the Financial marker</param>
            <param name="firstPointIndex">The index (zero-based) of the first data point to be used for a financial marker.</param>
            <param name="secondPointIndex">The index (zero-based) of the second data point to be used for a financial marker.</param>
            <param name="firstYIndex">The index (zero-based) of the Y value to be used for a financial marker's first data point.</param>
            <param name="secondYIndex">The index (zero-based) of the Y value to be used for a financial marker's second data point.</param>
            <param name="lineColor">The color used to draw the lines of a financial marker.</param>
            <param name="lineWidth">The width of a financial marker's lines. Measured in pixels.</param>
            <param name="textColor">The text color for a financial marker's associated labels.</param>
            <param name="textFont">The font for a financial marker's associated labels.</param>
            <returns>Position in the collection.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.FinancialMarkersCollection.Add(Dundas.Olap.WebUIControls.FinancialMarkerType,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Color,System.Int32)">
            <summary>
            Adds a Financial Marker item to the collection
            </summary>
            <param name="markerName">Name of the Financial marker</param>
            <param name="firstPointIndex">The index (zero-based) of the first data point to be used for a financial marker.</param>
            <param name="secondPointIndex">The index (zero-based) of the second data point to be used for a financial marker.</param>
            <param name="firstYIndex">The index (zero-based) of the Y value to be used for a financial marker's first data point.</param>
            <param name="secondYIndex">The index (zero-based) of the Y value to be used for a financial marker's second data point.</param>
            <param name="lineColor">The color used to draw the lines of a financial marker.</param>
            <param name="lineWidth">The width of a financial marker's lines. Measured in pixels.</param>
            <returns>Position in the collection.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.FinancialMarkersCollection.Add(Dundas.Olap.WebUIControls.FinancialMarkerType,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Adds a Financial Marker item to the collection
            </summary>
            <param name="markerName">Name of the Financial marker</param>
            <param name="firstPointIndex">The index (zero-based) of the first data point to be used for a financial marker.</param>
            <param name="secondPointIndex">The index (zero-based) of the second data point to be used for a financial marker.</param>
            <param name="firstYIndex">The index (zero-based) of the Y value to be used for a financial marker's first data point.</param>
            <param name="secondYIndex">The index (zero-based) of the Y value to be used for a financial marker's second data point.</param>
            <returns>Position in the collection.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.FinancialMarkersCollection.Add(Dundas.Olap.WebUIControls.FinancialMarkerType,System.Int32,System.Int32)">
            <summary>
            Adds a Financial Marker item to the collection
            </summary>
            <param name="markerName">Name of the Financial marker</param>
            <param name="firstPointIndex">The index (zero-based) of the first data point to be used for a financial marker.</param>
            <param name="secondPointIndex">The index (zero-based) of the second data point to be used for a financial marker.</param>
            <returns>Position in the collection.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.FinancialMarkersCollection.Add(System.Object)">
            <summary>
            Adds a Financial Marker item to the collection
            </summary>
            <param name="value">Financial Marker object</param>
            <returns>Position in the collection</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.FinancialMarkersCollection.Insert(System.Int32,Dundas.Olap.WebUIControls.FinancialMarkerType,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Color,System.Int32,System.Drawing.Color,System.Drawing.Font)">
            <summary>
            Inserts a Financial Marker to the collection
            </summary>
            <param name="index">Position</param>
            <param name="markerName">Name of the Financial marker</param>
            <param name="firstPointIndex">The index (zero-based) of the first data point to be used for a financial marker.</param>
            <param name="secondPointIndex">The index (zero-based) of the second data point to be used for a financial marker.</param>
            <param name="firstYIndex">The index (zero-based) of the Y value to be used for a financial marker's first data point.</param>
            <param name="secondYIndex">The index (zero-based) of the Y value to be used for a financial marker's second data point.</param>
            <param name="lineColor">The color used to draw the lines of a financial marker.</param>
            <param name="lineWidth">The width of a financial marker's lines. Measured in pixels.</param>
            <param name="textColor">The text color for a financial marker's associated labels.</param>
            <param name="textFont">The font for a financial marker's associated labels.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.FinancialMarkersCollection.Insert(System.Int32,Dundas.Olap.WebUIControls.FinancialMarkerType,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Color,System.Int32)">
            <summary>
            Inserts a Financial Marker to the collection
            </summary>
            <param name="index">Position</param>
            <param name="markerName">Name of the Financial marker</param>
            <param name="firstPointIndex">The index (zero-based) of the first data point to be used for a financial marker.</param>
            <param name="secondPointIndex">The index (zero-based) of the second data point to be used for a financial marker.</param>
            <param name="firstYIndex">The index (zero-based) of the Y value to be used for a financial marker's first data point.</param>
            <param name="secondYIndex">The index (zero-based) of the Y value to be used for a financial marker's second data point.</param>
            <param name="lineColor">The color used to draw the lines of a financial marker.</param>
            <param name="lineWidth">The width of a financial marker's lines. Measured in pixels.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.FinancialMarkersCollection.Insert(System.Int32,Dundas.Olap.WebUIControls.FinancialMarkerType,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Inserts a Financial Marker to the collection
            </summary>
            <param name="index">Position</param>
            <param name="markerName">Name of the Financial marker</param>
            <param name="firstPointIndex">The index (zero-based) of the first data point to be used for a financial marker.</param>
            <param name="secondPointIndex">The index (zero-based) of the second data point to be used for a financial marker.</param>
            <param name="firstYIndex">The index (zero-based) of the Y value to be used for a financial marker's first data point.</param>
            <param name="secondYIndex">The index (zero-based) of the Y value to be used for a financial marker's second data point.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.FinancialMarkersCollection.Insert(System.Int32,Dundas.Olap.WebUIControls.FinancialMarkerType,System.Int32,System.Int32)">
            <summary>
            Inserts a Financial Marker to the collection
            </summary>
            <param name="index">Position</param>
            <param name="markerName">Name of the Financial marker</param>
            <param name="firstPointIndex">The index (zero-based) of the first data point to be used for a financial marker.</param>
            <param name="secondPointIndex">The index (zero-based) of the second data point to be used for a financial marker.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.FinancialMarkersCollection.Insert(System.Int32,Dundas.Olap.WebUIControls.FinancialMarker)">
            <summary>
            Inserts a Financial Marker item to the collection
            </summary>
            <param name="index">Position</param>
            <param name="value">Financial Marker Object</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.FinancialMarkersCollection.Insert(System.Int32,System.Object)">
            <summary>
            Inserts a Financial Marker item to the collection
            </summary>
            <param name="index">Position</param>
            <param name="value">Financial Marker Object</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.FinancialMarkersCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the element at the specified index
            </summary>
            <param name="index">The zero-based index of the element to remove</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.FinancialMarkersCollection.Remove(System.Object)">
            <summary>
            Removes the first occurrence of a specific object
            </summary>
            <param name="value">The Object to remove from the ChartAreaCollection</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.FinancialMarkersCollection.IndexOf(System.Object)">
            <summary>
            Searches for the specified Object and returns the zero-based 
            index of the first occurrence within the entire collection.
            </summary>
            <param name="value">The Object to locate in the collection.</param>
            <returns>The zero-based index of the first occurrence of value within the entire collection, if found; otherwise, -1.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.FinancialMarkersCollection.Contains(System.Object)">
            <summary>
            Determines whether an element is in the collection.
            </summary>
            <param name="value">The Object to locate in the collection. The element to locate can be a null reference. </param>
            <returns>true if item is found in the collection; otherwise, false.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.FinancialMarkersCollection.Clear">
            <summary>
            Removes all elements from the collection.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.FinancialMarkersCollection.GetEnumerator">
            <summary>
            Returns an enumerator for the entire collection
            </summary>
            <returns>An IEnumerator for the entire collection</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.FinancialMarkersCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the ArrayList or a portion of it to 
            a one-dimensional array.
            </summary>
            <param name="array">The one-dimensional Array that is the destination 
            of the elements copied from ArrayList. The Array must have 
            zero-based indexing.</param>
            <param name="index">The zero-based index in array at which copying begins.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.FinancialMarkersCollection.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.FinancialMarkersCollection.DrawMarkers(Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.ChartPicture)">
            <summary>
            Draw markers
            </summary>
            <param name="graph">Chart graphics object</param>
            <param name="chart">Chart object</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.FinancialMarkersCollection.Invalidate">
            <summary>
            Invalidate chart 
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.FinancialMarkersCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the collection is read-only.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.FinancialMarkersCollection.IsFixedSize">
            <summary>
            Gets a value indicating whether the collection has a fixed size.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.FinancialMarkersCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the collection is 
            synchronized (thread-safe).
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.FinancialMarkersCollection.Count">
            <summary>
            Gets the number of elements actually contained in the collection.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.FinancialMarkersCollection.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the collection.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.FinancialMarkersCollection.System#Collections#IList#Item(System.Int32)">
            <summary>
            IList interface
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.FinancialMarkersCollection.Item(System.Object)">
            <summary>
            Indexer of the class. Returns the Financial Marker object
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.FinancialMarker">
            <summary>
            FinancialMarker class contains properties which define marker visual 
            appearance, style and its connection to the series data points.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.FinancialMarker.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.FinancialMarker.#ctor(Dundas.Olap.WebUIControls.FinancialMarkerType,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Color,System.Int32,System.Drawing.Color,System.Drawing.Font)">
            <summary>
            Constructor
            </summary>
            <param name="markerType">Name of the Financial marker</param>
            <param name="firstPointIndex">The index (zero-based) of the first data point to be used for a financial marker.</param>
            <param name="secondPointIndex">The index (zero-based) of the second data point to be used for a financial marker.</param>
            <param name="firstYIndex">The index (zero-based) of the Y value to be used for a financial marker's first data point.</param>
            <param name="secondYIndex">The index (zero-based) of the Y value to be used for a financial marker's second data point.</param>
            <param name="lineColor">The color used to draw the lines of a financial marker.</param>
            <param name="lineWidth">The width of a financial marker's lines. Measured in pixels.</param>
            <param name="textColor">The text color for a financial marker's associated labels.</param>
            <param name="textFont">The font for a financial marker's associated labels.</param>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.FinancialMarker.MarkerType">
            <summary>
            Marker Name
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.FinancialMarker.Name">
            <summary>
            Strip Line name
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.FinancialMarker.FirstPointIndex">
            <summary>
            First Point Index
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.FinancialMarker.SecondPointIndex">
            <summary>
            Second Point Index
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.FinancialMarker.FirstYIndex">
            <summary>
            First Y Index
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.FinancialMarker.SecondYIndex">
            <summary>
            Second Y Index
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.FinancialMarker.LineColor">
            <summary>
            Line Color
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.FinancialMarker.TextColor">
            <summary>
            Text Color
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.FinancialMarker.Font">
            <summary>
            Text font
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.FinancialMarker.LineWidth">
            <summary>
            Line Width
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.FinancialMarker.LineStyle">
            <summary>
            Financial marker line style.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.Ajax.FontSelectorDlgClassControl">
            <summary>
            The FontSelectorDlgClassControl is an user control represents 
            the font selector dialog
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.FontSelectorDlgClassControl.Page_Load(System.Object,System.EventArgs)">
            <summary>
            Handles the Load event of the Page control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.FontSelectorDlgClassControl.GetInitialzeScript">
            <summary>
            Gets the initialze script text.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.FontSelectorDlgClassControl.OnPreRender(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Web.UI.Control.PreRender"></see> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"></see> object that contains the event data.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.FontSelectorDlgClassControl.getObjID(System.String)">
            <summary>
            Gets the script object ID.
            </summary>
            <param name="method">The method.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.FontSelectorDlgClassControl.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Sends server control content to a provided <see cref="T:System.Web.UI.HtmlTextWriter"></see> object,
            which writes the content to be rendered on the client.
            </summary>
            <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter"></see> object that 
            receives the server control content.</param>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Ajax.FontSelectorDlgClassControl.DialogFont">
            <summary>
            Gets or sets the dialog font.
            </summary>
            <value>The dialog font.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Ajax.FontSelectorDlgClassControl.ColorEditorID">
            <summary>
            Gets or sets the color editor (input control) ID.
            </summary>
            <value>The color editor ID.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Ajax.FontSelectorDlgClassControl.Chart">
            <summary>
            Gets or sets the chart.
            </summary>
            <value>The chart.</value>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.Ajax.ChartToolbarDesigner">
            <summary>
            OLAP Manager Web control designer.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.ChartToolbarDesigner.GetChartTypeName">
            <summary>
            Gets the name of the chart type.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.ChartToolbarDesigner.Initialize(System.ComponentModel.IComponent)">
            <summary>
            Initializes component.
            </summary>
            <param name="component">
            Component to initialize.
            </param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.ChartToolbarDesigner.Dispose(System.Boolean)">
            <summary>
            Dispose object.
            </summary>
            <param name="disposing">
            Indicates if unmanaged resources should be disposed.
            </param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.ChartToolbarDesigner.OnHostLoadComplete(System.Object,System.EventArgs)">
            <summary>
            Called when host loading is completed.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.ChartToolbarDesigner.OnComponentAdded(System.Object,System.ComponentModel.Design.ComponentEventArgs)">
            <summary>
            ComponentRemoved event handler.
            </summary>
            <param name="sender">
            Event sender.
            </param>
            <param name="ce">
            Event arguments.
            </param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.ChartToolbarDesigner.OnComponentRemoved(System.Object,System.ComponentModel.Design.ComponentEventArgs)">
            <summary>
            ComponentRemoved event handler.
            </summary>
            <param name="sender">
            Event sender.
            </param>
            <param name="ce">
            Event arguments.
            </param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.ChartToolbarDesigner.OnComponentRename(System.Object,System.ComponentModel.Design.ComponentRenameEventArgs)">
            <summary>
            ComponentRename event handler.
            </summary>
            <param name="sender">
            Event sender.
            </param>
            <param name="ce">
            Event arguments.
            </param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.ChartToolbarDesigner.SetDirty">
            <summary>
            Sets the dirty.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Ajax.ChartToolbarDesigner.ChartID">
            <summary>
            OlapManager object.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.Ajax.ChartNameConverter">
            <summary>
            OlapChartNameConverter is a converter for OlapChartID property.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.ChartNameConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Returns whether the collection of standard values returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues"></see> is an exclusive list of possible values, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that provides a format context.</param>
            <returns>
            true if the <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection"></see> returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues"></see> is an exhaustive list of possible values; false if other values are possible.
            </returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.ChartNameConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Returns whether this object supports a standard set of values that can be picked from a list, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that provides a format context.</param>
            <returns>
            true if <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues"></see> should be called to find a common set of values the object supports; otherwise, false.
            </returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.ChartNameConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Returns a collection of standard values for the data type this type converter is designed for when provided with a format context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"></see> that provides a format context that can be used to extract additional information about the environment from which this converter is invoked. This parameter or properties of this parameter can be null.</param>
            <returns>
            A <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection"></see> that holds a standard set of valid values, or null if the data type does not support a standard set of values.
            </returns>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.Ajax.AreaZoomHelper">
            <summary>
            AreaZoomHelper is a helper class responsible for scrolling 
            and zooming feature of particular chart area. 
            Controlled by ChartZoomEngine.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AreaZoomHelper.#ctor(Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.Ajax.ChartZoomEngine)">
            <summary>
            Initializes a new instance of the <see cref="T:AreaZoomHelper"/> class.
            </summary>
            <param name="area">The area.</param>
            <param name="engine">The engine.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AreaZoomHelper.LoadState">
            <summary>
            Stabilizes area positions and loads the area view state.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AreaZoomHelper.SaveState">
            <summary>
            Saves the area viewstate.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AreaZoomHelper.GatherValues">
            <summary>
            Gathers the area values after first rendering.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AreaZoomHelper.PrepareCuttingState">
            <summary>
            Prepares the chart area for partitial area rendering.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AreaZoomHelper.RestoreCuttingState">
            <summary>
            Restores the area state after partitial area rendering.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AreaZoomHelper.SaveAreaPositions">
            <summary>
            Saves the area positions.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AreaZoomHelper.RestoreAreaPositions">
            <summary>
            Restores the area positions.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AreaZoomHelper.PrepareDumpState(System.Drawing.RectangleF,System.Drawing.RectangleF)">
            <summary>
            Prepares the area for rendering operations.
            </summary>
            <param name="areaPlotRect">The area plot rect.</param>
            <param name="innerPlotRect">The inner plot rect.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AreaZoomHelper.ValidatePositionZoom">
            <summary>
            Validates the zoom position. Flowing will normalize viev position and size if goes out of view range. 
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AreaZoomHelper.RestoreDumpState">
            <summary>
            Restores the area after rendering operations.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AreaZoomHelper.ResizeArea">
            <summary>
            Force area resize to collect area rectangles.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AreaZoomHelper.GetAxisZoom(Dundas.Olap.WebUIControls.AxisPosition)">
            <summary>
            Gets the axis zoom.
            </summary>
            <param name="axisPos">The axis pos.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AreaZoomHelper.GetAreaAxis(Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.AxisPosition)">
            <summary>
            Gets the area axis.
            </summary>
            <param name="area">The area.</param>
            <param name="axisPos">The axis pos.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AreaZoomHelper.GetAreaAxis(Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.Ajax.AxisSection)">
            <summary>
            Gets the area axis by specified AxisSection (horizontal, vertical).
            </summary>
            <param name="area">The area.</param>
            <param name="section">The section.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AreaZoomHelper.GetAxisZoom(Dundas.Olap.WebUIControls.Ajax.AxisSection)">
            <summary>
            Gets the axis zoom helper by specified AxisSection (horizontal, vertical).
            </summary>
            <param name="section">The section.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AreaZoomHelper.GetChartSize">
            <summary>
            Gets the size of the chart.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AreaZoomHelper.GetChartRect">
            <summary>
            Gets the chart rect.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AreaZoomHelper.CreateAxisRectangle(System.Drawing.RectangleF,Dundas.Olap.WebUIControls.Axis)">
            <summary>
            Creates the axis rectangle.
            </summary>
            <param name="plotRect">The plot rect.</param>
            <param name="axis">The axis.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AreaZoomHelper.GetChunkScalePlotRect(Dundas.Olap.WebUIControls.Axis)">
            <summary>
            Gets the scale rectangle for cutting.
            </summary>
            <param name="axis">The axis.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AreaZoomHelper.GetChunkAreaPlotRect">
            <summary>
            Gets the area rect for cutting.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AreaZoomHelper.CompensateBorders(Dundas.Olap.WebUIControls.Axis,System.Drawing.RectangleF@)">
            <summary>
            Compensates the borders for specified axis.
            </summary>
            <param name="axis">The axis.</param>
            <param name="rect">The rect.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AreaZoomHelper.GetAreaScrollRect">
            <summary>
            Gets the area scroll rectangle - inner scrolling rectangle without scrolling scales.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AreaZoomHelper.GetScaleScrollRect(Dundas.Olap.WebUIControls.Axis)">
            <summary>
            Gets the scale scrolling rect.
            </summary>
            <param name="axis">The axis.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AreaZoomHelper.GetScrollerPlotRect(Dundas.Olap.WebUIControls.AxisPosition)">
            <summary>
            Gets the axis scroller rectangle.
            </summary>
            <param name="axisName">Name of the axis.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AreaZoomHelper.GetScrollerButtonPlotRect(Dundas.Olap.WebUIControls.AxisPosition,Dundas.Olap.WebUIControls.ScrollBarButtonType)">
            <summary>
            Gets the axis scroller button rect rectangle.
            </summary>
            <param name="axisName">Name of the axis.</param>
            <param name="buttonType">Type of the button.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AreaZoomHelper.PrepareCallbackInfo">
            <summary>
            Prepares the callback info.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AreaZoomHelper.ProcessZoom">
            <summary>
            Processes the zoom command.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AreaZoomHelper.PrepareImages(System.Int32,System.Int32)">
            <summary>
            Prepares the chunk images for specified x and y pages.
            </summary>
            <param name="XSliceNo">The X slice no.</param>
            <param name="YSliceNo">The Y slice no.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AreaZoomHelper.UnprepareImages">
            <summary>
            Restore state after partitial area rendering.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AreaZoomHelper.CopyPosition(Dundas.Olap.WebUIControls.ElementPosition,Dundas.Olap.WebUIControls.ElementPosition)">
            <summary>
            Copies the srs ElementPsition into src ElementPosition with saving auto flag.
            </summary>
            <param name="src">The SRC.</param>
            <param name="dst">The DST.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AreaZoomHelper.GetAxisStates">
            <summary>
            Gets the list axes ZoomAxisState.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AreaZoomHelper.SetAxisStates(System.Collections.Generic.List{Dundas.Olap.WebUIControls.Ajax.ZoomAxisState})">
            <summary>
            Restores the axis states from list created by GetAxisStates().
            </summary>
            <param name="axisStates">The axis states.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AreaZoomHelper.CutBitmap(System.Drawing.Bitmap,System.Drawing.Rectangle)">
            <summary>
            Cuts the rendered chart bitmap by specified rectangle.
            </summary>
            <param name="wholeBitmap">The whole bitmap.</param>
            <param name="rect">The rect.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AreaZoomHelper.GetAreaBitmap(System.Drawing.Bitmap)">
            <summary>
            Gets the area bitmap.
            </summary>
            <param name="wholeBitmap">The whole bitmap.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AreaZoomHelper.GetScaleBitmap(System.Drawing.Bitmap,Dundas.Olap.WebUIControls.Axis)">
            <summary>
            Gets the scale bitmap.
            </summary>
            <param name="wholeBitmap">The whole bitmap.</param>
            <param name="axis">The axis.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AreaZoomHelper.GetAreaBitmapMemoryStream(System.Drawing.Bitmap)">
            <summary>
            Gets the area bitmap as memory stream.
            </summary>
            <param name="wholeBitmap">The whole bitmap.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AreaZoomHelper.GetScaleBitmapMemoryStream(System.Drawing.Bitmap,Dundas.Olap.WebUIControls.Axis)">
            <summary>
            Gets the scale bitmap as memory stream.
            </summary>
            <param name="wholeBitmap">The whole bitmap.</param>
            <param name="axis">The axis.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AreaZoomHelper.GetChunkImages(System.Drawing.Bitmap,System.Boolean)">
            <summary>
            Gets the chunk images for the chart area and corresponded axes scales.
            </summary>
            <param name="wholeBitmap">The whole bitmap.</param>
            <param name="forceScale">if set to <c>true</c> force getting axes scales chinks.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AreaZoomHelper.GetMapAreaTag(Dundas.Olap.WebUIControls.MapArea)">
            <summary>
            Gets HTML tag which represent this map area.
            </summary>
            <param name="graph">Reference to the chart graphics object.</param>
            <returns>Map area HTML tag.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AreaZoomHelper.TransformMapArea(Dundas.Olap.WebUIControls.MapArea,Dundas.Olap.WebUIControls.ChartGraphics,System.Drawing.Point)">
            <summary>
            Transforms coordinates of the map area by specified offset.
            </summary>
            <param name="map">The map.</param>
            <param name="graph">The graph.</param>
            <param name="offset">The offset.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AreaZoomHelper.GetMapAreas(System.Drawing.Rectangle)">
            <summary>
            Gets the map area list for specified rectangle relative to the chart and tharsform it to the upper corner of specified rectange.
            </summary>
            <param name="rectOrg">The rect org.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AreaZoomHelper.RenderInnerImageMap(System.Drawing.Rectangle)">
            <summary>
            Renders the image map by specified rectangle into string.
            </summary>
            <param name="rect">The rect.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AreaZoomHelper.GetSlaveAreas">
            <summary>
            Gets the slave areas - areas that are aligned with current chart area.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AreaZoomHelper.GetSlaveAreaName">
            <summary>
            Gets the name of the slave area.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AreaZoomHelper.PopulateControls">
            <summary>
            Populates the area web controls - panels, scrollbars and so on.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AreaZoomHelper.PopulateControls(System.Boolean)">
            <summary>
            Populates the area web controls
            </summary>
            <param name="populate">if set to <c>true</c> populate inner web controls or only empty panel.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AreaZoomHelper.GetGridName(Dundas.Olap.WebUIControls.ChartArea)">
            <summary>
            Gets the name of the scrolling grid for specified chart area.
            </summary>
            <param name="area">The area.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AreaZoomHelper.GetGridName(Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.Axis)">
            <summary>
            Gets the name of the scrolling grid for specified axis scale.
            </summary>
            <param name="area">The area.</param>
            <param name="axis">The axis.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AreaZoomHelper.RenderImageWindow(System.Web.UI.WebControls.Panel)">
            <summary>
            Renders the image window - all image chunks into scrolling panels.
            </summary>
            <param name="containerPanel">The container panel.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AreaZoomHelper.ToHtmlColor(System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Converts the color of the HTML.
            </summary>
            <param name="c">The c.</param>
            <param name="defaultColor">Color of the default.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AreaZoomHelper.ToJavaNumber(System.Double)">
            <summary>
            Converts a double to the java number.
            </summary>
            <param name="number">The number.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AreaZoomHelper.GetScrollPoint">
            <summary>
            Gets the top scroll point.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AreaZoomHelper.GetAvailableRect">
            <summary>
            Gets the maximum scroll rectangle.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AreaZoomHelper.GetSelectionCursor(Dundas.Olap.WebUIControls.Cursor,System.Boolean)">
            <summary>
            Generates selection cursor javascript object.
            </summary>
            <param name="cursor">The cursor.</param>
            <param name="vertical">if set to <c>true</c> [vertical].</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AreaZoomHelper.GetAreaSelector">
            <summary>
            Generates the area selector javascript object.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AreaZoomHelper.CreateScrollingGrid(System.Web.UI.WebControls.Panel,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Int32,System.Int32,System.String,Dundas.Olap.WebUIControls.ChartArea,System.String,System.String,System.Drawing.Point,System.Drawing.Rectangle,System.Drawing.Rectangle)">
            <summary>
            Creates the scrolling grid panel.
            </summary>
            <param name="visibleArea">The visible area.</param>
            <param name="chunkRect">The chunk rect.</param>
            <param name="xSlicesCount">The x slices count.</param>
            <param name="ySlicesCount">The y slices count.</param>
            <param name="panelID">The panel ID.</param>
            <param name="area">The area.</param>
            <param name="parentAreaID">The parent area ID.</param>
            <param name="slaveAreaID">The slave area ID.</param>
            <param name="scrollToPos">The scroll to pos.</param>
            <param name="innerAreaRect">The inner area rect.</param>
            <param name="availableRect">The available rect.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AreaZoomHelper.PopulateScrollingGridControls(System.Web.UI.WebControls.Panel)">
            <summary>
            Populates the scrolling grid controls.
            </summary>
            <param name="containerPanel">The container panel.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AreaZoomHelper.PopulateScrollerControls(System.Web.UI.WebControls.Panel)">
            <summary>
            Populates the scrolbar controls.
            </summary>
            <param name="containerPanel">The container panel.</param>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Ajax.AreaZoomHelper.Chart">
            <summary>
            Gets the parent chart.
            </summary>
            <value>The chart.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Ajax.AreaZoomHelper.Common">
            <summary>
            Gets the CommonElements instance.
            </summary>
            <value>The CommonElements instance.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Ajax.AreaZoomHelper.Area">
            <summary>
            Gets the corresponded area.
            </summary>
            <value>The area.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Ajax.AreaZoomHelper.IsRequireAxes">
            <summary>
            Gets a value indicating whether this instance is require axes.
            </summary>
            <value>
            	<c>true</c> if this instance is require axes; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Ajax.AreaZoomHelper.IsZoomed">
            <summary>
            Gets a value indicating whether this instance is zoomed.
            </summary>
            <value><c>true</c> if this instance is zoomed; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Ajax.AreaZoomHelper.AreaPosition">
            <summary>
            Gets the area position.
            </summary>
            <value>The area position.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Ajax.AreaZoomHelper.AreaInnerPosition">
            <summary>
            Gets the area inner position.
            </summary>
            <value>The area inner position.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Ajax.AreaZoomHelper.XSlicesCount">
            <summary>
            Gets the X slices count.
            </summary>
            <value>The X slices count.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Ajax.AreaZoomHelper.YSlicesCount">
            <summary>
            Gets the Y slices count.
            </summary>
            <value>The Y slices count.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Ajax.AreaZoomHelper.Engine">
            <summary>
            Gets the parent ChartZoomEngine.
            </summary>
            <value>The engine.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Ajax.AreaZoomHelper.Params">
            <summary>
            Gets the postback params.
            </summary>
            <value>The params.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Ajax.AreaZoomHelper.AreaName">
            <summary>
            Gets the name of the area as name + hash string.
            </summary>
            <value>The name of the area.</value>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.ChartLicenseProvider">
            <summary>
            License provide for the chart
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartLicenseProvider.#ctor">
            <summary>
            Class constructor
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartLicenseProvider.IsKeyValid(System.String,System.Type)">
            <summary>
            Determines if the key retrieved by the GetLicense method is valid 
            for the specified type.
            
            Format of the license key:
            "{Full.Type.Name} is a licensed component. PrivateKey={KEY}"
            
            </summary>summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartLicenseProvider.GetNic">
            <summary>
            Returns network card id retrieved from the GUID
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartLicenseProvider.CheckKey(System.String,System.Type)">
            <summary>
            Determines if the key retrieved by the GetLicense method is valid 
            for the specified type.
            </summary>summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartLicenseProvider.GetLicense(System.ComponentModel.LicenseContext,System.Type,System.Object,System.Boolean)">
            <summary>
            Gets a license for the instance of the component and determines if it is valid.
            </summary>
            <param name="context"></param>
            <param name="type"></param>
            <param name="instance"></param>
            <param name="allowExceptions"></param>
            <returns></returns>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.ChartLicense">
            <summary>
            Chart license
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartLicense.#ctor(Dundas.Olap.WebUIControls.ChartLicenseProvider,System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="owner">License owner,</param>
            <param name="key">License key.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartLicense.Dispose">
            <summary>
            Dispose license.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartLicense.LicenseKey">
            <summary>
            Gets license key.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.Pages.DimBrDlg">
            <summary>
            Summary description for WebForm6.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Pages.DimBrDlg.BtnOK">
            <summary>
            
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Pages.DimBrDlg.btnSelectAll">
            <summary>
            
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Pages.DimBrDlg.btnSelectNone">
            <summary>
            
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Pages.DimBrDlg.btnUnSort">
            <summary>
            
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Pages.DimBrDlg.btnSortDesc">
            <summary>
            
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Pages.DimBrDlg.btnSortAsc">
            <summary>
            
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Pages.DimBrDlg.btnDrillUp">
            <summary>
            
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Pages.DimBrDlg.btnDrillDown">
            <summary>
            
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Pages.DimBrDlg.Treeview">
            <summary>
            
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Pages.DimBrDlg.OlapManager">
            <summary>
            
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Pages.DimBrDlg.Page_Load(System.Object,System.EventArgs)">
            <summary>
            Occurs when page is loaded
            </summary>
            <param name="sender">Usually the page</param>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Pages.DimBrDlg.OnInit(System.EventArgs)">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Pages.DimBrDlg.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Pages.DimBrDlg.GetStyleSheetURL">
            <summary>
            Returns the embeded style sheet.
            </summary>
            <returns>The string represents style sheet url.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Pages.DimBrDlg.Treeview_Populate(System.Object,Dundas.Olap.WebUIControls.TreeViewPopulateEventArgs)">
            <summary>
            
            </summary>
            <param name="source"></param>
            <param name="e"></param>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.OlapGrids.Const">
            <summary>
            Constants for OlapGrid 
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.OlapGrids.Const.InterlacedId">
            <summary>
            IDs for olapgridelementstyle
            </summary> 
        </member>
        <member name="F:Dundas.Olap.WebUIControls.OlapGrids.Const.EmptyString">
            <summary>
            nbsp const
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.OlapGrids.Const.TotalColumnProperty">
            <summary>
            property name for totals indicator.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.OlapGrids.Const.DefaultTotalName">
            <summary>
            Name for totals.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.OlapGrids.Const.ArgumentExceptionText">
            <summary>
            exception text for % values.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.OlapGrids.Const.adomdMemberPropertyName">
            <summary>
            name for original member property
            in properties collection
            was taken from adomdnet
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.OlapGrids.Const.styleNameMapping">
            <summary>
            Contains mapping for style
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGrids.Const.#cctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.OlapGrids.Const.alignMapping">
            <summary>
            Mapping alignment to css values
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGrids.Const.GetAlign(Dundas.Olap.WebUIControls.OlapGridAlignment,System.Boolean)">
            <summary>
            Returns alignemnt string by OlapGridAlignment.
            </summary>
            <param name="alignment">element alignment</param>
            <param name="horizontal">horizontal/vertical</param>
            <returns>string value</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGrids.Const.GetStyleClassName(System.String)">
            <summary>
            get css class name by given id
            </summary>
            <param name="classId"></param>
            <returns></returns>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapGrids.Const.ExpandedImageName">
            <summary>
            plus image name
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapGrids.Const.CollapsedImageName">
            <summary>
            minus image name
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapGrids.Const.FFStyleName">
            <summary>
            fire fox css file
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapGrids.Const.IEStyleName">
            <summary>
            ie style filename
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapGrids.Const.IEBlockScriptFileName">
            <summary>
            ie ver 1 script filename
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapGrids.Const.FFScriptFileName">
            <summary>
            ff script filename
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapGrids.Const.IEScriptFileName">
            <summary>
            ie ver 0.1 script filename
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.OlapGrids.Const.CSSFormats">
            <summary>
            Base class for format generation.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGrids.Const.CSSFormats.SetStyleFormats(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Fills dictionary with css style formats
            </summary>
            <param name="styleFormats">dictionary</param>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.OlapGrids.Const.TableFormats">
            <summary>
            auxiliary css formats for table renderers
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGrids.Const.TableFormats.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.OlapGrids.Const.BlockFormats">
            <summary>
            auxiliary css formats for block renderers
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGrids.Const.BlockFormats.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.OlapGrids.Const.AlignValues">
            <summary>
            Horizontal/Vertical alignment
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.DimensionMembersTree">
            <summary>
            A tree control that allows the end-user to see the list of dimension
            members and to filter members using node check boxes.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.OlapTreeView">
            <summary>
            The OlapTreeView is a component which generates HTML tree view.
            Supports checked boxes and call back population.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapTreeView.#cctor">
            <summary>
            Static constructor of <see cref="T:OlapTreeView"/> class.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapTreeView.#ctor">
            <summary>
            Initializes a new instance of the OlapTreeView class.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapTreeView.ShouldSerializeNodes">
            <summary>
            Shoulds the serialize nodes.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapTreeView.SetSelectedNode(Dundas.Olap.WebUIControls.OlapTreeNode)">
            <summary>
            Sets the selected node.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapTreeView.GetSelectedNodeValue">
            <summary>
            Gets the selected node value.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapTreeView.GetExpandedNodePaths">
            <summary>
            Gets the expanded node paths.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapTreeView.GetCheckedNodePaths">
            <summary>
            Gets the checked node paths.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapTreeView.GetImageUrl(Dundas.Olap.WebUIControls.OlapTreeViewImageType)">
            <summary>
            Gets the image URL.
            </summary>
            <param name="imageType">Type of the image.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapTreeView.SaveViewState">
            <summary>
            Saves any server control view-state changes that have occurred since the time the page was posted back to the server.
            </summary>
            <returns>
            Returns the server control's current view state. If there is no view state associated with the control, this method returns a null reference (Nothing in Visual Basic).
            </returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapTreeView.LoadViewState(System.Object)">
            <summary>
            Restores view-state information from a previous page request that was saved by the SaveViewState method
            </summary>
            <param name="savedState">
            An Object that represents the control state to be restored. 
            </param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapTreeView.TrackViewState">
            <summary>
            Causes tracking of view-state changes to the server control so they can be stored in the server control's StateBag object. This object is accessible through the Control.ViewState property.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapTreeView.OnClick(System.EventArgs)">
            <summary>
            Raises the Click event of the OlapTreeView control.
            </summary>
            <param name="e">A System.EventArgs that contains the event data. </param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapTreeView.IsDesignMode">
            <summary>
            Determines whether [is design mode].
            </summary>
            <returns>
            	<c>true</c> if [is design mode]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapTreeView.ConvertStyleToString(System.Web.UI.WebControls.Style)">
            <summary>
            Converts the style to string.
            </summary>
            <param name="s">The style.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapTreeView.GetNodeStyle">
            <summary>
            Gets the node style.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapTreeView.GetSelectedNodeStyle(System.Web.UI.WebControls.Style)">
            <summary>
            Gets the selected node style.
            </summary>
            <param name="nonSelectedStyle">The non selected style.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapTreeView.ApplyDesignNodeStyle(System.Web.UI.WebControls.WebControl)">
            <summary>
            Applies the design node style.
            </summary>
            <param name="c">The control.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapTreeView.EnsureNodeStyles">
            <summary>
            Ensures the node styles.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapTreeView.RegisterValueState">
            <summary>
            Registers the state of the value.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapTreeView.IsChanged">
            <summary>
            Determines whether this instance is changed.
            </summary>
            <returns>
            	<c>true</c> if this instance is changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapTreeView.OnLoad(System.EventArgs)">
            <summary>
            Raises the Load event.
            </summary>
            <param name="e">The EventArgs object that contains the event data.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapTreeView.PreProcessOnDemandNodes(System.Boolean)">
            <summary>
            Pres the process on demand nodes.
            </summary>
            <param name="forceProcess">if set to <c>true</c> forces the process.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapTreeView.GetClientVariable">
            <summary>
            Gets the client variable name.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapTreeView.PopulateInternalControls">
            <summary>
            Populates internal elements. For internal use only.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapTreeView.OnPreRender(System.EventArgs)">
            <summary>
            Raises the PreRender event.
            </summary>
            <param name="e">An EventArgs object that contains the event data. </param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapTreeView.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            This member overrides Control.Render.
            </summary>
            <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter"/> output</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapTreeView.RemoveBrackets(System.String)">
            <summary>
            Removes the brackets.
            </summary>
            <param name="path">The path.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapTreeView.System#Web#UI#IPostBackDataHandler#LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            When implemented by a class, processes postback data for an ASP.NET server control.
            </summary>
            <param name="postDataKey">The key identifier for the control.</param>
            <param name="postCollection">The collection of all incoming name values.</param>
            <returns>
            true if the server control's state changes as a result of the postback; otherwise, false.
            </returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapTreeView.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent">
            <summary>
            When implemented by a class, signals the server control to notify the ASP.NET application that the state of the control has changed.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapTreeView.PopulateNode(Dundas.Olap.WebUIControls.OlapTreeNode)">
            <summary>
            Populates the node command.
            </summary>
            <param name="node">The node.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapTreeView.OnPopulate(Dundas.Olap.WebUIControls.TreeViewPopulateEventArgs)">
            <summary>
            Raises the Populate event.
            </summary>
            <param name="e">An EventArgs object that contains the event data. </param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapTreeView.OnPostBackEvent(System.Web.UI.WebControls.CommandEventArgs)">
            <summary>
            Raises the PostBack event.
            </summary>
            <param name="e">An EventArgs object that contains the event data. </param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapTreeView.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)">
            <summary>
            When implemented by a class, enables a server control to process an event raised when a form is posted to the server.
            </summary>
            <param name="eventArgument">A <see cref="T:System.String"></see> that represents an optional event argument to be passed to the event handler.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapTreeView.GetCallBackState">
            <summary>
            Gets the state of the call back.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapTreeView.SetCallBackState(System.String)">
            <summary>
            Sets the state of the call back.
            </summary>
            <param name="state">The state.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapTreeView.GetCallbackResult">
            <summary>
            Returns the results of a callback event that targets a control.
            </summary>
            <returns>The result of the callback.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapTreeView.System#Web#UI#ICallbackEventHandler#GetCallbackResult">
            <summary>
            Returns the results of a callback event that targets a control.
            </summary>
            <returns>The result of the callback.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapTreeView.RaiseCallbackEvent(System.String)">
            <summary>
            Processes a callback event that targets a control.
            </summary>
            <param name="eventArgument">A string that represents an event argument to pass to the event handler.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapTreeView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)">
            <summary>
            Processes a callback event that targets a control.
            </summary>
            <param name="eventArgument">A string that represents an event argument to pass to the event handler.</param>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapTreeView.AutoPostBack">
            <summary>
            Gets or sets a value indicating whether a postback to the server automatically occurs when the user changes the list selection.
            </summary>
            <returns>
            true if a postback to the server automatically occurs whenever the user changes the selection of the list; otherwise, false. The default is false.
            </returns>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapTreeView.ShowCheckBoxes">
            <summary>
            Gets or sets a value indicating whether check boxes are displayed next to the tree nodes in the tree view control.
            </summary>
            <returns>
            true if a check box is displayed next to each tree node in the tree view control; otherwise, false. The default is false.
            </returns>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapTreeView.MultiSelectCheck">
            <summary>Gets or sets a value indicating whether only one node can be selected rather than two or mode.
            </summary>
            <returns>
            true if only one node can be selected; otherwise, false. The default value is true.
            </returns>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapTreeView.HoverUnderline">
            <summary>
            Gets or sets a value indicating whether or not to undeline the text when hover the mouse. 
            </summary>
            <returns>true to undeline text; otherwise, false. The default is true.</returns>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapTreeView.NodeStyle">
            <summary>
            Represents the style properties for an element of a control that renders as a OlapTreeNode.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapTreeView.SelectedNodeStyle">
            <summary>
            Represents the style properties for an element of a control that renders as a selected OlapTreeNode.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapTreeView.SelectedNode">
            <summary>
            Gets the selected node object.
            </summary>
            <returns>The selected OlapTreeNode or null</returns>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapTreeView.Nodes">
            <summary>
            Gets the node items of the OlapTreeView.
            </summary>
        </member>
        <member name="E:Dundas.Olap.WebUIControls.OlapTreeView.Click">
            <summary>
            Occurs when the node item is clicked.
            </summary>
        </member>
        <member name="E:Dundas.Olap.WebUIControls.OlapTreeView.Command">
            <summary>
            Occurs when a command should be executed.
            </summary>
        </member>
        <member name="E:Dundas.Olap.WebUIControls.OlapTreeView.Populate">
            <summary>
            Occurs when a node should be populated after post back.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.DimensionMembersTree.dimensionDescriptor">
            <summary>
            The DimensionDescriptor reference
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.DimensionMembersTree.dimensionDescriptorID">
            <summary>
            The DimensionDescriptor index
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.DimensionMembersTree.axisType">
            <summary>
            The DataAxisType type
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.DimensionMembersTree.memberNameList">
            <summary>
            List for existing members and parents
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DimensionMembersTree.#ctor">
            <summary>
            Initializes new instance of DimensionMembersTree class
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DimensionMembersTree.ShouldSerializeOlapManagerID">
            <summary>
            Indicates whether the OlapManagerID property should be persisted.
            </summary>
            <returns>
            true if the property value has changed from its default; otherwise, false.
            </returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DimensionMembersTree.GetLeafMembers(Dundas.Olap.Data.MemberCollection)">
            <summary>
            Returns all leafs from the node collection
            </summary>
            <param name="nodes"></param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DimensionMembersTree.AddInvisibleMembers">
            <summary>
            Adds Checked Members
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DimensionMembersTree.Initialize(System.Int32,Dundas.Olap.Manager.DataAxisType)">
            <summary>
            Initializes the <b>DimensionMembersTree</b> form.
            </summary>
            <param name="dimensionDescriptorId">
            A index of <see cref="P:Dundas.Olap.WebUIControls.DimensionMembersTree.DimensionDescriptor"/> object that represents edited
            dimension and list of members.
            </param>
            <param name="axisType">
            A <see cref="T:Dundas.Olap.Manager.DataAxisType"/> enumeration value that defines the axis
            the edited dimension descriptor belongs to.
            </param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DimensionMembersTree.Initialize(System.Boolean)">
            <summary>
            Initializes the <b>DimensionMembersTree</b> form with conditional refresh.
            </summary>
            <param name="withRefresh">if set to <c>true</c> performs full refresh.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DimensionMembersTree.EnsureProcessPostBack(System.Boolean)">
            <summary>
            Ensures that the postback is processed.
            </summary>
            <param name="forceProcess">if set to <c>true</c> force postback processing.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DimensionMembersTree.EnsureProcessPostBack">
            <summary>
            Ensures that the postback is processed.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DimensionMembersTree.SetNodesCheckedState(Dundas.Olap.WebUIControls.OlapTreeNodeCollection,Dundas.Olap.WebUIControls.NodeCheckState)">
            <summary>
            Sets the state of all nodes in defined checked state.
            </summary>
            <param name="nodes">The nodes.</param>
            <param name="state">The state.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DimensionMembersTree.SetNodesCheckedState(Dundas.Olap.WebUIControls.NodeCheckState)">
            <summary>
            Sets the state of all nodes in defined checked state.
            </summary>
            <param name="state">The state.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DimensionMembersTree.DimensionContain(Dundas.Olap.Data.DimensionMemberDescriptorCollection,Dundas.Olap.Data.DimensionMemberDescriptor)">
            <summary>
            Isnpects if the DimensionMemberDescriptorCollection 
            contains specified DimensionMemberDescriptor.
            </summary>
            <param name="members"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DimensionMembersTree.GetFixedDimensionMembers">
            <summary>
            Gets the fixed dimension members.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DimensionMembersTree.GetParentMember(Dundas.Olap.Data.Member)">
            <summary>
            Loads and returns the parent member of given Member;
            </summary>
            <param name="member"></param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DimensionMembersTree.GetLevel(Dundas.Olap.Data.CubeDataSchema)">
            <summary>
            Returns a Level of assosiated DimensionDescriptor
            </summary>
            <param name="cubeDataSchema"></param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DimensionMembersTree.FindMemberByNameAndLevel(Dundas.Olap.Data.Level,System.String)">
            <summary>
            Finds dimension <see cref="T:Dundas.Olap.Data.Member"/> object by its unique name.
            </summary>
            <remarks>
            This method finds the <b>Member</b> by iterating through each member in the
            specified <see cref="T:Dundas.Olap.Data.Level"/>. This operation may take a significant amount of  
            time, especially if information about the <b>Level</b> members is not yet
            preloaded into the CubeDataSchema object. Set the <b>loadedMembersOnly</b> 
            property to <b>true</b> to search only if the level has its members 
            already loaded. 
            </remarks>
            <param name="parentLevel">
            Member <see cref="T:Dundas.Olap.Data.Level"/> name.
            </param>
            <param name="name">
            Dimension <see cref="T:Dundas.Olap.Data.Member"/> unique name.
            </param>
            <returns>
            Dimension <see cref="T:Dundas.Olap.Data.Member"/> object or <b>null</b> if not found.
            </returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DimensionMembersTree.FindMemberByNameAndMember(Dundas.Olap.Data.Member,System.String)">
            <summary>
            Finds a Member by parentMember and name
            </summary>
            <param name="parentMember"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DimensionMembersTree.EnsureMembersLoaded">
            <summary>
            Forces loading of child members of exposed members.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DimensionMembersTree.ApplyChanges">
            <summary>
            Saves the changes into the associated current OlapReport.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DimensionMembersTree.ProcessCheckedMemberCollection">
            <summary>
            Processes checked members collection 
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DimensionMembersTree.GetNodeValue(Dundas.Olap.WebUIControls.OlapTreeNode)">
            <summary>
            Converts a TreeNode Value to Measure OR Member
            </summary>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DimensionMembersTree.UpdateDimensionDescriptor">
            <summary>
            Updates assosiated DimensionDescriptor from selected ( checked ) tree nodes
            </summary>        
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DimensionMembersTree.UpdateDimensionDescriptor(System.Boolean)">
            <summary>
            Updates assosiated DimensionDescriptor from selected ( checked ) tree nodes
            </summary>        
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DimensionMembersTree.AddMembersFromTreeNodes(Dundas.Olap.Data.DimensionDescriptor,Dundas.Olap.WebUIControls.OlapTreeNodeCollection)">
            <summary>
            Adds recursively Members to given DimensionDescriptor from TreeNodeCollection
            </summary>
            <param name="descriptor"></param>
            <param name="nodes"></param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DimensionMembersTree.UpdateDescriptorFromTreeNodes(Dundas.Olap.Data.DimensionDescriptor,Dundas.Olap.WebUIControls.OlapTreeNodeCollection)">
            <summary>
            Adds recursively Members to given DimensionDescriptor from TreeNodeCollection
            </summary>
            <param name="descriptor"></param>
            <param name="nodes"></param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DimensionMembersTree.ShouldFillMembers">
            <summary>
            Determines if all members of top level are checked.
            </summary>
            <returns></returns>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.DimensionMembersTree.images">
            <summary>
            Contains cached images
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DimensionMembersTree.GetNodeImageUrl(System.String)">
            <summary>
            Image Url caching routine
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DimensionMembersTree.GetMemberImageName(Dundas.Olap.Data.Member)">
            <summary>
            Returns image name by given member type.
            </summary>
            <param name="member"></param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DimensionMembersTree.ClearCachedMembers">
            <summary>
            Clears members 
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DimensionMembersTree.ClearSession">
            <summary>
            Clear session
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DimensionMembersTree.GetMemberCollection(Dundas.Olap.Data.Level)">
            <summary>
            Returns member collection fro given level;
            </summary>
            <param name="level">level</param>
            <returns>member collection</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DimensionMembersTree.InitParentNamesCollection">
            <summary>
            Initializes memberNameList collection
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DimensionMembersTree.GetDimensionTreeObject">
            <summary>
            Gets object from session for the current dimension
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DimensionMembersTree.GetDimensionSessionKey">
            <summary>
            returns the session key for dimenstion
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DimensionMembersTree.GetMemberCollection(System.String[],Dundas.Olap.Data.Level)">
            <summary>
            Returns member collection from list of uniqueIds 
            </summary>
            <param name="uids">id list</param>
            <param name="level">level</param>
            <returns>member collection</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DimensionMembersTree.GetMemberUniqueNames(Dundas.Olap.Data.MemberCollection)">
            <summary>
            Returns list of ids from member collection
            </summary>
            <param name="coll">member collection</param>
            <returns>array of unique names</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DimensionMembersTree.CreateMembersHash">
            <summary>
            Creates hash for members and member's parents
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DimensionMembersTree.Refresh">
            <summary>
            Reloads tree node items.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DimensionMembersTree.UpdateCheckedCollection">
            <summary>
            Creates checked items collection
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DimensionMembersTree.AddToCollection(System.Collections.Generic.List{System.String},Dundas.Olap.Data.Member)">
            <summary>
            Adds member and member's parents to collection
            </summary>
            <param name="memberList">list</param>
            <param name="member">member to be added</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DimensionMembersTree.SetMultipleChecking(Dundas.Olap.WebUIControls.OlapTreeNodeCollection)">
            <summary>
            Checks if node is selected and sets multiple 
            </summary>
            <param name="collection">node collection</param>
            <param name="memberCollection">member collection</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DimensionMembersTree.SaveUniqueList(System.String[],Dundas.Olap.Data.Level)">
            <summary>
            Saves unique names list to session
            </summary>
            <param name="UniqueNamesList">list to be saved</param>
            <param name="level">level</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DimensionMembersTree.CreateDimensionState">
            <summary>
            Creates dimension state object
            </summary>
            <returns>triplet with dimension-related info</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DimensionMembersTree.FillChildMembers(Dundas.Olap.WebUIControls.OlapTreeNode,Dundas.Olap.Data.Member)">
            <summary>
            Loads member child items from given parentMember into OlapTreeNode
            </summary>
            <param name="node"></param>
            <param name="parentMember"></param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DimensionMembersTree.GetNodeCheckState(System.Object)">
            <summary>
            Determines <see cref="T:Dundas.Olap.WebUIControls.NodeCheckState"/> from Measure/Member object
            </summary>
            <param name="OlapItem"></param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DimensionMembersTree.GetMemberCheckState(Dundas.Olap.Data.Member)">
            <summary>
            Determines <see cref="T:Dundas.Olap.WebUIControls.NodeCheckState"/> from Measure/Member object
            </summary>
            <param name="OlapItem"></param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DimensionMembersTree.OnPopulate(Dundas.Olap.WebUIControls.TreeViewPopulateEventArgs)">
            <summary>
            This member overrides <see cref="M:Dundas.Olap.WebUIControls.OlapTreeView.OnPopulate(Dundas.Olap.WebUIControls.TreeViewPopulateEventArgs)"/> method.
            </summary>
            <param name="e">The <see cref="T:Dundas.Olap.WebUIControls.TreeViewPopulateEventArgs"/> event argument</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DimensionMembersTree.SaveDimensionMemberPosition(Dundas.Olap.Data.Member,System.Int64)">
            <summary>
            Saves current position 
            </summary>
            <param name="member">member</param>
            <param name="position">position to be saved</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DimensionMembersTree.SaveDimensionMemberPosition(Dundas.Olap.Data.Level,System.Int64)">
            <summary>
            Saves current position 
            </summary>
            <param name="member">member</param>
            <param name="position">position to be saved</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DimensionMembersTree.LoadDimensionMemberPosition(Dundas.Olap.Data.Member)">
            <summary>
            Gets current member position from session object 
            </summary>
            <param name="member">member</param>
            <returns>loaded number</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DimensionMembersTree.LoadDimensionMemberPosition(Dundas.Olap.Data.Level)">
            <summary>
            Gets current member position from session object 
            </summary>
            <param name="member">member</param>
            <returns>loaded number</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DimensionMembersTree.CreatePgDnNode(Dundas.Olap.WebUIControls.OlapTreeNodeCollection,System.String,System.Int64,System.Boolean)">
            <summary>
            Creates PgDn node
            </summary>
            <param name="collection">Nodes collection.</param>
            <param name="nodeValue">Value.</param>
            <param name="position">Current page position.</param>
            <param name="isLevel">indicates that it is level</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DimensionMembersTree.CreatePgUpNode(Dundas.Olap.WebUIControls.OlapTreeNodeCollection,System.String,System.Int64,System.Boolean,System.Int32,System.Int32)">
            <summary>
            Adds last node for collection
            </summary>
            <param name="collection">Nodes collection</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DimensionMembersTree.SaveViewState">
            <summary>
            This member overrides <see cref="M:System.Web.UI.Control.SaveViewState"/> method
            </summary>
            <returns>An object which contain the control state</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DimensionMembersTree.LoadViewState(System.Object)">
            <summary>
            This member overrides <see cref="M:System.Web.UI.Control.LoadViewState(System.Object)"/> method
            </summary>
            <param name="savedState">An object which contain the control state</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DimensionMembersTree.GetCallBackState">
            <summary>
            Populate string wich represents the control state on order to be saved into 
            callback state.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DimensionMembersTree.SetCallBackState(System.String)">
            <summary>
            Restores state from given string, saved before with GetCallbackState.
            </summary>
            <param name="state"></param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DimensionMembersTree.SetCallBackState(System.String,System.Boolean)">
            <summary>
            Restores state from given string, saved before with GetCallbackState.
            </summary>
            <param name="state">The state.</param>
            <param name="updateDescriptor">if set to <c>true</c> to update descriptor.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DimensionMembersTree.IsChanged">
            <summary>
            Determines whether this instance is changed.
            </summary>
            <returns>
            	<c>true</c> if this instance is changed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DimensionMembersTree.OnInit(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Web.UI.Control.Init"></see> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"></see> object that contains the event data.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DimensionMembersTree.OnPreRender(System.EventArgs)">
            <summary>  
            This method overrides <see cref="M:System.Web.UI.Control.OnPreRender(System.EventArgs)"/> method
            </summary> 
            <param name="e">The event argument</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DimensionMembersTree.ClearInvisibleMembers">
            <summary>
            Clears invisible members
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DimensionMembersTree.Dundas#Olap#Manager#IOlapCallbackHandler#PopulateCallbackContent(System.Web.UI.HtmlTextWriter,System.String)">
            <summary>
            Returns internal content of the control used to visual ( DHTML) or script updating.
            </summary>
            <param name="output">A <see cref="T:System.Web.UI.HtmlTextWriter"/> used for output</param>
            <param name="contentType">The requested type of content</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DimensionMembersTree.Dundas#Olap#Manager#IOlapConditionalCallbackHandler#ShouldPopulateCallbackContent">
            <summary>
            Returns true if this control should populate its callback content
            </summary>
            <returns></returns>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.DimensionMembersTree.DimensionDescriptor">
            <summary>
            Gets the modified <b>DimensionDescriptor</b> object.
            <seealso cref="T:Dundas.Olap.Manager.OlapManager"/>
            </summary>
            <remarks>
            Use this property to retrieve the modified <see cref="P:Dundas.Olap.WebUIControls.DimensionMembersTree.DimensionDescriptor"/> 
            object.
            </remarks>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.DimensionMembersTree.AxisType">
            <summary>
            Gets or sets the type of data axis represented by this <b>DimensionMembersTree</b>.
            </summary>
            <value>
            A <see cref="T:Dundas.Olap.Manager.DataAxisType"/> enumeration value that defines the axis type that this 
            DimensionMembersTree is representing.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.DimensionMembersTree.OlapManager">
            <summary>
            Gets or sets the associated <b>OlapManager</b> object.
            <seealso cref="T:Dundas.Olap.Manager.OlapManager"/>
            </summary>
            <remarks>
            The <b>OlapReportList</b> control works with a list of reports 
            defined in the <see cref="P:Dundas.Olap.Manager.OlapManager.OlapReports"/> collection of the <see cref="T:Dundas.Olap.Manager.OlapManager"/>
            object. Any change to that list will automatically update the list content.
            
            If the end user adds, deletes or renames reports in the list, it will 
            automatically be reflected in the <b>OlapManager</b>. When the selected 
            report in the list is changed, it is automatically set as the <see cref="P:Dundas.Olap.Manager.OlapManager.CurrentOlapReport"/>
            in the associated <b>OlapManager</b> object.
            </remarks>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.DimensionMembersTree.OlapManagerID">
            <summary>
            Gets or sets the ID of associated <b>OlapManager</b> object.
            <seealso cref="T:Dundas.Olap.Manager.OlapManager"/>
            </summary>
            <remarks>
            The <b>OlapReportList</b> control works with a list of reports 
            defined in the <see cref="P:Dundas.Olap.Manager.OlapManager.OlapReports"/> collection of the <see cref="T:Dundas.Olap.Manager.OlapManager"/>
            object. Any change to that list will automatically update the list content.
            
            If the end user adds, deletes or renames reports in the list, it will 
            automatically be reflected in the <b>OlapManager</b>. When the selected 
            report in the list is changed, it is automatically set as the <see cref="P:Dundas.Olap.Manager.OlapManager.CurrentOlapReport"/>
            in the associated <b>OlapManager</b> object.
            </remarks>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.DimensionMembersTree.DimensionDescriptorPos">
            <summary>
            Gets or sets the dimension descriptor position.
            </summary>
            <value>The dimension descriptor position.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.DimensionMembersTree.EnableViewState">
            <summary>
            This member overrides the <see cref="P:System.Web.UI.Control.EnableViewState"/> property.
            </summary>
            <value>A boolean value which represents the viewstate flag.  By default, this is false</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.DimensionMembersTree.Nodes">
            <summary>
            Gets the node items of the OlapTreeView.
            </summary>
            <value></value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.DimensionMembersTree.HoverUnderline">
            <summary>
            Gets or sets a value indicating whether or not to undeline the text when hover the mouse.
            </summary>
            <value></value>
            <returns>true to undeline text; otherwise, false. The default is true.</returns>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.DimensionMembersTree.AutoPostBack">
            <summary>
            Gets or sets a value indicating whether a postback to the server automatically occurs when the user changes the list selection.
            </summary>
            <value></value>
            <returns>
            true if a postback to the server automatically occurs whenever the user changes the selection of the list; otherwise, false. The default is false.
            </returns>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.DimensionMembersTree.MultiSelectCheck">
            <summary>
            Gets or sets a value indicating whether only one node can be selected rather than two or mode.
            </summary>
            <value></value>
            <returns>
            true if only one node can be selected; otherwise, false. The default value is true.
            </returns>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.DimensionMembersTree.ShowCheckBoxes">
            <summary>
            Gets or sets a value indicating whether check boxes are displayed next to the tree nodes in the tree view control.
            </summary>
            <value></value>
            <returns>
            true if a check box is displayed next to each tree node in the tree view control; otherwise, false. The default is false.
            </returns>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.CubeDimensionBrowser">
            <summary>
            UI tree control that allows the end-user to browse current cube 
            Measures, Dimensions and Levels.
            <seealso cref="P:Dundas.Olap.WebUIControls.CubeDimensionBrowser.OlapManager"/>
            <seealso cref="T:Dundas.Olap.WebUIControls.AxisBuilder"/>
            <seealso cref="T:Dundas.Olap.WebUIControls.CubeSelector"/>
            </summary>
            <remarks>  
            The <b>CubeDimensionBrowser</b> control is associated with the <b>OlapManager</b>
            object using the <see cref="P:Dundas.Olap.WebUIControls.CubeDimensionBrowser.OlapManager"/> property. The control automatically 
            updates the data schema when the current cube is changed in the <b>OlapManager</b>.
            
            Dimensions, levels and measures displayed in the control can easily be added to the 
            axis by performing drag-and-drop operations onto other OLAP UI controls, such as
            the <see cref="T:Dundas.Olap.WebUIControls.AxisBuilder"/> or the <see cref="T:Dundas.Olap.WebUIControls.OlapChart"/>.
            </remarks>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CubeDimensionBrowser.#ctor">
            <summary>
            Initializes new instance of CubeDimensionBrowser class
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CubeDimensionBrowser.ShouldSerializeOlapManagerID">
            <summary>
            Indicates whether the OlapManagerID property should be persisted.
            </summary>
            <returns>
            Returns true if the property value has changed from its default; otherwise false.
            </returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CubeDimensionBrowser.AddSelectedDimension(Dundas.Olap.Manager.DataAxisType,System.Int32)">
            <summary>
            Adds the selected dimension to specified axis of <see cref="T:Dundas.Olap.Manager.DataAxisType"/> and position index.
            </summary>
            <param name="axisType">The OLAP axis type </param>
            <param name="position">The position</param>
            <returns>
            True if adding is successful otherwise false;
            </returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CubeDimensionBrowser.CreateChildControls">
            <summary>
            This member overrides <see cref="M:System.Web.UI.Control.CreateChildControls"/> method.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CubeDimensionBrowser.FillTreeOfDimensionsOnDemand">
            <summary>
            Fills the tree with appropriate measures, dimensions and levels.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CubeDimensionBrowser.FillTreeOfDimensions">
            <summary>
            Fills the tree with appropriate measures, dimensions and levels.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CubeDimensionBrowser.IsDimensionSelected(Dundas.Olap.Data.Dimension,Dundas.Olap.Data.Level)">
            <summary>
            Checks if specified dimension/level is selected.
            </summary>
            <param name="dimension">Dimension to check.</param>
            <param name="level">Level to check. Can be null.</param>
            <returns>True if specified dimension/level is used in one of the data axis.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CubeDimensionBrowser.IsMeasureSelected(Dundas.Olap.Data.Measure)">
            <summary>
            Checks if specified measure is selected.
            </summary>
            <param name="measure">Measure to check.</param>
            <returns>True if specified measure is used in one of the data axis.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CubeDimensionBrowser.CreateMeasureGroupNode(Dundas.Olap.WebUIControls.OlapTreeNode,Dundas.Olap.Data.Measure)">
            <summary>
            Creates a measure group folder tree node in specified parent node.
            </summary>
            <param name="parentNode">Tree parent node.</param>
            <param name="measure">Measure to create grouping folder node for.</param>
            <returns>Tree view node where measure should be added.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CubeDimensionBrowser.GetMeasureGroups(Dundas.Olap.Data.MeasureCollection)">
            <summary>
            Creates and returns a Hashtable with Measure Groups
            </summary>
            <param name="measures">Collection of measures</param>
            <returns>A Hashtable with Measure Groups</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CubeDimensionBrowser.GetDimensionGroups(Dundas.Olap.Data.Dimension)">
            <summary>
            Creates and returns a Hashtable with Hierarchy Groups
            </summary>
            <param name="dimension">Dimension</param>
            <returns>A Hashtable with Hierarchy Groups</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CubeDimensionBrowser.ProcessBoldNodes(System.String,Dundas.Olap.WebUIControls.OlapTreeNodeCollection)">
            <summary>
            Makes nodes bold from given node path 
            </summary>
            <param name="rootPath">The nodes path</param>
            <param name="nodes">Nodes collection</param>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.CubeDimensionBrowser.images">
            <summary>
            Caches CubeBrowser* images Url during rendering
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CubeDimensionBrowser.GetNodeImageUrl(System.String)">
            <summary>
            Caches CubeBrowser* images Url during rendering
            </summary>
            <param name="name">CubeBrowser* image name</param>
            <returns>Relative Url to the image</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CubeDimensionBrowser.CopyAttributes">
            <summary>
            Copies WebControl attributes to the internal TreeView
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CubeDimensionBrowser.OnInit(System.EventArgs)">
            <summary>
            This member overrides <see cref="M:System.Web.UI.Control.OnInit(System.EventArgs)"/> method.
            </summary>
            <param name="e">An event argument</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CubeDimensionBrowser.OnLoad(System.EventArgs)">
            <summary>
            This member overrides <see cref="M:System.Web.UI.Control.OnLoad(System.EventArgs)"/> method.
            </summary>
            <param name="e">The event argument</param>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.CubeDimensionBrowser.postbackProcessed">
            <summary>
            determines if the postback is processed.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CubeDimensionBrowser.EnsureProcessPostBack(System.Boolean)">
            <summary>
            Ensures that the postback is processed.
            </summary>
            <param name="forceProcess">if set to <c>true</c> force postback processing.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CubeDimensionBrowser.OnPreRender(System.EventArgs)">
            <summary>  
            This method overrides <see cref="M:System.Web.UI.Control.OnPreRender(System.EventArgs)"/> method
            </summary> 
            <param name="e">The event argument</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CubeDimensionBrowser.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            This method overrides <see cref="M:System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)"/> method
            </summary>
            <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter"/> object</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CubeDimensionBrowser.OnCommand(System.Object,System.Web.UI.WebControls.CommandEventArgs)">
            <summary>
            TreeView OnCommand callback method, handles drag-drop feature
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CubeDimensionBrowser.AddHierarchyLevels(Dundas.Olap.WebUIControls.OlapTreeNode,Dundas.Olap.Data.Hierarchy)">
            <summary>
            Adds the levels nodes from given hierarchy
            </summary>
            <param name="parentNode"></param>
            <param name="hierarchy"></param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CubeDimensionBrowser.AddHierarchyNode(Dundas.Olap.WebUIControls.OlapTreeNode,Dundas.Olap.Data.Hierarchy)">
            <summary>
            Adds hierarchy Node to tree view
            </summary>
            <param name="parentNode"></param>
            <param name="hierarchy"></param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CubeDimensionBrowser.ProcessDimensionNamedSets(Dundas.Olap.WebUIControls.OlapTreeNode,Dundas.Olap.Data.CubeDataSchema,Dundas.Olap.Data.Dimension,System.String)">
            <summary>
            Adds NameSets items of given folder.
            </summary>
            <param name="node"></param>
            <param name="cubeDataSchema"></param>
            <param name="dimension"></param>
            <param name="processFolder"></param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CubeDimensionBrowser.OnPopulate(System.Object,Dundas.Olap.WebUIControls.TreeViewPopulateEventArgs)">
            <summary>
            OnPopulate TreeView handler.
            Generates new treeview items according arguments.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CubeDimensionBrowser.Dundas#Olap#Manager#IOlapCallbackHandler#PopulateCallbackContent(System.Web.UI.HtmlTextWriter,System.String)">
            <summary>
            Returns internal content of the control used to visual ( DHTML) or script updating.
            </summary>
            <param name="output">A <see cref="T:System.Web.UI.HtmlTextWriter"/> used for output</param>
            <param name="contentType">The requested type of content</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CubeDimensionBrowser.Dundas#Olap#Manager#IOlapConditionalCallbackHandler#ShouldPopulateCallbackContent">
            <summary>
            Returns true if this control should populate its callback content
            </summary>
            <returns></returns>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.CubeDimensionBrowser.AxisType">
            <summary>
            Associated axis type.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.CubeDimensionBrowser.NodeStyle">
            <summary>
            Gets the style properties for an element of a control that renders as a normal <b>OlapTreeNode</b>.
            </summary>
            <value>An associated <see cref="T:Dundas.Olap.WebUIControls.OlapWebItemStyle"/> object.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.CubeDimensionBrowser.SelectedNodeStyle">
            <summary>
            Gets the style properties for an element of a control that renders as a selected <b>OlapTreeNode</b>.
            </summary>
            <value>An associated <see cref="T:Dundas.Olap.WebUIControls.OlapWebItemStyle"/> object.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.CubeDimensionBrowser.OlapManager">
            <summary>
            Gets or sets the associated <b>OlapManager</b> object.
            <seealso cref="T:Dundas.Olap.Manager.OlapManager"/>
            </summary>
            <remarks>
            The <b>OlapReportList</b> control works with a list of reports 
            defined in the <see cref="P:Dundas.Olap.Manager.OlapManager.OlapReports"/> collection of the <see cref="T:Dundas.Olap.Manager.OlapManager"/>
            object. Any change to that list will automatically update the list content.
            
            If the end user adds, deletes or renames reports in the list, it will 
            automatically be reflected in the <b>OlapManager</b>. When the selected 
            report in the list is changed, it is automatically set as the <see cref="P:Dundas.Olap.Manager.OlapManager.CurrentOlapReport"/>
            in the associated <b>OlapManager</b> object.
            </remarks>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.CubeDimensionBrowser.OlapManagerID">
            <summary>
            Gets or sets the ID of the associated <b>OlapManager</b> object.
            <seealso cref="T:Dundas.Olap.Manager.OlapManager"/>
            </summary>
            <remarks>
            The <b>OlapReportList</b> control works with a list of reports 
            defined in the <see cref="P:Dundas.Olap.Manager.OlapManager.OlapReports"/> collection of the <see cref="T:Dundas.Olap.Manager.OlapManager"/>
            object. Any change to that list will automatically update the list content.
            
            If the end user adds, deletes or renames reports in the list, it will 
            automatically be reflected in the <b>OlapManager</b>. When the selected 
            report in the list is changed, it is automatically set as the <see cref="P:Dundas.Olap.Manager.OlapManager.CurrentOlapReport"/>
            in the associated <b>OlapManager</b> object.
            </remarks>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.CubeDimensionBrowser.EnableViewState">
            <summary>
            This member overrides the <see cref="P:System.Web.UI.Control.EnableViewState"/> property.
            </summary>
            <value>A boolean value which represents the viewstate flag.  By default, this is false</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.CubeDimensionBrowser.Enabled">
            <summary>
            Gets or sets a value that represents whether the cube dimension browser is enabled.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.CubeDimensionBrowser.TreeView">
            <summary>
            Gets the tree view.
            </summary>
            <value>The tree view.</value>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.CubeDimensionBrowser.GroupHelper">
            <summary>
            GroupHelper class is used to gather groups info into hashtable.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.CubeDimensionBrowser.DimensionDescriptorItem">
            <summary>
            DimensionDescriptorItem class is a helper class used to collect and help 
            bolding of selected treeview items. 
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.CubeDimensionBrowser.DimensionDescriptorItem.measure">
            <summary>
            The measure
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:Dundas.Olap.WebUIControls.CubeDimensionBrowser.DimensionDescriptorItem.level" -->
        <member name="F:Dundas.Olap.WebUIControls.CubeDimensionBrowser.DimensionDescriptorItem.nameSet">
            <summary>
            The Name set
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CubeDimensionBrowser.DimensionDescriptorItem.#ctor(Dundas.Olap.Data.Level)">
            <summary>
            Creates new instance of DimensionDescriptorItem with given level
            </summary>
            <param name="level"></param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CubeDimensionBrowser.DimensionDescriptorItem.#ctor(Dundas.Olap.Data.Measure)">
            <summary>
            Creates new instance of DimensionDescriptorItem with given measure
            </summary>
            <param name="measure">The measure.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CubeDimensionBrowser.DimensionDescriptorItem.#ctor(Dundas.Olap.Data.NamedSet)">
            <summary>
            Creates new instance of DimensionDescriptorItem with given nameSet
            </summary>
            <param name="nameSet">The name set.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CubeDimensionBrowser.DimensionDescriptorItem.AddNodePaths(System.Collections.Specialized.StringCollection,Dundas.Olap.Data.CubeDataSchema)">
            <summary>
            Adds selected ( bold) nodes paths to result from private fields using CubeDataSchema.
            </summary>
            <param name="result"></param>
            <param name="cubeDataSchema"></param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CubeDimensionBrowser.DimensionDescriptorItem.GetSelectedNodesTable(Dundas.Olap.Data.CubeDataSchema,Dundas.Olap.Manager.OlapReport)">
            <summary>
            Creates array of DimensionDescriptorItem based on given olapReport using DataSchema.
            </summary>
            <param name="cubeDataSchema"></param>
            <param name="olapReport"></param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CubeDimensionBrowser.DimensionDescriptorItem.GetBolderNodePaths(Dundas.Olap.Data.CubeDataSchema,Dundas.Olap.Manager.OlapReport)">
            <summary>
            Returns a StringCollection of node paths with selected ( bolded ) nodes.
            </summary>
            <param name="cubeDataSchema"></param>
            <param name="olapReport"></param>
            <returns></returns>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.LevelPosition">
            <summary>
            A helper class that represents level position of the chart categorical
            labels row. 
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.LevelPosition.#ctor">
            <summary>
            Default object constructor is unaccessible.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.LevelPosition.#ctor(System.String,System.Int32)">
            <summary>
            Object constructor.
            </summary>
            <param name="levelName">
            Level name.
            </param>
            <param name="position">
            Level position.
            </param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.LevelPosition.CompareTo(System.Object)">
            <summary>
            Compares this instance to a specified object and returns an indication 
            of their relative values.
            </summary>
            <param name="obj">
            An object to compare with.
            </param>
            <returns>
            An integer number indicating the relative values of this instance and value.
            </returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.LevelPosition.GetHashCode">
            <summary>
            Gets object hash code.
            </summary>
            <returns>
            Object hash code.
            </returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.LevelPosition.Equals(System.Object)">
            <summary>
            Test if this object is equal to specified object.
            </summary>
            <param name="obj">
            Object to compare this object with.
            </param>
            <returns>
            True if objects are equal.
            </returns>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.CustomLabelsComparer">
            <summary>
            Custom label comparer class.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CustomLabelsComparer.Compare(System.Object,System.Object)">
            <summary>
            Compares two custom label objects.
            </summary>
            <param name="x">
            First object to compare.
            </param>
            <param name="y">
            Second object to compare.
            </param>
            <returns>
            0 if objects are equal; 1 if x more than y; -1 if x less than y.
            </returns>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.ImageStorageMode">
            <summary>
            Chart image storage mode.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ImageStorageMode.Auto">
            <summary>
            Storage is automatically detected.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ImageStorageMode.UseHttpHandler">
            <summary>
            Images are stored using HTTP Handler.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ImageStorageMode.UseImageUrl">
            <summary>
            Images is saved in temp. file using ImageUrl specified.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.ChartEdition">
            <summary>
            Edition of the chart control.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartEdition.Professional">
            <summary>
            Professional edition.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartEdition.Enterprise">
            <summary>
            Enterprise edition.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.ChartImageFormat">
            <summary>
            Specifies the format of the image
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartImageFormat.Jpeg">
            <summary>
            Gets the Joint Photographic Experts Group (JPEG) image format.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartImageFormat.Png">
            <summary>
            Gets the W3C Portable Network Graphics (PNG) image format.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartImageFormat.Bmp">
            <summary>
            Gets the bitmap image format (BMP).
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartImageFormat.Tiff">
            <summary>
            Gets the Tag Image File Format (TIFF) image format.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartImageFormat.Gif">
            <summary>
            Gets the Graphics Interchange Format (GIF) image format.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartImageFormat.Emf">
            <summary>
            Gets the Enhanced Meta File (Emf) image format.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartImageFormat.EmfPlus">
            <summary>
            Gets the Enhanced Meta File (Emf+) image format.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartImageFormat.EmfDual">
            <summary>
            Gets the Enhanced Meta File (EmfDual) image format.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartImageFormat.Svg">
            <summary>
            Scalable Vector Graphics 
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.RenderType">
            <summary>
            Chart image rendering type
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.RenderType.ImageTag">
            <summary>
            Chart image is rendered as image tag.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.RenderType.InputTag">
            <summary>
            Chart image is rendered as input tag with type=image.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.RenderType.BinaryStreaming">
            <summary>
            Chart image is streamed back directly.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.RenderType.ImageMap">
            <summary>
            Chart image map is rendered.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.CustomizeEventHandler">
            <summary>
            Chart customize event handler delegate.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.CustomizeLegendEventHandler">
            <summary>
            Chart customize legend event handler delegate.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.CustomizeMapAreasEventHandler">
            <summary>
            Chart customize map areas event handler delegate.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.CustomizeMapAreasEventArgs">
            <summary>
            Chart map areas customize events arguments
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CustomizeMapAreasEventArgs.#ctor">
            <summary>
            Default construvtor is not accessible
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CustomizeMapAreasEventArgs.#ctor(Dundas.Olap.WebUIControls.MapAreasCollection)">
            <summary>
            Customize map area event arguments constructor
            </summary>
            <param name="areaItems">Legend items collection.</param>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.CustomizeMapAreasEventArgs.MapAreaItems">
            <summary>
            Legend items collection.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.CustomizeLegendEventArgs">
            <summary>
            Chart legend customize events arguments
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CustomizeLegendEventArgs.#ctor">
            <summary>
            Default construvtor is not accessible
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CustomizeLegendEventArgs.#ctor(Dundas.Olap.WebUIControls.LegendItemsCollection)">
            <summary>
            Customize legend event arguments constructor
            </summary>
            <param name="legendItems">Legend items collection.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CustomizeLegendEventArgs.#ctor(Dundas.Olap.WebUIControls.LegendItemsCollection,System.String)">
            <summary>
            Customize legend event arguments constructor
            </summary>
            <param name="legendItems">Legend items collection.</param>
            <param name="legendName">Legend name.</param>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.CustomizeLegendEventArgs.LegendName">
            <summary>
            Legend name.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.CustomizeLegendEventArgs.LegendItems">
            <summary>
            Legend items collection.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.EventsManager">
            <summary>
            Control events manager.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.EventsManager.#ctor">
            <summary>
            Default private constructor
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.EventsManager.#ctor(System.ComponentModel.Design.IServiceContainer)">
            <summary>
            Events Manager public constructor
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.EventsManager.GetService(System.Type)">
            <summary>
            Returns Image Loader service object
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.EventsManager.OnBackPaint(System.Object,Dundas.Olap.WebUIControls.ChartPaintEventArgs)">
            <summary>
            Fires when chart element backround must be drawn. 
            This event is fired for elements like: ChartPicture, ChartArea and Legend
            </summary>
            <param name="caller">Event caller. Can be ChartPicture, ChartArea or Legend objects.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.EventsManager.OnPaint(System.Object,Dundas.Olap.WebUIControls.ChartPaintEventArgs)">
            <summary>
            Fires when chart element must be drawn. 
            This event is fired for elements like: ChartPicture, ChartArea and Legend
            </summary>
            <param name="caller">Event caller. Can be ChartPicture, ChartArea or Legend objects.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.EventsManager.OnCustomize">
            <summary>
            Fires when all chart data is prepared to be customized before drawing. 
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.EventsManager.OnCustomizeLegend(Dundas.Olap.WebUIControls.LegendItemsCollection,System.String)">
            <summary>
            Fires when all chart legend data is prepared to be customized before drawing. 
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.EventsManager.OnCustomizeMapAreas(Dundas.Olap.WebUIControls.MapAreasCollection)">
            <summary>
            Fires when all chart legend data is prepared to be customized before drawing. 
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.TraceManager">
            <summary>
            Tracing manager
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.TraceManager.#ctor">
            <summary>
            Default private constructor
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.TraceManager.#ctor(System.ComponentModel.Design.IServiceContainer)">
            <summary>
            Serialization Manager public constructor
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.TraceManager.GetService(System.Type)">
            <summary>
            Returns Image Loader service object
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.TraceManager.Write(System.String,System.String)">
            <summary>
            Writes trace information to the trace log.
            </summary>
            <param name="category">The trace category that receives the message. </param>
            <param name="message">The trace message to write to the log. </param>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.TraceManager.TraceContext">
            <summary>
            Gets current trace context object
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.TraceManager.TraceEnabled">
            <summary>
            Indicates whether tracing is enabled.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.TickMarkStyle">
            <summary>
            Tick Mark Style
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.TickMarkStyle.None">
            <summary>
            Tickmarks are disabled
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.TickMarkStyle.Outside">
            <summary>
            Tickmarks are located outside of the Chart area
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.TickMarkStyle.Inside">
            <summary>
            Tickmarks are located inside of the Chart area
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.TickMarkStyle.Cross">
            <summary>
            Tickmarks are set across the axis line
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.TickMark">
            <summary>
            TickMark class represents axis tick marks which are drawn next to 
            the axis line. TickMarks share many common propertie with the Grid 
            class. Class also contains methods for tick marks drawing.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.Grid">
            <summary>
            Grid class represents axis grid lines which are drawn in the 
            plotting area. It contains grid interval and visual appearance 
            properties. Class also contains methods for grid lines drawing. 
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Grid.#ctor">
            <summary>
            Public default constructor.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Grid.#ctor(Dundas.Olap.WebUIControls.Axis,System.Boolean)">
            <summary>
            Public constructor.
            </summary>
            <param name="axis">Axis which owens teh grid.</param>
            <param name="major">Major axis element.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Grid.Initialize(Dundas.Olap.WebUIControls.Axis,System.Boolean)">
            <summary>
            Initializes the object.
            </summary>
            <param name="axis">Axis which owens teh grid.</param>
            <param name="major">Major axis element.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Grid.GetAxis">
            <summary>
            Gets axes to which this object attached to
            </summary>
            <returns>Axis object.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Grid.Invalidate">
            <summary>
            Invalidate chart area the axis belong to.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Grid.Paint(Dundas.Olap.WebUIControls.ChartGraphics)">
            <summary>
            Draws grid lines.
            </summary>
            <param name="graph">Reference to the Chart Graphics object.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Grid.GetLogMinimum(System.Double,Dundas.Olap.WebUIControls.Series)">
            <summary>
            This method returns linearized logarithmic value 
            which is minimum for range with interval 1.
            </summary>
            <param name="current">Current value</param>
            <param name="axisSeries">First series attached to axis.</param>
            <returns>Returns Minimum for the range which contains current value</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Grid.DrawGrid(Dundas.Olap.WebUIControls.ChartGraphics,System.Double,System.Int32,System.Int32)">
            <summary>
            Draw the grid line 
            </summary>
            <param name="graph">Chart Graphics object</param>
            <param name="current">Current position of the gridline</param>
            <param name="numberOfElements">The number of gridlines</param>
            <param name="index">The index of gridline</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Grid.InitAnimation(Dundas.Olap.WebUIControls.CommonElements,System.Drawing.PointF,Dundas.Olap.WebUIControls.ChartGraphics,System.Int32,System.Int32)">
            <summary>
            Init animation
            </summary>
            <param name="common">Common Elements</param>
            <param name="point">Start Point for animation</param>
            <param name="graph">Chart Graphics</param>
            <param name="numberOfElements">The number of gridlines</param>
            <param name="index">The index of gridline</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Grid.PaintCustom(Dundas.Olap.WebUIControls.ChartGraphics)">
            <summary>
            Draws custom grid lines from custom labels.
            </summary>
            <param name="graph">Reference to the Chart Graphics object.</param>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Grid.IntervalOffset">
            <summary>
            Grid or mark interval offset.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Grid.IntervalOffsetType">
            <summary>
            Grid or mark offset type.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Grid.Interval">
            <summary>
            Grid or mark interval size.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Grid.IntervalType">
            <summary>
            Grid or mark interval type.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Grid.LineColor">
            <summary>
            Grid or mark line color
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Grid.LineStyle">
            <summary>
            Grid or mark line style
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Grid.LineWidth">
            <summary>
            Grid or mark line width
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Grid.Enabled">
            <summary>
            Grid or mark enabled flag
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Grid.Disabled">
            <summary>
            Grid or mark disabled flag
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.TickMark.#ctor">
            <summary>
            Public default constructor
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.TickMark.#ctor(Dundas.Olap.WebUIControls.Axis,System.Boolean)">
            <summary>
            Public constructor
            </summary>
            <param name="axis">Axis which owens the grid or tick mark.</param>
            <param name="major">Major axis element.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.TickMark.Paint(Dundas.Olap.WebUIControls.ChartGraphics,System.Boolean)">
            <summary>
            Draws and hit test for TickMarks.
            </summary>
            <param name="graph">Reference to the Chart Graphics object.</param>
            <param name="backElements">Back elements of the axis should be drawn in 3D scene.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.TickMark.GetLogMinimum(System.Double,Dundas.Olap.WebUIControls.Series)">
            <summary>
            This method returns linearized logarithmic value 
            which is minimum for range with interval 1.
            </summary>
            <param name="current">Current value</param>
            <param name="axisSeries">First series attached to axis.</param>
            <returns>Returns Minimum for the range which contains current value</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.TickMark.PaintCustom(Dundas.Olap.WebUIControls.ChartGraphics,System.Boolean)">
            <summary>
            Draws and hit test for custom TickMarks from the custom labels collection.
            </summary>
            <param name="graph">Reference to the Chart Graphics object.</param>
            <param name="backElements">Back elements of the axis should be drawn in 3D scene.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.TickMark.Draw3DTickLine(Dundas.Olap.WebUIControls.ChartGraphics,System.Drawing.PointF,System.Drawing.PointF,System.Boolean,System.Single,System.Boolean)">
            <summary>
            Draws tick mark line in 3D space.
            </summary>
            <param name="graph">Reference to the Chart Graphics object.</param>
            <param name="point1">First line point.</param>
            <param name="point2">Second line point.</param>
            <param name="horizontal">Indicates that tick mark line is horisontal.</param>
            <param name="scrollBarSize">Scroll bar size.</param>
            <param name="backElements">Back elements of the axis should be drawn in 3D scene.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.TickMark.Draw3DTickLine(Dundas.Olap.WebUIControls.ChartGraphics,System.Drawing.PointF,System.Drawing.PointF,System.Boolean,System.Single,System.Boolean,System.Boolean)">
            <summary>
            Draws tick mark line in 3D space.
            </summary>
            <param name="graph">Reference to the Chart Graphics object.</param>
            <param name="point1">First line point.</param>
            <param name="point2">Second line point.</param>
            <param name="horizontal">Indicates that tick mark line is horisontal.</param>
            <param name="scrollBarSize">Scroll bar size.</param>
            <param name="backElements">Back elements of the axis should be drawn in 3D scene.</param>
            <param name="selectionMode">The selectiom mode is active.</param>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.TickMark.Style">
            <summary>
            Tick mark style.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.TickMark.Size">
            <summary>
            Tick mark size.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.FinancialFormula">
            <summary>
            Financial Formula Name enumeration
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.FinancialFormula.AccumulationDistribution">
            <summary>
            The accumulation distribution formula is an improved 
            On Balance Volume indicator.  This indicator uses 
            a relationship between volume and prices to estimate 
            the strength of price movements, and if volume is 
            increased there is a high probability that prices will go up. 
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.FinancialFormula.AverageTrueRange">
            <summary>
            The Average True Range is an indicator that measures commitment 
            and compares the range between the High, Low and Close prices.  
            This indicator was developed by J. Welles Wilder. 
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.FinancialFormula.BollingerBands">
            <summary>
            Bollinger Bands are indicators that are plotted at standard 
            deviation levels above and below a simple moving average.  
            Since standard deviation is a measure of volatility, a large 
            standard deviation indicates a volatile market, while a smaller 
            standard deviation indicates a calmer market. 
            Bollinger Bands are a good way to compare volatility and relative 
            price levels over a period of time.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.FinancialFormula.ChaikinOscillator">
            <summary>
            The Chaikin Oscillator indicator is the difference between a 3-day 
            exponential moving average and a 10-day exponential moving average 
            applied to the  Accumulation Distribution. Using the Chaikin Oscillator 
            it is possible to monitor volume flow for a market. The Chaikin 
            Oscillator should be used together with the price envelope. 
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.FinancialFormula.CommodityChannelIndex">
            <summary>
            The Commodity Channel Index compares prices with their moving averages.  
            If the Commodity channel index is high it means that a price is higher 
            than its moving average, which is an indicator that security is overbought.  
            If the Commodity channel index is low it means that a price is lower than 
            its moving average, which is an indicator that security is oversold. 
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.FinancialFormula.DetrendedPriceOscillator">
            <summary>
            The Detrended Price Oscillator attempts to remove trend from prices.  
            By comparing the closing price or any other price with it's moving 
            average, the Detrended Price Oscillator eliminates cycles that are 
            longer than the moving average. 
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.FinancialFormula.EaseOfMovement">
            <summary>
            Ease of Movement deals with the relationship between volume and price 
            change, and uses volume to indicate how strong a trend is for prices.  
            Ease of Movement was developed by Richard W Arms. 
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.FinancialFormula.Envelopes">
            <summary>
            Envelopes are plotted above and below a moving average using a specified 
            percentage as the shift.  The envelopes indicator is used to create signals 
            for buying and selling, and the percentage to be used for calculating 
            the envelopes is specified by the user. This percentage should depend on the 
            volatility of the market (the higher the market volatility, the higher the 
            percentage should be). 
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.FinancialFormula.ExponentialMovingAverage">
            <summary>
            An Exponential Moving Average is an average of data calculated over a 
            period of time where the most recent days have more weight.  
            The exponential moving average can be used with any price: Hi, Low, Open and Close, 
            or it could be applied to other indicators.  An Exponential Moving 
            average smooths a data series, which is very important in a volatile market.  
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.FinancialFormula.Forecasting">
            <summary>
            The Time Series analysis has two main goals: Identifying the nature of a 
            sequence of observations and predicting future values using historical 
            observations (forecasting).  In time series analysis it is assumed that 
            the data consist of a systematic pattern and random noise which usually 
            makes the pattern difficult to identify. Most time series analysis 
            techniques uses filtering to remove noise. 
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.FinancialFormula.MACD">
            <summary>
            The MACD (Moving Average Convergence/Divergence) indicator compares two 
            moving averages of prices.  The MACD is used with a 9-day Exponential 
            Moving average as a signal, which indicates buying and selling moments.  
            This indicator was developed by Gerald Appel. 
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.FinancialFormula.MassIndex">
            <summary>
            The Mass Index is used to predict trend reversal by comparing the 
            difference and range between High and Low prices. If the Mass Index 
            increases the range between High and low increases. If the Mass Index 
            decreases the range between High and Low decreases. 
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.FinancialFormula.MedianPrice">
            <summary>
            Median prices are mid-point values of daily prices and can be used 
            as a filter for trend indicators. They are also used as a daily average 
            price which is very useful if we want a simpler "view" of prices. 
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.FinancialFormula.MoneyFlow">
            <summary>
            The money flow indicator compares upward changes and downward changes 
            of volume-weighted typical prices.  This indicator is similar to the 
            relative strength index, the difference being the volume-weighted 
            prices.  This indicator can be used to identify market tops and bottoms. 
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.FinancialFormula.NegativeVolumeIndex">
            <summary>
            The Negative Volume Index should be used together with the Positive 
            Volume index, and the  Negative Volume Index only changes if the 
            volume decreases from the previous day. 
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.FinancialFormula.OnBalanceVolume">
            <summary>
            The On Balance Volume is one of the first volume indicators that 
            measures positive and negative volume flow.  Volume is added if the 
            closing price increases and subtracted if the closing price decreases.  
            On Balance Volume wass developed by Joseph Granville. 
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.FinancialFormula.Performance">
            <summary>
            The Performance indicator compares a current Close (or any other price) 
            with the first Close value (from the first time period ). This indicator 
            shows the degree of a change in a price.  
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.FinancialFormula.PositiveVolumeIndex">
            <summary>
            The Positive Volume Index should be used together with the  Negative Volume 
            index. The Positive volume index only changes if the volume decreases from 
            the previous day. 
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.FinancialFormula.PriceVolumeTrend">
            <summary>
            The Price Volume Trend is a cumulative volume total that is calculated 
            using relative changes of the Close price, and should be used with 
            other indicators.   
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.FinancialFormula.RateOfChange">
            <summary>
            The Rate of Change indicator is very similar to the  Performance indicator, 
            where the Performance indicator compares the first price with current 
            price while the Rate of Change compares a specified Close price with 
            the current price. This formula is used for both prices and volume. 
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.FinancialFormula.RelativeStrengthIndex">
            <summary>
            The Relative Strength Index is a momentum oscillator that compares upward 
            movements of the Close price with downward movements, and results in values 
            that range from 0 to 100.  The Relative Strength index was developed by 
            J. Welles Wilder. 
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.FinancialFormula.MovingAverage">
            <summary>
            A Simple Moving Average is an average of data calculated over a period of 
            time. The moving average is the most popular price indicator used in 
            technical analyses, and can be used with any price (e.g.Hi, Low, 
            Open and Close) or it can be applied to other indicators. A moving average 
            smooths a data series, which is very important in a volatile market.  Also, 
            trends are easier to spot using a moving average. 
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.FinancialFormula.StandardDeviation">
            <summary>
            Standard deviation is used to indicate volatility, and measures the difference 
            between values (e.g. Closing Price) and their moving average. The larger the 
            difference the higher the standard deviation and volatility.  The smaller 
            the difference the lower the standard deviation and volatility.  
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.FinancialFormula.StochasticIndicator">
            <summary>
            When a trend is upward there is a tendency that the close price will be very 
            close to that day's high.  During a downward trending market there is 
            a tendency that the close price is closer to the low price. The Stochastic 
            Indicator helps to find trend reversal by searching for a period when: the 
            close prices are close to low prices in an upward trending market; or close 
            prices are close to high prices in a downward trending market. This formula 
            has two output values: %K - Simple Stochastic Indicator and %D - Smoothed 
            Stochastic Indicator (Moving Average of %K). 
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.FinancialFormula.TriangularMovingAverage">
            <summary>
            A Triangular Moving Average is an average of data calculated over a period 
            of time where the middle portion of data has more weight. The Triangular 
            Moving Average can be used with any price (Hi, Low, Open, Close) or it can 
            be applied to other indicators.  The Triangular Moving Average smooths 
            a data series, which is very important in a volatile market.  
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.FinancialFormula.TRIX">
            <summary>
            The TRIX is based on a triple moving average of the Closing Price, and its 
            purpose is to eliminate short cycles.  This indicator keeps the Close price 
            in trends that are shorter than the specified period. 
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.FinancialFormula.TypicalPrice">
            <summary>
            Typical price is the average value of daily prices, and can be used as 
            a filter for trend indicators. It is also used as a daily average price 
            which is very useful if we want a simpler view of prices. 
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.FinancialFormula.VolatilityChaikins">
            <summary>
            The Volatility Chaikins indicator measures the difference between High 
            and Low prices, and is used to indicate tops or bottoms of the market. 
            This formula was developed by Marc Chaikin. 
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.FinancialFormula.VolumeOscillator">
            <summary>
            The Volume oscillator attempts to identify trends in volume by comparing 
            two moving averages; one with a short period and another with 
            a longer period. 
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.FinancialFormula.WeightedClose">
            <summary>
            The Weighted Close formula calculates the average value of daily prices.  
            The only difference between Typical Price and the Weighted Close is that 
            the closing price has extra weight, and is considered the most important 
            price. The Weighted Close can be used as a filter for trend indicators, 
            and can also be used as a daily average price (very useful if we want 
            a simpler view of prices). 
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.FinancialFormula.WeightedMovingAverage">
            <summary>
            A Weighted Moving Average is an average of data calculated over a period 
            of time, where greater weight is attached to the most recent data. The 
            Weighted Moving Average can be used with any price (Hi, Low, Open, Close) 
            or it can be applied to other indicators. The Weighted Moving Average 
            smooths a data series, which is important in a volatile market. Weighting 
            is calculated from a sum of days. 
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.FinancialFormula.WilliamsR">
            <summary>
            William's %R is a momentum indicator, and is used to measure overbought and 
            oversold levels. This indicator is very similar to the Stochastic %K indicator, 
            except that Williams %R is always a negative value between 0 and -100.  
            This indicator was developed by Larry Williams. 
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.BarDrawingStyle">
            <summary>
            Defines the style how the bars/columns are drawn.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.BarDrawingStyle.Default">
            <summary>
            Default bar/column style.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.BarDrawingStyle.Cylinder">
            <summary>
            Cylinder bar/column style.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.BarDrawingStyle.Emboss">
            <summary>
            Emboss bar/column style.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.BarDrawingStyle.LightToDark">
            <summary>
            LightToDark bar/column style.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.BarDrawingStyle.Wedge">
            <summary>
            Wedge bar/column style.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.PieDrawingStyle">
            <summary>
            Defines the style how the pie and doughnut charts are drawn.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.PieDrawingStyle.Default">
            <summary>
            Default pie/doughnut drawing style.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.PieDrawingStyle.SoftEdge">
            <summary>
            Soft edge shadow is drawn on the edjes of the pie/doughnut slices.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.PieDrawingStyle.Concave">
            <summary>
            A shadow is drawn from the top to the bottom of the pie/doughnut chart.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.ChartDashStyle">
            <summary>
            Chart line style enumeration
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartDashStyle.NotSet">
            <summary>
            Style not set
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartDashStyle.Dash">
            <summary>
            Specifies a line consisting of dashes. 
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartDashStyle.DashDot">
            <summary>
            Specifies a line consisting of a repeating pattern of dash-dot. 
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartDashStyle.DashDotDot">
            <summary>
            Specifies a line consisting of a repeating pattern of dash-dot-dot. 
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartDashStyle.Dot">
            <summary>
            Specifies a line consisting of dots. 
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartDashStyle.Solid">
            <summary>
            Specifies a solid line. 
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.ChartGraphics">
            <summary>
            ChartGraphics class provides all chart drawing capabilities. 
            It contains methods for drawing 2D primitives and also exposes 
            all ChartGraphics3D class methods for 3D shapes. Only this 
            class should be used for any drawing in the chart.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.ChartGraphics3D">
            <summary>
            ChartGraphics3D class is 3D chart rendering engine. All chart 
            3D shapes are drawn in specific order so that correct Z order 
            of all shapes is achieved. 3D graphics engine do not support 
            shapes intersection. 3D shapes are transformed into one or 
            more 2D shapes and then drawn with 2D chart graphics engine.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartGraphics3D.oppLeftBottomPoint">
            <summary>
            Helper field used to store the index of cylinder left/bottom side coordinate.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartGraphics3D.oppRigthTopPoint">
            <summary>
            Helper field used to store the index of cylinder right/top side coordinate.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartGraphics3D.frontLinePoint1">
            <summary>
            Point of the front line from the previous line segment.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartGraphics3D.frontLinePoint2">
            <summary>
            Point of the front line from the previous line segment.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartGraphics3D.frontLinePen">
            <summary>
            Previous line segment pen.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartGraphics3D.Draw3DGridLine(Dundas.Olap.WebUIControls.ChartArea,System.Drawing.Color,System.Int32,Dundas.Olap.WebUIControls.ChartDashStyle,System.Drawing.PointF,System.Drawing.PointF,System.Boolean,Dundas.Olap.WebUIControls.CommonElements,System.Object)">
            <summary>
            Draws grid line in 3D space (on two area scene walls)
            </summary>
            <param name="area">Chart area.</param>
            <param name="color">Line color.</param>
            <param name="width">Line width.</param>
            <param name="style">Line style.</param>
            <param name="point1">First line point.</param>
            <param name="point2">Second line point.</param>
            <param name="horizontal">Indicates that grid line is horisontal.</param>
            <param name="common">Common Elements</param>
            <param name="obj">Selected object</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartGraphics3D.Draw3DGridLine(Dundas.Olap.WebUIControls.ChartArea,System.Drawing.Color,System.Int32,Dundas.Olap.WebUIControls.ChartDashStyle,System.Drawing.PointF,System.Drawing.PointF,System.Boolean,Dundas.Olap.WebUIControls.CommonElements,System.Object,System.Int32,System.Int32)">
            <summary>
            Draws grid line in 3D space (on two area scene walls)
            </summary>
            <param name="area">Chart area.</param>
            <param name="color">Line color.</param>
            <param name="width">Line width.</param>
            <param name="style">Line style.</param>
            <param name="point1">First line point.</param>
            <param name="point2">Second line point.</param>
            <param name="horizontal">Indicates that grid line is horisontal.</param>
            <param name="common">Common Elements</param>
            <param name="obj">Selected object</param>
            <param name="numberOfElements">The number of gridlines</param>
            <param name="elementIndex">The index of a gridline</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartGraphics3D.InitGridAnimation3D(Dundas.Olap.WebUIControls.CommonElements,Dundas.Olap.WebUIControls.Point3D,Dundas.Olap.WebUIControls.ChartGraphics,System.Int32,System.Int32,Dundas.Olap.WebUIControls.ChartArea,System.Object)">
            <summary>
            Init animation
            </summary>
            <param name="common">Common Elements</param>
            <param name="point">Start Point for animation</param>
            <param name="graph">Chart Graphics</param>
            <param name="numberOfElements">The number of gridlines</param>
            <param name="index">The index of gridline</param>
            <param name="area">Chart Area</param>
            <param name="obj">Animated object</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartGraphics3D.Draw3DLine(Dundas.Olap.WebUIControls.Matrix3D,System.Drawing.Color,System.Int32,Dundas.Olap.WebUIControls.ChartDashStyle,Dundas.Olap.WebUIControls.Point3D,Dundas.Olap.WebUIControls.Point3D)">
            <summary>
            Draws a line connecting the two specified points.
            </summary>
            <param name="matrix">Coordinates transformation matrix.</param>
            <param name="color">Line color.</param>
            <param name="width">Line width.</param>
            <param name="style">Line style.</param>
            <param name="firstPoint">A Point that represents the first point to connect.</param>
            <param name="secondPoint">A Point that represents the second point to connect.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartGraphics3D.Draw3DLine(Dundas.Olap.WebUIControls.Matrix3D,System.Drawing.Color,System.Int32,Dundas.Olap.WebUIControls.ChartDashStyle,Dundas.Olap.WebUIControls.Point3D,Dundas.Olap.WebUIControls.Point3D,Dundas.Olap.WebUIControls.CommonElements,System.Object,Dundas.Olap.WebUIControls.ChartElementType)">
            <summary>
            Draws a line connecting the two specified points.
            </summary>
            <param name="matrix">Coordinates transformation matrix.</param>
            <param name="color">Line color.</param>
            <param name="width">Line width.</param>
            <param name="style">Line style.</param>
            <param name="firstPoint">A Point that represents the first point to connect.</param>
            <param name="secondPoint">A Point that represents the second point to connect.</param>
            <param name="common">Common elements</param>
            <param name="obj">Selected object</param>
            <param name="type">Selected chart element</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartGraphics3D.FillPieSides(Dundas.Olap.WebUIControls.ChartArea,System.Single,System.Single,System.Single,System.Drawing.PointF[],System.Drawing.SolidBrush,System.Drawing.Pen,System.Boolean)">
            <summary>
            This method draw and fill four point polygons which 
            represents sides of a pie slice.
            </summary>
            <param name="area">Chart Area</param>
            <param name="xAngle">X angle rotation</param>
            <param name="startAngle">Start Angle of a pie slice</param>
            <param name="sweepAngle">Sweep angle of a pie slice</param>
            <param name="points">Significant points of a pie slice</param>
            <param name="brush">Brush used for fill</param>
            <param name="pen">Pen used for drawing</param>
            <param name="doughnut">Chart Type is Doughnut</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartGraphics3D.FillPieCurve(Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.DataPoint,System.Drawing.Brush,System.Drawing.Pen,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Single,System.Single,System.Int32)">
            <summary>
            This method Draw and fill pie curves.
            </summary>
            <param name="area">Chart area used for drawing</param>
            <param name="point">Data Point</param>
            <param name="brush">Graphic Brush used for drawing</param>
            <param name="pen">Graphic Pen used for drawing</param>
            <param name="topFirstRectPoint">Rotated bounded rectangle points</param>
            <param name="topSecondRectPoint">Rotated bounded rectangle points</param>
            <param name="bottomFirstRectPoint">Rotated bounded rectangle points</param>
            <param name="bottomSecondRectPoint">Rotated bounded rectangle points</param>
            <param name="topFirstPoint">Significant pie points</param>
            <param name="topSecondPoint">Significant pie points</param>
            <param name="bottomFirstPoint">Significant pie points</param>
            <param name="bottomSecondPoint">Significant pie points</param>
            <param name="startAngle">Start pie angle</param>
            <param name="sweepAngle">End pie angle</param>
            <param name="pointIndex">Data Point Index</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartGraphics3D.FillPieSlice(Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.DataPoint,System.Drawing.SolidBrush,System.Drawing.Pen,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Single,System.Single,System.Boolean,System.Int32)">
            <summary>
            This method draws projection of 3D pie slice. 
            </summary>
            <param name="area">Chart area used for drawing</param>
            <param name="point">Data point which creates this pie slice</param>
            <param name="brush">Graphic Brush used for drawing</param>
            <param name="pen">Graphic Pen used for drawing</param>
            <param name="firstRectPoint">The first point of transformed bounding rectangle</param>
            <param name="firstPoint">The first arc point of pie slice</param>
            <param name="secondRectPoint">The second point of transformed bounding rectangle</param>
            <param name="secondPoint">The second arc point of pie slice</param>
            <param name="center">The center point of pie slice</param>
            <param name="startAngle">Start angle of pie slice</param>
            <param name="sweepAngle">The end angle of pie slice</param>
            <param name="fill">Fill pie slice with brush</param>
            <param name="pointIndex"></param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartGraphics3D.FillDoughnutSlice(Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.DataPoint,System.Drawing.SolidBrush,System.Drawing.Pen,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Single,System.Single,System.Boolean,System.Single,System.Int32)">
            <summary>
            This method draws projection of 3D pie slice. 
            </summary>
            <param name="area">Chart area used for drawing</param>
            <param name="point">Data point which creates this Doughnut slice</param>
            <param name="brush">Graphic Brush used for drawing</param>
            <param name="pen">Graphic Pen used for drawing</param>
            <param name="firstRectPoint">The first point of transformed bounding rectangle</param>
            <param name="firstPoint">The first arc point of Doughnut slice</param>
            <param name="secondRectPoint">The second point of transformed bounding rectangle</param>
            <param name="secondPoint">The second arc point of Doughnut slice</param>
            <param name="threePoint">The three point of Doughnut slice</param>
            <param name="fourPoint">The four point of Doughnut slice</param>
            <param name="center">The center point of Doughnut slice</param>
            <param name="startAngle">Start angle of Doughnut slice</param>
            <param name="sweepAngle">The end angle of Doughnut slice</param>
            <param name="fill">Fill Doughnut slice with brush</param>
            <param name="doughnutRadius">Radius for doughnut chart</param>
            <param name="pointIndex">Data Point Index</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartGraphics3D.DrawGraphicsPath(System.Drawing.Pen,System.Drawing.Drawing2D.GraphicsPath)">
            <summary>
            Draw Graphics Path. This method is introduced because of 
            bug in DrawPath method when Pen Width is bigger then 1.
            </summary>
            <param name="pen">Pen</param>
            <param name="path">Graphics Path</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartGraphics3D.AngleCorrection(System.Single,System.Double,System.Single)">
            <summary>
            Angle correction algorithm. After rotation different 
            transformed angle should be used. This method transforms angles.
            </summary>
            <param name="angle">Not transformed angle</param>
            <param name="correction">Correction of bounding rectangle (change between width and height)</param>
            <param name="xAngle">X axis 3D rotation angle</param>
            <returns>Transformed angle</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartGraphics3D.Draw3DPolygon(Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.Matrix3D,Dundas.Olap.WebUIControls.LightStyle,Dundas.Olap.WebUIControls.SurfaceName,System.Single,System.Drawing.Color,System.Drawing.Color,System.Int32,Dundas.Olap.WebUIControls.ChartDashStyle,Dundas.Olap.WebUIControls.DataPoint3D,Dundas.Olap.WebUIControls.DataPoint3D,Dundas.Olap.WebUIControls.DataPoint3D,Dundas.Olap.WebUIControls.DataPoint3D,System.Collections.ArrayList,System.Int32,System.Single,Dundas.Olap.WebUIControls.DrawingOperationType,Dundas.Olap.WebUIControls.LineSegmentType,Dundas.Olap.WebUIControls.SurfaceName)">
            <summary>
            Draws a 3D polygon defined by 4 points in 2D space.
            </summary>
            <param name="area">Chart area reference.</param>
            <param name="matrix">Coordinates transformation matrix.</param>
            <param name="lightStyle">Light style (None, Simplistic, Realistic).</param>
            <param name="surfaceName">Name of the surface to draw.</param>
            <param name="positionZ">Z position of the back side of the 3D surface.</param>
            <param name="backColor">Color of rectangle</param>
            <param name="borderColor">Border Color</param>
            <param name="borderWidth">Border Width</param>
            <param name="borderStyle">Border Style</param>
            <param name="firstPoint">First point.</param>
            <param name="secondPoint">Second point.</param>
            <param name="thirdPoint">Third point.</param>
            <param name="fourthPoint">Fourth point.</param>
            <param name="points">Array of points.</param>
            <param name="pointIndex">Index of point to draw.</param>
            <param name="tension">Line tension.</param>
            <param name="operationType">Type of operation Drawing, Calculating Path or Both</param>
            <param name="lineSegmentType">Type of line segment. Used for step lines and splines.</param>
            <param name="thinBorders">Thin border will be drawn on specified sides.</param>
            <returns>Returns elemnt shape path if operationType parameter is set to CalcElementPath, otherwise Null.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartGraphics3D.GetSplineFlattenPath(Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.Matrix3D,System.Single,System.Single,Dundas.Olap.WebUIControls.DataPoint3D,Dundas.Olap.WebUIControls.DataPoint3D,System.Collections.ArrayList,System.Int32,System.Single,System.Boolean,System.Boolean,System.Int32)">
            <summary>
            Helper method which returns the splines flatten path.
            </summary>
            <param name="area">Chart area reference.</param>
            <param name="matrix">Coordinates transformation matrix.</param>
            <param name="positionZ">Z position of the back side of the 3D surface.</param>
            <param name="depth">Depth of the 3D surface.</param>
            <param name="firstPoint">First point.</param>
            <param name="secondPoint">Second point.</param>
            <param name="points">Array of points.</param>
            <param name="pointIndex">Index of point to draw.</param>
            <param name="tension">Line tension.</param>
            <param name="flatten">Flatten result path.</param>
            <param name="translateCoordinates">Indicates that points coordinates should be translated.</param>
            <param name="yValueIndex">Index of the Y value to use.</param>
            <returns>Spline path.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartGraphics3D.Draw3DSplineSurface(Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.Matrix3D,Dundas.Olap.WebUIControls.LightStyle,Dundas.Olap.WebUIControls.SurfaceName,System.Single,System.Single,System.Drawing.Color,System.Drawing.Color,System.Int32,Dundas.Olap.WebUIControls.ChartDashStyle,Dundas.Olap.WebUIControls.DataPoint3D,Dundas.Olap.WebUIControls.DataPoint3D,System.Collections.ArrayList,System.Int32,System.Single,Dundas.Olap.WebUIControls.DrawingOperationType,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Boolean)">
            <summary>
            Draws a 3D spline surface connecting the two specified points in 2D space.
            Used to draw Spline based charts.
            </summary>
            <param name="area">Chart area reference.</param>
            <param name="matrix">Coordinates transformation matrix.</param>
            <param name="lightStyle">Light style (None, Simplistic, Realistic).</param>
            <param name="surfaceName">Name of the surface to draw.</param>
            <param name="positionZ">Z position of the back side of the 3D surface.</param>
            <param name="depth">Depth of the 3D surface.</param>
            <param name="backColor">Color of rectangle</param>
            <param name="borderColor">Border Color</param>
            <param name="borderWidth">Border Width</param>
            <param name="borderStyle">Border Style</param>
            <param name="firstPoint">First point.</param>
            <param name="secondPoint">Second point.</param>
            <param name="points">Array of points.</param>
            <param name="pointIndex">Index of point to draw.</param>
            <param name="tension">Line tension.</param>
            <param name="operationType">Type of operation Drawing, Calculating Path or Both</param>
            <param name="forceThinBorder">Thin border will be drawn on all segments.</param>
            <param name="forceThickBorder">Thick border will be drawn on all segments.</param>
            <param name="reversedSeriesOrder">Series are drawn in reversed order.</param>
            <param name="multiSeries">Multiple series are drawn at the same time.</param>
            <param name="yValueIndex">Index of the Y value to use.</param>
            <param name="clipInsideArea">Surface should be clipped inside plotting area.</param>
            <returns>Returns elemnt shape path if operationType parameter is set to CalcElementPath, otherwise Null.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartGraphics3D.Draw3DSurface(Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.Matrix3D,Dundas.Olap.WebUIControls.LightStyle,Dundas.Olap.WebUIControls.SurfaceName,System.Single,System.Single,System.Drawing.Color,System.Drawing.Color,System.Int32,Dundas.Olap.WebUIControls.ChartDashStyle,Dundas.Olap.WebUIControls.DataPoint3D,Dundas.Olap.WebUIControls.DataPoint3D,System.Collections.ArrayList,System.Int32,System.Single,Dundas.Olap.WebUIControls.DrawingOperationType,Dundas.Olap.WebUIControls.LineSegmentType,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Boolean)">
            <summary>
            Draws a 3D surface connecting the two specified points in 2D space.
            Used to draw Line based charts.
            </summary>
            <param name="area">Chart area reference.</param>
            <param name="matrix">Coordinates transformation matrix.</param>
            <param name="lightStyle">Light style (None, Simplistic, Realistic).</param>
            <param name="surfaceName">Name of the surface to draw.</param>
            <param name="positionZ">Z position of the back side of the 3D surface.</param>
            <param name="depth">Depth of the 3D surface.</param>
            <param name="backColor">Color of rectangle</param>
            <param name="borderColor">Border Color</param>
            <param name="borderWidth">Border Width</param>
            <param name="borderStyle">Border Style</param>
            <param name="firstPoint">First point.</param>
            <param name="secondPoint">Second point.</param>
            <param name="points">Array of points.</param>
            <param name="pointIndex">Index of point to draw.</param>
            <param name="tension">Line tension.</param>
            <param name="operationType">Type of operation Drawing, Calculating Path or Both</param>
            <param name="lineSegmentType">Type of line segment. Used for step lines and splines.</param>
            <param name="forceThinBorder">Thin border will be drawn on all segments.</param>
            <param name="forceThickBorder">Thick border will be drawn on all segments.</param>
            <param name="reversedSeriesOrder">Series are drawn in reversed order.</param>
            <param name="multiSeries">Multiple series are drawn at the same time.</param>
            <param name="yValueIndex">Index of the Y value to use.</param>
            <param name="clipInsideArea">Surface should be clipped inside plotting area.</param>
            <returns>Returns elemnt shape path if operationType parameter is set to CalcElementPath, otherwise Null.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartGraphics3D.ShouldDrawLineChartSurface(Dundas.Olap.WebUIControls.ChartArea,System.Boolean,Dundas.Olap.WebUIControls.SurfaceName,Dundas.Olap.WebUIControls.SurfaceName,System.Drawing.Color,System.Collections.ArrayList,Dundas.Olap.WebUIControls.DataPoint3D,Dundas.Olap.WebUIControls.DataPoint3D,System.Boolean,System.Boolean,Dundas.Olap.WebUIControls.LineSegmentType@)">
            <summary>
            Helper method, which indicates if area chart surface should be drawn or not.
            </summary>
            <param name="area">Chart area object.</param>
            <param name="reversedSeriesOrder">Series are drawn in reversed order.</param>
            <param name="surfaceName">Surface name.</param>
            <param name="boundaryRectVisibleSurfaces">Visible surfaces of the bounding rectangle.</param>
            <param name="color">Point back color.</param>
            <param name="points">Array of all points.</param>
            <param name="firstPoint">First point.</param>
            <param name="secondPoint">Second point.</param>
            <param name="multiSeries">Inicates that multiple series are painted at the same time (stacked or side-by-side).</param>
            <param name="reversed">Inicates that points are in the reveresd order.</param>
            <param name="lineSegmentType">Returns line segment type.</param>
            <returns>Function retrns 0, 1 or 2. 0 - Do not draw surface, 1 - draw on the back, 2 - draw in front.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartGraphics3D.FindPointByIndex(System.Collections.ArrayList,System.Int32,Dundas.Olap.WebUIControls.DataPoint3D,System.Int32@)">
            <summary>
            Helper method which finds point in the list by it's real index.
            </summary>
            <param name="points">List of points.</param>
            <param name="index">Required index.</param>
            <param name="neighborDataPoint">Neighbor point of the same series.</param>
            <param name="neighborPointIndex">Neighbor point index in the array list.</param>
            <returns>Data point found.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartGraphics3D.Fill3DRectangle(System.Drawing.RectangleF,System.Single,System.Single,Dundas.Olap.WebUIControls.Matrix3D,Dundas.Olap.WebUIControls.LightStyle,System.Drawing.Color,Dundas.Olap.WebUIControls.ChartHatchStyle,System.String,Dundas.Olap.WebUIControls.ChartImageWrapMode,System.Drawing.Color,Dundas.Olap.WebUIControls.ChartImageAlign,Dundas.Olap.WebUIControls.GradientType,System.Drawing.Color,System.Drawing.Color,System.Int32,Dundas.Olap.WebUIControls.ChartDashStyle,System.Drawing.Drawing2D.PenAlignment,Dundas.Olap.WebUIControls.DrawingOperationType)">
            <summary>
            Function is used to calculate the coordinates of the 2D rectangle in 3D space
            and either draw it or/and calculate the bounding path for selection.
            </summary>
            <param name="position">Position of 2D rectangle.</param>
            <param name="positionZ">Z position of the back side of the 3D rectangle.</param>
            <param name="depth">Depth of the 3D rectangle.</param>
            <param name="matrix">Coordinate transformation matrix.</param>
            <param name="lightStyle">Light style (None, Simplistic, Realistic).</param>
            <param name="backColor">Color of rectangle</param>
            <param name="backHatchStyle">Hatch style</param>
            <param name="backImage">Back Image</param>
            <param name="backImageMode">Image mode</param>
            <param name="backImageTranspColor">Image transparent color.</param>
            <param name="backImageAlign">Image alignment</param>
            <param name="backGradientType">Gradient type</param>
            <param name="backGradientEndColor">Gradient End Color</param>
            <param name="borderColor">Border Color</param>
            <param name="borderWidth">Border Width</param>
            <param name="borderStyle">Border Style</param>
            <param name="penAlignment">Pen Alignment</param>
            <param name="operationType">Type of operation Drawing, Calculating Path or Both</param>
            <returns>Returns elemnt shape path if operationType parameter is set to CalcElementPath, otherwise Null.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartGraphics3D.Fill3DRectangle(System.Drawing.RectangleF,System.Single,System.Single,Dundas.Olap.WebUIControls.Matrix3D,Dundas.Olap.WebUIControls.LightStyle,System.Drawing.Color,System.Single,System.Single,Dundas.Olap.WebUIControls.ChartHatchStyle,System.String,Dundas.Olap.WebUIControls.ChartImageWrapMode,System.Drawing.Color,Dundas.Olap.WebUIControls.ChartImageAlign,Dundas.Olap.WebUIControls.GradientType,System.Drawing.Color,System.Drawing.Color,System.Int32,Dundas.Olap.WebUIControls.ChartDashStyle,System.Drawing.Drawing2D.PenAlignment,Dundas.Olap.WebUIControls.DrawingOperationType)">
            <summary>
            Function is used to calculate the coordinates of the 2D rectangle in 3D space
            and either draw it or/and calculate the bounding path for selection.
            </summary>
            <param name="position">Position of 2D rectangle.</param>
            <param name="positionZ">Z position of the back side of the 3D rectangle.</param>
            <param name="depth">Depth of the 3D rectangle.</param>
            <param name="matrix">Coordinate transformation matrix.</param>
            <param name="lightStyle">Light style (None, Simplistic, Realistic).</param>
            <param name="backColor">Color of rectangle</param>
            <param name="topRightDarkening">Top (or right in bar chart) darkening effect.</param>
            <param name="bottomLeftDarkening">Bottom (or left in bar chart) darkening effect.</param>
            <param name="backHatchStyle">Hatch style</param>
            <param name="backImage">Back Image</param>
            <param name="backImageMode">Image mode</param>
            <param name="backImageTranspColor">Image transparent color.</param>
            <param name="backImageAlign">Image alignment</param>
            <param name="backGradientType">Gradient type</param>
            <param name="backGradientEndColor">Gradient End Color</param>
            <param name="borderColor">Border Color</param>
            <param name="borderWidth">Border Width</param>
            <param name="borderStyle">Border Style</param>
            <param name="penAlignment">Pen Alignment</param>
            <param name="operationType">Type of operation Drawing, Calculating Path or Both</param>
            <returns>Returns elemnt shape path if operationType parameter is set to CalcElementPath, otherwise Null.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartGraphics3D.Fill3DRectangle(System.Drawing.RectangleF,System.Single,System.Single,Dundas.Olap.WebUIControls.Matrix3D,Dundas.Olap.WebUIControls.LightStyle,System.Drawing.Color,Dundas.Olap.WebUIControls.ChartHatchStyle,System.String,Dundas.Olap.WebUIControls.ChartImageWrapMode,System.Drawing.Color,Dundas.Olap.WebUIControls.ChartImageAlign,Dundas.Olap.WebUIControls.GradientType,System.Drawing.Color,System.Drawing.Color,System.Int32,Dundas.Olap.WebUIControls.ChartDashStyle,System.Drawing.Drawing2D.PenAlignment,Dundas.Olap.WebUIControls.BarDrawingStyle,System.Boolean,Dundas.Olap.WebUIControls.DrawingOperationType)">
            <summary>
            Function is used to calculate the coordinates of the 2D rectangle in 3D space
            and either draw it or/and calculate the bounding path for selection.
            </summary>
            <param name="position">Position of 2D rectangle.</param>
            <param name="positionZ">Z position of the back side of the 3D rectangle.</param>
            <param name="depth">Depth of the 3D rectangle.</param>
            <param name="matrix">Coordinate transformation matrix.</param>
            <param name="lightStyle">Light style (None, Simplistic, Realistic).</param>
            <param name="backColor">Color of rectangle</param>
            <param name="backHatchStyle">Hatch style</param>
            <param name="backImage">Back Image</param>
            <param name="backImageMode">Image mode</param>
            <param name="backImageTranspColor">Image transparent color.</param>
            <param name="backImageAlign">Image alignment</param>
            <param name="backGradientType">Gradient type</param>
            <param name="backGradientEndColor">Gradient End Color</param>
            <param name="borderColor">Border Color</param>
            <param name="borderWidth">Border Width</param>
            <param name="borderStyle">Border Style</param>
            <param name="penAlignment">Pen Alignment</param>
            <param name="barDrawingStyle">Bar drawing style.</param>
            <param name="veticalOrientation">Defines if bar is verticale or horizontal.</param>
            <param name="operationType">Type of operation Drawing, Calculating Path or Both</param>
            <returns>Returns elemnt shape path if operationType parameter is set to CalcElementPath, otherwise Null.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartGraphics3D.Fill3DRectangle(System.Drawing.RectangleF,System.Single,System.Single,Dundas.Olap.WebUIControls.Matrix3D,Dundas.Olap.WebUIControls.LightStyle,System.Drawing.Color,System.Single,System.Single,Dundas.Olap.WebUIControls.ChartHatchStyle,System.String,Dundas.Olap.WebUIControls.ChartImageWrapMode,System.Drawing.Color,Dundas.Olap.WebUIControls.ChartImageAlign,Dundas.Olap.WebUIControls.GradientType,System.Drawing.Color,System.Drawing.Color,System.Int32,Dundas.Olap.WebUIControls.ChartDashStyle,System.Drawing.Drawing2D.PenAlignment,Dundas.Olap.WebUIControls.BarDrawingStyle,System.Boolean,Dundas.Olap.WebUIControls.DrawingOperationType)">
            <summary>
            Function is used to calculate the coordinates of the 2D rectangle in 3D space
            and either draw it or/and calculate the bounding path for selection.
            </summary>
            <param name="position">Position of 2D rectangle.</param>
            <param name="positionZ">Z position of the back side of the 3D rectangle.</param>
            <param name="depth">Depth of the 3D rectangle.</param>
            <param name="matrix">Coordinate transformation matrix.</param>
            <param name="lightStyle">Light style (None, Simplistic, Realistic).</param>
            <param name="backColor">Color of rectangle</param>
            <param name="topRightDarkening">Top (or right in bar chart) darkening effect.</param>
            <param name="bottomLeftDarkening">Bottom (or left in bar chart) darkening effect.</param>
            <param name="backHatchStyle">Hatch style</param>
            <param name="backImage">Back Image</param>
            <param name="backImageMode">Image mode</param>
            <param name="backImageTranspColor">Image transparent color.</param>
            <param name="backImageAlign">Image alignment</param>
            <param name="backGradientType">Gradient type</param>
            <param name="backGradientEndColor">Gradient End Color</param>
            <param name="borderColor">Border Color</param>
            <param name="borderWidth">Border Width</param>
            <param name="borderStyle">Border Style</param>
            <param name="penAlignment">Pen Alignment</param>
            <param name="barDrawingStyle">Bar drawing style.</param>
            <param name="veticalOrientation">Defines if bar is verticale or horizontal.</param>
            <param name="operationType">Type of operation Drawing, Calculating Path or Both</param>
            <returns>Returns elemnt shape path if operationType parameter is set to CalcElementPath, otherwise Null.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartGraphics3D.DrawBarStyleGradients(Dundas.Olap.WebUIControls.Matrix3D,Dundas.Olap.WebUIControls.BarDrawingStyle,System.Drawing.RectangleF,System.Single,System.Single,System.Boolean)">
            <summary>
            Draws special bar style effect on the front surface of the bar.
            </summary>
            <param name="matrix">Drawing matrix.</param>
            <param name="barDrawingStyle">Bar drawing style.</param>
            <param name="position">Position in relative coordiantes.</param>
            <param name="positionZ">Z position.</param>
            <param name="depth">Depth.</param>
            <param name="isVertical">Defines if bar is verticale or horizontal.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartGraphics3D.DrawMarker3D(Dundas.Olap.WebUIControls.Matrix3D,Dundas.Olap.WebUIControls.LightStyle,System.Single,System.Drawing.PointF,Dundas.Olap.WebUIControls.MarkerStyle,System.Int32,System.Drawing.Color,System.Drawing.Color,System.Int32,System.String,System.Drawing.Color,System.Int32,System.Drawing.Color,System.Drawing.RectangleF,Dundas.Olap.WebUIControls.DrawingOperationType)">
            <summary>
            Draw marker using absolute coordinates of the center.
            </summary>
            <param name="matrix">Coordinates transformation matrix.</param>
            <param name="lightStyle">Light style (None, Simplistic, Realistic).</param>
            <param name="positionZ">Z position of the 3D marker center.</param>
            <param name="point">Coordinates of the center.</param>
            <param name="markerStyle">Marker style.</param>
            <param name="markerSize">Marker size.</param>
            <param name="markerColor">Marker color.</param>
            <param name="markerBorderColor">Marker border color.</param>
            <param name="markerBorderSize">Marker border size.</param>
            <param name="markerImage">Marker image name.</param>
            <param name="markerImageTranspColor">Marker image transparent color.</param>
            <param name="shadowSize">Marker shadow size.</param>
            <param name="shadowColor">Marker shadow color.</param>
            <param name="imageScaleRect">Rectangle to which marker image should be scaled.</param>
            <param name="operationType">Type of operation Drawing, Calculating Path or Both</param>
            <returns>Returns elemnt shape path if operationType parameter is set to ElementPath, otherwise Null.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartGraphics3D.GetVisibleSurfaces(System.Drawing.RectangleF,System.Single,System.Single,Dundas.Olap.WebUIControls.Matrix3D)">
            <summary>
            Returns visible surfaces of the 3D cube.
            </summary>
            <param name="position">2D rectangle coordinates.</param>
            <param name="positionZ">Z coordinate of the back side of the cube.</param>
            <param name="depth">Cube depth.</param>
            <param name="matrix">Coordinate transformation matrix.</param>
            <returns>Visible surfaces.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartGraphics3D.GetVisibleSurfacesWithPerspective(System.Drawing.RectangleF,System.Single,System.Single,Dundas.Olap.WebUIControls.Matrix3D)">
            <summary>
            Returns visible surfaces of the 3D cube.
            This method takes in consideration the perspective.
            </summary>
            <param name="position">2D rectangle coordinates.</param>
            <param name="positionZ">Z coordinate of the back side of the cube.</param>
            <param name="depth">Cube depth.</param>
            <param name="matrix">Coordinate transformation matrix.</param>
            <returns>Visible surfaces.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartGraphics3D.GetVisibleSurfacesWithPerspective(Dundas.Olap.WebUIControls.Point3D[],Dundas.Olap.WebUIControls.Matrix3D)">
            <summary>
            Returns visible surfaces of the 3D cube.
            This method takes in consideration the perspective.
            </summary>
            <param name="cubePoints">Array of 8 points which define the cube.</param>
            <param name="matrix">Coordinate transformation matrix.</param>
            <returns>Visible surfaces.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartGraphics3D.IsSurfaceVisible(Dundas.Olap.WebUIControls.Point3D,Dundas.Olap.WebUIControls.Point3D,Dundas.Olap.WebUIControls.Point3D)">
            <summary>
            Checks surface visibility using 3 points and clockwise ponts index rotation.
            </summary>
            <param name="first">First point.</param>
            <param name="second">Second point.</param>
            <param name="tree">Third point.</param>
            <returns>True if surface is visible</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartGraphics3D.GetLinesIntersection(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Gets intersection point od two linex.
            </summary>
            <param name="x1">First X value of first line.</param>
            <param name="y1">First Y value of first line.</param>
            <param name="x2">Second X value of first line.</param>
            <param name="y2">Second Y value of first line.</param>
            <param name="x3">First X value of second line.</param>
            <param name="y3">First Y value of second line.</param>
            <param name="x4">Second X value of second line.</param>
            <param name="y4">Second Y value of second line.</param>
            <returns>Intersection coordinates.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartGraphics3D.Fill3DRectangleAsCylinder(System.Drawing.RectangleF,System.Single,System.Single,Dundas.Olap.WebUIControls.Matrix3D,Dundas.Olap.WebUIControls.LightStyle,System.Drawing.Color,System.Single,System.Single,Dundas.Olap.WebUIControls.ChartHatchStyle,System.String,Dundas.Olap.WebUIControls.ChartImageWrapMode,System.Drawing.Color,Dundas.Olap.WebUIControls.ChartImageAlign,Dundas.Olap.WebUIControls.GradientType,System.Drawing.Color,System.Drawing.Color,System.Int32,Dundas.Olap.WebUIControls.ChartDashStyle,System.Drawing.Drawing2D.PenAlignment,System.Boolean,Dundas.Olap.WebUIControls.DrawingOperationType)">
            <summary>
            Function is used to calculate the coordinates of the 2D rectangle in 3D space
            and either draw it or/and calculate the bounding path for selection.
            </summary>
            <param name="position">Position of 2D rectangle.</param>
            <param name="positionZ">Z position of the back side of the 3D rectangle.</param>
            <param name="depth">Depth of the 3D rectangle.</param>
            <param name="matrix">Coordinate transformation matrix.</param>
            <param name="lightStyle">Light style (None, Simplistic, Realistic).</param>
            <param name="backColor">Color of rectangle</param>
            <param name="topRightDarkening">Top (or right in bar chart) darkening effect.</param>
            <param name="bottomLeftDarkening">Bottom (or left in bar chart) darkening effect.</param>
            <param name="backHatchStyle">Hatch style</param>
            <param name="backImage">Back Image</param>
            <param name="backImageMode">Image mode</param>
            <param name="backImageTranspColor">Image transparent color.</param>
            <param name="backImageAlign">Image alignment</param>
            <param name="backGradientType">Gradient type</param>
            <param name="backGradientEndColor">Gradient End Color</param>
            <param name="borderColor">Border Color</param>
            <param name="borderWidth">Border Width</param>
            <param name="borderStyle">Border Style</param>
            <param name="penAlignment">Pen Alignment</param>
            <param name="veticalOrientation">Defines if bar is verticale or horizontal.</param>
            <param name="operationType">Type of operation Drawing, Calculating Path or Both</param>
            <returns>Returns elemnt shape path if operationType parameter is set to CalcElementPath, otherwise Null.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartGraphics3D.AddEllipseSegment(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath,System.Boolean,System.Single,System.Drawing.PointF@,System.Drawing.PointF@)">
            <summary>
            Adds segment of the ellipse to form the front surface of the cylinder
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartGraphics.DrawLineRel(System.Drawing.Color,System.Int32,Dundas.Olap.WebUIControls.ChartDashStyle,System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Draws a line connecting the two specified points.
            </summary>
            <param name="color">Line color.</param>
            <param name="width">Line width.</param>
            <param name="style">Line style.</param>
            <param name="firstPointF">A Point that represents the first point to connect.</param>
            <param name="secondPointF">A Point that represents the second point to connect.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartGraphics.DrawLineAbs(System.Drawing.Color,System.Int32,Dundas.Olap.WebUIControls.ChartDashStyle,System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Draws a line connecting the two specified points using absolute coordinates.
            </summary>
            <param name="color">Line color.</param>
            <param name="width">Line width.</param>
            <param name="style">Line style.</param>
            <param name="firstPoint">A Point that represents the first point to connect.</param>
            <param name="secondPoint">A Point that represents the second point to connect.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartGraphics.DrawLineRel(System.Drawing.Color,System.Int32,Dundas.Olap.WebUIControls.ChartDashStyle,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.Color,System.Int32)">
            <summary>
            Draws a line with shadow connecting the two specified points.
            </summary>
            <param name="color">Line color.</param>
            <param name="width">Line width.</param>
            <param name="style">Line style.</param>
            <param name="firstPoint">A Point that represents the first point to connect.</param>
            <param name="secondPoint">A Point that represents the second point to connect.</param>		
            <param name="shadowColor">Shadow Color.</param>
            <param name="shadowOffset">Shadow Offset.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartGraphics.DrawLineAbs(System.Drawing.Color,System.Int32,Dundas.Olap.WebUIControls.ChartDashStyle,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.Color,System.Int32)">
            <summary>
            Draws a line with shadow connecting the two specified points.
            </summary>
            <param name="color">Line color.</param>
            <param name="width">Line width.</param>
            <param name="style">Line style.</param>
            <param name="firstPoint">A Point that represents the first point to connect.</param>
            <param name="secondPoint">A Point that represents the second point to connect.</param>		
            <param name="shadowColor">Shadow Color.</param>
            <param name="shadowOffset">Shadow Offset.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartGraphics.GetHatchBrush(Dundas.Olap.WebUIControls.ChartHatchStyle,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Creates a Hatch Brush.
            </summary>
            <param name="hatchStyle">Chart Hatch style.</param>
            <param name="backColor">Back Color.</param>
            <param name="foreColor">Fore Color.</param>
            <returns>Brush</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartGraphics.GetTextureBrush(System.String,System.Drawing.Color,Dundas.Olap.WebUIControls.ChartImageWrapMode,System.Drawing.Color)">
            <summary>
            Creates a textured brush.
            </summary>
            <param name="name">Image file name or URL.</param>
            <param name="backImageTranspColor">Image transparent color.</param>
            <param name="mode">Wrap mode.</param>
            <param name="backColor">Image background color.</param>
            <returns>Textured brush.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartGraphics.GetGradientBrush(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color,Dundas.Olap.WebUIControls.GradientType)">
            <summary>
            This method creates a gradient brush.
            </summary>
            <param name="rectangle">A rectangle which has to be filled with a gradient color.</param>
            <param name="firstColor">First color.</param>
            <param name="secondColor">Second color.</param>
            <param name="type">Gradient type.</param>
            <returns>Gradient Brush</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartGraphics.GetPieGradientBrush(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            This method creates a gradient brush for pie. This gradient is one 
            of the types used only with pie and doughnut.
            </summary>
            <param name="rectangle">A rectangle which has to be filled with a gradient color</param>
            <param name="firstColor">First color</param>
            <param name="secondColor">Second color</param>
            <returns>Gradient Brush</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartGraphics.GetPenStyle(Dundas.Olap.WebUIControls.ChartDashStyle)">
            <summary>
            Converts GDI+ line style to Chart Graph line style.
            </summary>
            <param name="style">Chart Line style.</param>
            <returns>GDI+ line style.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartGraphics.CreateStarPolygon(System.Drawing.RectangleF,System.Int32)">
            <summary>
            Creates polygon for multi-corner star marker.
            </summary>
            <param name="rect">Marker rectangle.</param>
            <param name="numberOfCorners">Number of corners (4 and up).</param>
            <returns>Array of points.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartGraphics.DrawMarkerRel(System.Drawing.PointF,Dundas.Olap.WebUIControls.MarkerStyle,System.Int32,System.Drawing.Color,System.Drawing.Color,System.Int32,System.String,System.Drawing.Color,System.Int32,System.Drawing.Color,System.Drawing.RectangleF)">
            <summary>
            Draw marker using relative coordinates of the center.
            </summary>
            <param name="point">Coordinates of the center.</param>
            <param name="markerStyle">Marker style.</param>
            <param name="markerSize">Marker size.</param>
            <param name="markerColor">Marker color.</param>
            <param name="markerBorderColor">Marker border color.</param>
            <param name="markerBorderSize">Marker border size.</param>
            <param name="markerImage">Marker image name.</param>
            <param name="markerImageTranspColor">Marker image transparent color.</param>
            <param name="shadowSize">Marker shadow size.</param>
            <param name="shadowColor">Marker shadow color.</param>
            <param name="imageScaleRect">Rectangle to which marker image should be scaled.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartGraphics.DrawMarkerAbs(System.Drawing.PointF,Dundas.Olap.WebUIControls.MarkerStyle,System.Int32,System.Drawing.Color,System.Drawing.Color,System.Int32,System.String,System.Drawing.Color,System.Int32,System.Drawing.Color,System.Drawing.RectangleF,System.Boolean)">
            <summary>
            Draw marker using absolute coordinates of the center.
            </summary>
            <param name="point">Coordinates of the center.</param>
            <param name="markerStyle">Marker style.</param>
            <param name="markerSize">Marker size.</param>
            <param name="markerColor">Marker color.</param>
            <param name="markerBorderColor">Marker border color.</param>
            <param name="markerBorderSize">Marker border size.</param>
            <param name="markerImage">Marker image name.</param>
            <param name="markerImageTranspColor">Marker image transparent color.</param>
            <param name="shadowSize">Marker shadow size.</param>
            <param name="shadowColor">Marker shadow color.</param>
            <param name="imageScaleRect">Rectangle to which marker image should be scaled.</param>
            <param name="forceAntiAlias">Always use anti aliasing when drawing the marker.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartGraphics.DrawPointLabelStringRel(Dundas.Olap.WebUIControls.CommonElements,System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.RectangleF,System.Drawing.StringFormat,System.Int32,System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color,System.Int32,Dundas.Olap.WebUIControls.ChartDashStyle,Dundas.Olap.WebUIControls.Series,Dundas.Olap.WebUIControls.DataPoint,System.Int32)">
            <summary>
            Draw a string and fills it's background
            </summary>
            <param name="common">The Common elements object.</param>
            <param name="text">Text.</param>
            <param name="font">Text Font.</param>
            <param name="brush">Text Brush.</param>
            <param name="position">Text Position.</param>
            <param name="format">Format and text alignment.</param>
            <param name="angle">Text angle.</param>
            <param name="backPosition">Text background position.</param>
            <param name="backColor">Back Color</param>
            <param name="borderColor">Border Color</param>
            <param name="borderWidth">Border Width</param>
            <param name="borderStyle">Border Style</param>
            <param name="series">Series</param>
            <param name="point">Point</param>
            <param name="pointIndex">Point index in series</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartGraphics.DrawPointLabelStringRel(Dundas.Olap.WebUIControls.CommonElements,System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.PointF,System.Drawing.StringFormat,System.Int32,System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color,System.Int32,Dundas.Olap.WebUIControls.ChartDashStyle,Dundas.Olap.WebUIControls.Series,Dundas.Olap.WebUIControls.DataPoint,System.Int32)">
            <summary>
            Draw a string and fills it's background
            </summary>
            <param name="common">The Common elements object.</param>
            <param name="text">Text.</param>
            <param name="font">Text Font.</param>
            <param name="brush">Text Brush.</param>
            <param name="position">Text Position.</param>
            <param name="format">Format and text alignment.</param>
            <param name="angle">Text angle.</param>
            <param name="backPosition">Text background position.</param>
            <param name="backColor">Back Color</param>
            <param name="borderColor">Border Color</param>
            <param name="borderWidth">Border Width</param>
            <param name="borderStyle">Border Style</param>
            <param name="series">Series</param>
            <param name="point">Point</param>
            <param name="pointIndex">Point index in series</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartGraphics.DrawPointLabelBackground(Dundas.Olap.WebUIControls.CommonElements,System.Int32,System.Drawing.PointF,System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color,System.Int32,Dundas.Olap.WebUIControls.ChartDashStyle,Dundas.Olap.WebUIControls.Series,Dundas.Olap.WebUIControls.DataPoint,System.Int32)">
            <summary>
            Draw a string and fills it's background
            </summary>
            <param name="common">The Common elements object.</param>
            <param name="angle">Text angle.</param>
            <param name="textPosition">Text position.</param>
            <param name="backPosition">Text background position.</param>
            <param name="backColor">Back Color</param>
            <param name="borderColor">Border Color</param>
            <param name="borderWidth">Border Width</param>
            <param name="borderStyle">Border Style</param>
            <param name="series">Series</param>
            <param name="point">Point</param>
            <param name="pointIndex">Point index in series</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartGraphics.DrawStringRel(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.PointF,System.Drawing.StringFormat,System.Int32)">
            <summary>
            Draw a string.
            </summary>
            <param name="text">Text.</param>
            <param name="font">Text Font.</param>
            <param name="brush">Text Brush.</param>
            <param name="position">Text Position.</param>
            <param name="format">Format and text alignment.</param>
            <param name="angle">Text angle.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartGraphics.DrawStringAbs(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.PointF,System.Drawing.StringFormat,System.Int32)">
            <summary>
            Draw a string.
            </summary>
            <param name="text">Text.</param>
            <param name="font">Text Font.</param>
            <param name="brush">Text Brush.</param>
            <param name="absPosition">Text Position.</param>
            <param name="format">Format and text alignment.</param>
            <param name="angle">Text angle.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartGraphics.DrawLabelStringRel(Dundas.Olap.WebUIControls.Axis,System.Int32,Dundas.Olap.WebUIControls.LabelMark,System.Drawing.Color,System.String,System.String,System.Drawing.Color,System.Drawing.Font,System.Drawing.Brush,System.Drawing.RectangleF,System.Drawing.StringFormat,System.Int32,System.Drawing.RectangleF,Dundas.Olap.WebUIControls.CustomLabel,System.Boolean,System.Boolean)">
            <summary>
            Draw label string.
            </summary>
            <param name="axis">Label axis.</param>
            <param name="labelRowIndex">Label text row index (0-10).</param>
            <param name="labelMark">Second row labels mark.</param>
            <param name="markColor">Label mark line color.</param>
            <param name="text">Label text.</param>
            <param name="image">Label image name.</param>
            <param name="imageTranspColor">Label image transparent color.</param>
            <param name="font">Text bont.</param>
            <param name="brush">Text brush.</param>
            <param name="position">Text position rectangle.</param>
            <param name="format">Label text format.</param>
            <param name="angle">Label text angle.</param>
            <param name="boundaryRect">Specifies the rectangle where the label text MUST be fitted.</param>
            <param name="label">Custom Label Item</param>
            <param name="truncatedLeft">Label is truncated on the left.</param>
            <param name="truncatedRight">Label is truncated on the right.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartGraphics.DrawSecondRowLabelBoxMark(Dundas.Olap.WebUIControls.Axis,System.Drawing.Color,System.Drawing.RectangleF,System.Drawing.SizeF,System.Boolean,System.Boolean,System.Drawing.Drawing2D.Matrix)">
            <summary>
            Draw box marks for the labels in second row
            </summary>
            <param name="axis">Axis object.</param>
            <param name="markColor">Label mark color.</param>
            <param name="absPosition">Absolute position of the text.</param>
            <param name="labelSize">Exact mesured size of the text.</param>
            <param name="truncatedLeft">Label is truncated on the left.</param>
            <param name="truncatedRight">Label is truncated on the right.</param>
            <param name="originalTransform">Original transformation matrix.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartGraphics.DrawSecondRowLabelMark(Dundas.Olap.WebUIControls.Axis,System.Drawing.Color,System.Drawing.RectangleF,System.Drawing.SizeF,Dundas.Olap.WebUIControls.LabelMark,System.Boolean,System.Boolean,System.Drawing.Drawing2D.Matrix)">
            <summary>
            Draw marks for the labels in second row
            </summary>
            <param name="axis">Axis object.</param>
            <param name="markColor">Label mark color.</param>
            <param name="absPosition">Absolute position of the text.</param>
            <param name="labelSize">Exact mesured size of the text.</param>
            <param name="labelMark">Label mark type to draw.</param>
            <param name="truncatedLeft">Label is truncated on the left.</param>
            <param name="truncatedRight">Label is truncated on the right.</param>
            <param name="oldTransform">Original transformation matrix.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartGraphics.MeasureStringRel(System.String,System.Drawing.Font)">
            <summary>
            Measures the specified text string when drawn with 
            the specified Font object and formatted with the 
            specified StringFormat object.
            </summary>
            <param name="text">The string to measure</param>
            <param name="font">The Font object used to determine the size of the text string. </param>
            <returns>A SizeF structure that represents the size of text as drawn with font.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartGraphics.MeasureStringRel(System.String,System.Drawing.Font,System.Drawing.SizeF,System.Drawing.StringFormat)">
            <summary>
            Measures the specified text string when drawn with 
            the specified Font object and formatted with the 
            specified StringFormat object.
            </summary>
            <param name="text">The string to measure</param>
            <param name="font">The Font object used to determine the size of the text string. </param>
            <param name="layoutArea">A SizeF structure that specifies the layout rectangle for the text. </param>
            <param name="stringFormat">A StringFormat object that represents formatting information, such as line spacing, for the text string. </param>
            <returns>A SizeF structure that represents the size of text as drawn with font.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartGraphics.MeasureStringAbs(System.String,System.Drawing.Font)">
            <summary>
            Measures the specified text string when drawn with 
            the specified Font object and formatted with the 
            specified StringFormat object.
            </summary>
            <param name="text">The string to measure</param>
            <param name="font">The Font object used to determine the size of the text string. </param>
            <returns>A SizeF structure that represents the size of text as drawn with font.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartGraphics.MeasureStringAbs(System.String,System.Drawing.Font,System.Drawing.SizeF,System.Drawing.StringFormat)">
            <summary>
            Measures the specified text string when drawn with 
            the specified Font object and formatted with the 
            specified StringFormat object.
            </summary>
            <param name="text">The string to measure</param>
            <param name="font">The Font object used to determine the size of the text string. </param>
            <param name="layoutArea">A SizeF structure that specifies the layout rectangle for the text. </param>
            <param name="stringFormat">A StringFormat object that represents formatting information, such as line spacing, for the text string. </param>
            <returns>A SizeF structure that represents the size of text as drawn with font.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartGraphics.DrawStringRel(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.RectangleF,System.Drawing.StringFormat)">
            <summary>
            Draws the specified text string at the specified location 
            with the specified Brush object and font. The formatting 
            attributes in the specified StringFormat object are applied 
            to the text.
            </summary>
            <param name="text">A string object that specifies the text to draw.</param>
            <param name="font">A Font object that specifies the font face and size with which to draw the text.</param>
            <param name="brush">A Brush object that determines the color and/or texture of the drawn text.</param>
            <param name="layoutRectangle">A RectangleF structure that specifies the location of the drawn text.</param>
            <param name="format">A StringFormat object that specifies formatting attributes, such as line spacing and alignment, that are applied to the drawn text.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartGraphics.DrawStringRel(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.RectangleF,System.Drawing.StringFormat,System.Int32)">
            <summary>
            Draws the specified text string at the specified location 
            with the specified angle and with the specified Brush object and font. The 
            formatting attributes in the specified StringFormat object are applied 
            to the text.
            </summary>
            <param name="text">A string object that specifies the text to draw.</param>
            <param name="font">A Font object that specifies the font face and size with which to draw the text.</param>
            <param name="brush">A Brush object that determines the color and/or texture of the drawn text.</param>
            <param name="layoutRectangle">A RectangleF structure that specifies the location of the drawn text.</param>
            <param name="format">A StringFormat object that specifies formatting attributes, such as line spacing and alignment, that are applied to the drawn text.</param>
            <param name="angle">A angle of the text</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartGraphics.DrawRectangleBarStyle(Dundas.Olap.WebUIControls.BarDrawingStyle,System.Boolean,System.Drawing.RectangleF,System.Int32)">
            <summary>
            Draws different shadows to create bar styles.
            </summary>
            <param name="barDrawingStyle">Bar drawing style.</param>
            <param name="isVertical">True if a vertical bar.</param>
            <param name="rect">Rectangle position.</param>
            <param name="borderWidth">Rectangle border width.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartGraphics.FillRectangleRel(System.Drawing.RectangleF,System.Drawing.Color,Dundas.Olap.WebUIControls.ChartHatchStyle,System.String,Dundas.Olap.WebUIControls.ChartImageWrapMode,System.Drawing.Color,Dundas.Olap.WebUIControls.ChartImageAlign,Dundas.Olap.WebUIControls.GradientType,System.Drawing.Color,System.Drawing.Color,System.Int32,Dundas.Olap.WebUIControls.ChartDashStyle,System.Drawing.Color,System.Int32,System.Drawing.Drawing2D.PenAlignment,Dundas.Olap.WebUIControls.BarDrawingStyle,System.Boolean)">
            <summary>
            Draw a bar with shadow.
            </summary>
            <param name="rectF">Size of rectangle</param>
            <param name="backColor">Color of rectangle</param>
            <param name="backHatchStyle">Hatch style</param>
            <param name="backImage">Back Image</param>
            <param name="backImageMode">Image mode</param>
            <param name="backImageTranspColor">Image transparent color.</param>
            <param name="backImageAlign">Image alignment</param>
            <param name="backGradientType">Gradient type</param>
            <param name="backGradientEndColor">Gradient End Color</param>
            <param name="borderColor">Border Color</param>
            <param name="borderWidth">Border Width</param>
            <param name="borderStyle">Border Style</param>
            <param name="shadowColor">Shadow Color</param>
            <param name="shadowOffset">Shadow Offset</param>
            <param name="penAlignment">Pen Alignment</param>
            <param name="barDrawingStyle">Bar drawing style.</param>
            <param name="isVertical">True if a vertical bar.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartGraphics.FillRectangleRel(System.Drawing.RectangleF,System.Drawing.Color,Dundas.Olap.WebUIControls.ChartHatchStyle,System.String,Dundas.Olap.WebUIControls.ChartImageWrapMode,System.Drawing.Color,Dundas.Olap.WebUIControls.ChartImageAlign,Dundas.Olap.WebUIControls.GradientType,System.Drawing.Color,System.Drawing.Color,System.Int32,Dundas.Olap.WebUIControls.ChartDashStyle,System.Drawing.Color,System.Int32,System.Drawing.Drawing2D.PenAlignment)">
            <summary>
            Draw a bar with shadow.
            </summary>
            <param name="rectF">Size of rectangle</param>
            <param name="backColor">Color of rectangle</param>
            <param name="backHatchStyle">Hatch style</param>
            <param name="backImage">Back Image</param>
            <param name="backImageMode">Image mode</param>
            <param name="backImageTranspColor">Image transparent color.</param>
            <param name="backImageAlign">Image alignment</param>
            <param name="backGradientType">Gradient type</param>
            <param name="backGradientEndColor">Gradient End Color</param>
            <param name="borderColor">Border Color</param>
            <param name="borderWidth">Border Width</param>
            <param name="borderStyle">Border Style</param>
            <param name="shadowColor">Shadow Color</param>
            <param name="shadowOffset">Shadow Offset</param>
            <param name="penAlignment">Pen Alignment</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartGraphics.FillRectangleRel(System.Drawing.RectangleF,System.Drawing.Color,Dundas.Olap.WebUIControls.ChartHatchStyle,System.String,Dundas.Olap.WebUIControls.ChartImageWrapMode,System.Drawing.Color,Dundas.Olap.WebUIControls.ChartImageAlign,Dundas.Olap.WebUIControls.GradientType,System.Drawing.Color,System.Drawing.Color,System.Int32,Dundas.Olap.WebUIControls.ChartDashStyle,System.Drawing.Color,System.Int32,System.Drawing.Drawing2D.PenAlignment,System.Boolean,System.Int32,System.Boolean)">
            <summary>
            Draws rectangle or circle (inside rectangle) with shadow.
            </summary>
            <param name="rectF">Size of rectangle</param>
            <param name="backColor">Color of rectangle</param>
            <param name="backHatchStyle">Hatch style</param>
            <param name="backImage">Back Image</param>
            <param name="backImageMode">Image mode</param>
            <param name="backImageTranspColor">Image transparent color.</param>
            <param name="backImageAlign">Image alignment</param>
            <param name="backGradientType">Gradient type</param>
            <param name="backGradientEndColor">Gradient End Color</param>
            <param name="borderColor">Border Color</param>
            <param name="borderWidth">Border Width</param>
            <param name="borderStyle">Border Style</param>
            <param name="shadowColor">Shadow Color</param>
            <param name="shadowOffset">Shadow Offset</param>
            <param name="penAlignment">Pen Alignment</param>
            <param name="circular">Draw circular shape inside the rectangle.</param>
            <param name="circularSectorsCount">Number of sectors in curcle when drawing the polygon.</param>
            <param name="circle3D">3D Circle must be drawn.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartGraphics.FillRectangleRel(System.Drawing.RectangleF,System.Drawing.Color,Dundas.Olap.WebUIControls.ChartHatchStyle,System.String,Dundas.Olap.WebUIControls.ChartImageWrapMode,System.Drawing.Color,Dundas.Olap.WebUIControls.ChartImageAlign,Dundas.Olap.WebUIControls.GradientType,System.Drawing.Color,System.Drawing.Color,System.Int32,Dundas.Olap.WebUIControls.ChartDashStyle,System.Drawing.Color,System.Int32,System.Drawing.Drawing2D.PenAlignment,System.Boolean,System.Int32,System.Boolean,Dundas.Olap.WebUIControls.BarDrawingStyle,System.Boolean)">
            <summary>
            Draws rectangle or circle (inside rectangle) with shadow.
            </summary>
            <param name="rectF">Size of rectangle</param>
            <param name="backColor">Color of rectangle</param>
            <param name="backHatchStyle">Hatch style</param>
            <param name="backImage">Back Image</param>
            <param name="backImageMode">Image mode</param>
            <param name="backImageTranspColor">Image transparent color.</param>
            <param name="backImageAlign">Image alignment</param>
            <param name="backGradientType">Gradient type</param>
            <param name="backGradientEndColor">Gradient End Color</param>
            <param name="borderColor">Border Color</param>
            <param name="borderWidth">Border Width</param>
            <param name="borderStyle">Border Style</param>
            <param name="shadowColor">Shadow Color</param>
            <param name="shadowOffset">Shadow Offset</param>
            <param name="penAlignment">Pen Alignment</param>
            <param name="circular">Draw circular shape inside the rectangle.</param>
            <param name="circularSectorsCount">Number of sectors in curcle when drawing the polygon.</param>
            <param name="circle3D">3D Circle must be drawn.</param>
            <param name="barDrawingStyle">Bar drawing style.</param>
            <param name="isVertical">True if a vertical bar.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartGraphics.FillRectangleRel(System.Drawing.RectangleF,System.Drawing.Color,Dundas.Olap.WebUIControls.ChartHatchStyle,System.String,Dundas.Olap.WebUIControls.ChartImageWrapMode,System.Drawing.Color,Dundas.Olap.WebUIControls.ChartImageAlign,Dundas.Olap.WebUIControls.GradientType,System.Drawing.Color,System.Drawing.Color,System.Int32,Dundas.Olap.WebUIControls.ChartDashStyle,System.Drawing.Color,System.Int32,System.Drawing.Drawing2D.PenAlignment,System.Boolean,System.Int32,System.Boolean,Dundas.Olap.WebUIControls.BarDrawingStyle,System.Boolean,Dundas.Olap.WebUIControls.RectangleIntegrity)">
            <summary>
            Draws rectangle or circle (inside rectangle) with shadow.
            </summary>
            <param name="rectF">Size of rectangle</param>
            <param name="backColor">Color of rectangle</param>
            <param name="backHatchStyle">Hatch style</param>
            <param name="backImage">Back Image</param>
            <param name="backImageMode">Image mode</param>
            <param name="backImageTranspColor">Image transparent color.</param>
            <param name="backImageAlign">Image alignment</param>
            <param name="backGradientType">Gradient type</param>
            <param name="backGradientEndColor">Gradient End Color</param>
            <param name="borderColor">Border Color</param>
            <param name="borderWidth">Border Width</param>
            <param name="borderStyle">Border Style</param>
            <param name="shadowColor">Shadow Color</param>
            <param name="shadowOffset">Shadow Offset</param>
            <param name="penAlignment">Pen Alignment</param>
            <param name="circular">Draw circular shape inside the rectangle.</param>
            <param name="circularSectorsCount">Number of sectors in curcle when drawing the polygon.</param>
            <param name="circle3D">3D Circle must be drawn.</param>
            <param name="barDrawingStyle">Bar drawing style.</param>
            <param name="isVertical">True if a vertical bar.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartGraphics.FillRectangleShadowAbs(System.Drawing.RectangleF,System.Drawing.Color,System.Single,System.Drawing.Color)">
            <summary>
            Draw Shadow for a bar
            </summary>
            <param name="rect">Bar rectangle</param>
            <param name="shadowColor">Shadow Color</param>
            <param name="shadowOffset">Shadow Offset</param>
            <param name="backColor">Back Color</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartGraphics.FillRectangleShadowAbs(System.Drawing.RectangleF,System.Drawing.Color,System.Single,System.Drawing.Color,System.Boolean,System.Int32)">
            <summary>
            Draw Shadow for a bar
            </summary>
            <param name="rect">Bar rectangle</param>
            <param name="shadowColor">Shadow Color</param>
            <param name="shadowOffset">Shadow Offset</param>
            <param name="backColor">Back Color</param>
            <param name="circular">Draw circular shape inside the rectangle.</param>
            <param name="circularSectorsCount">Number of sectors in curcle when drawing the polygon.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartGraphics.GetPolygonCirclePath(System.Drawing.RectangleF,System.Int32)">
            <summary>
            Gets the path of the polygon which represent the circular area.
            </summary>
            <param name="position">Circle position.</param>
            <param name="polygonSectorsNumber">Number of sectors for the polygon.</param>
            <returns>Graphics path of the polygon circle.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartGraphics.DrawCircleAbs(System.Drawing.Pen,System.Drawing.Brush,System.Drawing.RectangleF,System.Int32,System.Boolean)">
            <summary>
            Fills and/or draws border as circle or polygon.
            </summary>
            <param name="pen">Border pen.</param>
            <param name="brush">Border brush.</param>
            <param name="position">Circle position.</param>
            <param name="polygonSectorsNumber">Number of sectors for the polygon.</param>
            <param name="circle3D">Indicates that circle should be 3D..</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartGraphics.GetSector3DBrush(System.Drawing.Brush,System.Single,System.Single)">
            <summary>
            Creates 3D sector brush.
            </summary>
            <param name="brush">Original brush.</param>
            <param name="curentSector">Secor position.</param>
            <param name="sectorSize">Secor size.</param>
            <returns>3D brush.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartGraphics.GetBrightGradientColor(System.Drawing.Color,System.Double)">
            <summary>
            This method creates gradien color with brightnes.
            </summary>
            <param name="beginColor">Start color for gradient.</param>
            <param name="position">Position used between Start and end color.</param>
            <returns>Calculated Gradient color from gradient position</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartGraphics.FillRectangleAbs(System.Drawing.RectangleF,System.Drawing.Color,Dundas.Olap.WebUIControls.ChartHatchStyle,System.String,Dundas.Olap.WebUIControls.ChartImageWrapMode,System.Drawing.Color,Dundas.Olap.WebUIControls.ChartImageAlign,Dundas.Olap.WebUIControls.GradientType,System.Drawing.Color,System.Drawing.Color,System.Int32,Dundas.Olap.WebUIControls.ChartDashStyle,System.Drawing.Drawing2D.PenAlignment)">
            <summary>
            Draw Rectangle using absolute coordinates.
            </summary>
            <param name="rect">Size of rectangle</param>
            <param name="backColor">Color of rectangle</param>
            <param name="backHatchStyle">Hatch Style</param>
            <param name="backImage">Image URL</param>
            <param name="backImageMode">Image Mode</param>
            <param name="backImageTranspColor">Image transparent color.</param>
            <param name="backImageAlign">Image alignment.</param>
            <param name="backGradientType">Gradient Type</param>
            <param name="backGradientEndColor">End Gradient color</param>
            <param name="borderColor">Border Color</param>
            <param name="borderWidth">Border Width</param>
            <param name="borderStyle">Border Style</param>
            <param name="penAlignment">Border is outside or inside rectangle</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartGraphics.DrawPathAbs(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Color,Dundas.Olap.WebUIControls.ChartHatchStyle,System.String,Dundas.Olap.WebUIControls.ChartImageWrapMode,System.Drawing.Color,Dundas.Olap.WebUIControls.ChartImageAlign,Dundas.Olap.WebUIControls.GradientType,System.Drawing.Color,System.Drawing.Color,System.Int32,Dundas.Olap.WebUIControls.ChartDashStyle,System.Drawing.Drawing2D.PenAlignment,System.Int32,System.Drawing.Color)">
            <summary>
            Fills graphics path with shadow using absolute coordinates.
            </summary>
            <param name="path">Graphics path to fill.</param>
            <param name="backColor">Color of rectangle</param>
            <param name="backHatchStyle">Hatch Style</param>
            <param name="backImage">Image URL</param>
            <param name="backImageMode">Image Mode</param>
            <param name="backImageTranspColor">Image transparent color.</param>
            <param name="backImageAlign">Image alignment.</param>
            <param name="backGradientType">Gradient Type</param>
            <param name="backGradientEndColor">End Gradient color</param>
            <param name="borderColor">Border Color</param>
            <param name="borderWidth">Border Width</param>
            <param name="borderStyle">Border Style</param>
            <param name="penAlignment">Border is outside or inside rectangle</param>
            <param name="shadowOffset">Shadow offset.</param>
            <param name="shadowColor">Shadow color.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartGraphics.DrawPathAbs(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Color,Dundas.Olap.WebUIControls.ChartHatchStyle,System.String,Dundas.Olap.WebUIControls.ChartImageWrapMode,System.Drawing.Color,Dundas.Olap.WebUIControls.ChartImageAlign,Dundas.Olap.WebUIControls.GradientType,System.Drawing.Color,System.Drawing.Color,System.Int32,Dundas.Olap.WebUIControls.ChartDashStyle,System.Drawing.Drawing2D.PenAlignment)">
            <summary>
            Fills graphics path using absolute coordinates.
            </summary>
            <param name="path">Graphics path to fill.</param>
            <param name="backColor">Color of rectangle</param>
            <param name="backHatchStyle">Hatch Style</param>
            <param name="backImage">Image URL</param>
            <param name="backImageMode">Image Mode</param>
            <param name="backImageTranspColor">Image transparent color.</param>
            <param name="backImageAlign">Image alignment.</param>
            <param name="backGradientType">Gradient Type</param>
            <param name="backGradientEndColor">End Gradient color</param>
            <param name="borderColor">Border Color</param>
            <param name="borderWidth">Border Width</param>
            <param name="borderStyle">Border Style</param>
            <param name="penAlignment">Border is outside or inside rectangle</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartGraphics.CreateBrush(System.Drawing.RectangleF,System.Drawing.Color,Dundas.Olap.WebUIControls.ChartHatchStyle,System.String,Dundas.Olap.WebUIControls.ChartImageWrapMode,System.Drawing.Color,Dundas.Olap.WebUIControls.ChartImageAlign,Dundas.Olap.WebUIControls.GradientType,System.Drawing.Color)">
            <summary>
            Creates brush with specified attributes.
            </summary>
            <param name="rect">Gradient rectangle</param>
            <param name="backColor">Color of rectangle</param>
            <param name="backHatchStyle">Hatch style</param>
            <param name="backImage">Back Image</param>
            <param name="backImageMode">Image mode</param>
            <param name="backImageTranspColor">Image transparent color.</param>
            <param name="backImageAlign">Image alignment</param>
            <param name="backGradientType">Gradient type</param>
            <param name="backGradientEndColor">Gradient End Color</param>
            <returns>New brush object.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartGraphics.GetRelativeRectangle(System.Drawing.RectangleF)">
            <summary>
            Converts Absolute Coordinates of Rectangle to 
            Relative coordinates
            </summary>
            <param name="absolute">Absolute coordinates</param>
            <returns>Relative coordinates in %</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartGraphics.GetRelativePoint(System.Drawing.PointF)">
            <summary>
            Converts Absolute Coordinates of Point to 
            Relative coordinates
            </summary>
            <param name="absolute">Absolute coordinates</param>
            <returns>Relative coordinates in %</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartGraphics.GetRelativeSize(System.Drawing.SizeF)">
            <summary>
            Converts Absolute size to Relative size
            </summary>
            <param name="size">Absolute size</param>
            <returns>Relative size</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartGraphics.GetAbsolutePoint(System.Drawing.PointF)">
            <summary>
            Converts Relative Coordinates of Point to 
            Absolute coordinates
            </summary>
            <param name="relative">Relative position in %</param>
            <returns>Absolute position</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartGraphics.GetAbsoluteRectangle(System.Drawing.RectangleF)">
            <summary>
            Converts Relative Coordinates of Rectangle to 
            Absolute coordinates
            </summary>
            <param name="relative">Relative position in %</param>
            <returns>Absolute position</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartGraphics.GetAbsoluteSize(System.Drawing.SizeF)">
            <summary>
            Converts Relative size to Absolute size
            </summary>
            <param name="relative">Relative size in %</param>
            <returns>Absolute size</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartGraphics.CreateRoundedRectPath(System.Drawing.RectangleF,System.Single[])">
            <summary>
            Helper function which creates a rounded rectangle path.
            </summary>
            <param name="rect">Rectangle coordinates.</param>
            <param name="cornerRadius">Array of 4 corners radius.</param>
            <returns>Graphics path object.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartGraphics.DrawRoundedRectShadowAbs(System.Drawing.RectangleF,System.Single[],System.Single,System.Drawing.Color,System.Drawing.Color,System.Single)">
            <summary>
            Helper function which draws a shadow of the rounded rect.
            </summary>
            <param name="rect">Rectangle coordinates.</param>
            <param name="cornerRadius">Array of 4 corners radius.</param>
            <param name="radius">Rounding radius.</param>
            <param name="centerColor">Center color.</param>
            <param name="surroundColor">Surrounding color.</param>
            <param name="shadowScale">Shadow scale value.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartGraphics.Draw3DBorderRel(Dundas.Olap.WebUIControls.BorderSkinAttributes,System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Draws 3D border in relative coordinates.
            </summary>
            <param name="borderSkin">Border skin object.</param>
            <param name="rect">Rectangle of the border (relative coordinates).</param>
            <param name="borderColor">Border color.</param>
            <param name="backColor">Rectangle back color.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartGraphics.Draw3DBorderAbs(Dundas.Olap.WebUIControls.BorderSkinAttributes,System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Draws 3D border in absolute coordinates.
            </summary>
            <param name="borderSkin">Border skin object.</param>
            <param name="absRect">Rectangle of the border (pixel coordinates).</param>
            <param name="borderColor">Border color.</param>
            <param name="backColor">Rectangle back color.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartGraphics.Draw3DBorderRel(Dundas.Olap.WebUIControls.BorderSkinAttributes,System.Drawing.RectangleF,System.Drawing.Color,Dundas.Olap.WebUIControls.ChartHatchStyle,System.String,Dundas.Olap.WebUIControls.ChartImageWrapMode,System.Drawing.Color,Dundas.Olap.WebUIControls.ChartImageAlign,Dundas.Olap.WebUIControls.GradientType,System.Drawing.Color,System.Drawing.Color,System.Int32,Dundas.Olap.WebUIControls.ChartDashStyle)">
            <summary>
            Draws 3D border in absolute coordinates.
            </summary>
            <param name="borderSkin">Border skin object.</param>
            <param name="rect">Rectangle of the border (pixel coordinates).</param>
            <param name="backColor">Color of rectangle</param>
            <param name="backHatchStyle">Hatch style</param>
            <param name="backImage">Back Image</param>
            <param name="backImageMode">Image mode</param>
            <param name="backImageTranspColor">Image transparent color.</param>
            <param name="backImageAlign">Image alignment</param>
            <param name="backGradientType">Gradient type</param>
            <param name="backGradientEndColor">Gradient End Color</param>
            <param name="borderColor">Border Color</param>
            <param name="borderWidth">Border Width</param>
            <param name="borderStyle">Border Style</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartGraphics.Draw3DBorderAbs(Dundas.Olap.WebUIControls.BorderSkinAttributes,System.Drawing.RectangleF,System.Drawing.Color,Dundas.Olap.WebUIControls.ChartHatchStyle,System.String,Dundas.Olap.WebUIControls.ChartImageWrapMode,System.Drawing.Color,Dundas.Olap.WebUIControls.ChartImageAlign,Dundas.Olap.WebUIControls.GradientType,System.Drawing.Color,System.Drawing.Color,System.Int32,Dundas.Olap.WebUIControls.ChartDashStyle)">
            <summary>
            Draws 3D border in absolute coordinates.
            </summary>
            <param name="borderSkin">Border skin object.</param>
            <param name="absRect">Rectangle of the border (pixel coordinates).</param>
            <param name="backColor">Color of rectangle</param>
            <param name="backHatchStyle">Hatch style</param>
            <param name="backImage">Back Image</param>
            <param name="backImageMode">Image mode</param>
            <param name="backImageTranspColor">Image transparent color.</param>
            <param name="backImageAlign">Image alignment</param>
            <param name="backGradientType">Gradient type</param>
            <param name="backGradientEndColor">Gradient End Color</param>
            <param name="borderColor">Border Color</param>
            <param name="borderWidth">Border Width</param>
            <param name="borderStyle">Border Style</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartGraphics.GetPieDrawingStyle(Dundas.Olap.WebUIControls.DataPoint)">
            <summary>
            Helper function that retrieves pie drawing style.
            </summary>
            <param name="point">Data point to get the drawing style for.</param>
            <returns>pie drawing style.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartGraphics.DrawPieRel(System.Drawing.RectangleF,System.Single,System.Single,System.Drawing.Color,Dundas.Olap.WebUIControls.ChartHatchStyle,System.String,Dundas.Olap.WebUIControls.ChartImageWrapMode,System.Drawing.Color,Dundas.Olap.WebUIControls.ChartImageAlign,Dundas.Olap.WebUIControls.GradientType,System.Drawing.Color,System.Drawing.Color,System.Int32,Dundas.Olap.WebUIControls.ChartDashStyle,System.Drawing.Drawing2D.PenAlignment,System.Boolean,System.Double,System.Boolean,System.Single,System.Boolean,Dundas.Olap.WebUIControls.PieDrawingStyle)">
            <summary>
            Draws a pie defined by an ellipse specified by a Rectangle structure and two radial lines.
            </summary>
            <param name="rect">Rectangle structure that represents the bounding rectangle that defines the ellipse from which the pie shape comes.</param>
            <param name="startAngle">Angle measured in degrees clockwise from the x-axis to the first side of the pie shape.</param>
            <param name="sweepAngle">Angle measured in degrees clockwise from the startAngle parameter to the second side of the pie shape.</param>
            <param name="backColor">Fill color</param>
            <param name="backHatchStyle">Fill Hatch Style</param>
            <param name="backImage">Fill texture</param>
            <param name="backImageMode">Texture image mode</param>
            <param name="backImageTranspColor">Texture transparent color</param>
            <param name="backImageAlign">Texture Alignment</param>
            <param name="backGradientType">Fill Gradient type</param>
            <param name="backGradientEndColor">Fill Gradient Second Color</param>
            <param name="borderColor">Border Color</param>
            <param name="borderWidth">Border Width</param>
            <param name="borderStyle">Border Style</param>
            <param name="penAlignment">Border Pen Alignment</param>
            <param name="shadow">True if shadow is active</param>
            <param name="shadowOffset">An offset of the shadow</param>
            <param name="doughnut">True if Doughnut is drawn instead of pie</param>
            <param name="doughnutRadius">Internal radius of the doughnut</param>
            <param name="explodedShadow">Used for soft shadow</param>
            <param name="pieDrawingStyle">Pie drawing style.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartGraphics.DrawPieSoftShadow(System.Double,System.Single,System.Single,System.Boolean,System.Drawing.RectangleF,System.Drawing.Color)">
            <summary>
            The soft shadow of the pie 
            </summary>
            <param name="shadowOffset">An offset of the shadow</param>
            <param name="startAngle">Angle measured in degrees clockwise from the x-axis to the first side of the pie shape.</param>
            <param name="sweepAngle">Angle measured in degrees clockwise from the startAngle parameter to the second side of the pie shape.</param>
            <param name="explodedShadow">Used for soft shadow</param>
            <param name="absRect">Rectangle of the pie in absolute coordinates</param>
            <param name="backColor">Fill color</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartGraphics.DrawArrowRel(System.Drawing.PointF,Dundas.Olap.WebUIControls.ArrowOrientation,Dundas.Olap.WebUIControls.ArrowsType,System.Drawing.Color,System.Int32,Dundas.Olap.WebUIControls.ChartDashStyle,System.Double,System.Double)">
            <summary>
            Draw Arrows.
            </summary>
            <param name="position">Position of the arrow</param>
            <param name="orientation">Orientation of the arrow - left, right, top, bottom </param>
            <param name="type">Arrow type: Triangle, Sharp Triangle, Lines</param>
            <param name="color">Color of the arrow</param>
            <param name="lineWidth">Line width</param>
            <param name="lineDashStyle">Line Dash style</param>
            <param name="shift">Distance from the chart area</param>
            <param name="size">Arrow size</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartGraphics.GetArrowShape(System.Drawing.PointF,Dundas.Olap.WebUIControls.ArrowOrientation,System.Double,System.Double,System.Int32,Dundas.Olap.WebUIControls.ArrowsType,System.Drawing.PointF@)">
            <summary>
            This function calculates points for polygon, which represents 
            shape of an arrow. There are four different orientations 
            of arrow and three arrow types.
            </summary>
            <param name="position">Arrow position</param>
            <param name="orientation">Arrow orientation ( Left, Right, Top, Bottom )</param>
            <param name="shift">Distance from chart area to the arrow</param>
            <param name="size">Arrow size</param>
            <param name="lineWidth">Line Width</param>
            <param name="type">Arrow type</param>
            <param name="endPoint">End point of the axis and the beginning of arrow</param>
            <returns>Polygon points</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartGraphics.GetBarDrawingStyle(Dundas.Olap.WebUIControls.DataPoint)">
            <summary>
            Helper function that retrieves bar drawing style.
            </summary>
            <param name="point">Data point to get the drawing style for.</param>
            <returns>Bar drawing style.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartGraphics.DrawImageRel(System.String,System.Drawing.RectangleF)">
            <summary>
            Draws the specified Image object at the specified location 
            and with the specified size.
            </summary>
            <param name="name">Image file name or URL</param>
            <param name="position">Image position</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartGraphics.Round(System.Drawing.RectangleF)">
            <summary>
            Find rounding coordinates for a rectangle
            </summary>
            <param name="rect">Rectangle which has to be rounded</param>
            <returns>Rounded rectangle</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartGraphics.GetPositionFromAxis(System.String,Dundas.Olap.WebUIControls.AxisName,System.Double)">
            <summary>
            This method will return relative pixel position (in percentages 0 – 100) 
            from double value. This method uses axis position and axis scale to find 
            position for the value. This method is very important for custom drawing 
            inside chart area and it helps to find position for a data point value.
            </summary>
            <param name="chartAreaName">Chart Area Name</param>
            <param name="axis">Axis Name Enumeration</param>
            <param name="axisValue">Value, which has to be converted to relative pixel position</param>
            <returns>Relative pixel position from axis</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartGraphics.SetPictureSize(System.Int32,System.Int32)">
            <summary>
            Set picture size
            </summary>
            <param name="width">Width</param>
            <param name="height">Height</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartGraphics.#ctor(Dundas.Olap.WebUIControls.CommonElements)">
            <summary>
            Constructor
            </summary>
            <param name="common">Common elements class</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartGraphics.Dispose">
            <summary>
            Dispose pen and brush
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartGraphics.SetClip(System.Drawing.RectangleF)">
            <summary>
            Sets the clipping region of this Graphics object 
            to the rectangle specified by a RectangleF structure.
            </summary>
            <param name="region">Region rectangle</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartGraphics.SetClipAbs(System.Drawing.RectangleF)">
            <summary>
            Sets the clipping region of this Graphics object 
            to the rectangle specified by a RectangleF structure.
            </summary>
            <param name="region">Region rectangle in pixels.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartGraphics.StartAnimation">
            <summary>
            Starts animation proces for chart element
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartGraphics.StopAnimation">
            <summary>
            Starts animation proces for chart element
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartGraphics.GetGradientColor(System.Drawing.Color,System.Drawing.Color,System.Double)">
            <summary>
            Returns the gradient color from a gradient position.
            </summary>
            <param name="beginColor">The color from the gradient begining.</param>
            <param name="endColor">The color from the gradient end.</param>
            <param name="dPosition">Relative position between Begin color and End color. The double number between 0 - 1.</param>
            <returns>Result color.</returns>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartGraphics.Graphics">
            <summary>
            Reference to the Graphics object
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartGraphics.AntiAliasing">
            <summary>
            Chart Graphics Anti alias mode
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.ChartTypes.BoxPlotChart">
            <summary>
            BoxPlotChart class provides 2D and 3D drawing and hit testing of
            the Box Plot chart.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.ChartTypes.BoxPlotChart.vAxis">
            <summary>
            Vertical axis
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.ChartTypes.BoxPlotChart.hAxis">
            <summary>
            Horizontal axis
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.ChartTypes.BoxPlotChart.showSideBySide">
            <summary>
            Side by side drawing flag.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.BoxPlotChart.#ctor">
            <summary>
            Box Plot chart constructor.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.BoxPlotChart.GetLegendImageStyle(Dundas.Olap.WebUIControls.Series)">
            <summary>
            How to draw series/points in legend:
            Filled rectangle, Line or Marker
            </summary>
            <param name="series">Legend item series.</param>
            <returns>Legend item style.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.BoxPlotChart.GetImage(Dundas.Charting.WebControl.ChartTypes.ChartTypeRegistry)">
            <summary>
            Gets chart type image.
            </summary>
            <param name="registry">Chart types registry object.</param>
            <returns>Chart type image.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.BoxPlotChart.Paint(Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.CommonElements,Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.Series)">
            <summary>
            Paint box plot chart.
            </summary>
            <param name="graph">The Chart Graphics object.</param>
            <param name="common">The Common elements object.</param>
            <param name="area">Chart area for this chart.</param>
            <param name="seriesToDraw">Chart series to draw.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.BoxPlotChart.ProcessChartType(System.Boolean,Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.CommonElements,Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.Series)">
            <summary>
            This method recalculates size of the bars. This method is used 
            from Paint or Select method.
            </summary>
            <param name="selection">If True selection mode is active, otherwise paint mode is active.</param>
            <param name="graph">The Chart Graphics object.</param>
            <param name="common">The Common elements object.</param>
            <param name="area">Chart area for this chart.</param>
            <param name="seriesToDraw">Chart series to draw.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.BoxPlotChart.DrawBoxPlotMarks(Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.Series,Dundas.Olap.WebUIControls.DataPoint,System.Single,System.Single)">
            <summary>
            Draws box plot markers.
            </summary>
            <param name="graph">Chart graphics object.</param>
            <param name="area">Chart area.</param>
            <param name="ser">Data point series.</param>
            <param name="point">Data point to draw.</param>
            <param name="xPosition">X position.</param>
            <param name="width">Point width.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.BoxPlotChart.DrawBoxPlotSingleMarker(Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.DataPoint,System.String,System.Single,System.Single,System.Single,System.Single,System.Boolean)">
            <summary>
            Draws single marker on the box plot.
            </summary>
            <param name="graph">Chart graphics.</param>
            <param name="area">Chart area.</param>
            <param name="point">Series point.</param>
            <param name="markerStyle">Marker style name.</param>
            <param name="xPosition">X position.</param>
            <param name="yPosition">Y position.</param>
            <param name="zPosition">Z position.</param>
            <param name="width">Point width.</param>
            <param name="draw3D">Used for 3d drawing.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.BoxPlotChart.GetMarkerSize(Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.CommonElements,Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.DataPoint,System.Int32,System.String)">
            <summary>
            Returns marker size.
            </summary>
            <param name="graph">The Chart Graphics object.</param>
            <param name="common">The Common elements object.</param>
            <param name="area">Chart area for this chart.</param>
            <param name="point">Data point.</param>
            <param name="markerSize">Marker size.</param>
            <param name="markerImage">Marker image.</param>
            <returns>Marker width and height.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.BoxPlotChart.DrawLabel(Dundas.Olap.WebUIControls.CommonElements,Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.Series,Dundas.Olap.WebUIControls.DataPoint,System.Drawing.PointF,System.Int32)">
            <summary>
            Draws box plot chart data point label.
            </summary>
            <param name="common">The Common elements object</param>
            <param name="area">Chart area for this chart</param>
            <param name="graph">Chart graphics object.</param>
            <param name="ser">Data point series.</param>
            <param name="point">Data point to draw.</param>
            <param name="position">Label position.</param>
            <param name="pointIndex">Data point index.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.BoxPlotChart.ProcessChartType3D(System.Boolean,Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.CommonElements,Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.Series)">
            <summary>
            This method recalculates size of the bars. This method is used 
            from Paint or Select method.
            </summary>
            <param name="selection">If True selection mode is active, otherwise paint mode is active.</param>
            <param name="graph">The Chart Graphics object.</param>
            <param name="common">The Common elements object.</param>
            <param name="area">Chart area for this chart.</param>
            <param name="seriesToDraw">Chart series to draw.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.BoxPlotChart.DrawBoxPlotMarks3D(Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.Series,Dundas.Olap.WebUIControls.DataPoint,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws 3D box plot markers.
            </summary>
            <param name="graph">Chart graphics object.</param>
            <param name="area">Chart area.</param>
            <param name="ser">Data point series.</param>
            <param name="point">Data point to draw.</param>
            <param name="xPosition">X position.</param>
            <param name="width">Point width.</param>
            <param name="zPosition">Series Z position.</param>
            <param name="depth">Series depth.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.BoxPlotChart.GetYValue(Dundas.Olap.WebUIControls.CommonElements,Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.Series,Dundas.Olap.WebUIControls.DataPoint,System.Int32,System.Int32)">
            <summary>
            Helper function that returns the Y value of the point.
            </summary>
            <param name="common">Chart common elements.</param>
            <param name="area">Chart area the series belongs to.</param>
            <param name="series">Sereis of the point.</param>
            <param name="point">Point object.</param>
            <param name="pointIndex">Index of the point.</param>
            <param name="yValueIndex">Index of the Y value to get.</param>
            <returns>Y value of the point.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.BoxPlotChart.CalculateBoxPlotFromLinkedSeries(Dundas.Olap.WebUIControls.Series,System.ComponentModel.Design.IServiceContainer)">
            <summary>
            Populates box plot chart type using series data specified in "BoxPlotSeries" custom attribute.
            </summary>
            <param name="boxPlotSeries">Box Plot chart type series.</param>
            <param name="serviceContainer">Service container.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.BoxPlotChart.CalculateBoxPlotValues(Dundas.Olap.WebUIControls.DataPoint@,Dundas.Olap.WebUIControls.Series,System.String)">
            <summary>
            Calculates values for single Box Plot point using specified data series.
            </summary>
            <param name="boxPoint">Data Point.</param>
            <param name="linkedSeries">Linked data series.</param>
            <param name="valueName">Name of the point value to link to.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.BoxPlotChart.BoxPlotAddUnusual(Dundas.Olap.WebUIControls.DataPoint@,System.Double[])">
            <summary>
            Add unusual data point 
            </summary>
            <param name="boxPoint">Data Point.</param>
            <param name="yValues">Y values array.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.BoxPlotChart.CalculatePercentileValues(System.Double[],System.Double[])">
            <summary>
            Calculates required percentile values from the data
            </summary>
            <returns>Array of 5 values</returns>
            <param name="yValues">Y values array.</param>
            <param name="requiredPercentile">Required percentile</param>
            <returns>Array of 5 values</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.BoxPlotChart.AddSmartLabelMarkerPositions(Dundas.Olap.WebUIControls.CommonElements,Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.Series,System.Collections.ArrayList)">
            <summary>
            Adds markers position to the list. Used to check SmartLabels overlapping.
            </summary>
            <param name="common">Common chart elements.</param>
            <param name="area">Chart area.</param>
            <param name="series">Series values to be used.</param>
            <param name="list">List to add to.</param>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.BoxPlotChart.Name">
            <summary>
            Chart type name
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.BoxPlotChart.Stacked">
            <summary>
            True if chart type is stacked
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.BoxPlotChart.SupportStackedGroups">
            <summary>
            True if stacked chart type supports groups
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.BoxPlotChart.StackSign">
            <summary>
            True if stacked chart type should draw separately positive and 
            negative data points ( Bar and column Stacked types ).
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.BoxPlotChart.RequireAxes">
            <summary>
            True if chart type supports axes
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.BoxPlotChart.SecondYScale">
            <summary>
            Chart type with two y values used for scale ( bubble chart type )
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.BoxPlotChart.CircularChartArea">
            <summary>
            True if chart type requires circular chart area.
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.BoxPlotChart.SupportLogarithmicAxes">
            <summary>
            True if chart type supports logarithmic axes
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.BoxPlotChart.SwitchValueAxes">
            <summary>
            True if chart type requires to switch the value (Y) axes position
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.BoxPlotChart.SideBySideSeries">
            <summary>
            True if chart series can be placed side-by-side.
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.BoxPlotChart.DataPointsInLegend">
            <summary>
            True if each data point of a chart must be represented in the legend
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.BoxPlotChart.ZeroCrossing">
            <summary>
            If the crossing value is auto Crossing value ZeroCrossing should be 
            automatically set to zero for some chart 
            types (Bar, column, area etc.)
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.BoxPlotChart.ApplyPaletteColorsToPoints">
            <summary>
            True if palette colors should be applied for each data paoint.
            Otherwise the color is applied to the series.
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.BoxPlotChart.ExtraYValuesConnectedToYAxis">
            <summary>
            Indicates that extra Y values are connected to the scale of the Y axis
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.BoxPlotChart.HundredPercent">
            <summary>
            Indicates that this is a one hundred percent chart.
            Axis scale from 0 to 100 percent should be used.
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.BoxPlotChart.HundredPercentSupportNegative">
            <summary>
            Indicates that negative 100% stacked values are shown on
            the other side of the X axis
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.BoxPlotChart.YValuesPerPoint">
            <summary>
            Number of supported Y value(s) per point 
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.Ajax.AjaxUtils">
            <summary>
            AjaxUtils class contains only static helper methods
            for ajax/ui/scrolling and zooming chart functionality
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AjaxUtils.InvalidateControlDesigner(System.Web.UI.Control)">
            <summary>
            Invalidates the control designer.
            </summary>
            <param name="control">The control.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AjaxUtils.GetAbsoluteRect(System.Drawing.RectangleF,System.Drawing.RectangleF)">
            <summary>
            Converts relative rect the absolute rect.
            </summary>
            <param name="boundRect">The bound rect.</param>
            <param name="relative">The relative.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AjaxUtils.GetAbsoluteSize(System.Drawing.SizeF,System.Drawing.SizeF)">
            <summary>
            Converts Relative size to Absolute size
            </summary>
            <param name="boundSize">Size of the bound.</param>
            <param name="relative">Relative size in %</param>
            <returns>Absolute size</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AjaxUtils.GetRelativeRect(System.Drawing.RectangleF,System.Drawing.RectangleF)">
            <summary>
            Converts relative rect to absolute rect.
            </summary>
            <param name="boundRect">The bound rect.</param>
            <param name="absolute">The absolute.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AjaxUtils.CreateChartGraphics(System.Drawing.Graphics,Dundas.Olap.WebUIControls.Chart)">
            <summary>
            Creates the chart graphics.
            </summary>
            <param name="graphics">The graphics.</param>
            <param name="chart">The chart.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AjaxUtils.GetRelativeSize(System.Drawing.SizeF,System.Drawing.SizeF)">
            <summary>
            Converts Absolute size to Relative size
            </summary>
            <param name="boundSize">Absolute size</param>
            <returns>Relative size</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AjaxUtils.RectangleFToString(System.Drawing.RectangleF)">
            <summary>
            Converts RectangleF the to string.
            </summary>
            <param name="r">The rectangle.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AjaxUtils.StringToRectangleF(System.String)">
            <summary>
            Converts string to RectangleF.
            </summary>
            <param name="s">The string.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AjaxUtils.RectangleToString(System.Drawing.Rectangle)">
            <summary>
            Converts Rectangle the to string.
            </summary>
            <param name="r">The rectangle.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AjaxUtils.StringToRectangle(System.String)">
            <summary>
            Converts string to Rectangle.
            </summary>
            <param name="s">The string.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AjaxUtils.GetChartData(Dundas.Olap.WebUIControls.Chart)">
            <summary>
            Gets the chart data (series data).
            </summary>
            <param name="chart">The chart.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AjaxUtils.SetChartData(Dundas.Olap.WebUIControls.Chart,System.Byte[])">
            <summary>
            Sets the chart data (series data).
            </summary>
            <param name="chart">The chart.</param>
            <param name="buffer">The buffer.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AjaxUtils.DeserializeDataPoints(Dundas.Olap.WebUIControls.DataPointCollection,System.IO.BinaryReader)">
            <summary>
            Deserializes the data points.
            </summary>
            <param name="dataPoints">The data points.</param>
            <param name="reader">The reader.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AjaxUtils.SerializeDataPoints(Dundas.Olap.WebUIControls.DataPointCollection,System.IO.BinaryWriter)">
            <summary>
            Serializes the data points.
            </summary>
            <param name="dataPoints">The data points.</param>
            <param name="writer">The writer.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AjaxUtils.DeserializeDataPoint(System.IO.BinaryReader)">
            <summary>
            Deserializes a data point.
            </summary>
            <param name="reader">The reader.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AjaxUtils.SerializeDataPoint(Dundas.Olap.WebUIControls.DataPoint,System.IO.BinaryWriter)">
            <summary>
            Serializes a data point.
            </summary>
            <param name="clonePoint">The clone point.</param>
            <param name="writer">The writer.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AjaxUtils.GetChartCustomLabels(Dundas.Olap.WebUIControls.Chart)">
            <summary>
            Gets the chart data (series data).
            </summary>
            <param name="chart">The chart.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AjaxUtils.SerializeCustomLabels(Dundas.Olap.WebUIControls.CustomLabelsCollection,System.IO.BinaryWriter)">
            <summary>
            Serializes the data points.
            </summary>
            <param name="dataPoints">The data points.</param>
            <param name="writer">The writer.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AjaxUtils.SerializeCustomLabel(Dundas.Olap.WebUIControls.CustomLabel,System.IO.BinaryWriter)">
            <summary>
            Serializes a data point.
            </summary>
            <param name="clonePoint">The clone point.</param>
            <param name="writer">The writer.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AjaxUtils.SetChartCustomLabels(Dundas.Olap.WebUIControls.Chart,System.Byte[])">
            <summary>
            Sets the chart data (series data).
            </summary>
            <param name="chart">The chart.</param>
            <param name="buffer">The buffer.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AjaxUtils.DeserializeCustomLabels(Dundas.Olap.WebUIControls.CustomLabelsCollection,System.IO.BinaryReader)">
            <summary>
            Deserializes the data points.
            </summary>
            <param name="dataPoints">The data points.</param>
            <param name="reader">The reader.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AjaxUtils.DeserializeCustomLabel(System.IO.BinaryReader)">
            <summary>
            Deserializes a data point.
            </summary>
            <param name="reader">The reader.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AjaxUtils.EncodeLosFmt(System.Object)">
            <summary>
            Encodes an object by LosFormat mechanism.
            </summary>
            <param name="item">The obejct to encode.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AjaxUtils.DecodeLosFmt(System.String)">
            <summary>
            Decodes an object by LosFormat mechanism.
            </summary>
            <param name="item">The string for decode.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AjaxUtils.EncodeObjectToString(System.Object)">
            <summary>
            Encodes the object to string.
            </summary>
            <param name="item">The item.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AjaxUtils.DecodeObjectFromString(System.String)">
            <summary>
            Decodes the object from string.
            </summary>
            <param name="item">The item.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AjaxUtils.GetAbsoluteOppositeAxis(Dundas.Olap.WebUIControls.Axis)">
            <summary>
            Gets the absolute opposite axis.
            </summary>
            <param name="axis">The axis.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AjaxUtils.EnsureResizedChart(Dundas.Olap.WebUIControls.Chart,System.Boolean)">
            <summary>
            Ensures that the chart is resized.
            </summary>
            <param name="chart">The chart.</param>
            <param name="force">if set to <c>true</c> force resize.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AjaxUtils.FixControlStyleToDialog(System.Web.UI.Control)">
            <summary>
            Fixes the control style to dialog.
            </summary>
            <param name="control">The control.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AjaxUtils.ConvertTo(Dundas.Olap.WebUIControls.ChartImageType)">
            <summary>
            Converts ChartImageType to ImageFormat.
            </summary>
            <param name="format">The format.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AjaxUtils.GetToolbarOffset(Dundas.Olap.WebUIControls.BorderSkinStyle)">
            <summary>
            Gets the toolbar offset.
            </summary>
            <param name="borderStyle">The border style.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AjaxUtils.GetToolbarOffsetRender(Dundas.Olap.WebUIControls.BorderSkinStyle)">
            <summary>
            Gets the toolbar offset for render.
            </summary>
            <param name="borderStyle">The border style.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AjaxUtils.CreateImage">
            <summary>
            Creates the HTML image control.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AjaxUtils.SaveBufferToFile(System.Byte[],System.String)">
            <summary>
            Saves the buffer to file.
            </summary>
            <param name="buffer">The buffer.</param>
            <param name="fileName">Name of the file.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AjaxUtils.AppendDosSlash(System.String)">
            <summary>
            Appends the dos slash character.
            </summary>
            <param name="path">The path.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AjaxUtils.AppendUrlSlash(System.String)">
            <summary>
            Appends the URL slash character.
            </summary>
            <param name="path">The path.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AjaxUtils.JoinArray(Dundas.Olap.WebUIControls.SeriesChartType[],System.String)">
            <summary>
            Joins the SeriesChartType array to string.
            </summary>
            <param name="objects">The objects.</param>
            <param name="delimiter">The delimiter.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AjaxUtils.JoinArray(System.Object[],System.String)">
            <summary>
            Joins the object array into string.
            </summary>
            <param name="objects">The objects.</param>
            <param name="delimiter">The delimiter.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AjaxUtils.SafeConvertInt(System.String)">
            <summary>
            Safes the converts int.
            </summary>
            <param name="intergerStr">The interger STR.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AjaxUtils.SafeConvertDouble(System.String)">
            <summary>
            Safes the converts double.
            </summary>
            <param name="doubleStr">The double STR.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AjaxUtils.IsIE">
            <summary>
            Determines whether the browser is IE.
            </summary>
            <returns>
            	<c>true</c> if the specified control is IE; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AjaxUtils.IsSupportsPng">
            <summary>
            Determines whether the browser supports PNG.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AjaxUtils.CreateCommandStub(System.String,System.String,System.Boolean,System.Drawing.Point)">
            <summary>
            Creates the command stub.
            </summary>
            <param name="commandName">Name of the command.</param>
            <param name="commandParams">The command params.</param>
            <param name="dropDown">if set to <c>true</c> [drop down].</param>
            <param name="clickPoint">The click point.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AjaxUtils.GetDropDownCallback(Dundas.Olap.WebUIControls.Chart,System.String)">
            <summary>
            Gets the drop down callback.
            </summary>
            <param name="chart">The chart.</param>
            <param name="command">The command.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AjaxUtils.GetDockAlignment(System.String,System.String)">
            <summary>
            Gets the dock alignment.
            </summary>
            <param name="docking">The docking.</param>
            <param name="alignment">The alignment.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AjaxUtils.ParseDockAlignment(System.String[],Dundas.Olap.WebUIControls.Docking@,System.Drawing.ContentAlignment@)">
            <summary>
            Parses the dock alignment.
            </summary>
            <param name="args">The args.</param>
            <param name="docking">The docking.</param>
            <param name="alignment">The alignment.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AjaxUtils.ParseDockAlignment(System.String[],Dundas.Olap.WebUIControls.LegendDocking@,System.Drawing.StringAlignment@)">
            <summary>
            Parses the dock alignment.
            </summary>
            <param name="args">The args.</param>
            <param name="docking">The docking.</param>
            <param name="alignment">The alignment.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AjaxUtils.GetPropertyValue(System.Object,System.String)">
            <summary>
            Gets the property value.
            </summary>
            <param name="obj">The obj.</param>
            <param name="property">The property.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AjaxUtils.SetPropertyValue(System.Object,System.String,System.Object)">
            <summary>
            Sets the property value.
            </summary>
            <param name="obj">The obj.</param>
            <param name="property">The property.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AjaxUtils.GetObjByName(System.Web.UI.Control,System.String)">
            <summary>
            Gets object by it's name.
            </summary>
            <param name="parent">
            Object parent.
            </param>
            <param name="name">
            Object name.
            </param>
            <returns>
            Found object or Null.
            </returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AjaxUtils.DisableControl(System.Web.UI.WebControls.WebControl,System.Boolean)">
            <summary>
            Disables the control.
            </summary>
            <param name="control">The control.</param>
            <param name="condition">if set to <c>true</c> [condition].</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AjaxUtils.RegisterJScriptFile(System.Web.UI.Page,System.String)">
            <summary>
            Registers the CSS file.
            </summary>
            <param name="page">The page.</param>
            <param name="file">The file.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AjaxUtils.RegisterJScriptStartupFile(System.Web.UI.Page,System.String)">
            <summary>
            Registers the JScript file.
            </summary>
            <param name="page">The page.</param>
            <param name="file">The file.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AjaxUtils.RegisterCSSFile(System.Web.UI.Page,System.String)">
            <summary>
            Registers the CSS file.
            </summary>
            <param name="page">The page.</param>
            <param name="file">The file.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AjaxUtils.RegisterCSS(System.Web.UI.Page,System.String)">
            <summary>
            Registers the CSS.
            </summary>
            <param name="page">The page.</param>
            <param name="cssBody">The CSS body.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AjaxUtils.GetColor(System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Gets the color.
            </summary>
            <param name="color">The color.</param>
            <param name="defaultColor">Color of the default.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AjaxUtils.GetAjaxImageUrl(System.String,Dundas.Olap.WebUIControls.Chart)">
            <summary>
            Gets the ajax image URL.
            </summary>
            <param name="imageName">Name of the image.</param>
            <param name="chart">The chart.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AjaxUtils.UpdateToolbarCssLinks(System.String,Dundas.Olap.WebUIControls.Chart)">
            <summary>
            Updates the toolbar CSS links.
            </summary>
            <param name="s">The s.</param>
            <param name="chart">The chart.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AjaxUtils.GetAjaxImageScript(Dundas.Olap.WebUIControls.Chart)">
            <summary>
            Gets the ajax image script.
            </summary>
            <param name="chart">The chart.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AjaxUtils.GetStringRequestValues(System.String,System.String)">
            <summary>
            Converts query string to SortedList.
            </summary>
            <param name="requestString">The request string.</param>
            <param name="delimiter">The delimiter.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AjaxUtils.IsMicrosoftAjaxCallback">
            <summary>
            Determines whether or not is microsoft ajax callback.
            </summary>
            <returns>
            	<c>true</c> if is microsoft ajax callback; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AjaxUtils.GetAjaxControlScripts(System.Web.UI.Control)">
            <summary>
            Gets the ajax control scripts.
            </summary>
            <param name="control">The control.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AjaxUtils.StartupScriptControlPostProcess(System.Web.UI.Control,System.Web.UI.Control,System.Type,System.String)">
            <summary>
            Startups the script control post process.
            </summary>
            <param name="control">The control.</param>
            <param name="type">The type.</param>
            <param name="key">The key.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AjaxUtils.GetElementsByType(System.Web.UI.ControlCollection,System.Type)">
            <summary>
            Gets List of controls by type.
            </summary>
            <param name="controls">The controls.</param>
            <param name="type">The type.</param>
            <returns></returns>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.Ajax.HtmlStringWriter">
            <summary>
            HtmlStringWriter is a helper class for offline rendering
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.HtmlStringWriter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:HtmlStringWriter"/> class.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.HtmlStringWriter.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:System.IO.TextWriter"></see> and optionally releases the managed resources.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.HtmlStringWriter.ToString">
            <summary>
            Returns a <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </summary>
            <returns>
            A <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </returns>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.Ajax.ColorHandler">
            <summary>
            ColorHandler is a static class for converting RGB to HSV (Hue, Saturation, Volume) and vv. 
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.ColorHandler.ChangeValue(System.Drawing.Color,System.Single)">
            <summary>
            Changes the value.
            </summary>
            <param name="color">The color.</param>
            <param name="coef">The coef.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.ColorHandler.HSVtoRGB(System.Int32,System.Int32,System.Int32)">
            <summary>
            HSs the vto RGB.
            </summary>
            <param name="H">The H.</param>
            <param name="S">The S.</param>
            <param name="V">The V.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.ColorHandler.HSVtoColor(Dundas.Olap.WebUIControls.Ajax.ColorHandler.HSV)">
            <summary>
            HSs the color of the vto.
            </summary>
            <param name="hsv">The HSV.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.ColorHandler.HSVtoColor(System.Int32,System.Int32,System.Int32)">
            <summary>
            HSs the color of the vto.
            </summary>
            <param name="H">The H.</param>
            <param name="S">The S.</param>
            <param name="V">The V.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.ColorHandler.ColorToHSV(System.Drawing.Color)">
            <summary>
            Colors to HSV.
            </summary>
            <param name="color">The color.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.ColorHandler.HSVtoRGB(Dundas.Olap.WebUIControls.Ajax.ColorHandler.HSV)">
            <summary>
            HSs the vto RGB.
            </summary>
            <param name="HSV">The HSV.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.ColorHandler.RGBtoHSV(Dundas.Olap.WebUIControls.Ajax.ColorHandler.RGB)">
            <summary>
            RGs the bto HSV.
            </summary>
            <param name="RGB">The RGB.</param>
            <returns></returns>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.Ajax.ColorHandler.RGB">
            <summary>
            RGB represents red, green, blue
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.Ajax.ColorHandler.HSV">
            <summary>
            HSV is Hue, Saturation, Volume color properties
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.Ajax.MenuItemUI">
            <summary>
            MenuItemUI is a menu item used by MenuUIRenderer to build AJAX popup menus.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.MenuItemUI.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Dundas.Olap.WebUIControls.Ajax.MenuItemUI"/> class.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.MenuItemUI.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Dundas.Olap.WebUIControls.Ajax.MenuItemUI"/> class.
            </summary>
            <param name="text">The text.</param>
            <param name="description">The description.</param>
            <param name="imageUrl">The image URL.</param>
            <param name="clickClientScript">The click client script.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.MenuItemUI.#ctor(System.String,System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Dundas.Olap.WebUIControls.Ajax.MenuItemUI"/> class.
            </summary>
            <param name="text">The text.</param>
            <param name="description">The description.</param>
            <param name="imageUrl">The image URL.</param>
            <param name="clickClientStcript">The click client stcript.</param>
            <param name="enabled">if set to <c>true</c> [enabled].</param>
            <param name="selected">if set to <c>true</c> [selected].</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.MenuItemUI.IsSeparator">
            <summary>
            Determines whether this instance is separator.
            </summary>
            <returns>
            	<c>true</c> if this instance is separator; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Ajax.MenuItemUI.Text">
            <summary>
            Gets or sets the text.
            </summary>
            <value>The text.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Ajax.MenuItemUI.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Ajax.MenuItemUI.Enabled">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Dundas.Olap.WebUIControls.Ajax.MenuItemUI"/> is enabled.
            </summary>
            <value><c>true</c> if enabled; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Ajax.MenuItemUI.Selected">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Dundas.Olap.WebUIControls.Ajax.MenuItemUI"/> is selected.
            </summary>
            <value><c>true</c> if selected; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Ajax.MenuItemUI.ImageUrl">
            <summary>
            Gets or sets the image URL.
            </summary>
            <value>The image URL.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Ajax.MenuItemUI.ClientClickScript">
            <summary>
            Gets or sets the client click script.
            </summary>
            <value>The client click script.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Ajax.MenuItemUI.Items">
            <summary>
            Gets the items.
            </summary>
            <value>The items.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Ajax.MenuItemUI.TableStyle">
            <summary>
            Gets or sets a value indicating whether [table style].
            </summary>
            <value><c>true</c> if [table style]; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.Ajax.MenuUIRenderer">
            <summary>
            MenuUIRenderer is a helper class used to render AJAX popup menu
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.MenuUIRenderer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MenuUIRenderer"/> class.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.MenuUIRenderer.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:MenuUIRenderer"/> class.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.MenuUIRenderer.#ctor(System.Web.UI.WebControls.WebControl,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:MenuUIRenderer"/> class.
            </summary>
            <param name="callbackControl">The callback control.</param>
            <param name="menuID">The menu ID.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.MenuUIRenderer.GetLeftArrow">
            <summary>
            Gets the left arrow.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.MenuUIRenderer.GetLeftEmptyArrow">
            <summary>
            Gets the left arrow.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.MenuUIRenderer.GetBackLine">
            <summary>
            Gets the left arrow.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.MenuUIRenderer.CreateButtonCell(System.Boolean)">
            <summary>
            Creates a button cell.
            </summary>
            <param name="menuMode">if set to <c>true</c> if cell is part of menu.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.MenuUIRenderer.CreateButtonCell(System.Boolean,System.Boolean)">
            <summary>
            Creates the button cell.
            </summary>
            <param name="menuMode">if set to <c>true</c> [menu mode].</param>
            <param name="enabled">if set to <c>true</c> [enabled].</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.MenuUIRenderer.AddButtonItem(System.Web.UI.WebControls.WebControl,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Adds the button item.
            </summary>
            <param name="parent">The parent.</param>
            <param name="imgUrl">The img URL.</param>
            <param name="text">The text.</param>
            <param name="description">The description.</param>
            <param name="toggled">if set to <c>true</c> [toggled].</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.MenuUIRenderer.AddMenuItem(System.Web.UI.WebControls.WebControl,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Adds the menu item.
            </summary>
            <param name="parent">The parent.</param>
            <param name="imgUrl">The img URL.</param>
            <param name="text">The text.</param>
            <param name="description">The description.</param>
            <param name="toggled">if set to <c>true</c> [toggled].</param>
            <param name="subMenu">if set to <c>true</c> [sub menu].</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.MenuUIRenderer.AddMenuSeparator(System.Web.UI.WebControls.TableRow)">
            <summary>
            Adds the menu separator.
            </summary>
            <param name="row">The row.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.MenuUIRenderer.Render(System.Web.UI.HtmlTextWriter,System.Collections.Generic.List{Dundas.Olap.WebUIControls.Ajax.MenuItemUI},System.String,System.Boolean,System.Boolean)">
            <summary>
            Renders the specified writer.
            </summary>
            <param name="writer">The writer.</param>
            <param name="menuItems">The menu items.</param>
            <param name="menuID">The menu ID.</param>
            <param name="visible">if set to <c>true</c> [visible].</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.MenuUIRenderer.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the specified writer.
            </summary>
            <param name="writer">The writer.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.MenuUIRenderer.RenderToString">
            <summary>
            Renders the specified writer.
            </summary>
            <param name="writer">The writer.</param>
            <returns></returns>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Ajax.MenuUIRenderer.ID">
            <summary>
            Gets or sets the ID.
            </summary>
            <value>The ID.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Ajax.MenuUIRenderer.BorderColor">
            <summary>
            Gets or sets the color of the border.
            </summary>
            <value>The color of the border.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Ajax.MenuUIRenderer.BackColor">
            <summary>
            Gets or sets the color of the border.
            </summary>
            <value>The color of the border.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Ajax.MenuUIRenderer.Items">
            <summary>
            Gets the items.
            </summary>
            <value>The items.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Ajax.MenuUIRenderer.CallbackControl">
            <summary>
            Gets or sets the callback control.
            </summary>
            <value>The callback control.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Ajax.MenuUIRenderer.TableStyle">
            <summary>
            Gets or sets a value indicating whether [table style].
            </summary>
            <value><c>true</c> if [table style]; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AjaxOut.AddCallbackOutput(System.String,System.String)">
            <summary>
            Adds to the callback output.
            </summary>
            <param name="param">The param.</param>
            <param name="content">The content.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AjaxOut.AddCallbackOutput(System.Web.UI.Control)">
            <summary>
            Adds a control to the callback output.
            </summary>
            <param name="control">The control.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AjaxOut.AddCallbackOutput(System.String,System.Web.UI.Control)">
            <summary>
            Adds a control to the callback output.
            </summary>
            <param name="controlID">The control ID.</param>
            <param name="control">The control.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AjaxOut.AddCallbackScript(System.String)">
            <summary>
            Registers a Javascript expression which is executed after current callback.
            </summary>
            <param name="scriptExpression">A Javascript expression.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AjaxOut.AddCallbackScript(System.String,System.String)">
            <summary>
            Registers a Javascript expression which is executed after current callback.
            </summary>
            <param name="key">The key which also applies as ordered in the script list.</param>
            <param name="scriptExpression">A Javascript expression. </param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AjaxOut.GetOutputControls">
            <summary>
            Gets the output list.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AjaxOut.GetOutputScripts">
            <summary>
            Gets the output list.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AjaxOut.GetOutputList(System.String)">
            <summary>
            Gets the output list.
            </summary>
            <param name="outputName">Name of the output.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AjaxOut.GetCallBackScripts">
            <summary>
            Gets the call back scripts.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AjaxOut.ControlToString(System.Web.UI.Control)">
            <summary>
            Converts the web control to literal control.
            </summary>
            <param name="control">The control.</param>
            <returns></returns>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.OlapGrids.OlapGridSerializer">
            <summary>
            XML serializer class.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGrids.OlapGridSerializer.DeserializeFromString(Dundas.Olap.WebUIControls.OlapGrid,System.String,System.Boolean)">
            <summary>
            Deserializes appearance from given string
            </summary>
            <param name="appearance">previously serialized appearance</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGrids.OlapGridSerializer.SerializeToString(Dundas.Olap.WebUIControls.OlapGrid,System.Boolean)">
            <summary>
            Creates xml serialization string 
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGrids.OlapGridSerializer.SetFromXML(Dundas.Olap.WebUIControls.OlapGridElementStyle,System.Xml.XmlReader)">
            <summary>
            Fill style by xml element.
            </summary>
            <param name="element">xml element</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGrids.OlapGridSerializer.GetXML(Dundas.Olap.WebUIControls.OlapGridElementStyle,System.Xml.XmlDocument,System.Xml.XmlElement)">
            <summary>
            Sets xml representation of style to xml element.
            </summary>
            <param name="style">Style.</param>
            <param name="doc">Xml document.</param>
            <param name="gridXmlElement">Xml element.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGrids.OlapGridSerializer.StringToBorderStyle(System.String)">
            <summary>
            Convert string to border style.
            </summary>
            <param name="style">string to be converted</param>
            <returns>border style</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGrids.OlapGridSerializer.StringToAlignment(System.String)">
            <summary>
            Return alignment value.
            </summary>
            <param name="align">string to be converted</param>
            <returns>None if empty or null.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGrids.OlapGridSerializer.StringToColor(System.String,System.Drawing.Color)">
            <summary>
            Converts string to color.
            </summary>
            <param name="stringColor">string representation</param>
            <returns>color</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGrids.OlapGridSerializer.StringToColor(System.String)">
            <summary>
            Converts string to color.
            </summary>
            <param name="stringColor">string representation</param>
            <returns>color</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGrids.OlapGridSerializer.ColorToString(System.Drawing.Color)">
            <summary>
            Converts color to string.
            </summary>
            <param name="color">Color</param>
            <returns>string represenantion of color</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGrids.OlapGridSerializer.ToHex(System.Drawing.Color)">
            <summary>
            Converts color to its hex representation.
            </summary>
            <param name="color">Color</param>
            <returns>string started with #</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGrids.OlapGridSerializer.StringToFont(Dundas.Olap.WebUIControls.OlapGridElementStyle,System.String)">
            <summary>
            Converts string to font, if string is null or empty does nothing.
            </summary>
            <param name="element">style</param>
            <param name="fontInfoString">string representation of font</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGrids.OlapGridSerializer.FontToString(Dundas.Olap.WebUIControls.OlapGridElementStyle)">
            <summary>
            Converts font to string
            </summary>
            <param name="style">element style</param>
            <returns>string representation</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGrids.OlapGridSerializer.SetAttrValue(System.Xml.XmlDocument,System.String,System.Object)">
            <summary>
            Sets value for attribute.
            </summary>
            <param name="doc"></param>
            <param name="attrName"></param>
            <param name="attrValue"></param>
            <returns></returns>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.Design.CollectionItemUrlEditor">
            <summary>
            CollectionItemUrlEditor is used to edit urls in design time.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Design.CollectionItemUrlEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Edits the value of the specified object using the editor style provided by the GetEditStyle method.
            </summary>
            <param name="context">An ITypeDescriptorContext that can be used to gain additional context information. </param>
            <param name="provider">A service provider object through which editing services may be obtained. </param>
            <param name="value">An instance of the value being edited. </param>
            <returns>The new value of the object. If the value of the object hasn't changed, this method should return the same object it was passed.</returns>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.Design.CollectionItemUrlEditor.CustomContext">
            <summary>
            CustomContext implements a ITypeDescriptorContext interface. Fixes the problem 
            in VS2002 with UrlEditors in a CollectionEditor
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Design.CollectionItemUrlEditor.CustomContext.context">
            <summary>
            The descriptor context
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Design.CollectionItemUrlEditor.CustomContext.instance">
            <summary>
            The component instance
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Design.CollectionItemUrlEditor.CustomContext.#ctor(System.ComponentModel.ITypeDescriptorContext,System.ComponentModel.IComponent)">
            <summary>
            Initializes a new instance of the <see cref="T:CustomContext"/> class.
            </summary>
            <param name="context">The context.</param>
            <param name="instance">The instance.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Design.CollectionItemUrlEditor.CustomContext.System#ComponentModel#ITypeDescriptorContext#OnComponentChanged">
            <summary>
            Raises the <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged"></see> event.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Design.CollectionItemUrlEditor.CustomContext.System#ComponentModel#ITypeDescriptorContext#OnComponentChanging">
            <summary>
            Raises the <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanging"></see> event.
            </summary>
            <returns>
            true if this object can be changed; otherwise, false.
            </returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Design.CollectionItemUrlEditor.CustomContext.System#IServiceProvider#GetService(System.Type)">
            <summary>
            Gets the service object of the specified type.
            </summary>
            <param name="serviceType">An object that specifies the type of service object to get.</param>
            <returns>
            A service object of type serviceType.-or- null if there is no service object of type serviceType.
            </returns>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Design.CollectionItemUrlEditor.CustomContext.System#ComponentModel#ITypeDescriptorContext#Container">
            <summary>
            Gets the container representing this <see cref="T:System.ComponentModel.TypeDescriptor"></see> request.
            </summary>
            <value></value>
            <returns>An <see cref="T:System.ComponentModel.IContainer"></see> with the set of objects for this <see cref="T:System.ComponentModel.TypeDescriptor"></see>; otherwise, null if there is no container or if the <see cref="T:System.ComponentModel.TypeDescriptor"></see> does not use outside objects.</returns>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Design.CollectionItemUrlEditor.CustomContext.System#ComponentModel#ITypeDescriptorContext#Instance">
            <summary>
            Gets the object that is connected with this type descriptor request.
            </summary>
            <value></value>
            <returns>The object that invokes the method on the <see cref="T:System.ComponentModel.TypeDescriptor"></see>; otherwise, null if there is no object responsible for the call.</returns>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Design.CollectionItemUrlEditor.CustomContext.System#ComponentModel#ITypeDescriptorContext#PropertyDescriptor">
            <summary>
            Gets the <see cref="T:System.ComponentModel.PropertyDescriptor"></see> that is associated with the given context item.
            </summary>
            <value></value>
            <returns>The <see cref="T:System.ComponentModel.PropertyDescriptor"></see> that describes the given context item; otherwise, null if there is no <see cref="T:System.ComponentModel.PropertyDescriptor"></see> responsible for the call.</returns>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.AxisBuilder">
            <summary>
            UI control that visualizes dimensions on one of the axes (series, categorical or slicer).
            <seealso cref="T:Dundas.Olap.Data.AxisDescriptor"/>
            <seealso cref="P:Dundas.Olap.WebUIControls.AxisBuilder.OlapManager"/>
            </summary> 
            <remarks> 
            The <b>AxisBuilder</b> is a visual representation of the <see cref="T:Dundas.Olap.Data.AxisDescriptor"/>
            object. The end user can view and edit all dimensions, levels and members requested 
            on one of the axes (categorical, series or slicer).
            
            <p>A dimension can be added to or removed from the axis builder using the context menu or using
            drag-and-drop operations. In addition, filtering and sorting functionality is available to 
            the end-user using the axis builder.</p>
               
            <p>First, the <see cref="P:Dundas.Olap.WebUIControls.AxisBuilder.OlapManager"/> property must be defined. Then, the axis builder is set to 
            represent a categorical, series or slicer axis, defined by the <see cref="P:Dundas.Olap.WebUIControls.AxisBuilder.AxisType"/> 
            property.  It also allows for the automatic updates of the controls.</p>
            
            <p>The control can be oriented vertically or horizontally based on the <see cref="P:Dundas.Olap.WebUIControls.AxisBuilder.IsVertical"/>
            property.</p>
            </remarks>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.AxisBuilder.isChanged">
            <summary>
            determines if control is changed and need to be rerendered.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisBuilder.#ctor">
            <summary>
            Initializes new instance of AxisBuilder class.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisBuilder.ShouldSerializeOlapManagerID">
            <summary>
            Indicates whether the OlapManagerID property should be persisted.
            </summary>
            <returns>
            Returns true if the property value has changed from its default; otherwise false.
            </returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisBuilder.IsIndicatorsVisible">
            <summary>
            Determines of the indicators are visible
            </summary>
            <returns>Boolean value which fetermines of the indicators are visible</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisBuilder.GetAxisDecscriptor">
            <summary>
            Returns corresponded axis descriptor
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisBuilder.GetTopMeasureName">
            <summary>
            Returns the name of the first measure. Returns String.Empty if there is no measures.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisBuilder.IsOnlyMeasuresInAxis">
            <summary>
            Determines if corresponded axis contains only measures
            </summary>
            <returns>True if axis contains only measures, otherwise false.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisBuilder.GetEmptyBuilderMessage">
            <summary>
            Returns the empty builder message
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisBuilder.GetMeasureCaption(System.String)">
            <summary>
            Gets the measure caption.
            </summary>
            <param name="memberName">Name of the member.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisBuilder.GetSlicerMemberName(Dundas.Olap.Data.DimensionDescriptor)">
            <summary>
            Gets member name from the dimension descriptor on the slicer axis.
            </summary>
            <param name="dimensionDescriptor">
            A <see cref="T:Dundas.Olap.Data.DimensionDescriptor"/> object from where member name 
            should be retrieved.
            </param>
            <returns>
            Slicer axis dimension member name.
            </returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisBuilder.GetControls">
            <summary>
            Returns collection of controls - Axis buttons
            </summary>
            <returns>Collection of controls</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisBuilder.CreateButtonCell">
            <summary>
            Creates a button cell.
            </summary>
            <param name="menuMode">if set to <c>true</c> if cell is part of menu.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisBuilder.GetSortingAndFilteringCell">
            <summary>
            Creates and returns table cell with sortind and filtering buttons.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisBuilder.GetSpaceCell(System.Int32)">
            <summary>
            Creates and return a table cell represents space ( gray lines between axis buttons )
            </summary>
            <param name="idx"></param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisBuilder.GetFilterImageUrl">
            <summary>
            Returns Filter image Url.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisBuilder.GetFilterToolTip">
            <summary>
            Returns filter tooltip
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisBuilder.GetSortImageUrl">
            <summary>
            Returns sort image url
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisBuilder.GetSortingToolTip">
            <summary>
            Returns sort image tooltip
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisBuilder.GetButtonTable(System.Collections.ICollection)">
            <summary>
            Creates and return axis button table
            </summary>
            <param name="controls"></param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisBuilder.BuildControls">
            <summary>
            Builds the internal controls.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisBuilder.GetButtonImageUrl(System.String,System.Boolean)">
            <summary>
            Gets the button image URL.
            </summary>
            <param name="imageType">Type of the image.</param>
            <param name="hover">if set to <c>true</c> [hover].</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisBuilder.OnLoad(System.EventArgs)">
            <summary>
            Thie member overrides <see cref="M:System.Web.UI.Control.OnLoad(System.EventArgs)"/> method.
            </summary>
            <param name="e">The event aregument</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisBuilder.OlapManager_DataAxisDimensionsChanged(System.Object,Dundas.Olap.Manager.DataAxisDimensionsChangedEventArgs)">
            <summary>
            Handles the DataAxisDimensionsChanged event of the OlapManager control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:Dundas.Olap.Manager.DataAxisDimensionsChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisBuilder.GetImagesInitScript">
            <summary>
            Gets the images init script.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisBuilder.OnPreRender(System.EventArgs)">
            <summary>
            Thie member overrides <see cref="M:System.Web.UI.Control.OnPreRender(System.EventArgs)"/> method.
            </summary>
            <param name="e">The event aregument</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisBuilder.Render(System.Web.UI.HtmlTextWriter)">
            <summary> 
            Render this control to the output parameter specified.
            </summary>
            <param name="output"> The HTML writer to write out to </param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisBuilder.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)">
            <summary>
            Handles postback ( and callback ) commands.
            </summary>
            <param name="eventArgument"></param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisBuilder.BuildContextMenu(System.Int32)">
            <summary>
            Builds the context menu.
            </summary>
            <param name="buttonIndex">Index of the button.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisBuilder.Dundas#Olap#Manager#IOlapCallbackHandler#PopulateCallbackContent(System.Web.UI.HtmlTextWriter,System.String)">
            <summary>
            Returns internal content of the control used to visual ( DHTML) or script updating.
            </summary>
            <param name="output">A <see cref="T:System.Web.UI.HtmlTextWriter"/> used for output</param>
            <param name="contentType">The requested type of content</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisBuilder.Dundas#Olap#Manager#IOlapConditionalCallbackHandler#ShouldPopulateCallbackContent">
            <summary>
            Returns true if this control should populate its callback content
            </summary>
            <returns></returns>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.AxisBuilder.EmptyBuilderMessage">
            <summary>
            Gets or sets a text message displayed in the empty <b>AxisBuilder</b>.
            </summary>
            <value>
            A <b>string</b> value that represents the text displayed in the AxisBuilder
            control with no dimensions.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.AxisBuilder.AxisType">
            <summary>
            Gets or sets the type of data axis represented by this <b>AxisBuilder</b>.
            </summary>
            <value>
            A <see cref="T:Dundas.Olap.Manager.DataAxisType"/> enumeration value that defines the axis type that this 
            AxisBuilder is representing.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.AxisBuilder.IsVertical">
            <summary>
            Gets or sets the flag that defines the <b>AxisBuilder</b> orientation.
            </summary>
            <value>
            <b>True</b> if the AxisBuilder is oriented vertically; false if it is oriented horizontally.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.AxisBuilder.ButtonStyle">
            <summary>
            Gets and sets the style of the control which is rendered as an <b>AxisButton</b>.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.AxisBuilder.AxisButtonStyle">
            <summary>
            Gets or sets the background style of the buttons to be placed on the axis builder.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.AxisBuilder.OlapManager">
            <summary>
            Gets or sets the associated <b>OlapManager</b> object.
            </summary>
            <seealso cref="T:Dundas.Olap.Manager.OlapManager"/>
            <value>
            An <b>OlapManager</b> object that this object is associated with.
            </value>
            <remarks>
            The <b>OlapManager</b> must be specified in the AxisBuilder control to
            allow bi-directional automatic updates. All AxisBuilder changes
            will automatically be updated in the <b>OlapManager</b> and new data requests 
            will be sent. If any <see cref="T:Dundas.Olap.Data.AxisDescriptor"/> data is changed in the 
            <b>OlapManager</b>, the content of the AxisBuilder control will 
            automatically be refreshed.
            </remarks>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.AxisBuilder.OlapManagerID">
            <summary>
            Gets or sets the ID of the associated <b>OlapManager</b> object.
            <seealso cref="T:Dundas.Olap.Manager.OlapManager"/>
            </summary>
            <remarks>
            The <b>OlapReportList</b> control works with a list of reports 
            defined in the <see cref="P:Dundas.Olap.Manager.OlapManager.OlapReports"/> collection of the <see cref="T:Dundas.Olap.Manager.OlapManager"/>
            object. Any change to that list will automatically update the list content.
            
            If the end user adds, deletes or renames reports in the list, it will 
            automatically be reflected in the <b>OlapManager</b>. When the selected 
            report in the list is changed, it is automatically set as the <see cref="P:Dundas.Olap.Manager.OlapManager.CurrentOlapReport"/>
            in the associated <b>OlapManager</b> object.
            </remarks>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.AxisBuilder.EnableViewState">
            <summary>
            This member overrides the <see cref="P:System.Web.UI.Control.EnableViewState"/> property.
            </summary>
            <value>A boolean value which represents the viewstate flag.  By default, this is false</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.AxisBuilder.DialogDirection">
            <summary>
            Gets or sets the Edit Dimension dialog towards the axis descriptor buttons.
            </summary>
            <value>The edit axis descriptor dialog direction.</value>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.AxisButtonStyle">
            <summary>
            Defines the type and chape of the axis button.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.AxisButtonStyle.Rounded">
            <summary>
            Defines the rounded shape of the axis button 
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.AxisButtonStyle.Flat1">
            <summary>
            Defines the flat type shape of the axis button 
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.AxisButtonStyle.Flat2">
            <summary>
            Defines the flat type shape of the axis button 
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.AxisDialogDirection">
            <summary>
            Determines the direction of the Dimension Editor Dialog toward the axis dimension button.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.AxisDialogDirection.Auto">
            <summary>
            Automatic positioning
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.AxisDialogDirection.UpLeft">
            <summary>
            Determines up and left direction
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.AxisDialogDirection.UpRight">
            <summary>
            Determines up and right direction
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.AxisDialogDirection.DownLeft">
            <summary>
            Determines down and left direction
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.AxisDialogDirection.DownRight">
            <summary>
            Determines down and right direction
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.AxisDialogDirection.CenterScreen">
            <summary>
            Centers the dialog into browser window. 
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.StripLinesCollection">
            <summary>
            StripLinesCollection class is a strongly typed collection of 
            StripLine classes. 
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.StripLinesCollection.#ctor">
            <summary>
            Legend item collection object constructor
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.StripLinesCollection.#ctor(Dundas.Olap.WebUIControls.Axis)">
            <summary>
            Legend item collection object constructor
            </summary>
            <param name="axis">Axis object reference.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.StripLinesCollection.Clear">
            <summary>
            Removes all items from the collection.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.StripLinesCollection.Contains(System.Object)">
            <summary>
            Check if specified object exists in the collection.
            </summary>
            <param name="value">Object to check.</param>
            <returns>True if object exist.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.StripLinesCollection.IndexOf(System.Object)">
            <summary>
            Gets first index of the collection item equal to the object provided.
            </summary>
            <param name="value">Object to look for.</param>
            <returns>Index of found object.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.StripLinesCollection.Remove(System.Object)">
            <summary>
            Remove object from the collection
            </summary>
            <param name="value">Value to be removed.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.StripLinesCollection.RemoveAt(System.Int32)">
            <summary>
            Remove item from the collection by index.
            </summary>
            <param name="index">Zero based index.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.StripLinesCollection.Add(Dundas.Olap.WebUIControls.StripLine)">
            <summary>
            Add strip line object into the collection.
            </summary>
            <param name="value">Strip line to add.</param>
            <returns>Index of the newly added object.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.StripLinesCollection.Add(System.Object)">
            <summary>
            Add strip line object into the collection.
            </summary>
            <param name="value">Strip line to add.</param>
            <returns>Index of the newly added object.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.StripLinesCollection.Insert(System.Int32,Dundas.Olap.WebUIControls.StripLine)">
            <summary>
            Insert strip line object into the collection.
            </summary>
            <param name="index">Zero based index.</param>
            <param name="value">Strip line to insert.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.StripLinesCollection.Insert(System.Int32,System.Object)">
            <summary>
            Insert strip line object into the collection.
            </summary>
            <param name="index">Zero based index.</param>
            <param name="value">Strip line to insert.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.StripLinesCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies all the elements of the current collection to the specified one-dimensional 
            collection starting at the specified destination index.
            </summary>
            <param name="array">Destination collection.</param>
            <param name="index">The index in collection at which copying begins.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.StripLinesCollection.GetEnumerator">
            <summary>
            Get collection enumerator.
            </summary>
            <returns>Collection enumerator.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.StripLinesCollection.Invalidate">
            <summary>
            Invalidate chart area
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.StripLinesCollection.Item(System.Int32)">
            <summary>
            Indexer of the class. Returns the StripLine object
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.StripLinesCollection.IsFixedSize">
            <summary>
            Gets a value indicating whether the collection has a fixed size.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.StripLinesCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the collection is read-only.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.StripLinesCollection.Count">
            <summary>
            Number of items in the collection.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.StripLinesCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the collection is synchronized (thread-safe).
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.StripLinesCollection.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the collection.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.StripLine">
            <summary>
            StripLine class contains properties which define visual appearance 
            of the stripe or line, its position according to the axis and 
            optionally may contain the repeat interval. Text maybe associated 
            with a strip or line.It also contains methods of drawing and hit 
            testing.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.StripLine.#ctor">
            <summary>
            Strip line object constructor.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.StripLine.GetAxis">
            <summary>
            Gets axes to which this object attached to.
            </summary>
            <returns>Axis object reference.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.StripLine.Paint(Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.CommonElements,System.Boolean,Dundas.Olap.WebUIControls.RectangleIntegrity)">
            <summary>
            Draw strip(s) or line(s).
            </summary>
            <param name="graph">Reference to the Chart Graphics object.</param>
            <param name="common">Common objects.</param>
            <param name="drawLinesOnly">Indicates if Lines or Stripes should be drawn.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.StripLine.Draw3DStrip(Dundas.Olap.WebUIControls.ChartGraphics,System.Drawing.RectangleF,System.Boolean)">
            <summary>
            Draws strip line in 3d.
            </summary>
            <param name="graph">Chart graphics.</param>
            <param name="rect">Strip rectangle.</param>
            <param name="horizontal">Indicates that strip is horisontal.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.StripLine.InitAnimation3D(Dundas.Olap.WebUIControls.CommonElements,System.Drawing.RectangleF,System.Single,System.Single,Dundas.Olap.WebUIControls.Matrix3D,Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.Axis)">
            <summary>
            Init 3D Animation for striplines
            </summary>
            <param name="common">Common elements</param>
            <param name="position">2D position of 3d cube</param>
            <param name="positionZ">Z position</param>
            <param name="depth">depth of 3d cube</param>
            <param name="matrix">3D Matrix</param>
            <param name="graph">Chart Graphics</param>
            <param name="axis">Axis</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.StripLine.PaintTitle(Dundas.Olap.WebUIControls.ChartGraphics,System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Draw strip/line title text
            </summary>
            <param name="graph">Chart graphics object.</param>
            <param name="point1">First line point.</param>
            <param name="point2">Second line point.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.StripLine.PaintTitle(Dundas.Olap.WebUIControls.ChartGraphics,System.Drawing.RectangleF)">
            <summary>
            Draw strip/line title text
            </summary>
            <param name="graph">Chart grahics object.</param>
            <param name="rect">Rectangle to draw in.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.StripLine.Invalidate">
            <summary>
            Invalidate chart area
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.StripLine.IntervalOffset">
            <summary>
            Strip or line start position offset.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.StripLine.IntervalOffsetType">
            <summary>
            Strip or line offset type.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.StripLine.Interval">
            <summary>
            Strip or line step size.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.StripLine.IntervalType">
            <summary>
            Strip or line step type.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.StripLine.StripWidth">
            <summary>
            Strip width.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.StripLine.StripWidthType">
            <summary>
            Strip width type.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.StripLine.BackColor">
            <summary>
            Strip Line background color
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.StripLine.BorderColor">
            <summary>
            Strip Line border color
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.StripLine.BorderStyle">
            <summary>
            Strip Line border style
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.StripLine.BorderWidth">
            <summary>
            Strip Line border width
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.StripLine.BackImage">
            <summary>
            Strip Line background image
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.StripLine.BackImageMode">
            <summary>
            Strip Line background image drawing mode.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.StripLine.BackImageTranspColor">
            <summary>
            Background image transparent color.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.StripLine.BackImageAlign">
            <summary>
            Background image alignment used by ClampUnscale drawing mode.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.StripLine.BackGradientType">
            <summary>
            Strip Line background gradient type.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.StripLine.BackGradientEndColor">
            <summary>
            Strip Line background gradient end color
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.StripLine.BackHatchStyle">
            <summary>
            Strip Line hatch style
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.StripLine.Name">
            <summary>
            Strip Line name
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.StripLine.Title">
            <summary>
            Strip Line title
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.StripLine.TitleColor">
            <summary>
            Strip Line title color
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.StripLine.TitleAlignment">
            <summary>
            Strip Line title alignment
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.StripLine.TitleLineAlignment">
            <summary>
            Strip Line title lines alignment
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.StripLine.TitleFont">
            <summary>
            Strip Lines title font
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.StripLine.TitleAngle">
            <summary>
            Strip Lines title angle. Can be set to 0, 90, 180 or 270 degrees.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.StripLine.ToolTip">
            <summary>
            Tooltip of the Strip/Line.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.StripLine.Href">
            <summary>
            URL target of the Strip/Line.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.StripLine.MapAreaAttributes">
            <summary>
            Other attributes of the Strip/Line map area.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.LegendCellType">
            <summary>
            Legend cell type.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.LegendCellType.Text">
            <summary>
            Legend cell contains text.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.LegendCellType.SeriesSymbol">
            <summary>
            Legend cell contains series symbol.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.LegendCellType.Image">
            <summary>
            Legend cell contains image.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.LegendCellColumnType">
            <summary>
            Legend column type.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.LegendCellColumnType.Text">
            <summary>
            Legend column contains text.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.LegendCellColumnType.SeriesSymbol">
            <summary>
            Legend column contains series symbol.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.LegendCellColumn">
            <summary>
            The LegendCellColumn class represents a cell column in a legend, 
            used to extend the functionality of the default legend. It contains 
            visual appearance properties, legend header settings and also determine
            how and in which order cells are formed for each of the legend items.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.LegendCellColumn.#ctor">
            <summary>
            Default public object constructor.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.LegendCellColumn.#ctor(System.String,Dundas.Olap.WebUIControls.LegendCellColumnType,System.String)">
            <summary>
            Legend column object constructor.
            </summary>
            <param name="headerText">Column header text.</param>
            <param name="columnType">Column type.</param>
            <param name="text">Column cell text.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.LegendCellColumn.#ctor(System.String,Dundas.Olap.WebUIControls.LegendCellColumnType,System.String,System.Drawing.ContentAlignment)">
            <summary>
            Legend column object constructor.
            </summary>
            <param name="headerText">Column header text.</param>
            <param name="columnType">Column type.</param>
            <param name="text">Column cell text .</param>
            <param name="alignment">Column cell content alignment.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.LegendCellColumn.Intitialize(System.String,Dundas.Olap.WebUIControls.LegendCellColumnType,System.String,System.Drawing.ContentAlignment)">
            <summary>
            Initializes newly created column object.
            </summary>
            <param name="headerText">Column header text.</param>
            <param name="columnType">Column type.</param>
            <param name="text">Column cell text .</param>
            <param name="alignment">Column cell content alignment.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.LegendCellColumn.ShouldSerializeMargins">
            <summary>
            Returns true if property should be serialized.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.LegendCellColumn.CreateNewCell">
            <summary>
            Creates a new LegendCell object and copies all attributes from the 
            current column into the newly created one.
            </summary>
            <returns>A new copy of the LegendCell</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.LegendCellColumn.Invalidate">
            <summary>
            Invalidates legend associated with column.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.LegendCellColumn.GetLegend">
            <summary>
            Gets legend this column belongs too.
            </summary>
            <returns>Legend this column belongs too.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.LegendCellColumn.SetContainingLegend(Dundas.Olap.WebUIControls.Legend)">
            <summary>
            Sets legend and optionally the legend item this column belongs to.
            </summary>
            <param name="legend">Legend this column belongs to.</param>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.LegendCellColumn.Name">
            <summary>
            Legend column name.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.LegendCellColumn.ColumnType">
            <summary>
            Legend column type.  This is only applicable to items that are automatically generated for the series.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.LegendCellColumn.Text">
            <summary>
            Legend column text.  This is only applicable to items that are automatically generated for the series.  Set ColumnType to Text to use this property.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.LegendCellColumn.TextColor">
            <summary>
            Legend column text color.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.LegendCellColumn.BackColor">
            <summary>
            Legend column text color.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.LegendCellColumn.Font">
            <summary>
            Legend column text font.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.LegendCellColumn.SeriesSymbolSize">
            <summary>
            Legend column series symbol size of the items automatically generated for the series (as a percentage of legend font size).
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.LegendCellColumn.Alignment">
            <summary>
            Legend column content alignment. This is only applicable to items that are automatically generated for the series.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.LegendCellColumn.Margins">
            <summary>
            Legend column margins (as a percentage of legend font size).  This is only applicable to items that are automatically generated for the series.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.LegendCellColumn.ToolTip">
            <summary>
            Legend column tooltip. This is only applicable to items that are automatically generated for the series.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.LegendCellColumn.Href">
            <summary>
            URL target of the legend items automatically generated for the series.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.LegendCellColumn.MapAreaAttributes">
            <summary>
            Other attributes of the legend items automatically generated for the series.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.LegendCellColumn.HeaderText">
            <summary>
            Legend column header text.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.LegendCellColumn.HeaderColor">
            <summary>
            Legend column header text color.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.LegendCellColumn.HeaderBackColor">
            <summary>
            Legend column header back color.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.LegendCellColumn.HeaderFont">
            <summary>
            Legend column header text font.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.LegendCellColumn.HeaderTextAlignment">
            <summary>
            Legend header text horizontal text alignment.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.LegendCellColumn.MinimumWidth">
            <summary>
            Legend column minimum width (as a percentage of legend font size). Set this property to -1 for automatic calculation.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.LegendCellColumn.MaximumWidth">
            <summary>
            Legend column maximum width (as a percentage of legend font size). Set this property to -1 for automatic calculation.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.LegendCell">
            <summary>
            LegendCell class represents a single cell in the chart legend. 
            Legend contains several legend items, each item contains several
            cells which form vertical columns. This class provide properties 
            which determine content of the cell and its visual appearance. It
            also contains method which determine the size of the cell and draw
            cell in the chart.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.LegendCell.#ctor">
            <summary>
            Default public object constructor.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.LegendCell.#ctor(System.String)">
            <summary>
            Legend cell object constructor.
            </summary>
            <param name="text">Cell text or image name depending on the type.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.LegendCell.#ctor(Dundas.Olap.WebUIControls.LegendCellType,System.String)">
            <summary>
            Legend cell object constructor.
            </summary>
            <param name="cellType">Cell type.</param>
            <param name="text">Cell text or image name depending on the type.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.LegendCell.#ctor(Dundas.Olap.WebUIControls.LegendCellType,System.String,System.Drawing.ContentAlignment)">
            <summary>
            Legend cell object constructor.
            </summary>
            <param name="cellType">Cell type.</param>
            <param name="text">Cell text or image name depending on the type.</param>
            <param name="alignment">Cell content alignment.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.LegendCell.Intitialize(Dundas.Olap.WebUIControls.LegendCellType,System.String,System.Drawing.ContentAlignment)">
            <summary>
            Initializes newly created object.
            </summary>
            <param name="cellType">Cell type.</param>
            <param name="text">Cell text or image name depending on the type.</param>
            <param name="alignment">Cell content alignment.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.LegendCell.ShouldSerializeMargins">
            <summary>
            Returns true if property should be serialized.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.LegendCell.ResetCache">
            <summary>
            Resets cached cell values.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.LegendCell.SetCellPosition(Dundas.Olap.WebUIControls.ChartGraphics,System.Int32,System.Int32,System.Drawing.Rectangle,System.Int32,System.Drawing.Font,System.Drawing.Size)">
            <summary>
            Sets cell position in relative coordinates.
            </summary>
            <param name="graph">Chart graphics.</param>
            <param name="columnIndex">Cell column index.</param>
            <param name="rowIndex">Cell row index.</param>
            <param name="position">Cell position.</param>
            <param name="fontSizeReducedBy">Adjustment value used to reduce font sizes.</param>
            <param name="legendAutoFont">Auto fit font used in the legend.</param>
            <param name="singleWCharacterSize">Size of the 'W' character used to calculate elements.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.LegendCell.MeasureCell(Dundas.Olap.WebUIControls.ChartGraphics,System.Int32,System.Drawing.Font,System.Drawing.Size)">
            <summary>
            Measures legend cell size in chart relative coordinates.
            </summary>
            <param name="graph">
            Chart graphics.
            </param>
            <param name="fontSizeReducedBy">
            A positive or negative integer value that determines the how standard cell font size
            should be adjusted. As a result smaller or larger font can be used.
            </param>
            <param name="legendAutoFont">
            Auto fit font used in the legend.
            </param>
            <param name="singleWCharacterSize">
            Size of the 'W' character used to calculate elements.
            </param>
            <returns>Legend cell size.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.LegendCell.GetCellBackColor">
            <summary>
            Gets cell background color.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.LegendCell.GetCellFont(System.Drawing.Font,System.Int32,System.Boolean@)">
            <summary>
            Gets default cell font. Font can be specified in the cell, column or in the legend.
            </summary>
            <param name="legendAutoFont">Auto fit font used in the legend.</param>
            <param name="fontSizeReducedBy">Number of points legend auto-font reduced by.</param>
            <param name="disposeFont">Returns a flag if result font object should be disposed.</param>
            <returns>Default cell font.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.LegendCell.GetCellToolTip">
            <summary>
            Helper function that returns cell tooltip.
            </summary>
            <remarks>
            Tooltip can be set in the cell or in the legend item. Cell 
            tooltip always has a higher priority.
            </remarks>
            <returns>Returns cell text.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.LegendCell.GetCellHref">
            <summary>
            Helper function that returns cell href.
            </summary>
            <remarks>
            Href can be set in the cell or in the legend item. Cell 
            tooltip always has a higher priority.
            </remarks>
            <returns>Returns cell text.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.LegendCell.GetCellMapAreaAttributes">
            <summary>
            Helper function that returns cell href.
            </summary>
            <remarks>
            Href can be set in the cell or in the legend item. Cell 
            tooltip always has a higher priority.
            </remarks>
            <returns>Returns cell text.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.LegendCell.GetCellText">
            <summary>
            Helper function that returns the exact text presented in the cell.
            </summary>
            <remarks>
            This method replaces the "\n" substring with the new line character 
            and automatically wrap text if required.
            </remarks>
            <returns>Returns cell text.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.LegendCell.GetCellTextColor">
            <summary>
            Helper function that returns cell text color.
            </summary>
            <returns>Cell text color.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.LegendCell.Invalidate">
            <summary>
            Invalidates legend associated with column/cell.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.LegendCell.SetContainingLegend(Dundas.Olap.WebUIControls.Legend,Dundas.Olap.WebUIControls.LegendItem)">
            <summary>
            Sets legend and optionally the legend item this column/cell belongs to.
            </summary>
            <param name="legend">Legend this column/cell belongs to.</param>
            <param name="legendItem">Legend item this column/cell belongs to.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.LegendCell.GetLegend">
            <summary>
            Gets legend this column/cell belongs too.
            </summary>
            <returns>Legend this column/cell belongs too.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.LegendCell.GetLegendItem">
            <summary>
            Gets legend item this cell belongs too.
            </summary>
            <returns>Legend item this column/cell belongs too.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.LegendCell.Paint(Dundas.Olap.WebUIControls.ChartGraphics,System.Int32,System.Drawing.Font,System.Drawing.Size,System.Drawing.PointF)">
            <summary>
            Paints content of the legend cell.
            </summary>
            <param name="chartGraph">Chart graphics to draw content on.</param>
            <param name="fontSizeReducedBy">Number that determines how much the cell font should be reduced by.</param>
            <param name="legendAutoFont">Auto-fit font used in the legend.</param>
            <param name="singleWCharacterSize">Size of the 'W' character in auto-fit font.</param>
            <param name="animationLocationAdjustment">Animation location adjustment point.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.LegendCell.PaintCellText(Dundas.Olap.WebUIControls.ChartGraphics,System.Int32,System.Drawing.Font,System.Drawing.Size,System.Drawing.PointF)">
            <summary>
            Draw legend cell text.
            </summary>
            <param name="chartGraph">Chart graphics to draw the text on.</param>
            <param name="fontSizeReducedBy">Number that determines how much the cell font should be reduced by.</param>
            <param name="legendAutoFont">Auto-fit font used in the legend.</param>
            <param name="singleWCharacterSize">Size of the 'W' character in auto-fit font.</param>
            <param name="animationLocationAdjustment">Animation location adjustment point.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.LegendCell.PaintCellImage(Dundas.Olap.WebUIControls.ChartGraphics,System.Int32,System.Drawing.Font,System.Drawing.Size,System.Drawing.PointF)">
            <summary>
            Paints cell image.
            </summary>
            <param name="chartGraph">Graphics used to draw cell image.</param>
            <param name="fontSizeReducedBy">Number that determines how much the cell font should be reduced by.</param>
            <param name="legendAutoFont">Auto-fit font used in the legend.</param>
            <param name="singleWCharacterSize">Size of the 'W' character in auto-fit font.</param>
            <param name="animationLocationAdjustment">Animation location adjustment point.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.LegendCell.PaintCellSeriesSymbol(Dundas.Olap.WebUIControls.ChartGraphics,System.Int32,System.Drawing.Font,System.Drawing.SizeF,System.Drawing.PointF)">
            <summary>
            Paint a series symbol in the cell.
            </summary>
            <param name="chartGraph">Chart ggraphics.</param>
            <param name="fontSizeReducedBy">Number that determines how much the cell font should be reduced by.</param>
            <param name="legendAutoFont">Auto-fit font used in the legend.</param>
            <param name="singleWCharacterSize">Size of the 'W' character in auto-fit font.</param>
            <param name="animationLocationAdjustment">Animation location adjustment point.</param>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.LegendCell.Name">
            <summary>
            Legend cell name.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.LegendCell.CellType">
            <summary>
            Legend cell type.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.LegendCell.Text">
            <summary>
            Legend cell text. Set CellType to Text to use this property.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.LegendCell.TextColor">
            <summary>
            Legend cell text color. Set CellType to Text to use this property.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.LegendCell.BackColor">
            <summary>
            Legend cell back color.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.LegendCell.Font">
            <summary>
            Legend cell text font. Set CellType to Text to use this property.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.LegendCell.Image">
            <summary>
            Legend cell image name. Set CellType to Image to use this property.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.LegendCell.ImageTranspColor">
            <summary>
            Legend cell image transparent color. Set CellType to Image to use this property.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.LegendCell.ImageSize">
            <summary>
            Legend cell image size (as a percentage of legend font size). Set CellType to Image to use this property.
            </summary>
            <remarks>
            If property is set to Size.Empty, then original image pixels size is used.
            </remarks>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.LegendCell.SeriesSymbolSize">
            <summary>
            Legend cell series symbol size (as a percentage of legend font size). Set CellType to SeriesSymbol to use this property.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.LegendCell.Alignment">
            <summary>
            Legend cell content alignment.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.LegendCell.CellSpan">
            <summary>
            Indicates the number of horizontal cells used to draw the content.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.LegendCell.Margins">
            <summary>
            Legend cell margins (as a percentage of legend font size).
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.LegendCell.ToolTip">
            <summary>
            Legend cell tooltip.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.LegendCell.Href">
            <summary>
            URL target of the legend cell.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.LegendCell.MapAreaAttributes">
            <summary>
            Other attributes of the legend cell.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.Margins">
            <summary>
            This class represents the margins for various chart elements. 
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Margins.#ctor">
            <summary>
            Default object constructor.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Margins.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Object constructor.
            </summary>
            <param name="top">Top margin.</param>
            <param name="bottom">Bottom margin.</param>
            <param name="left">Left margin.</param>
            <param name="right">Right margin.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Margins.ToString">
            <summary>
            Convert margins object to string.
            </summary>
            <returns>A string that represents this margins object.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Margins.Equals(System.Object)">
            <summary>
            Determines whether the specified Object is equal to the current Object.
            </summary>
            <param name="obj">
            The Object to compare with the current Object.
            </param>
            <returns>
            true if the specified Object is equal to the current Object; otherwise, false.
            </returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Margins.GetHashCode">
            <summary>
            Gets object hash code.
            </summary>
            <returns>Margins object hash value.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Margins.IsEmpty">
            <summary>
            Checks if margins are empty.
            </summary>
            <returns>
            <b>True</b> if all margins values are zeros.
            </returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Margins.ToRectangleF">
            <summary>
            Converts Margins class to RectangleF class.
            </summary>
            <returns>A RectangleF class that contains margins.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Margins.Invalidate">
            <summary>
            Invalidates chart.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Margins.Top">
            <summary>
            Top margin.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Margins.Bottom">
            <summary>
            Bottom margin.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Margins.Left">
            <summary>
            Left margin.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Margins.Right">
            <summary>
            Right margin.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.LegendCellCollection">
            <summary>
            <b>LegendCellCollection</b> is a strongly typed collection of LegendCell objects.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.LegendCellCollection.#ctor">
            <summary>
            Default public constructor.
            </summary>
            <remarks>
            This constructor is for internal use and should not be part of documentation.
            </remarks>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.LegendCellCollection.#ctor(Dundas.Olap.WebUIControls.LegendItem)">
            <summary>
            Default public constructor.
            </summary>
            <remarks>
            This constructor is for internal use and should not be part of documentation.
            </remarks>
            <param name="legendItem">Legend item this collection belongs to.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.LegendCellCollection.Remove(System.String)">
            <summary>
            Removes the cell with the specified name from the collection.
            </summary>
            <param name="name">
            Name of the cell to be removed.
            </param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.LegendCellCollection.Remove(Dundas.Olap.WebUIControls.LegendCell)">
            <summary>
            Removes the given cell from the collection.
            </summary>
            <param name="cell">
            <see cref="T:Dundas.Olap.WebUIControls.LegendCell"/> object to be removed.
            </param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.LegendCellCollection.Add(Dundas.Olap.WebUIControls.LegendCell)">
            <summary>
            Adds a cell to the end of the collection.
            </summary>
            <param name="cell">
            <see cref="T:Dundas.Olap.WebUIControls.LegendCell"/> object to add.
            </param>
            <returns>
            Index of the newly added object.
            </returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.LegendCellCollection.Add(Dundas.Olap.WebUIControls.LegendCellType,System.String,System.Drawing.ContentAlignment)">
            <summary>
            Adds a cell to the end of the collection.
            </summary>
            <param name="cellType">
            A <see cref="T:Dundas.Olap.WebUIControls.LegendCellType"/> value representing the cell type.
            </param>
            <param name="text">
            A <b>string</b> value representing cell text or image name depending 
            on the <b>cellType</b> parameter.
            </param>
            <param name="alignment">
            A <see cref="T:System.Drawing.ContentAlignment"/> value representing cell content alignment.
            </param>
            <returns>
            Index of the newly added object.
            </returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.LegendCellCollection.Insert(System.Int32,Dundas.Olap.WebUIControls.LegendCell)">
            <summary>
            Inserts a cell into the collection.
            </summary>
            <param name="index">
            Index to insert the object at.
            </param>
            <param name="cell">
            <see cref="T:Dundas.Olap.WebUIControls.LegendCell"/> object to insert.
            </param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.LegendCellCollection.Insert(System.Int32,Dundas.Olap.WebUIControls.LegendCellType,System.String,System.Drawing.ContentAlignment)">
            <summary>
            Inserts a cell into the collection.
            </summary>
            <param name="index">
            Index to insert the object at.
            </param>
            <param name="cellType">
            A <see cref="T:Dundas.Olap.WebUIControls.LegendCellType"/> value representing the cell type.
            </param>
            <param name="text">
            A <b>string</b> value representing cell text or image name depending 
            on the <b>cellType</b> parameter.
            </param>
            <param name="alignment">
            A <see cref="T:System.Drawing.ContentAlignment"/> value representing cell content alignment.
            </param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.LegendCellCollection.OnInsert(System.Int32,System.Object)">
            <summary>
            Called before the new item is inserted.
            </summary>
            <param name="index">Item index.</param>
            <param name="value">Item object.</param>
            <remarks>
            This is an internal method and should not be part of the documentation.
            </remarks>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.LegendCellCollection.OnInsertComplete(System.Int32,System.Object)">
            <summary>
            After new item inserted.
            </summary>
            <param name="index">Item index.</param>
            <param name="value">Item object.</param>
            <remarks>
            This is an internal method and should not be part of the documentation.
            </remarks>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.LegendCellCollection.OnRemoveComplete(System.Int32,System.Object)">
            <summary>
            After item removed.
            </summary>
            <param name="index">Item index.</param>
            <param name="value">Item object.</param>
            <remarks>
            This is an internal method and should not be part of the documentation.
            </remarks>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.LegendCellCollection.OnClearComplete">
            <summary>
            After all items removed.
            </summary>
            <remarks>
            This is an internal method and should not be part of the documentation.
            </remarks>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.LegendCellCollection.OnSetComplete(System.Int32,System.Object,System.Object)">
            <summary>
            After items is set.
            </summary>
            <param name="index">The zero-based index at which oldValue can be found.</param>
            <param name="oldValue">The value to replace with newValue.</param>
            <param name="newValue">The new value of the element at index.</param>
            <remarks>
            This is an internal method and should not be part of the documentation.
            </remarks>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.LegendCellCollection.IndexOf(Dundas.Olap.WebUIControls.LegendCell)">
            <summary>
            Gets index of specified cell.
            </summary>
            <param name="cell">Cell to get the collection index for.</param>
            <returns>Index in the collection or -1 if do not exsists.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.LegendCellCollection.Invalidate">
            <summary>
            Invalidates legend associated with cell collection.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.LegendCellCollection.AssignUniqueName(Dundas.Olap.WebUIControls.LegendCell)">
            <summary>
            Assigns a unique name to the cell object.
            </summary>
            <param name="cell">LegendCell object to be named.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.LegendCellCollection.FindByName(System.String)">
            <summary>
            Finds a cell in the collection by name.
            </summary>
            <param name="name">
            Name of the cell to find.
            </param>
            <returns>
            <see cref="T:Dundas.Olap.WebUIControls.LegendCell"/> object, or null (or nothing) if it does not exist.
            </returns>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.LegendCellCollection.Item(System.Object)">
            <summary>
            Legend item cell collection indexer.
            </summary>
            <remarks>
            The <b>LegendCell</b> object name or index can be provided as a parameter. Returns the <see cref="T:Dundas.Olap.WebUIControls.LegendCell"/> object. 
            </remarks>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.LegendCellColumnCollection">
            <summary>
            <b>LegendCellColumnCollection</b> is a strongly typed collection
            of LegendCellColumn objects.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.LegendCellColumnCollection.#ctor">
            <summary>
            Default public constructor.
            </summary>
            <remarks>
            This constructor is for internal use and should not be part of documentation.
            </remarks>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.LegendCellColumnCollection.#ctor(Dundas.Olap.WebUIControls.Legend)">
            <summary>
            Default public constructor.
            </summary>
            <remarks>
            This constructor is for internal use and should not be part of documentation.
            </remarks>
            <param name="legend">
            Chart legend this collection belongs to
            </param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.LegendCellColumnCollection.Remove(System.String)">
            <summary>
            Removes the column with the specified name from the collection.
            </summary>
            <param name="name">
            Name of the column to be removed.
            </param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.LegendCellColumnCollection.Remove(Dundas.Olap.WebUIControls.LegendCellColumn)">
            <summary>
            Removes the given column from the collection.
            </summary>
            <param name="column">
            <see cref="T:Dundas.Olap.WebUIControls.LegendCellColumn"/> object to be removed.
            </param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.LegendCellColumnCollection.Add(Dundas.Olap.WebUIControls.LegendCellColumn)">
            <summary>
            Adds a column to the end of the collection.
            </summary>
            <param name="column">
            <see cref="T:Dundas.Olap.WebUIControls.LegendCellColumn"/> object to add.
            </param>
            <returns>
            Index of the newly added object.
            </returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.LegendCellColumnCollection.Add(System.String,Dundas.Olap.WebUIControls.LegendCellColumnType,System.String,System.Drawing.ContentAlignment)">
            <summary>
            Adds a column to the end of the collection.
            </summary>
            <param name="headerText">
            A <b>string</b> value representing column header text.
            </param>
            <param name="columnType">
            A <see cref="T:Dundas.Olap.WebUIControls.LegendCellColumnType"/> value representing the column type.
            </param>
            <param name="text">
            A <b>string</b> value representing cell text or image name depending 
            on the <b>cellType</b> parameter.
            </param>
            <param name="alignment">
            A <see cref="T:System.Drawing.ContentAlignment"/> value representing cell content alignment.
            </param>
            <returns>
            Index of the newly added object.
            </returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.LegendCellColumnCollection.Insert(System.Int32,Dundas.Olap.WebUIControls.LegendCellColumn)">
            <summary>
            Inserts a column into the collection.
            </summary>
            <param name="index">
            Index to insert the object at.
            </param>
            <param name="column">
            <see cref="T:Dundas.Olap.WebUIControls.LegendCellColumn"/> object to insert.
            </param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.LegendCellColumnCollection.Insert(System.Int32,System.String,Dundas.Olap.WebUIControls.LegendCellColumnType,System.String,System.Drawing.ContentAlignment)">
            <summary>
            Inserts a legend column into the collection.
            </summary>
            <param name="index">
            Index to insert the object at.
            </param>
            <param name="headerText">
            A <b>string</b> value representing column header text.
            </param>
            <param name="columnType">
            A <see cref="T:Dundas.Olap.WebUIControls.LegendCellColumnType"/> value representing the column type.
            </param>
            <param name="text">
            A <b>string</b> value representing column cell text or image name depending 
            on the <b>cellType</b> parameter.
            </param>
            <param name="alignment">
            A <see cref="T:System.Drawing.ContentAlignment"/> value representing column cell content alignment.
            </param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.LegendCellColumnCollection.OnInsert(System.Int32,System.Object)">
            <summary>
            Called before the new item is inserted.
            </summary>
            <param name="index">Item index.</param>
            <param name="value">Item object.</param>
            <remarks>
            This is an internal method and should not be part of the documentation.
            </remarks>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.LegendCellColumnCollection.OnInsertComplete(System.Int32,System.Object)">
            <summary>
            After new item inserted.
            </summary>
            <param name="index">Item index.</param>
            <param name="value">Item object.</param>
            <remarks>
            This is an internal method and should not be part of the documentation.
            </remarks>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.LegendCellColumnCollection.OnRemoveComplete(System.Int32,System.Object)">
            <summary>
            After item removed.
            </summary>
            <param name="index">Item index.</param>
            <param name="value">Item object.</param>
            <remarks>
            This is an internal method and should not be part of the documentation.
            </remarks>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.LegendCellColumnCollection.OnClearComplete">
            <summary>
            After all items removed.
            </summary>
            <remarks>
            This is an internal method and should not be part of the documentation.
            </remarks>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.LegendCellColumnCollection.OnSetComplete(System.Int32,System.Object,System.Object)">
            <summary>
            After items is set.
            </summary>
            <param name="index">The zero-based index at which oldValue can be found.</param>
            <param name="oldValue">The value to replace with newValue.</param>
            <param name="newValue">The new value of the element at index.</param>
            <remarks>
            This is an internal method and should not be part of the documentation.
            </remarks>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.LegendCellColumnCollection.Invalidate">
            <summary>
            Invalidates legend associated with cell collection.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.LegendCellColumnCollection.AssignUniqueName(Dundas.Olap.WebUIControls.LegendCellColumn)">
            <summary>
            Assigns a unique name to the legend column object.
            </summary>
            <param name="column">LegendCellColumn object to be named.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.LegendCellColumnCollection.FindByName(System.String)">
            <summary>
            Finds a column in the collection by name.
            </summary>
            <param name="name">
            Name of the column to find.
            </param>
            <returns>
            <see cref="T:Dundas.Olap.WebUIControls.LegendCellColumn"/> object, or null (or nothing) if it does not exist.
            </returns>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.LegendCellColumnCollection.Item(System.Object)">
            <summary>
            Legend column collection indexer.
            </summary>
            <remarks>
            The <b>LegendCellColumn</b> object name or index can be provided as a parameter. Returns the <see cref="T:Dundas.Olap.WebUIControls.LegendCellColumn"/> object. 
            </remarks>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.LegendSeparatorType">
            <summary>
            Legend items visual separation types
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.LegendSeparatorType.None">
            <summary>
            No separator shown.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.LegendSeparatorType.Line">
            <summary>
            Sindle solid line separator
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.LegendSeparatorType.ThickLine">
            <summary>
            Sindle solid thick line separator
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.LegendSeparatorType.DoubleLine">
            <summary>
            Double solid line separator
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.LegendSeparatorType.DashLine">
            <summary>
            Single dash line separator
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.LegendSeparatorType.DotLine">
            <summary>
            Single dot line separator
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.LegendSeparatorType.GradientLine">
            <summary>
            Gradient solid line separator
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.LegendSeparatorType.ThickGradientLine">
            <summary>
            Thick gradient solid line separator
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.LegendImageStyle">
            <summary>
            Type of the series or data point representation in legend
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.LegendImageStyle.Rectangle">
            <summary>
            Rectangle filled with color.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.LegendImageStyle.Line">
            <summary>
            Line.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.LegendImageStyle.Marker">
            <summary>
            Marker
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.LegendStyle">
            <summary>
            Legend style.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.LegendStyle.Column">
            <summary>
            One column, many rows.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.LegendStyle.Row">
            <summary>
            One row, many columns.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.LegendStyle.Table">
            <summary>
            Many column, many rows.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.LegendTableStyle">
            <summary>
            Legend table style.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.LegendTableStyle.Auto">
            <summary>
            Number of rows and columns in legend table is automatically calculated.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.LegendTableStyle.Wide">
            <summary>
            Legend tries to create more columns than rows in the table.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.LegendTableStyle.Tall">
            <summary>
            Legend tries to create more rows than columns in the table.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.LegendDocking">
            <summary>
            Chart legend docking.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.LegendDocking.Top">
            <summary>
            Docked to the top.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.LegendDocking.Right">
            <summary>
            Docked to the right.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.LegendDocking.Bottom">
            <summary>
            Docked to the botom.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.LegendDocking.Left">
            <summary>
            Docked to the left.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.Legend">
            <summary>
            Legend class represents a single chart legend. It contains visual
            appearance, position and content properties. Legend class is also 
            responible for drawing and positionning of the legend.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Legend.#ctor">
            <summary>
            Legend object constructor
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Legend.#ctor(Dundas.Olap.WebUIControls.CommonElements)">
            <summary>
            Legend object constructor
            </summary>
            <param name="common">Reference to common elements.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Legend.#ctor(System.String)">
            <summary>
            Legend object constructor
            </summary>
            <param name="name">Legend name.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Legend.#ctor(Dundas.Olap.WebUIControls.CommonElements,System.String)">
            <summary>
            Legend object constructor
            </summary>
            <param name="common">Reference to common elements.</param>
            <param name="name">Legend name.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Legend.RecalcLegendInfo(Dundas.Olap.WebUIControls.ChartGraphics)">
            <summary>
            Recalculates legend information:
              - legend items collection
              - maximum text rectangle
            </summary>
            <param name="chartGraph">Reference to the chart graphics.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Legend.GetCellPosition(Dundas.Olap.WebUIControls.ChartGraphics,System.Int32,System.Int32,System.Int32,System.Drawing.Size)">
            <summary>
            Gets single cell position in relative coordinates.
            </summary>
            <param name="chartGraph">Chart graphics.</param>
            <param name="columnIndex">Cell column index.</param>
            <param name="rowIndex">Cell row index.</param>
            <param name="cellIndex">Index of the cell in the legend item.</param>
            <param name="itemHalfSpacing">Half legend item spacing in relative coordinates.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Legend.GetOptimalSize(Dundas.Olap.WebUIControls.ChartGraphics,System.Drawing.SizeF)">
            <summary>
            Calculates the optimal size of the legend.
            </summary>
            <param name="chartGraph">Chart graphics object.</param>
            <param name="maxSizeRel">Max size for the legend.</param>
            <returns>Legend optimal size.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Legend.CalcLegendPosition(Dundas.Olap.WebUIControls.ChartGraphics,System.Drawing.RectangleF@,System.Single,System.Single)">
            <summary>
            Recalculates legend position.
            </summary>
            <param name="chartGraph">Chart graphics used.</param>
            <param name="chartAreasRectangle">Area where the legend should be positioned.</param>
            <param name="maxLegendSize">Maximum legend size as a percentage of the area.</param>
            <param name="elementSpacing">Spacing size as a percentage of the area.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Legend.GetNumberOfRowsAndColumns(Dundas.Olap.WebUIControls.ChartGraphics,System.Drawing.Size,System.Int32,System.Int32[]@,System.Int32@)">
            <summary>
            Get number of columns and rows that can be fit in specified size.
            </summary>
            <param name="chartGraph">Chart graphics.</param>
            <param name="legendSize">Legend size.</param>
            <param name="numberOfItemsToCheck">Number of legend items to check.</param>
            <param name="numberOfRowsPerColumn">Array with number of rows per each column.</param>
            <param name="columnNumber">Returns number of columns.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Legend.GetNumberOfRowsAndColumns(Dundas.Olap.WebUIControls.ChartGraphics,System.Drawing.Size,System.Int32,System.Int32[]@,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            Get number of columns and rows that can be fit in specified size.
            </summary>
            <param name="chartGraph">Chart graphics.</param>
            <param name="legendSize">Legend size.</param>
            <param name="numberOfItemsToCheck">Legend items number to check.</param>
            <param name="numberOfRowsPerColumn">Array with number of rows per each column.</param>
            <param name="columnNumber">Returns number of columns.</param>
            <param name="horSpaceLeft">Returns horizontal spacing left.</param>
            <param name="vertSpaceLeft">Returns vertical spacing left.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Legend.GetHighestColumnIndex">
            <summary>
            Gets index of the highest column in the legend.
            </summary>
            <returns>Highest legend column index.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Legend.GetColumnHeight(System.Int32)">
            <summary>
            Gets column height.
            </summary>
            <param name="columnIndex">Index of the column to get the height for.</param>
            <returns>Column height in relative coordinates.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Legend.GetMaximumNumberOfRows">
            <summary>
            Gets maximum number of rows in all columns.
            </summary>
            <returns>Maximum number of rows.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Legend.GetMaximumNumberOfRows(System.Int32[])">
            <summary>
            Gets maximum number of rows in all columns.
            </summary>
            <param name="rowsPerColumn">Array that stores number of rows per column.</param>
            <returns>Maximum number of rows.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Legend.CheckLegendItemsFit(Dundas.Olap.WebUIControls.ChartGraphics,System.Drawing.Size,System.Int32,System.Int32,System.Int32,System.Int32[],System.Int32[0:,0:]@,System.Int32[0:,0:]@,System.Int32@,System.Int32@)">
            <summary>
            Checks if specified legend will fit the specified size.
            </summary>
            <param name="graph">Chart graphics.</param>
            <param name="legendItemsAreaSize">Area that legend items must fit.</param>
            <param name="numberOfItemsToCheck">Number of items that should be fitted.</param>
            <param name="fontSizeReducedBy">Number of points the standard legend font is reduced by auto-fitting algorithm.</param>
            <param name="numberOfColumns">Legend column number.</param>
            <param name="numberOfRowsPerColumn">Array of number of rows per column.</param>
            <param name="subColumnSizes">Returns array of sub-column size.</param>
            <param name="cellHeights">Returns array of cell heights.</param>
            <param name="horizontalSpaceLeft">Returns horizontal space left.</param>
            <param name="verticalSpaceLeft">Returns vertical space left.</param>
            <returns>True if items fit.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Legend.GetNumberOfCells">
            <summary>
            Gets maximum number of legend cells defined as Column objects
            or Cells in the custom legend items.
            </summary>
            <returns>Maximum number of cells.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Legend.FillLegendItemsCollection">
            <summary>
            Add all series legend into items collection and then
            add custom legend items.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Legend.Paint(Dundas.Olap.WebUIControls.ChartGraphics)">
            <summary>
            Paints legend using chart graphics object.
            </summary>
            <param name="chartGraph">The graph provides drawing object to the display device. A Graphics object is associated with a specific device context.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Legend.GetTitleSize(Dundas.Olap.WebUIControls.ChartGraphics,System.Drawing.Size)">
            <summary>
            Gets legend title size in relative coordinates.
            </summary>
            <param name="chartGraph">Chart graphics.</param>
            <param name="titleMaxSize">Maximum possible legend title size.</param>
            <returns>Legend yitle size.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Legend.GetHeaderSize(Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.LegendCellColumn)">
            <summary>
            Gets legend header size in relative coordinates.
            </summary>
            <param name="chartGraph">Chart graphics.</param>
            <param name="legendColumn">Legend column to get the header for.</param>
            <returns>Legend yitle size.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Legend.DrawLegendHeader(Dundas.Olap.WebUIControls.ChartGraphics)">
            <summary>
            Draw Legend header.
            </summary>
            <param name="chartGraph">Chart graphics to draw the header on.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Legend.DrawLegendTitle(Dundas.Olap.WebUIControls.ChartGraphics)">
            <summary>
            Draw Legend title.
            </summary>
            <param name="chartGraph">Chart graphics to draw the title on.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Legend.GetSeparatorSize(Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.LegendSeparatorType)">
            <summary>
            Gets legend separator size in pixels
            </summary>
            <param name="chartGraph">Chart ggraphics.</param>
            <param name="separatorType">Separator type.</param>
            <returns>Separator size in relative coordinates.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Legend.DrawSeparator(Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.LegendSeparatorType,System.Drawing.Color,System.Boolean,System.Drawing.Rectangle)">
            <summary>
            Draws specified legend separator.
            </summary>
            <param name="chartGraph">Chart graphics.</param>
            <param name="separatorType">Separator type.</param>
            <param name="color">Separator color.</param>
            <param name="horizontal">Flag that determines if separator is vertical or horizontal.</param>
            <param name="position">Separator position.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Legend.GetBorderSize">
            <summary>
            Get visible legend border size.
            </summary>
            <returns>Visible legend border size.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Legend.GetLegendTableStyle(Dundas.Olap.WebUIControls.ChartGraphics)">
            <summary>
            Helper method which returns current legend table style.
            </summary>
            <param name="chartGraph">Chart graphics.</param>
            <returns>Legend table style.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Legend.IsEnabled">
            <summary>
            Helper method that checks if legend is enabled.
            </summary>
            <returns>True if legend is enabled.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Legend.Invalidate(System.Boolean)">
            <summary>
            Invalidate chart legend when one of the attributes is changed
            </summary>
            <param name="invalidateLegendOnly">Indicates that only legend area should be invalidated.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Legend.SelectLegendBackground(Dundas.Olap.WebUIControls.ChartGraphics)">
            <summary>
            Checks if legend background is selected.
            </summary>
            <param name="chartGraph">Chart Graphics object</param>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Legend.Name">
            <summary>
            Legend name.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Legend.DockToChartArea">
            <summary>
            Chart area name the legend is docked to inside or outside.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Legend.DockInsideChartArea">
            <summary>
            Indicates that the legend is docked inside the chart area.  This property is only available when DockToChartArea is set.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Legend.Position">
            <summary>
            Legend rectangle position
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Legend.EquallySpacedItems">
            <summary>
            Indicates that all legend items are equally spaced.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Legend.Enabled">
            <summary>
            Legend enabled flag
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Legend.AutoFitText">
            <summary>
            Legend text automatic fitting flag
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Legend.LegendStyle">
            <summary>
            Legend style
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Legend.AutoFitMinFontSize">
            <summary>
            Minimum font size that can be used by the legend text auto-fitting algorithm.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Legend.MaxAutoSize">
            <summary>
            Maximum size of the legend auto position. If legend docked to the left or right
            it determines the max width of legen in percentage. If legend docked to the top 
            or bottomit determines the max height.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Legend.CellColumns">
            <summary>
            Legend columns collection.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Legend.TableStyle">
            <summary>
            Legend table style.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Legend.HeaderSeparator">
            <summary>
            Legend header visual separator type.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Legend.HeaderSeparatorColor">
            <summary>
            Legend header visual separator color.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Legend.ItemColumnSeparator">
            <summary>
            Legend table columns visual separator type.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Legend.ItemColumnSeparatorColor">
            <summary>
            Legend table columns visual separator color.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Legend.ItemColumnSpacing">
            <summary>
            Legend table column spacing calculated as a percentage of the legend text font.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Legend.BackColor">
            <summary>
            Legend background color
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Legend.BorderColor">
            <summary>
            Legend border color
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Legend.BorderStyle">
            <summary>
            Legend border style
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Legend.BorderWidth">
            <summary>
            Legend border width
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Legend.BackImage">
            <summary>
            Legend background image
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Legend.BackImageMode">
            <summary>
            Legend background image drawing mode.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Legend.BackImageTranspColor">
            <summary>
            Background image transparent color.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Legend.BackImageAlign">
            <summary>
            Background image alignment used by ClampUnscale drawing mode.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Legend.BackGradientType">
            <summary>
            Legend background gradient type.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Legend.BackGradientEndColor">
            <summary>
            Legend background gradient end color
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Legend.BackHatchStyle">
            <summary>
            Legend hatch style
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Legend.Font">
            <summary>
            Legend font
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Legend.FontColor">
            <summary>
            Legend font color
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Legend.Alignment">
            <summary>
            Legend alignment
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Legend.Docking">
            <summary>
            Legend docking
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Legend.ShadowOffset">
            <summary>
            Legend shadow offset
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Legend.ShadowColor">
            <summary>
            Legend shadow color
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Legend.InsideChartArea">
            <summary>
            Specify chart area name inside which the legend is drawn
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Legend.CustomItems">
            <summary>
            Legend custom items collection
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Legend.TextWrapThreshold">
            <summary>
            Defines preferred number of characters in the legend text after which it will be wrapped.
            </summary>
            <remarks>
            When legend text exceeds the value defined in the <b>TextWrapThreshold</b> property it will be
            automatically wrapped on the next whitespace. Text will not be wrapped if there is no whitespace
            characters in the text. Set this property to zero to disable the feature.
            </remarks>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Legend.Reversed">
            <summary>
            Indicates that legend items are shown in the reversed order. This property only affects 
            legend items automatically added for the chart series and has no effect on custom legend items.
            </summary>
            <remarks>
            When the <b>Reversed</b> property is set to <b>Auto</b>, the legend will automatically be reversed 
            if StackedColumn, StackedColumn100, StackedArea or StackedArea100 chart types are used.
            </remarks>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Legend.InterlacedRows">
            <summary>
            Indicate that legend rows should be drawn with interlaced background color.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Legend.InterlacedRowsColor">
            <summary>
            Legend interlaced rows background color.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Legend.Title">
            <summary>
            Legend title text.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Legend.TitleColor">
            <summary>
            Legend title text color.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Legend.TitleBackColor">
            <summary>
            Legend title text background color.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Legend.TitleFont">
            <summary>
            Legend title font.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Legend.TitleAlignment">
            <summary>
            Legend title horizontal text alignment.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Legend.TitleSeparator">
            <summary>
            Legend title visual separator type.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Legend.TitleSeparatorColor">
            <summary>
            Legend title visual separator color.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.LegendCollection">
            <summary>
            LegendCollection class is a strongly typed collection of legends.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.LegendCollection.#ctor">
            <summary>
            Legend collection object constructor.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.LegendCollection.#ctor(Dundas.Olap.WebUIControls.CommonElements)">
            <summary>
            Legend collection constructor.
            </summary>
            <param name="common">Reference to common elements.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.LegendCollection.Add(System.String)">
            <summary>
            Adds one legend into the collection.
            </summary>
            <param name="name">Legend name.</param>
            <returns>Index of newly added item.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.LegendCollection.Insert(System.Int32,System.String)">
            <summary>
            Insert one legend into the collection.
            </summary>
            <param name="index">Legend index to insert at.</param>
            <param name="name">Legend name.</param>
            <returns>Index of newly added item.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.LegendCollection.Clear">
            <summary>
            Removes all items from the collection.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.LegendCollection.Contains(System.Object)">
            <summary>
            Check if specified object exists in the collection.
            </summary>
            <param name="value">Object to check.</param>
            <returns>True if object exist.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.LegendCollection.IndexOf(System.Object)">
            <summary>
            Gets first index of the collection item equal to the object provided.
            </summary>
            <param name="value">Object to look for.</param>
            <returns>Index of found object.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.LegendCollection.Remove(System.Object)">
            <summary>
            Remove object from the collection
            </summary>
            <param name="value">Value to be removed.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.LegendCollection.RemoveAt(System.Int32)">
            <summary>
            Remove item from the collection by index.
            </summary>
            <param name="index">Zero based index.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.LegendCollection.Add(System.Object)">
            <summary>
            Add legend item object into the collection.
            </summary>
            <param name="value">Legend to add.</param>
            <returns>Index of the newly added object.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.LegendCollection.Insert(System.Int32,Dundas.Olap.WebUIControls.Legend)">
            <summary>
            Insert legend item object into the collection.
            </summary>
            <param name="index">Zero based index.</param>
            <param name="value">Legend to insert.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.LegendCollection.Insert(System.Int32,System.Object)">
            <summary>
            Insert legend item object into the collection.
            </summary>
            <param name="index">Zero based index.</param>
            <param name="value">Legend item to insert.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.LegendCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies all the elements of the current collection to the specified one-dimensional 
            collection starting at the specified destination index.
            </summary>
            <param name="array">Destination collection.</param>
            <param name="index">The index in collection at which copying begins.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.LegendCollection.GetEnumerator">
            <summary>
            Get collection enumerator.
            </summary>
            <returns>Collection enumerator.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.LegendCollection.UniqueName(System.String)">
            <summary>
            Checks whether a name is unique.
            </summary>
            <param name="name">Legend name</param>
            <returns>true if a name is unique</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.LegendCollection.CreateName(System.String)">
            <summary>
            Create Name of legend and checks if that name exists.
            </summary>
            <param name="Name">Recomended Legend Name</param>
            <returns>New Legend Name</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.LegendCollection.GetIndex(System.String)">
            <summary>
            Get chart legend index by name.
            </summary>
            <param name="name">Name of the chart legend.</param>
            <returns>Index of the chart legend or -1 if it does not exist.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.LegendCollection.Invalidate">
            <summary>
            Invalidate chart when legend collection is changed.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.LegendCollection.CalcLegendPosition(Dundas.Olap.WebUIControls.ChartGraphics,System.Drawing.RectangleF@,System.Single,System.Single)">
            <summary>
            Recalculates legend position in the collection.
            </summary>
            <param name="chartGraph">Chart graphics used.</param>
            <param name="chartAreasRectangle">Area where the legend should be positioned.</param>
            <param name="maxLegendSize">Maximum legend size as a percentage of the area.</param>
            <param name="elementSpacing">Spacing size as a percentage of the area.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.LegendCollection.CalcOutsideLegendPosition(Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.ChartArea,System.Drawing.RectangleF@,System.Single,System.Single)">
            <summary>
            Recalculates legend position in the collection for legends docked outside of chart area.
            </summary>
            <param name="chartGraph">Chart graphics used.</param>
            <param name="area">Area the legend is docked to.</param>
            <param name="chartAreasRectangle">Area where the legend should be positioned.</param>
            <param name="maxLegendSize">Maximum legend size as a percentage of the area.</param>
            <param name="elementSpacing">Spacing size as a percentage of the area.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.LegendCollection.CalcInsideLegendPosition(Dundas.Olap.WebUIControls.ChartGraphics,System.Single,System.Single)">
            <summary>
            Recalculates legend position inside chart area in the collection.
            </summary>
            <param name="chartGraph">Chart graphics used.</param>
            <param name="maxLegendSize">Maximum legend size as a percentage of the area.</param>
            <param name="elementSpacing">Spacing size as a percentage of the area.</param>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.LegendCollection.Item(System.Object)">
            <summary>
            Indexer of the class. Returns the Legend object.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.LegendCollection.IsFixedSize">
            <summary>
            Gets a value indicating whether the collection has a fixed size.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.LegendCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the collection is read-only.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.LegendCollection.Count">
            <summary>
            Number of items in the collection.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.LegendCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the collection is synchronized (thread-safe).
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.LegendCollection.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the collection.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.LegendItemsCollection">
            <summary>
            LegendItemsCollection class is a strongly typed collection of legend items.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.LegendItemsCollection.#ctor">
            <summary>
            Legend item collection object constructor
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.LegendItemsCollection.Add(System.Drawing.Color,System.String)">
            <summary>
            Adds one legend item into the collection.
            </summary>
            <param name="color">Legend item color.</param>
            <param name="text">Legend item text.</param>
            <returns>Index of newly added item.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.LegendItemsCollection.Insert(System.Int32,System.Drawing.Color,System.String)">
            <summary>
            Insert one legend item into the collection.
            </summary>
            <param name="index">Legend item index to insert at.</param>
            <param name="color">Legend item color.</param>
            <param name="text">Legend item text.</param>
            <returns>Index of newly added item.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.LegendItemsCollection.Add(System.String,System.String)">
            <summary>
            Adds one legend item into the collection.
            </summary>
            <param name="image">Legend item image.</param>
            <param name="text">Legend item text.</param>
            <returns>Index of newly added item.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.LegendItemsCollection.Insert(System.Int32,System.String,System.String)">
            <summary>
            Insert one legend item into the collection.
            </summary>
            <param name="index">Legend item index to insert at.</param>
            <param name="image">Legend item image.</param>
            <param name="text">Legend item text.</param>
            <returns>Index of newly added item.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.LegendItemsCollection.Clear">
            <summary>
            Removes all items from the collection.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.LegendItemsCollection.Contains(System.Object)">
            <summary>
            Check if specified object exists in the collection.
            </summary>
            <param name="value">Object to check.</param>
            <returns>True if object exist.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.LegendItemsCollection.IndexOf(System.Object)">
            <summary>
            Gets first index of the collection item equal to the object provided.
            </summary>
            <param name="value">Object to look for.</param>
            <returns>Index of found object.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.LegendItemsCollection.Remove(System.Object)">
            <summary>
            Remove object from the collection
            </summary>
            <param name="value">Value to be removed.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.LegendItemsCollection.RemoveAt(System.Int32)">
            <summary>
            Remove item from the collection by index.
            </summary>
            <param name="index">Zero based index.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.LegendItemsCollection.Add(System.Object)">
            <summary>
            Add legend item object into the collection.
            </summary>
            <param name="value">Legend item to add.</param>
            <returns>Index of the newly added object.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.LegendItemsCollection.Insert(System.Int32,Dundas.Olap.WebUIControls.LegendItem)">
            <summary>
            Insert legend item object into the collection.
            </summary>
            <param name="index">Zero based index.</param>
            <param name="value">Legend item to insert.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.LegendItemsCollection.Insert(System.Int32,System.Object)">
            <summary>
            Insert legend item object into the collection.
            </summary>
            <param name="index">Zero based index.</param>
            <param name="value">Legend item to insert.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.LegendItemsCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies all the elements of the current collection to the specified one-dimensional 
            collection starting at the specified destination index.
            </summary>
            <param name="array">Destination collection.</param>
            <param name="index">The index in collection at which copying begins.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.LegendItemsCollection.GetEnumerator">
            <summary>
            Get collection enumerator.
            </summary>
            <returns>Collection enumerator.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.LegendItemsCollection.Reverse">
            <summary>
            Reverses the order of items in the collection.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.LegendItemsCollection.Invalidate(System.Boolean)">
            <summary>
            Invalidate chart (or just legend )when collection is changed
            </summary>
            <param name="invalidateLegendOnly">Indicates that only legend area should be invalidated.</param>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.LegendItemsCollection.Item(System.Int32)">
            <summary>
            Indexer of the class. Returns the LegendItem object
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.LegendItemsCollection.IsFixedSize">
            <summary>
            Gets a value indicating whether the collection has a fixed size.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.LegendItemsCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the collection is read-only.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.LegendItemsCollection.Count">
            <summary>
            Number of items in the collection.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.LegendItemsCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the collection is synchronized (thread-safe).
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.LegendItemsCollection.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the collection.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.LegendItem">
            <summary>
            LegendItem class presents a single item (row) in the legend.
            It contains properties which describe visual appearance and
            content of the legend item.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.LegendItem.Legend">
            <summary>
            Legend object the item belongs to.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.LegendItem.#ctor">
            <summary>
            Default legend item constructor
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.LegendItem.#ctor(System.String,System.Drawing.Color,System.String)">
            <summary>
            Legend item constructor
            </summary>
            <param name="name">Item name.</param>
            <param name="color">Item color.</param>
            <param name="image">Item image.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.LegendItem.AddAutomaticCells(Dundas.Olap.WebUIControls.Legend)">
            <summary>
            Helper method adds default legend item cells based on the columns
            specified. If columns collection is empty we assume the presence of
            two columns: series marker and legend item text.
            </summary>
            <param name="legend">Legend this item belongs to.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.LegendItem.MeasureLegendItem(Dundas.Olap.WebUIControls.ChartGraphics,System.Int32)">
            <summary>
            Measures legend item required size in chart relative coordinates.
            </summary>
            <remarks>
            This method calculates desired legend item size without taking in
            consideration other legend items or available size. Because of that,
            the returned value is just an estimation.
            </remarks>
            <param name="graph">Chart graphics.</param>
            <param name="fontSizeReducedBy">Value that controls how standard font size is reduced or enlarged.</param>
            <returns>Legend item estimated size.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.LegendItem.ReplaceKeywords(System.String)">
            <summary>
            Replaces predefined keyword inside the string with their values.
            </summary>
            <param name="strOriginal">Original string with keywords.</param>
            <returns>Modified string.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.LegendItem.SetAttributes(Dundas.Olap.WebUIControls.CommonElements,Dundas.Olap.WebUIControls.Series)">
            <summary>
            Sets legend item attributes from the series
            </summary>
            <param name="series">Series object.</param>
            <param name="common">Common elements object.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.LegendItem.SetAttributes(Dundas.Olap.WebUIControls.DataPointAttributes,System.Boolean)">
            <summary>
            Sets legend item attributes from the DataPointAttributes object.
            </summary>
            <param name="attrib">DataPointAttributes object.</param>
            <param name="area3D">Element belongs to the 3D area.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.LegendItem.Invalidate(System.Boolean)">
            <summary>
            Invalidate chart (or just legend )when collection is changed
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.LegendItem.Name">
            <summary>
            Legend item text.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.LegendItem.Color">
            <summary>
            Legend item color.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.LegendItem.Image">
            <summary>
            Legend item image.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.LegendItem.Style">
            <summary>
            Legend item picture style.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.LegendItem.BorderColor">
            <summary>
            Border color.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.LegendItem.BackHatchStyle">
            <summary>
            Back hatch style
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.LegendItem.BackImageTranspColor">
            <summary>
            Background image transparent color.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.LegendItem.BackGradientType">
            <summary>
            A type for the background gradient
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.LegendItem.BackGradientEndColor">
            <summary>
            The second color which is used for a gradient
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.LegendItem.BorderWidth">
            <summary>
            Line width
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.LegendItem.Enabled">
            <summary>
            Legend item enabled flag.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.LegendItem.MarkerBorderWidth">
            <summary>
            Marker border width.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.LegendItem.BorderStyle">
            <summary>
            Line style
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.LegendItem.ShadowOffset">
            <summary>
            Legend item shadow offset.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.LegendItem.ShadowColor">
            <summary>
            Legend item shadow color
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.LegendItem.MarkerStyle">
            <summary>
            Legend item marker style
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.LegendItem.MarkerSize">
            <summary>
            Legend item marker size
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.LegendItem.MarkerImage">
            <summary>
            Legend item marker image
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.LegendItem.MarkerImageTranspColor">
            <summary>
            Legend item marker image transparent color.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.LegendItem.MarkerColor">
            <summary>
            Legend item marker color
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.LegendItem.MarkerBorderColor">
            <summary>
            Legend item marker border color
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.LegendItem.SeriesName">
            <summary>
            Legend item series name.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.LegendItem.SeriesPointIndex">
            <summary>
            Legend item series data point index.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.LegendItem.Separator">
            <summary>
            Legend item visual separator type.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.LegendItem.SeparatorColor">
            <summary>
            Legend item visual separator color.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.LegendItem.Cells">
            <summary>
            Collection of legend item cells.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.LegendItem.Tag">
            <summary>
            Object associated with legend item.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.LegendItem.ToolTip">
            <summary>
            Tooltip of the area.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.LegendItem.Href">
            <summary>
            URL target of the area.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.LegendItem.MapAreaAttributes">
            <summary>
            Other attributes of the area.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.IChartAnimationEngine">
            <summary>
            IChartAnimationEngine interface defines a set of methods which need to 
            be implemented by any animation rendering engine of the chart.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.IChartAnimationEngine.DrawLineA(System.Drawing.Pen,Dundas.Olap.WebUIControls.ColorA,Dundas.Olap.WebUIControls.PointA,Dundas.Olap.WebUIControls.PointA)">
            <summary>
            Animates and draws a line connecting the two points specified 
            by coordinate pairs.
            </summary>
            <param name="pen">Graphics pen</param>
            <param name="color">Animated Color used instead of pen color.</param>
            <param name="point1">Point structure that represents the first point to connect.</param>
            <param name="point2">Point structure that represents the second point to connect.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.IChartAnimationEngine.DrawEllipseA(System.Drawing.Pen,Dundas.Olap.WebUIControls.ColorA,Dundas.Olap.WebUIControls.RectangleA)">
            <summary>
            Animates and draws the interior of a ellipse specified by a RectangleA structure.
            </summary>
            <param name="pen">Graphics pen</param>
            <param name="color">Animated Color used instead of pen color.</param>
            <param name="rect">RectangleF structure that represents the rectangle to fill.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.IChartAnimationEngine.DrawPolygonA(System.Drawing.Pen,Dundas.Olap.WebUIControls.ColorA,Dundas.Olap.WebUIControls.PointA[])">
            <summary>
            Animates and draws a polygon defined by an array of 
            Point structures.
            </summary>
            <param name="pen">Graphics pen</param>
            <param name="color">Animated Color used instead of pen color.</param>
            <param name="points">Array of Point structures that represent the vertices of the polygon.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.IChartAnimationEngine.DrawRectangleA(System.Drawing.Pen,Dundas.Olap.WebUIControls.ColorA,Dundas.Olap.WebUIControls.RectangleA)">
            <summary>
            Animates and draws a rectangle specified by a coordinate pair, a width, and a height.
            </summary>
            <param name="pen">Graphics pen</param>
            <param name="color">Animated Color used instead of pen color.</param>
            <param name="rect">A RectangleA structure that represents the rectangle to animate and draw.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.IChartAnimationEngine.DrawStringA(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.StringFormat,Dundas.Olap.WebUIControls.ColorA,Dundas.Olap.WebUIControls.RectangleA)">
            <summary>
            Animates and draws specified text string in the specified rectangle with the specified Brush and Font objects using the formatting attributes of the specified StringFormat object.
            </summary>
            <param name="s">String to draw.</param>
            <param name="font">Font object that defines the text format of the string.</param>
            <param name="brush">Brush object that determines the color and texture of the drawn text.</param>
            <param name="format">StringFormat object that specifies formatting attributes, such as line spacing and alignment, that are applied to the drawn text.</param>
            <param name="colorA">Animated Color used instead of pen color.</param>
            <param name="rectA">A RectangleA structure that represents the rectangle text to animate and draw.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.IChartAnimationEngine.DrawStringA(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.StringFormat,Dundas.Olap.WebUIControls.ColorA,Dundas.Olap.WebUIControls.PointA)">
            <summary>
            Animates and draws the specified text string at the specified location with the specified Brush and Font objects using the formatting attributes of the specified StringFormat object.
            </summary>
            <param name="s">String to draw.</param>
            <param name="font">Font object that defines the text format of the string.</param>
            <param name="brush">Brush object that determines the color and texture of the drawn text.</param>
            <param name="format">StringFormat object that specifies formatting attributes, such as line spacing and alignment, that are applied to the drawn text.</param>
            <param name="colorA">Animated Color used instead of pen color.</param>
            <param name="pointA">A pointA structure that represents position of the text</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.IChartAnimationEngine.DrawImageA(System.Drawing.Image,Dundas.Olap.WebUIControls.RectangleA,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
            <summary>
            Animates and draws the specified portion of the specified Image object at the specified location and with the specified size.
            </summary>
            <param name="image">Image object to draw.</param>
            <param name="destRect">RectangleA structure that specifies the location and size of the drawn image. The image is scaled to fit the rectangle.</param>
            <param name="srcX">x-coordinate of the upper-left corner of the portion of the source image to draw.</param>
            <param name="srcY">y-coordinate of the upper-left corner of the portion of the source image to draw.</param>
            <param name="srcWidth">Width of the portion of the source image to draw.</param>
            <param name="srcHeight">Height of the portion of the source image to draw.</param>
            <param name="srcUnit">Member of the GraphicsUnit enumeration that specifies the units of measure used to determine the source rectangle.</param>
            <param name="imageAttrs">ImageAttributes object that specifies recoloring and gamma information for the image object.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.IChartAnimationEngine.FillRectangleA(System.Drawing.Brush,Dundas.Olap.WebUIControls.ColorA,Dundas.Olap.WebUIControls.ColorA,Dundas.Olap.WebUIControls.RectangleA)">
            <summary>
            Animates and fills the interior of a rectangle specified by a RectangleA structure.
            </summary>
            <param name="brush">Brush object that determines the characteristics of the fill.</param>
            <param name="color">Animated Color used instead of brush color.</param>
            <param name="secondColor">Second color used for gradient and hatching</param>
            <param name="rect">RectangleF structure that represents the rectangle to fill.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.IChartAnimationEngine.FillEllipseA(System.Drawing.Brush,Dundas.Olap.WebUIControls.ColorA,Dundas.Olap.WebUIControls.ColorA,Dundas.Olap.WebUIControls.RectangleA)">
            <summary>
            Animates and fills the interior of a ellipse specified by a RectangleA structure.
            </summary>
            <param name="brush">Brush object that determines the characteristics of the fill.</param>
            <param name="color">Animated Color used instead of brush color.</param>
            <param name="secondColor">Second color used for gradient and hatching</param>
            <param name="rect">RectangleA structure that represents the ellipse to animate and fill.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.IChartAnimationEngine.FillPolygonA(System.Drawing.Brush,Dundas.Olap.WebUIControls.ColorA,Dundas.Olap.WebUIControls.ColorA,Dundas.Olap.WebUIControls.PointA[])">
            <summary>
            Animates and fills a polygon defined by an array of 
            Point structures.
            </summary>
            <param name="brush">Brush object that determines the characteristics of the fill.</param>
            <param name="color">Animated Color used instead of brush color.</param>
            <param name="secondColor">Second color used for gradient and hatching</param>
            <param name="points">Array of Point structures that represent the vertices of the polygon.</param>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.BreakLineType">
            <summary>
            Axis scale break line style.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.BreakLineType.None">
            <summary>
            No scale breakline visible.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.BreakLineType.Straight">
            <summary>
            Straight scale break.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.BreakLineType.Wave">
            <summary>
            Wave scale break.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.BreakLineType.Ragged">
            <summary>
            Ragged scale break.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.AxisScaleBreakStyle">
            <summary>
            <b>AxisScaleBreakStyle</b> class represents settings that control scale break feature.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisScaleBreakStyle.#ctor">
            <summary>
            Default object constructor.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisScaleBreakStyle.#ctor(Dundas.Olap.WebUIControls.Axis)">
            <summary>
            Default object constructor.
            </summary>
            <param name="axis">Chart axis this class belongs to.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisScaleBreakStyle.IsEnabled">
            <summary>
            Checks if automatic scale breaks are currently enabled.
            </summary>
            <returns>True if scale breaks are currently enabled.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisScaleBreakStyle.CanUseAxisScaleBreaks">
            <summary>
            Checks if scale breaks can be used on specified axis.
            </summary>
            <returns>True if scale breaks can be used on this axis</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisScaleBreakStyle.GetAxisSeries(Dundas.Olap.WebUIControls.Axis)">
            <summary>
            Gets a list of series objects attached to the specified axis.
            </summary>
            <param name="axis">Axis to get the series for.</param>
            <returns>A list of series that are attached to the specified axis.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisScaleBreakStyle.Invalidate">
            <summary>
            Invalidate chart control.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisScaleBreakStyle.GetAxisSegmentForScaleBreaks(Dundas.Olap.WebUIControls.AxisScaleSegmentCollection)">
            <summary>
            Get collection of axis segments to present scale breaks.
            </summary>
            <param name="axisSegments">Collection of axis scale segments.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisScaleBreakStyle.GetStartScaleFromZeroSegmentIndex(Dundas.Olap.WebUIControls.AxisScaleSegmentCollection)">
            <summary>
            Gets index of segment that should be started from zero.
            </summary>
            <param name="axisSegments">Axs scale segment collection.</param>
            <returns>Index axis segment or -1.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisScaleBreakStyle.SetAxisSegmentPosition(Dundas.Olap.WebUIControls.AxisScaleSegmentCollection)">
            <summary>
            Sets position of all scale segments in the axis.
            </summary>
            <param name="axisSegments">Collection of axis scale segments.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisScaleBreakStyle.FillAxisSegmentCollection(Dundas.Olap.WebUIControls.AxisScaleSegmentCollection)">
            <summary>
            Fill collection of axis scale segments.
            </summary>
            <param name="axisSegments">Collection of axis segments.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisScaleBreakStyle.IsExcludedSegment(System.Collections.ArrayList,System.Int32)">
            <summary>
            Check if segment was excluded.
            </summary>
            <param name="excludedSegments">Array of segment indexes.</param>
            <param name="segmentIndex">Index of the segment to check.</param>
            <returns>True if segment with specified index is marked as excluded.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisScaleBreakStyle.GetSeriesDataStatistics(System.Int32,System.Double@,System.Double@,System.Double@,System.Double[]@,System.Double[]@)">
            <summary>
            Collect statistical information about the series.
            </summary>
            <param name="segmentCount">Segment count.</param>
            <param name="minYValue">Minimum Y value.</param>
            <param name="maxYValue">Maximum Y value.</param>
            <param name="segmentSize">Segment size.</param>
            <param name="segmentMaxValue">Array of segment scale maximum values.</param>
            <param name="segmentMinValue">Array of segment scale minimum values.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisScaleBreakStyle.GetLargestSequenseOfSegmentsWithNoPoints(System.Int32[],System.Int32@,System.Int32@)">
            <summary>
            Gets largest segment with no points.
            </summary>
            <param name="segmentPointNumber">Array that stores number of points for each segment.</param>
            <param name="startSegment">Returns largest empty segment sequence starting index.</param>
            <param name="numberOfSegments">Returns largest empty segment sequence length.</param>
            <returns>True if long empty segment sequence was found.</returns>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.AxisScaleBreakStyle.StartFromZero">
            <summary>
            Indicates if one of the axis segments should start it's scale from zero 
            when scale break is used.
            </summary>
            <remarks>
            When property is set to <b>AutoBool.Auto</b> the range of the scale determines
            if zero value should be included in the scale.
            </remarks>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.AxisScaleBreakStyle.MaxNumberOfBreaks">
            <summary>
            Maximum number of scale breaks that can be used.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.AxisScaleBreakStyle.CollapsibleSpaceThreshold">
            <summary>
            Minimum axis scale region size, in percentage of total axis length, 
            that can be collapsed with the scale break.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.AxisScaleBreakStyle.Enabled">
            <summary>
            Gets or sets a flag which determines if axis automatic scale breaks are enabled.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.AxisScaleBreakStyle.BreakLineType">
            <summary>
            Type of the scale break line.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.AxisScaleBreakStyle.Spacing">
            <summary>
            Axis scale break spacing.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.AxisScaleBreakStyle.LineColor">
            <summary>
            Axis scale break line color.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.AxisScaleBreakStyle.LineWidth">
            <summary>
            Axis scale break line width.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.AxisScaleBreakStyle.LineStyle">
            <summary>
            Axis scale break line width.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.IntervalAutoMode">
            <summary>
            Automatic axis interval mode.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.IntervalAutoMode.FixedCount">
            <summary>
            Fixed number of intervals always created on the axis.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.IntervalAutoMode.VariableCount">
            <summary>
            Number of axis intervals depends on the axis length.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.AxisPosition">
            <summary>
            Axis Position enumeration.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.AxisPosition.Left">
            <summary>
            Left position
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.AxisPosition.Right">
            <summary>
            Right position
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.AxisPosition.Top">
            <summary>
            Top position
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.AxisPosition.Bottom">
            <summary>
            Bottom position
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.ArrowsType">
            <summary>
            Axis Arrow types
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ArrowsType.None">
            <summary>
            No arrow
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ArrowsType.Triangle">
            <summary>
            Triangle type
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ArrowsType.SharpTriangle">
            <summary>
            Sharp triangle type
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ArrowsType.Lines">
            <summary>
            Lines type
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.Design.KeywordEditor">
            <summary>
            Summary description for KeywordEditor.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Design.KeywordEditor.applicableKeywords">
            <summary>
            List of keywords that are applicable to the edited property
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Design.KeywordEditor.Keyword">
            <summary>
            Keyword beign edited or empty if inserting a new one.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Design.KeywordEditor.maxYValueIndex">
            <summary>
            Maximum number of supported Y values.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.KeywordEditor.#ctor">
            <summary>
            Default public constructor.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.KeywordEditor.#ctor(System.Collections.ArrayList,System.String,System.Int32)">
            <summary>
            Form constructor.
            </summary>
            <param name="applicableKeywords">List of keywords that can be inserted.</param>
            <param name="keyword">Keyword that should be edited.</param>
            <param name="maxYValueIndex">Maximum number of Y Values supported.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.KeywordEditor.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.KeywordEditor.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.KeywordEditor.KeywordEditor_Load(System.Object,System.EventArgs)">
            <summary>
            Form loaded event handler.
            </summary>
            <param name="sender">Event sender.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.KeywordEditor.comboBoxFormat_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            Selected format changed event handler.
            </summary>
            <param name="sender">Event sender.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.KeywordEditor.listBoxKeywords_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            Selected keyword changed event handler.
            </summary>
            <param name="sender">Event sender.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.KeywordEditor.listBoxKeywords_DoubleClick(System.Object,System.EventArgs)">
            <summary>
            Keyword double click event handler.
            </summary>
            <param name="sender">Event sender.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.KeywordEditor.textBoxPrecision_TextChanged(System.Object,System.EventArgs)">
            <summary>
            Precision text changed event handler.
            </summary>
            <param name="sender">Event sender.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.KeywordEditor.textBoxCustomFormat_TextChanged(System.Object,System.EventArgs)">
            <summary>
            Custom format text changed event handler.
            </summary>
            <param name="sender">Event sender.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.KeywordEditor.buttonOk_Click(System.Object,System.EventArgs)">
            <summary>
            Ok button click event handler.
            </summary>
            <param name="sender">Event sender.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.KeywordEditor.numericUpDownYValue_ValueChanged(System.Object,System.EventArgs)">
            <summary>
            Y Value index changed event handler.
            </summary>
            <param name="sender">Event sender.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.KeywordEditor.GetFormatString">
            <summary>
            Gets current format string
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.KeywordEditor.UpdateNumericSample">
            <summary>
            Updates numeric sample on the form.
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.Design.FlagsEnumUITypeEditor">
            <summary>
            UI type editor for the enumerations with Flags attribute
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Design.FlagsEnumUITypeEditor.enumType">
            <summary>
            Enumeration type.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.FlagsEnumUITypeEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Display a drop down list with check boxes.
            </summary>
            <param name="context">Editing context.</param>
            <param name="provider">Provider.</param>
            <param name="value">Value to edit.</param>
            <returns>Result</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.FlagsEnumUITypeEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Gets editing style.
            </summary>
            <param name="context">Editing context.</param>
            <returns>Editor style.</returns>
        </member>
        <member name="T:Dundas.Charting.WebControl.Design.FlagsEnumCheckedListBox">
            <summary>
            Checked list box, which is used for the UI type editing.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.FlagsEnumCheckedListBox.#ctor(System.Object,System.Type)">
            <summary>
            Public constructor.
            </summary>
            <param name="editValue">Value to edit.</param>
            <param name="editType">Typpe to edit.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.FlagsEnumCheckedListBox.FillList">
            <summary>
            Fills checked list items
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.FlagsEnumCheckedListBox.GetNewValue">
            <summary>
            Gets new enumeration value.
            </summary>
            <returns>New enum value.</returns>
        </member>
        <member name="T:Dundas.Charting.WebControl.ChartTypes.HundredPercentStackedColumnChart">
            <summary>
            HundredPercentStackedColumnChart class extends StackedColumnChart class
            by providing its own algorithm for calculating series data point
            Y values. It makes sure that total Y value of all data points in a
            single cluster from all series adds up to 100%.
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.ChartTypes.StackedColumnChart">
            <summary>
            StackedColumnChart class contains all the code necessary to draw 
            and hit test Stacked Column chart. 
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.ChartTypes.StackedColumnChart.prevPosY">
            <summary>
            Previous stacked positive Y values.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.ChartTypes.StackedColumnChart.prevNegY">
            <summary>
            Previous stacked negative Y values.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.ChartTypes.StackedColumnChart.hundredPercentStacked">
            <summary>
            Indicates if chart is 100% stacked
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.ChartTypes.StackedColumnChart.stackGroupNameUsed">
            <summary>
            True if stacke group name is applicable
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.ChartTypes.StackedColumnChart.stackGroupNames">
            <summary>
            List of all stack group names
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.ChartTypes.StackedColumnChart.currentStackGroup">
            <summary>
            Name of the current stack group.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.StackedColumnChart.GetImage(Dundas.Charting.WebControl.ChartTypes.ChartTypeRegistry)">
            <summary>
            Gets chart type image.
            </summary>
            <param name="registry">Chart types registry object.</param>
            <returns>Chart type image.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.StackedColumnChart.GetLegendImageStyle(Dundas.Olap.WebUIControls.Series)">
            <summary>
            How to draw series/points in legend:
            Filled rectangle, Line or Marker
            </summary>
            <param name="series">Legend item series.</param>
            <returns>Legend item style.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.StackedColumnChart.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.StackedColumnChart.Paint(Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.CommonElements,Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.Series)">
            <summary>
            Paint StackedColumnChart Chart
            </summary>
            <param name="graph">The Chart Graphics object</param>
            <param name="common">The Common elements object</param>
            <param name="area">Chart area for this chart</param>
            <param name="seriesToDraw">Chart series to draw.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.StackedColumnChart.ProcessChartType(System.Boolean,Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.CommonElements,Dundas.Olap.WebUIControls.ChartArea,System.Boolean,System.Boolean,Dundas.Olap.WebUIControls.Series)">
            <summary>
            This method recalculates size of the Columns. This method is used 
            from Paint or Select method.
            </summary>
            <param name="selection">If True selection mode is active, otherwise paint mode is active.</param>
            <param name="graph">The Chart Graphics objec.t</param>
            <param name="common">The Common elements object.</param>
            <param name="area">Chart area for this chart.</param>
            <param name="shadow">True if shadow mode is active.</param>
            <param name="labels">Labels drawing mode.</param>
            <param name="seriesToDraw">Chart series to draw.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.StackedColumnChart.GetSeriesByStackedGroupName(Dundas.Olap.WebUIControls.CommonElements,System.String,System.String,System.String)">
            <summary>
            Helper method that gets an array of series that belong to the specified
            stacked group.
            </summary>
            <param name="common">Chart common elements.</param>
            <param name="groupName">Group name to get the list of series for.</param>
            <param name="chartTypeName">Series chart type name to include in the result list.</param>
            <param name="chartAreaName">Series chart are name where series should belong to.</param>
            <returns>Array of series that belong to the specified group.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.StackedColumnChart.GetSeriesStackGroupName(Dundas.Olap.WebUIControls.Series)">
            <summary>
            Helper method that gets stacked group name from specified series.
            </summary>
            <param name="series">Series to get the group name from.</param>
            <returns>Series stacked group name.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.StackedColumnChart.IsSeriesStackGroupNameSupported(Dundas.Olap.WebUIControls.Series)">
            <summary>
            Checks if series supports stacked group names.
            </summary>
            <param name="series">Series to check.</param>
            <returns>True if feature supported.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.StackedColumnChart.DrawLabels(Dundas.Olap.WebUIControls.CommonElements,Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.DataPoint,System.Int32,Dundas.Olap.WebUIControls.Series,System.Drawing.RectangleF)">
            <summary>
            Draw Stacked Column labels.
            </summary>
            <param name="common">Chart common elements.</param>
            <param name="graph">Chart Graphics.</param>
            <param name="area">Chart area the series belongs to.</param>
            <param name="point">Data point.</param>
            <param name="pointIndex">Data point index.</param>
            <param name="series">Data series.</param>
            <param name="rectangle">Column rectangle.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.StackedColumnChart.GetYValue(Dundas.Olap.WebUIControls.CommonElements,Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.Series,Dundas.Olap.WebUIControls.DataPoint,System.Int32,System.Int32)">
            <summary>
            Helper function, which returns the Y value of the point.
            </summary>
            <param name="common">Chart common elements.</param>
            <param name="area">Chart area the series belongs to.</param>
            <param name="series">Sereis of the point.</param>
            <param name="point">Point object.</param>
            <param name="pointIndex">Index of the point.</param>
            <param name="yValueIndex">Index of the Y value to get.  Set to -1 to get the height.</param>
            <returns>Y value of the point.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.StackedColumnChart.ProcessChartType3D(System.Boolean,Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.CommonElements,Dundas.Olap.WebUIControls.ChartArea,System.Boolean,Dundas.Olap.WebUIControls.Series)">
            <summary>
            This method recalculates size of the Columns. This method is used 
            from Paint or Select method in 3D space.
            </summary>
            <param name="selection">If True selection mode is active, otherwise paint mode is active.</param>
            <param name="graph">The Chart Graphics objec.t</param>
            <param name="common">The Common elements object.</param>
            <param name="area">Chart area for this chart.</param>
            <param name="labels">Labels drawing mode.</param>
            <param name="seriesToDraw">Chart series to draw.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.StackedColumnChart.DrawLabels3D(Dundas.Olap.WebUIControls.CommonElements,Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.DataPoint3D,System.Int32,Dundas.Olap.WebUIControls.Series,System.Drawing.RectangleF)">
            <summary>
            Draw Stacked Column labels.
            </summary>
            <param name="common">Chart common elements.</param>
            <param name="graph">Chart Graphics.</param>
            <param name="area">Chart area the series belongs to.</param>
            <param name="pointEx">Data point.</param>
            <param name="pointIndex">Data point index.</param>
            <param name="series">Data series.</param>
            <param name="rectangle">Column rectangle.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.StackedColumnChart.AddSmartLabelMarkerPositions(Dundas.Olap.WebUIControls.CommonElements,Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.Series,System.Collections.ArrayList)">
            <summary>
            Adds markers position to the list. Used to check SmartLabels overlapping.
            </summary>
            <param name="common">Common chart elements.</param>
            <param name="area">Chart area.</param>
            <param name="series">Series values to be used.</param>
            <param name="list">List to add to.</param>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.StackedColumnChart.Name">
            <summary>
            Chart type name
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.StackedColumnChart.Stacked">
            <summary>
            True if chart type is stacked
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.StackedColumnChart.SupportStackedGroups">
            <summary>
            True if stacked chart type supports groups
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.StackedColumnChart.StackSign">
            <summary>
            True if stacked chart type should draw separately positive and 
            negative data points ( Bar and column Stacked types ).
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.StackedColumnChart.RequireAxes">
            <summary>
            True if chart type supports axeses
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.StackedColumnChart.SecondYScale">
            <summary>
            Chart type with two y values used for scale ( bubble chart type )
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.StackedColumnChart.CircularChartArea">
            <summary>
            True if chart type requires circular chart area.
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.StackedColumnChart.SupportLogarithmicAxes">
            <summary>
            True if chart type supports logarithmic axes
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.StackedColumnChart.SwitchValueAxes">
            <summary>
            True if chart type requires to switch the value (Y) axes position
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.StackedColumnChart.SideBySideSeries">
            <summary>
            True if chart series can be placed side-by-side.
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.StackedColumnChart.DataPointsInLegend">
            <summary>
            True if each data point of a chart must be represented in the legend
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.StackedColumnChart.ExtraYValuesConnectedToYAxis">
            <summary>
            Indicates that extra Y values are connected to the scale of the Y axis
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.StackedColumnChart.HundredPercent">
            <summary>
            Indicates that it's a hundredred percent chart.
            Axis scale from 0 to 100 percent should be used.
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.StackedColumnChart.HundredPercentSupportNegative">
            <summary>
            Indicates that it's a hundredred percent chart.
            Axis scale from 0 to 100 percent should be used.
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.StackedColumnChart.ApplyPaletteColorsToPoints">
            <summary>
            True if palette colors should be applied for each data paoint.
            Otherwise the color is applied to the series.
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.StackedColumnChart.YValuesPerPoint">
            <summary>
            Number of supported Y value(s) per point 
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.StackedColumnChart.ZeroCrossing">
            <summary>
            If the crossing value is auto Crossing value should be 
            automatically set to zero for some chart 
            types (Bar, column, area etc.)
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.HundredPercentStackedColumnChart.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.HundredPercentStackedColumnChart.Paint(Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.CommonElements,Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.Series)">
            <summary>
            Paint HundredPercentStackedColumnChart Chart.
            </summary>
            <param name="graph">The Chart Graphics object.</param>
            <param name="common">The Common elements object.</param>
            <param name="area">Chart area for this chart.</param>
            <param name="seriesToDraw">Chart series to draw.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.HundredPercentStackedColumnChart.GetYValue(Dundas.Olap.WebUIControls.CommonElements,Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.Series,Dundas.Olap.WebUIControls.DataPoint,System.Int32,System.Int32)">
            <summary>
            Helper function, which returns the Y value of the point
            </summary>
            <param name="common">Chart common elements.</param>
            <param name="area">Chart area the series belongs to.</param>
            <param name="series">Sereis of the point.</param>
            <param name="point">Point object.</param>
            <param name="pointIndex">Index of the point.</param>
            <param name="yValueIndex">Index of the Y value to get.</param>
            <returns>Y value of the point.</returns>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.HundredPercentStackedColumnChart.Name">
            <summary>
            Chart type name
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.HundredPercentStackedColumnChart.HundredPercent">
            <summary>
            Indicates that it's a hundredred percent chart.
            Axis scale from 0 to 100 percent should be used.
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.HundredPercentStackedColumnChart.HundredPercentSupportNegative">
            <summary>
            Indicates that it's a hundredred percent chart.
            Axis scale from 0 to 100 percent should be used.
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.ChartTypes.HundredPercentStackedBarChart">
            <summary>
            HundredPercentStackedBarChart class extends StackedBarChart class
            by providing its own algorithm for calculating series data point
            Y values. It makes sure that total Y value of all data points in a
            single cluster from all series adds up to 100%.
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.ChartTypes.StackedBarChart">
            <summary>
            StackedBarChart class contains all the code necessary to draw 
            and hit test Stacked Bar chart. 
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.ChartTypes.StackedBarChart.prevPosY">
            <summary>
            Previous stacked positive Y values.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.ChartTypes.StackedBarChart.prevNegY">
            <summary>
            Previous stacked negative Y values.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.ChartTypes.StackedBarChart.hundredPercentStacked">
            <summary>
            Indicates if chart is 100% stacked
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.ChartTypes.StackedBarChart.stackGroupNameUsed">
            <summary>
            True if stacke group name is applicable
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.ChartTypes.StackedBarChart.stackGroupNames">
            <summary>
            List of all stack group names
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.ChartTypes.StackedBarChart.currentStackGroup">
            <summary>
            Name of the current stack group.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.StackedBarChart.GetImage(Dundas.Charting.WebControl.ChartTypes.ChartTypeRegistry)">
            <summary>
            Gets chart type image.
            </summary>
            <param name="registry">Chart types registry object.</param>
            <returns>Chart type image.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.StackedBarChart.GetLegendImageStyle(Dundas.Olap.WebUIControls.Series)">
            <summary>
            How to draw series/points in legend:
            Filled rectangle, Line or Marker
            </summary>
            <param name="series">Legend item series.</param>
            <returns>Legend item style.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.StackedBarChart.Paint(Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.CommonElements,Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.Series)">
            <summary>
            Paint Stacked Bar Chart.
            </summary>
            <param name="graph">The Chart Graphics object</param>
            <param name="common">The Common elements object</param>
            <param name="area">Chart area for this chart</param>
            <param name="seriesToDraw">Chart series to draw.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.StackedBarChart.ProcessChartType(System.Boolean,Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.CommonElements,Dundas.Olap.WebUIControls.ChartArea,System.Boolean,System.Boolean,Dundas.Olap.WebUIControls.Series)">
            <summary>
            This method recalculates size of the stacked bars. This method is used 
            from Paint or Select method.
            </summary>
            <param name="selection">If True selection mode is active, otherwise paint mode is active.</param>
            <param name="graph">The Chart Graphics object.</param>
            <param name="common">The Common elements object.</param>
            <param name="area">Chart area for this chart.</param>
            <param name="shadow">True if shadow mode is active.</param>
            <param name="labels">Labels drawing mode.</param>
            <param name="seriesToDraw">Chart series to draw.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.StackedBarChart.DrawLabels(Dundas.Olap.WebUIControls.CommonElements,Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.DataPoint,System.Int32,Dundas.Olap.WebUIControls.Series,System.Drawing.RectangleF)">
            <summary>
            Draw Stacked Column labels.
            </summary>
            <param name="common">Chart common elements.</param>
            <param name="graph">Chart Graphics.</param>
            <param name="area">Chart area the series belongs to.</param>
            <param name="point">Data point.</param>
            <param name="pointIndex">Data point index.</param>
            <param name="series">Data series.</param>
            <param name="rectangle">Column rectangle.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.StackedBarChart.GetYValue(Dundas.Olap.WebUIControls.CommonElements,Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.Series,Dundas.Olap.WebUIControls.DataPoint,System.Int32,System.Int32)">
            <summary>
            Helper function, which returns the Y value of the point.
            </summary>
            <param name="common">Chart common elements.</param>
            <param name="area">Chart area the series belongs to.</param>
            <param name="series">Sereis of the point.</param>
            <param name="point">Point object.</param>
            <param name="pointIndex">Index of the point.</param>
            <param name="yValueIndex">Index of the Y value to get. Set to -1 to get the height.</param>
            <returns>Y value of the point.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.StackedBarChart.ProcessChartType3D(System.Boolean,Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.CommonElements,Dundas.Olap.WebUIControls.ChartArea,System.Boolean,Dundas.Olap.WebUIControls.Series)">
            <summary>
            This method recalculates size of the stacked bars in 3D space. This method is used 
            from Paint or Select method.
            </summary>
            <param name="selection">If True selection mode is active, otherwise paint mode is active.</param>
            <param name="graph">The Chart Graphics object.</param>
            <param name="common">The Common elements object.</param>
            <param name="area">Chart area for this chart.</param>
            <param name="drawLabels">True if labels must be drawn.</param>
            <param name="seriesToDraw">Chart series to draw.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.StackedBarChart.DrawLabels3D(Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.Axis,Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.CommonElements,System.Drawing.RectangleF,Dundas.Olap.WebUIControls.DataPoint3D,Dundas.Olap.WebUIControls.Series,System.Double,System.Double,System.Double,System.Int32)">
            <summary>
            Draws labels in 3D.
            </summary>
            <param name="area">Chart area for this chart.</param>
            <param name="hAxis">Horizontal Axis for labels and markers</param>
            <param name="graph">The Chart Graphics object.</param>
            <param name="common">The Common elements object.</param>
            <param name="rectSize">Bar rectangle.</param>
            <param name="pointEx">Data point.</param>
            <param name="ser">Data series.</param>
            <param name="barStartPosition">The zero position or the bottom of bars.</param>
            <param name="barSize">The Height of bars.</param>
            <param name="width">The width of bars.</param>
            <param name="pointIndex">Point index.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.StackedBarChart.AddSmartLabelMarkerPositions(Dundas.Olap.WebUIControls.CommonElements,Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.Series,System.Collections.ArrayList)">
            <summary>
            Adds markers position to the list. Used to check SmartLabels overlapping.
            </summary>
            <param name="common">Common chart elements.</param>
            <param name="area">Chart area.</param>
            <param name="series">Series values to be used.</param>
            <param name="list">List to add to.</param>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.StackedBarChart.Name">
            <summary>
            Chart type name
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.StackedBarChart.Stacked">
            <summary>
            True if chart type is stacked
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.StackedBarChart.SupportStackedGroups">
            <summary>
            True if stacked chart type supports groups
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.StackedBarChart.StackSign">
            <summary>
            True if stacked chart type should draw separately positive and 
            negative data points ( Bar and column Stacked types ).
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.StackedBarChart.RequireAxes">
            <summary>
            True if chart type supports axeses
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.StackedBarChart.SecondYScale">
            <summary>
            Chart type with two y values used for scale ( bubble chart type )
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.StackedBarChart.CircularChartArea">
            <summary>
            True if chart type requires circular chart area.
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.StackedBarChart.SupportLogarithmicAxes">
            <summary>
            True if chart type supports logarithmic axes
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.StackedBarChart.SwitchValueAxes">
            <summary>
            True if chart type requires to switch the value (Y) axes position
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.StackedBarChart.SideBySideSeries">
            <summary>
            True if chart series can be placed side-by-side.
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.StackedBarChart.ZeroCrossing">
            <summary>
            If the crossing value is auto Crossing value should be 
            automatically set to zero for some chart 
            types (Bar, column, area etc.)
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.StackedBarChart.DataPointsInLegend">
            <summary>
            True if each data point of a chart must be represented in the legend
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.StackedBarChart.ExtraYValuesConnectedToYAxis">
            <summary>
            Indicates that extra Y values are connected to the scale of the Y axis
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.StackedBarChart.HundredPercent">
            <summary>
            Indicates that it's a hundredred percent chart.
            Axis scale from 0 to 100 percent should be used.
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.StackedBarChart.HundredPercentSupportNegative">
            <summary>
            Indicates that it's a hundredred percent chart.
            Axis scale from 0 to 100 percent should be used.
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.StackedBarChart.ApplyPaletteColorsToPoints">
            <summary>
            True if palette colors should be applied for each data paoint.
            Otherwise the color is applied to the series.
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.StackedBarChart.YValuesPerPoint">
            <summary>
            Number of supported Y value(s) per point 
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.HundredPercentStackedBarChart.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.HundredPercentStackedBarChart.Paint(Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.CommonElements,Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.Series)">
            <summary>
            Paint HundredPercentStackedBarChart Chart.
            </summary>
            <param name="graph">The Chart Graphics object.</param>
            <param name="common">The Common elements object.</param>
            <param name="area">Chart area for this chart.</param>
            <param name="seriesToDraw">Chart series to draw.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.HundredPercentStackedBarChart.GetYValue(Dundas.Olap.WebUIControls.CommonElements,Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.Series,Dundas.Olap.WebUIControls.DataPoint,System.Int32,System.Int32)">
            <summary>
            Helper function, which returns the Y value of the point.
            </summary>
            <param name="common">Chart common elements.</param>
            <param name="area">Chart area the series belongs to.</param>
            <param name="series">Sereis of the point.</param>
            <param name="point">Point object.</param>
            <param name="pointIndex">Index of the point.</param>
            <param name="yValueIndex">Index of the Y value to get.</param>
            <returns>Y value of the point.</returns>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.HundredPercentStackedBarChart.Name">
            <summary>
            Chart type name
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.HundredPercentStackedBarChart.HundredPercent">
            <summary>
            Indicates that it's a hundredred percent chart.
            Axis scale from 0 to 100 percent should be used.
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.HundredPercentStackedBarChart.HundredPercentSupportNegative">
            <summary>
            Indicates that it's a hundredred percent chart.
            Axis scale from 0 to 100 percent should be used.
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.ChartTypes.RadarDrawingStyle">
            <summary>
            Circular chart drawing style.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.ChartTypes.RadarDrawingStyle.Area">
            <summary>
            Series are drawn as filled areas.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.ChartTypes.RadarDrawingStyle.Line">
            <summary>
            Series are drawn as lines.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.ChartTypes.RadarDrawingStyle.Marker">
            <summary>
            Series are drawn as markers.
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.ChartTypes.KagiChart">
            <summary>
            KagiChart class provides 2D and 3D drawing and hit testing of
            the Kagi chart.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.KagiChart.PrepareData(Dundas.Olap.WebUIControls.Series,System.ComponentModel.Design.IServiceContainer)">
            <summary>
            Prepares Kagi chart type for rendering.
            </summary>
            <param name="series">Series to be prepared.</param>
            <param name="serviceContainer">Reference to service container.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.KagiChart.UnPrepareData(Dundas.Olap.WebUIControls.Series,System.ComponentModel.Design.IServiceContainer)">
            <summary>
            Remove any changes done while preparing Kagi chart type for rendering.
            </summary>
            <param name="series">Series to be un-prepared.</param>
            <param name="serviceContainer">Reference to service container.</param>
            <returns>True if series was removed from collection.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.KagiChart.GetReversalAmount(Dundas.Olap.WebUIControls.Series,Dundas.Olap.WebUIControls.Series,System.Int32,System.Double@)">
            <summary>
            Gets reversal amount of the kagi chart.
            </summary>
            <param name="series">Step line chart series used to dispaly the kagi chart.</param>
            <param name="originalData">Series with original data.</param>
            <param name="yValueIndex">Index of the Y value to use.</param>
            <param name="percentOfPrice">Returns reversal amount in percentage.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.KagiChart.FillKagiData(Dundas.Olap.WebUIControls.Series,Dundas.Olap.WebUIControls.Series)">
            <summary>
            Fills step line series with data to draw the Kagi chart.
            </summary>
            <param name="series">Step line chart series used to dispaly the Kagi chart.</param>
            <param name="originalData">Series with original data.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.KagiChart.DrawLine(Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.CommonElements,Dundas.Olap.WebUIControls.DataPoint,Dundas.Olap.WebUIControls.Series,System.Drawing.PointF[],System.Int32,System.Single)">
            <summary>
            Draw chart line using horisontal and vertical lines.
            </summary>
            <param name="graph">Graphics object.</param>
            <param name="common">The Common elements object</param>
            <param name="point">Point to draw the line for.</param>
            <param name="series">Point series.</param>
            <param name="points">Array of points coordinates.</param>
            <param name="pointIndex">Index of point to draw.</param>
            <param name="tension">Line tension</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.KagiChart.GetPointsPosition(Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.Series,System.Boolean)">
            <summary>
            Fills a PointF array of data points absolute pixel positions.
            </summary>
            <param name="graph">Graphics object.</param>
            <param name="series">Point series.</param>
            <param name="indexedSeries">Indicate that point index should be used as X value.</param>
            <returns>Array of data points position.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.KagiChart.Draw3DSurface(Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.Matrix3D,Dundas.Olap.WebUIControls.LightStyle,Dundas.Olap.WebUIControls.DataPoint3D,System.Single,System.Single,System.Collections.ArrayList,System.Int32,System.Int32,System.Single,Dundas.Olap.WebUIControls.DrawingOperationType,System.Single,System.Single,System.Drawing.PointF,System.Drawing.PointF,System.Boolean)">
            <summary>
            Draws a 3D surface connecting the two specified points in 2D space.
            Used to draw Line based charts.
            </summary>
            <param name="area">Chart area reference.</param>
            <param name="graph">Chart graphics.</param>
            <param name="matrix">Coordinates transformation matrix.</param>
            <param name="lightStyle">Light style (None, Simplistic, Realistic).</param>
            <param name="prevDataPointEx">Previous data point object.</param>
            <param name="positionZ">Z position of the back side of the 3D surface.</param>
            <param name="depth">Depth of the 3D surface.</param>
            <param name="points">Array of points.</param>
            <param name="pointIndex">Index of point to draw.</param>
            <param name="pointLoopIndex">Index of points loop.</param>
            <param name="tension">Line tension.</param>
            <param name="operationType">Type of operation Drawing, Calculating Path or Both</param>
            <param name="topDarkening">Darkenning scale for top surface. 0 - None.</param>
            <param name="bottomDarkening">Darkenning scale for bottom surface. 0 - None.</param>
            <param name="thirdPointPosition">Position where the third point is actually located or float.NaN if same as in "firstPoint".</param>
            <param name="fourthPointPosition">Position where the fourth point is actually located or float.NaN if same as in "secondPoint".</param>
            <param name="clippedSegment">Indicates that drawn segment is 3D clipped. Only top/bottom should be drawn.</param>
            <returns>Returns elemnt shape path if operationType parameter is set to CalcElementPath, otherwise Null.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.KagiChart.GetImage(Dundas.Charting.WebControl.ChartTypes.ChartTypeRegistry)">
            <summary>
            Gets chart type image.
            </summary>
            <param name="registry">Chart types registry object.</param>
            <returns>Chart type image.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.KagiChart.Paint(Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.CommonElements,Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.Series)">
            <summary>
            Paint Line Chart.
            </summary>
            <param name="graph">The Chart Graphics object.</param>
            <param name="common">The Common elements object.</param>
            <param name="area">Chart area for this char.t</param>
            <param name="seriesToDraw">Chart series to draw.</param>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.KagiChart.Name">
            <summary>
            Chart type name
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.ChartTypes.ChartTypeRegistry">
            <summary>
            ChartTypeRegistry class is a repository for all standard and custom 
            chart types. In order for the chart control to display the chart 
            type, it first must be registered using unique name and IChartType 
            derived class which provides the description of the chart type and 
            also responsible for all drawing and hit testing.
            
            ChartTypeRegistry can be used by user for custom chart type registering 
            and can be retrieved using Chart.GetService(typeof(ChartTypeRegistry)) 
            method.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.ChartTypeRegistry.#ctor">
            <summary>
            Default private constructor.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.ChartTypeRegistry.#ctor(System.ComponentModel.Design.IServiceContainer)">
            <summary>
            Chart types registry public constructor.
            </summary>
            <param name="container">Reference to the service container.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.ChartTypeRegistry.GetService(System.Type)">
            <summary>
            Returns chart type registry service object.
            </summary>
            <param name="serviceType">Service type to get.</param>
            <returns>Chart type registry service.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.ChartTypeRegistry.Register(System.String,System.Type)">
            <summary>
            Adds chart type into the registry.
            </summary>
            <param name="name">Chart type name.</param>
            <param name="chartType">Chart class type.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.ChartTypeRegistry.GetChartType(Dundas.Olap.WebUIControls.SeriesChartType)">
            <summary>
            Returns chart type object by name.
            </summary>
            <param name="chartType">Chart type.</param>
            <returns>Chart type object derived from IChartType.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.ChartTypeRegistry.GetChartType(System.String)">
            <summary>
            Returns chart type object by name.
            </summary>
            <param name="name">Chart type name.</param>
            <returns>Chart type object derived from IChartType.</returns>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.ChartTypeRegistry.ResourceManager">
            <summary>
            Chart images resource manager.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.RectangleAnnotation">
            <summary>
            <b>RectangleAnnotation</b> is a class that represents a rectangle annotation.
            </summary>
            <remarks>
            A rectangle annotation can also display inner text.
            </remarks>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.RectangleAnnotation.#ctor">
            <summary>
            Default public constructor.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.RectangleAnnotation.Paint(Dundas.Olap.WebUIControls.Chart,Dundas.Olap.WebUIControls.ChartGraphics)">
            <summary>
            Paints an annotation object on the specified graphics.
            </summary>
            <param name="graphics">
            A <see cref="T:Dundas.Olap.WebUIControls.ChartGraphics"/> object, used to paint an annotation object.
            </param>
            <param name="chart">
            Reference to the <see cref="T:Dundas.Olap.WebUIControls.Chart"/> control.
            </param>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.RectangleAnnotation.LineColor">
            <summary>
            Gets or sets an annotation's line color.
            <seealso cref="P:Dundas.Olap.WebUIControls.RectangleAnnotation.LineWidth"/>
            <seealso cref="P:Dundas.Olap.WebUIControls.RectangleAnnotation.LineStyle"/>
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color"/> value used to draw the annotation line.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.RectangleAnnotation.LineWidth">
            <summary>
            Gets or sets an annotation's line width.
            <seealso cref="P:Dundas.Olap.WebUIControls.RectangleAnnotation.LineColor"/>
            <seealso cref="P:Dundas.Olap.WebUIControls.RectangleAnnotation.LineStyle"/>
            </summary>
            <value>
            An integer value that represents the line width, in pixels.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.RectangleAnnotation.LineStyle">
            <summary>
            Gets or sets an annotation's line style.
            <seealso cref="P:Dundas.Olap.WebUIControls.RectangleAnnotation.LineWidth"/>
            <seealso cref="P:Dundas.Olap.WebUIControls.RectangleAnnotation.LineColor"/>
            </summary>
            <value>
            A <see cref="T:Dundas.Olap.WebUIControls.ChartDashStyle"/> value.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.RectangleAnnotation.BackColor">
            <summary>
            Gets or sets an annotation's background color.
            <seealso cref="P:Dundas.Olap.WebUIControls.RectangleAnnotation.BackGradientEndColor"/>
            <seealso cref="P:Dundas.Olap.WebUIControls.RectangleAnnotation.BackHatchStyle"/>
            <seealso cref="P:Dundas.Olap.WebUIControls.RectangleAnnotation.BackGradientType"/>
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color"/> value used to draw the annotation background.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.RectangleAnnotation.BackHatchStyle">
            <summary>
            Gets or sets an annotation's background hatch style.
            <seealso cref="P:Dundas.Olap.WebUIControls.RectangleAnnotation.BackGradientEndColor"/>
            <seealso cref="P:Dundas.Olap.WebUIControls.RectangleAnnotation.BackColor"/>
            <seealso cref="P:Dundas.Olap.WebUIControls.RectangleAnnotation.BackGradientType"/>
            </summary>
            <value>
            A <see cref="T:Dundas.Olap.WebUIControls.ChartHatchStyle"/> value used to draw the annotation background.
            </value>
            <remarks>
            Two colors are used to draw hatching: <see cref="P:Dundas.Olap.WebUIControls.RectangleAnnotation.BackColor"/> and <see cref="P:Dundas.Olap.WebUIControls.RectangleAnnotation.BackGradientEndColor"/>.
            </remarks>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.RectangleAnnotation.BackGradientType">
            <summary>
            Gets or sets an annotation background's gradient style.
            <seealso cref="P:Dundas.Olap.WebUIControls.RectangleAnnotation.BackGradientEndColor"/>
            <seealso cref="P:Dundas.Olap.WebUIControls.RectangleAnnotation.BackColor"/>
            <seealso cref="P:Dundas.Olap.WebUIControls.RectangleAnnotation.BackHatchStyle"/>
            </summary>
            <value>
            A <see cref="T:Dundas.Olap.WebUIControls.GradientType"/> value, used to draw the annotation background.
            </value>
            <remarks>
            Two colors are used to draw a gradient: <see cref="P:Dundas.Olap.WebUIControls.RectangleAnnotation.BackColor"/> and <see cref="P:Dundas.Olap.WebUIControls.RectangleAnnotation.BackGradientEndColor"/>.
            </remarks>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.RectangleAnnotation.BackGradientEndColor">
            <summary>
            Gets or sets an annotation background's secondary color.
            <seealso cref="P:Dundas.Olap.WebUIControls.RectangleAnnotation.BackColor"/>
            <seealso cref="P:Dundas.Olap.WebUIControls.RectangleAnnotation.BackHatchStyle"/>
            <seealso cref="P:Dundas.Olap.WebUIControls.RectangleAnnotation.BackGradientType"/>
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color"/> value used to draw the annotation background with 
            hatching or gradient fill.
            </value>
            <remarks>
            This color is used with <see cref="P:Dundas.Olap.WebUIControls.RectangleAnnotation.BackColor"/> when <see cref="P:Dundas.Olap.WebUIControls.RectangleAnnotation.BackHatchStyle"/> or
            <see cref="P:Dundas.Olap.WebUIControls.RectangleAnnotation.BackGradientType"/> are used.
            </remarks>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.RectangleAnnotation.AnnotationType">
            <summary>
            Gets or sets annotation type name.
            </summary>
            <remarks>
            This abstract property is used to get the name of each annotation type
            (e.g. Line, Rectangle, Ellipse,...). 
            <para>
            Property is for internal use and is hidden at design and run time. Should
            not be part of the documentation.
            </para>
            </remarks>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.RectangleAnnotation.SelectionPointsStyle">
            <summary>
            Gets or sets an annotation's selection points style.
            </summary>
            <value>
            A <see cref="P:Dundas.Olap.WebUIControls.RectangleAnnotation.SelectionPointsStyle"/> value that represents the annotation 
            selection style.
            </value>
            <remarks>
            Property is for internal use and is hidden at design and run time. 
            Should not be part of the documentation.
            </remarks>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.EllipseAnnotation">
            <summary>
            <b>EllipseAnnotation</b> is a class that represents an ellipse annotation.
            </summary>
            <remarks>
            An ellipse annotation can also display inner text.
            </remarks>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.EllipseAnnotation.#ctor">
            <summary>
            Default public constructor.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.EllipseAnnotation.AnnotationType">
            <summary>
            Gets or sets annotation type name.
            </summary>
            <remarks>
            This abstract property is used to get the name of each annotation type
            (e.g. Line, Rectangle, Ellipse,...). 
            <para>
            Property is for internal use and is hidden at design and run time. Should
            not be part of the documentation.
            </para>
            </remarks>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.Border3DAnnotation">
            <summary>
            <b>Border3DAnnotation</b> is a class that represents an annotation with a 3D border.
            </summary>
            <remarks>
            A Border3D annotation can also display inner text.
            </remarks>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Border3DAnnotation.#ctor">
            <summary>
            Default public constructor.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Border3DAnnotation.Paint(Dundas.Olap.WebUIControls.Chart,Dundas.Olap.WebUIControls.ChartGraphics)">
            <summary>
            Paints the annotation object on the specified graphics.
            </summary>
            <param name="graphics">
            A <see cref="T:Dundas.Olap.WebUIControls.ChartGraphics"/> TODO HYPERLINK PROPERLY used to paint annotation object.
            </param>
            <param name="chart">
            Reference to the <see cref="P:Dundas.Olap.WebUIControls.Border3DAnnotation.Chart"/> control that owns the annotation.
            </param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Border3DAnnotation.GetTextSpacing(System.Boolean@)">
            <summary>
            Gets text spacing on four different sides in relative coordinates.
            </summary>
            <param name="annotationRelative">Indicates that spacing is in annotation relative coordinates.</param>
            <returns>Rectangle with text spacing values.</returns>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Border3DAnnotation.AnnotationType">
            <summary>
            Gets or sets annotation type name.
            </summary>
            <remarks>
            This abstract property is used to get the name of each annotation type
            (e.g. Line, Rectangle, Ellipse,...). 
            <para>
            Property is for internal use and is hidden at design and run time. Should
            not be part of the documentation.
            </para>
            </remarks>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Border3DAnnotation.BorderSkin">
            <summary>
            Gets or sets the skin style of the 3D border.
            </summary>
            <value>
            A <see cref="T:Dundas.Olap.WebUIControls.BorderSkinAttributes"/> TODO HYPERLINK PROPERLY of the 3D border.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Border3DAnnotation.Chart">
            <summary>
            Chart referense.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.GradientButton">
            <summary>
            GradientButton class contains routines for painting of axis button.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.GradientButton.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:GradientButton"/> class.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.GradientButton.GetBlend(System.Single,System.Boolean)">
            <summary>
            Gets the blend.
            </summary>
            <param name="addFactor">The add factor.</param>
            <param name="hover">if set to <c>true</c> [hover].</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.GradientButton.CreateRoundedRectPath(System.Drawing.RectangleF,System.Single[])">
            <summary>
            Creates the rounded rect path.
            </summary>
            <param name="rect">The rect.</param>
            <param name="cornerRadius">The corner radius.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.GradientButton.PaintButton(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Boolean,System.Int32)">
            <summary>
            Paints the button.
            </summary>
            <param name="g">The g.</param>
            <param name="srcRect">The SRC rect.</param>
            <param name="color">The color.</param>
            <param name="backGColor">Color of the back G.</param>
            <param name="brdColor">Color of the BRD.</param>
            <param name="hover">if set to <c>true</c> [hover].</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.GradientButton.GetButton(System.Drawing.Size,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Boolean,System.Int32)">
            <summary>
            Gets the button bitmap.
            </summary>
            <param name="size">The size.</param>
            <param name="color">The color.</param>
            <param name="backGColor">Color of the back G.</param>
            <param name="brdColor">Color of the BRD.</param>
            <param name="hover">if set to <c>true</c> [hover].</param>
            <returns></returns>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.Docking">
            <summary>
            Chart element docking.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Docking.Top">
            <summary>
            Docked to the top.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Docking.Right">
            <summary>
            Docked to the right.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Docking.Bottom">
            <summary>
            Docked to the botom.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Docking.Left">
            <summary>
            Docked to the left.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.TextStyle">
            <summary>
            Text drawing styles.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.TextStyle.Default">
            <summary>
            Default text drawing style.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.TextStyle.Shadow">
            <summary>
            Shadow text.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.TextStyle.Emboss">
            <summary>
            Emboss text.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.TextStyle.Embed">
            <summary>
            Embed text.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.TextStyle.Frame">
            <summary>
            Frame text.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.Title">
            <summary>
            Title class provides properties which define content, visual 
            appearance and position of the single chart title. It also 
            contains methods responsible for calculating title position, 
            drawing and hit testing.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Title.#ctor">
            <summary>
            Public constructor.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Title.#ctor(System.String)">
            <summary>
            Public constructor.
            </summary>
            <param name="text">Title text.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Title.#ctor(System.String,Dundas.Olap.WebUIControls.Docking)">
            <summary>
            Public constructor.
            </summary>
            <param name="text">Title text.</param>
            <param name="docking">Title docking.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Title.#ctor(System.String,Dundas.Olap.WebUIControls.Docking,System.Drawing.Font,System.Drawing.Color)">
            <summary>
            Public constructor.
            </summary>
            <param name="text">Title text.</param>
            <param name="docking">Title docking.</param>
            <param name="font">Title font.</param>
            <param name="color">Title color.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Title.Initialize(System.String,Dundas.Olap.WebUIControls.Docking,System.Drawing.Font,System.Drawing.Color)">
            <summary>
            Initialize title object.
            </summary>
            <param name="text">Title text.</param>
            <param name="docking">Title docking.</param>
            <param name="font">Title font.</param>
            <param name="color">Title color.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Title.IsVisible">
            <summary>
            Helper method that checks if title is visible.
            </summary>
            <returns>True if title is visible.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Title.Invalidate(System.Boolean)">
            <summary>
            Invalidate chart title when one of the attributes is changed.
            </summary>
            <param name="invalidateTitleOnly">Indicates that only title area should be invalidated.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Title.Paint(Dundas.Olap.WebUIControls.ChartGraphics)">
            <summary>
            Paints title using chart graphics object.
            </summary>
            <param name="chartGraph">The graph provides drawing object to the display device. A Graphics object is associated with a specific device context.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Title.CalcTitlePosition(Dundas.Olap.WebUIControls.ChartGraphics,System.Drawing.RectangleF@,System.Drawing.RectangleF@,System.Single)">
            <summary>
            Recalculates title position.
            </summary>
            <param name="chartGraph">Chart graphics used.</param>
            <param name="chartAreasRectangle">Area where the title should be docked.</param>
            <param name="frameTitlePosition">Position of the title in the frame.</param>
            <param name="elementSpacing">Spacing size in percentage of the area.</param>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Title.TitleAlwaysHorizontal">
            <summary>
            Indicates that title is always drawn horizontally when docked to the left or right sides.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Title.Visible">
            <summary>
            Gets or sets a flag that specifies whether title is visible.
            </summary>
            <value>
            <b>True</b> if the title is visible, <b>false</b> otherwise.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Title.Name">
            <summary>
            Title item name.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Title.DockToChartArea">
            <summary>
            Chart area name the title is docked to inside or outside.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Title.DockInsideChartArea">
            <summary>
            Indicates that title is docked inside chart area. DockToChartArea property must be set first.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Title.DockOffset">
            <summary>
            Positive or negative offset of docked title position.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Title.Position">
            <summary>
            Title rectangle position.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Title.Text">
            <summary>
            Title text.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Title.Style">
            <summary>
            Title drawing style.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Title.BackColor">
            <summary>
            Title background color.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Title.BorderColor">
            <summary>
            Title border color.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Title.BorderStyle">
            <summary>
            Title border style.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Title.BorderWidth">
            <summary>
            Title border width.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Title.BackImage">
            <summary>
            Title background image.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Title.BackImageMode">
            <summary>
            Title background image drawing mode.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Title.BackImageTranspColor">
            <summary>
            Title image transparent color.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Title.BackImageAlign">
            <summary>
            Background image alignment used by ClampUnscale drawing mode.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Title.BackGradientType">
            <summary>
            Title background gradient type.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Title.BackGradientEndColor">
            <summary>
            Title background gradient end color.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Title.BackHatchStyle">
            <summary>
            Title hatch style.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Title.Font">
            <summary>
            Title font.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Title.Color">
            <summary>
            Title font color.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Title.Alignment">
            <summary>
            Title alignment.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Title.Docking">
            <summary>
            Title docking.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Title.ShadowOffset">
            <summary>
            Title shadow offset.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Title.ShadowColor">
            <summary>
            Title shadow color.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Title.ToolTip">
            <summary>
            The tooltip.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Title.Href">
            <summary>
            URL target of the title.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Title.MapAreaAttributes">
            <summary>
            Other attributes of the title map area.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Title.BackGroundIsVisible">
            <summary>
            True if title background or border is visible
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Title.Chart">
            <summary>
            Chart control reference.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.TitleCollection">
            <summary>
            TitleCollection class is a strongly typed collection of Title classes.
            Indexer of this collection can take title index (integer) or unique 
            title name (string) as a parameter.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.TitleCollection.#ctor">
            <summary>
            Public constructor.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.TitleCollection.#ctor(System.ComponentModel.Design.IServiceContainer)">
            <summary>
            Public constructor.
            </summary>
            <param name="serviceContainer">Service container.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.TitleCollection.Add(Dundas.Olap.WebUIControls.Title)">
            <summary>
            Adds new chart title into collection.
            </summary>
            <param name="title">Title object.</param>
            <returns>Index of the added object.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.TitleCollection.Add(System.String)">
            <summary>
            Adds new chart title into collection.
            </summary>
            <param name="text">Title text.</param>
            <returns>Newly created object.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.TitleCollection.Add(System.String,Dundas.Olap.WebUIControls.Docking)">
            <summary>
            Adds new chart title into collection.
            </summary>
            <param name="text">Title text.</param>
            <param name="docking">Title docking.</param>
            <returns>Newly created object.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.TitleCollection.Add(System.String,Dundas.Olap.WebUIControls.Docking,System.Drawing.Font,System.Drawing.Color)">
            <summary>
            Adds new chart title into collection.
            </summary>
            <param name="text">Title text.</param>
            <param name="docking">Title docking.</param>
            <param name="font">Title font.</param>
            <param name="color">Title color.</param>
            <returns>Newly created object.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.TitleCollection.Insert(System.Int32,Dundas.Olap.WebUIControls.Title)">
            <summary>
            Inserts new chart title into collection.
            </summary>
            <param name="index">Index to insert the object in.</param>
            <param name="title">Chart title object.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.TitleCollection.Insert(System.Int32,System.String)">
            <summary>
            Inserts new chart title into collection.
            </summary>
            <param name="index">Index to insert the object in.</param>
            <param name="text">Title text.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.TitleCollection.Insert(System.Int32,System.String,Dundas.Olap.WebUIControls.Docking)">
            <summary>
            Inserts new chart title into collection.
            </summary>
            <param name="index">Index to insert the object in.</param>
            <param name="text">Title text.</param>
            <param name="docking">Title docking.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.TitleCollection.Insert(System.Int32,System.String,Dundas.Olap.WebUIControls.Docking,System.Drawing.Font,System.Drawing.Color)">
            <summary>
            Inserts new chart title into collection.
            </summary>
            <param name="index">Index to insert the object in.</param>
            <param name="text">Title text.</param>
            <param name="docking">Title docking.</param>
            <param name="font">Title font.</param>
            <param name="color">Title color.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.TitleCollection.OnSet(System.Int32,System.Object,System.Object)">
            <summary>
            Before new item is set.
            </summary>
            <param name="index">Item index.</param>
            <param name="oldValue">Item old value.</param>
            <param name="newValue">Item new value.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.TitleCollection.OnInsert(System.Int32,System.Object)">
            <summary>
            Before new item is inserted.
            </summary>
            <param name="index">Item index.</param>
            <param name="value">Item object.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.TitleCollection.OnInsertComplete(System.Int32,System.Object)">
            <summary>
            After new item inserted.
            </summary>
            <param name="index">Item index.</param>
            <param name="value">Item object.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.TitleCollection.OnRemoveComplete(System.Int32,System.Object)">
            <summary>
            After item removed.
            </summary>
            <param name="index">Item index.</param>
            <param name="value">Item object.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.TitleCollection.OnClearComplete">
            <summary>
            After all items removed.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.TitleCollection.IsUniqueName(System.String)">
            <summary>
            Checks whether a name is unique.
            </summary>
            <param name="name">Title name</param>
            <returns>true if a name is unique</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.TitleCollection.IndexOf(System.String)">
            <summary>
            Get chart title index by name.
            </summary>
            <param name="name">Name of the chart title.</param>
            <returns>Index of the chart title or -1 if it does not exist.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.TitleCollection.GetIndex(System.String)">
            <summary>
            Get chart title index by name.
            </summary>
            <param name="name">Name of the chart title.</param>
            <returns>Index of the chart title or -1 if it does not exist.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.TitleCollection.Remove(Dundas.Olap.WebUIControls.Title)">
            <summary>
            Removes specified Title from the collection.
            </summary>
            <param name="title">
            A <see cref="T:Dundas.Olap.WebUIControls.Title"/> object to be removed from the collection.
            </param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.TitleCollection.IndexOf(Dundas.Olap.WebUIControls.Title)">
            <summary>
            Gets index of specified Title object in the collection.
            </summary>
            <param name="title">
            A <see cref="T:Dundas.Olap.WebUIControls.Title"/> object to be found in the collection.
            </param>
            <returns>
            An <b>integer</b> index of the found title ot <b>-1</b> if title was not found.
            </returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.TitleCollection.Invalidate">
            <summary>
            Invalidates chart the collection belongs to.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.TitleCollection.CalcOutsideTitlePosition(Dundas.Olap.WebUIControls.ChartPicture,Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.ChartArea,System.Drawing.RectangleF@,System.Single)">
            <summary>
            Recalculates title position in the collection for titles docked outside of chart area.
            </summary>
            <param name="chartPicture">Chart picture object.</param>
            <param name="chartGraph">Chart graphics used.</param>
            <param name="area">Area the title is docked to.</param>
            <param name="chartAreasRectangle">Area where the title should be positioned.</param>
            <param name="elementSpacing">Spacing size in percentage of the area.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.TitleCollection.CalcInsideTitlePosition(Dundas.Olap.WebUIControls.ChartPicture,Dundas.Olap.WebUIControls.ChartGraphics,System.Single)">
            <summary>
            Recalculates all titles position inside chart area in the collection.
            </summary>
            <param name="chartPicture">Chart picture object.</param>
            <param name="chartGraph">Chart graphics used.</param>
            <param name="elementSpacing">Spacing size in percentage of the area.</param>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.TitleCollection.Chart">
            <summary>
            Gets reference to the chart object.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.TitleCollection.Item(System.Object)">
            <summary>
            Strongly typed indexer of the collection.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.LabelRow">
            <summary>
            Custom label row number.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.LabelRow.First">
            <summary>
            First row of labels.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.LabelRow.Second">
            <summary>
            Second row of labels.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.LabelMark">
            <summary>
            Custom label marking type
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.LabelMark.None">
            <summary>
            Not set.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.LabelMark.SideMark">
            <summary>
            Mark labels using side marks.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.LabelMark.LineSideMark">
            <summary>
            Mark labels using line and side marks.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.LabelMark.Box">
            <summary>
            Draws a box around the label. Box always starts at the axis position.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.GridTick">
            <summary>
            Custom grid lines and tick marks flags used in the custom labels.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.GridTick.None">
            <summary>
            No tick mark or grid line are shown.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.GridTick.TickMark">
            <summary>
            Tick mark is shown.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.GridTick.GridLine">
            <summary>
            Grid line is shown.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.GridTick.All">
            <summary>
            Tick mark and grid line are shown.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.CircularAxisLabelsStyle">
            <summary>
            Circular chart area axis labels style.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.CircularAxisLabelsStyle.Auto">
            <summary>
            Style depends on number of labels.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.CircularAxisLabelsStyle.Circular">
            <summary>
            Labels text position around the circular area.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.CircularAxisLabelsStyle.Horizontal">
            <summary>
            Labels text is always horizontal.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.CircularAxisLabelsStyle.Radial">
            <summary>
            Labels text has same angle as circular axis.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.CustomLabelsCollection">
            <summary>
            CustomLabelsCollection class is a strongly typed collection of 
            custom axis labels.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CustomLabelsCollection.#ctor">
            <summary>
            Custom labels collection object constructor
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CustomLabelsCollection.#ctor(Dundas.Olap.WebUIControls.Axis)">
            <summary>
            Custom labels collection object constructor
            </summary>
            <param name="axis">Reference to the axis object.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CustomLabelsCollection.Add(System.Double,System.Double,System.String)">
            <summary>
            Adds one custom label into the collection.
            </summary>
            <param name="fromPosition">Label left position.</param>
            <param name="toPosition">Label right position.</param>
            <param name="text">Label text.</param>
            <returns>Index of newly added item.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CustomLabelsCollection.Add(System.Double,System.Double,System.String,System.Boolean)">
            <summary>
            Adds one custom label into the collection. Custom label flag may be specified.
            </summary>
            <param name="fromPosition">Label left position.</param>
            <param name="toPosition">Label right position.</param>
            <param name="text">Label text.</param>
            <param name="customLabel">Indicates if label is custom (created by user).</param>
            <returns>Index of newly added item.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CustomLabelsCollection.Add(System.Double,System.Double,System.String,Dundas.Olap.WebUIControls.LabelRow,Dundas.Olap.WebUIControls.LabelMark)">
            <summary>
            Adds one custom label into the collection.
            </summary>
            <param name="fromPosition">Label left position.</param>
            <param name="toPosition">Label right position.</param>
            <param name="text">Label text.</param>
            <param name="row">Label row.</param>
            <param name="mark">Label marking type.</param>
            <returns>Index of newly added item.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CustomLabelsCollection.Add(System.Double,System.Double,System.String,System.Int32,Dundas.Olap.WebUIControls.LabelMark)">
            <summary>
            Adds one custom label into the collection.
            </summary>
            <param name="fromPosition">Label left position.</param>
            <param name="toPosition">Label right position.</param>
            <param name="text">Label text.</param>
            <param name="rowIndex">Label row index.</param>
            <param name="mark">Label marking type.</param>
            <returns>Index of newly added item.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CustomLabelsCollection.Add(System.Double,System.Double,System.String,Dundas.Olap.WebUIControls.LabelRow,Dundas.Olap.WebUIControls.LabelMark,Dundas.Olap.WebUIControls.GridTick)">
            <summary>
            Adds one custom label into the collection.
            </summary>
            <param name="fromPosition">Label left position.</param>
            <param name="toPosition">Label right position.</param>
            <param name="text">Label text.</param>
            <param name="row">Label row.</param>
            <param name="mark">Label marking type.</param>
            <returns>Index of newly added item.</returns>
            <param name="gridTick">Custom grid line or/and tick marks flag.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CustomLabelsCollection.Add(System.Double,System.Double,System.String,System.Int32,Dundas.Olap.WebUIControls.LabelMark,Dundas.Olap.WebUIControls.GridTick)">
            <summary>
            Adds one custom label into the collection.
            </summary>
            <param name="fromPosition">Label left position.</param>
            <param name="toPosition">Label right position.</param>
            <param name="text">Label text.</param>
            <param name="rowIndex">Label row index.</param>
            <param name="mark">Label marking type.</param>
            <returns>Index of newly added item.</returns>
            <param name="gridTick">Custom grid line or/and tick marks flag.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CustomLabelsCollection.Add(System.Double,Dundas.Olap.WebUIControls.DateTimeIntervalType,System.Double,System.Double,System.String,Dundas.Olap.WebUIControls.LabelRow,Dundas.Olap.WebUIControls.LabelMark)">
            <summary>
            Adds custom labels into the collection using min and max values and step
            </summary>
            <param name="labelsStep">Label step size.</param>
            <param name="intervalType">Label step type.</param>
            <param name="min">Min position.</param>
            <param name="max">Max position.</param>
            <param name="format">Label text format.</param>
            <param name="row">Label row.</param>
            <param name="mark">Label marking type.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CustomLabelsCollection.Add(System.Double,Dundas.Olap.WebUIControls.DateTimeIntervalType,System.Double,System.Double,System.String,System.Int32,Dundas.Olap.WebUIControls.LabelMark)">
            <summary>
            Adds custom labels into the collection using min and max values and step
            </summary>
            <param name="labelsStep">Label step size.</param>
            <param name="intervalType">Label step type.</param>
            <param name="min">Min position.</param>
            <param name="max">Max position.</param>
            <param name="format">Label text format.</param>
            <param name="rowIndex">Label row index.</param>
            <param name="mark">Label marking type.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CustomLabelsCollection.Add(System.Double,Dundas.Olap.WebUIControls.DateTimeIntervalType)">
            <summary>
            Adds custom labels into the collection using min and max values and step.
            </summary>
            <param name="labelsStep">Label step size.</param>
            <param name="intervalType">Label step type.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CustomLabelsCollection.Add(System.Double,Dundas.Olap.WebUIControls.DateTimeIntervalType,System.String)">
            <summary>
            Adds custom labels into the collection using min and max values and step.
            </summary>
            <param name="labelsStep">Label step size.</param>
            <param name="intervalType">Label step type.</param>
            <param name="format">Label text format.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CustomLabelsCollection.Add(System.Double,Dundas.Olap.WebUIControls.DateTimeIntervalType,System.String,Dundas.Olap.WebUIControls.LabelRow,Dundas.Olap.WebUIControls.LabelMark)">
            <summary>
            Adds custom labels into the collection using min and max values and step.
            </summary>
            <param name="labelsStep">Label step size.</param>
            <param name="intervalType">Label step type.</param>
            <param name="format">Label text format.</param>
            <param name="row">Label row.</param>
            <param name="mark">Label marking type.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CustomLabelsCollection.Add(System.Double,Dundas.Olap.WebUIControls.DateTimeIntervalType,System.String,System.Int32,Dundas.Olap.WebUIControls.LabelMark)">
            <summary>
            Adds custom labels into the collection using min and max values and step.
            </summary>
            <param name="labelsStep">Label step size.</param>
            <param name="intervalType">Label step type.</param>
            <param name="format">Label text format.</param>
            <param name="rowIndex">Label row index.</param>
            <param name="mark">Label marking type.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CustomLabelsCollection.Clear">
            <summary>
            Removes all items from the collection.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CustomLabelsCollection.Contains(System.Object)">
            <summary>
            Check if specified object exists in the collection.
            </summary>
            <param name="value">Object to check.</param>
            <returns>True if object exist.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CustomLabelsCollection.IndexOf(System.Object)">
            <summary>
            Gets first index of the collection item equal to the object provided.
            </summary>
            <param name="value">Object to look for.</param>
            <returns>Index of found object.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CustomLabelsCollection.Remove(System.Object)">
            <summary>
            Remove object from the collection
            </summary>
            <param name="value">Value to be removed.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CustomLabelsCollection.RemoveAt(System.Int32)">
            <summary>
            Remove item from the collection by index.
            </summary>
            <param name="index">Zero based index.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CustomLabelsCollection.Add(System.Object)">
            <summary>
            Add custom label object into the collection.
            </summary>
            <param name="value">Custom label to add.</param>
            <returns>Index of the newly added object.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CustomLabelsCollection.Insert(System.Int32,Dundas.Olap.WebUIControls.CustomLabel)">
            <summary>
            Insert custom label object into the collection.
            </summary>
            <param name="index">Zero based index.</param>
            <param name="value">Custom label to add.</param>
            <returns>Index of the newly added object.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CustomLabelsCollection.Insert(System.Int32,System.Object)">
            <summary>
            Insert custom label object into the collection.
            </summary>
            <param name="index">Zero based index.</param>
            <param name="value">Custom label to add.</param>
            <returns>Index of the newly added object.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CustomLabelsCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies all the elements of the current collection to the specified one-dimensional 
            collection starting at the specified destination index.
            </summary>
            <param name="array">Destination collection.</param>
            <param name="index">The index in collection at which copying begins.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CustomLabelsCollection.GetEnumerator">
            <summary>
            Get collection enumerator.
            </summary>
            <returns>Collection enumerator.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CustomLabelsCollection.Invalidate">
            <summary>
            Invalidate chart (or just chart area ) when collection is changed
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.CustomLabelsCollection.Item(System.Int32)">
            <summary>
            Indexer of the class. Returns the CustomLabel object
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.CustomLabelsCollection.IsFixedSize">
            <summary>
            Gets a value indicating whether the collection has a fixed size.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.CustomLabelsCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the collection is read-only.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.CustomLabelsCollection.Count">
            <summary>
            Number of items in the collection.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.CustomLabelsCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the collection is synchronized (thread-safe).
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.CustomLabelsCollection.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the collection.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.CustomLabel">
            <summary>
            CustomLabel class represents a single custom axis label. Text and 
            position along the axis is provided by the user.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CustomLabel.#ctor">
            <summary>
            Custom label constructor
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CustomLabel.#ctor(System.Double,System.Double,System.String,System.Int32,Dundas.Olap.WebUIControls.LabelMark)">
            <summary>
            Custom label constructor
            </summary>
            <param name="fromPosition">From position.</param>
            <param name="toPosition">To position.</param>
            <param name="text">Label text.</param>
            <param name="labelRow">Label row index.</param>
            <param name="mark">Label mark.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CustomLabel.#ctor(System.Double,System.Double,System.String,System.Int32,Dundas.Olap.WebUIControls.LabelMark,Dundas.Olap.WebUIControls.GridTick)">
            <summary>
            Custom label constructor
            </summary>
            <param name="fromPosition">From position.</param>
            <param name="toPosition">To position.</param>
            <param name="text">Label text.</param>
            <param name="labelRow">Label row index.</param>
            <param name="mark">Label mark.</param>
            <param name="gridTick">Custom grid line or/and tick marks flag.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CustomLabel.#ctor(System.Double,System.Double,System.String,Dundas.Olap.WebUIControls.LabelRow,Dundas.Olap.WebUIControls.LabelMark)">
            <summary>
            Custom label constructor
            </summary>
            <param name="fromPosition">From position.</param>
            <param name="toPosition">To position.</param>
            <param name="text">Label text.</param>
            <param name="row">Label row.</param>
            <param name="mark">Label mark.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CustomLabel.#ctor(System.Double,System.Double,System.String,Dundas.Olap.WebUIControls.LabelRow,Dundas.Olap.WebUIControls.LabelMark,Dundas.Olap.WebUIControls.GridTick)">
            <summary>
            Custom label constructor
            </summary>
            <param name="fromPosition">From position.</param>
            <param name="toPosition">To position.</param>
            <param name="text">Label text.</param>
            <param name="row">Label row.</param>
            <param name="mark">Label mark.</param>
            <param name="gridTick">Custom grid line or/and tick marks flag.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CustomLabel.Clone">
            <summary>
            Returns a cloned label object.
            </summary>
            <returns>Copy of current custom label.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CustomLabel.GetAxis">
            <summary>
            Gets axes to which this object attached to.
            </summary>
            <returns>Axis.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CustomLabel.Invalidate">
            <summary>
            Invalidate chart (or just chart area ) when collection is changed.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.CustomLabel.ToolTip">
            <summary>
            Label tooltip.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.CustomLabel.Href">
            <summary>
            URL target of the label.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.CustomLabel.MapAreaAttributes">
            <summary>
            Other attributes of the label map area.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.CustomLabel.ImageHref">
            <summary>
            URL target of the label image.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.CustomLabel.ImageMapAreaAttributes">
            <summary>
            Other attributes of the label image map area.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.CustomLabel.Tag">
            <summary>
            Object that is associated with the label.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.CustomLabel.Image">
            <summary>
            Label image.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.CustomLabel.ImageTranspColor">
            <summary>
            Label image transparent color.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.CustomLabel.Name">
            <summary>
            Custom label item name. For internal use only!
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.CustomLabel.GridTick">
            <summary>
            Defines custom tick marks and/or grid lines to be drawn in the center of the label.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.CustomLabel.From">
            <summary>
            Custom label left position.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.CustomLabel.To">
            <summary>
            Custom label right position.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.CustomLabel.Text">
            <summary>
            Custom label text.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.CustomLabel.TextColor">
            <summary>
            Label text color.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.CustomLabel.MarkColor">
            <summary>
            Label mark line color.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.CustomLabel.Row">
            <summary>
            Custom label row.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.CustomLabel.RowIndex">
            <summary>
            Custom label row index.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.CustomLabel.LabelMark">
            <summary>
            Defines marks for the labels in the second row. Major tick mark line style is used for drawing.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.Label">
            <summary>
            Label class contains properties which define visual appearance of 
            the axis labels, their interval and position. This class is also 
            responsible for calculating the position of all the labels and 
            drawing them. 
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Label.#ctor">
            <summary>
            Public default constructor.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Label.#ctor(Dundas.Olap.WebUIControls.Axis)">
            <summary>
            Public constructor.
            </summary>
            <param name="axis">Axis which owens teh grid.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Label.PaintCircular(Dundas.Olap.WebUIControls.ChartGraphics)">
            <summary>
            Draws axis labels on the circular chart area.
            </summary>
            <param name="graph">Reference to the Chart Graphics object.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Label.GetLabelPosition(Dundas.Olap.WebUIControls.ChartGraphics,System.Drawing.PointF,System.Drawing.SizeF,System.Drawing.StringFormat)">
            <summary>
            Gets rectangle position of the label.
            </summary>
            <param name="graph">Chart graphics object.</param>
            <param name="position">Original label position.</param>
            <param name="size">Label text size.</param>
            <param name="format">Label string format.</param>
            <returns>Label rectangle position.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Label.Paint(Dundas.Olap.WebUIControls.ChartGraphics,System.Boolean)">
            <summary>
            Draws axis labels.
            </summary>
            <param name="graph">Reference to the Chart Graphics object.</param>
            <param name="backElements">Back elements of the axis should be drawn in 3D scene.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Label.InitAnimation(Dundas.Olap.WebUIControls.ChartGraphics,System.Int32,System.Int32)">
            <summary>
            Initialize animation for axis line and arrow
            </summary>
            <param name="graph">Chart Graphics object</param>
            <param name="numberOfElements">The number of elements in the collection</param>
            <param name="index">The index of the label</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Label.GetAllLabelsRect(Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.AxisPosition,System.Drawing.StringFormat@)">
            <summary>
            Get a rectangle between chart area position and plotting area on specified side.
            Also sets axis labels string formatting for the specified labels position.
            </summary>
            <param name="area">Chart area object.</param>
            <param name="position">Position in chart area.</param>
            <param name="stringFormat">Axis labels string format.</param>
            <returns>Axis labels rectangle.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Label.GetLabelsPosition(Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.Axis)">
            <summary>
            Gets position of axis labels.
            Top and Bottom axis labels can be drawn on the sides (left or rigth)
            of the plotting area. If angle between axis and it's projection is
            between -25 and 25 degrees the axis are drawn at the bottom/top, 
            otherwise labels are moved on the left or right side.
            </summary>
            <param name="area">Chart area object.</param>
            <param name="axis">Axis object.</param>
            <returns>Position where axis labels should be drawn.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Label.Paint3D(Dundas.Olap.WebUIControls.ChartGraphics,System.Boolean)">
            <summary>
            Draws axis labels in 3D space.
            </summary>
            <param name="graph">Reference to the Chart Graphics object.</param>
            <param name="backElements">Back elements of the axis should be drawn in 3D scene.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Label.GetAxis">
            <summary>
            Gets axes to which this object attached to.
            </summary>
            <returns>Axis object.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Label.Invalidate">
            <summary>
            Invalidate chart picture
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Label.IntervalOffset">
            <summary>
            Labels interval offset.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Label.IntervalOffsetType">
            <summary>
            Labels offset type.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Label.Interval">
            <summary>
            Label interval size.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Label.IntervalType">
            <summary>
            Label interval type.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Label.Font">
            <summary>
            Label font
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Label.FontColor">
            <summary>
            Label font color
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Label.FontAngle">
            <summary>
            Label font angle
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Label.OffsetLabels">
            <summary>
            True if labels are shown with offset
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Label.ShowEndLabels">
            <summary>
            True if labels are shown at axis ends
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Label.TruncatedLabels">
            <summary>
            True if label can be truncated
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Label.Format">
            <summary>
            Label text format
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Label.Enabled">
            <summary>
            Indicates that labels are enabled.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.GdiGraphics">
            <summary>
            GdiGraphics class is chart GDI+ rendering engine.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.GdiGraphics.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.GdiGraphics.DrawLine(System.Drawing.Pen,System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Draws a line connecting two PointF structures.
            </summary>
            <param name="pen">Pen object that determines the color, width, and style of the line.</param>
            <param name="pt1">PointF structure that represents the first point to connect.</param>
            <param name="pt2">PointF structure that represents the second point to connect.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.GdiGraphics.DrawLine(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws a line connecting the two points specified by coordinate pairs.
            </summary>
            <param name="pen">Pen object that determines the color, width, and style of the line.</param>
            <param name="x1">x-coordinate of the first point.</param>
            <param name="y1">y-coordinate of the first point.</param>
            <param name="x2">x-coordinate of the second point.</param>
            <param name="y2">y-coordinate of the second point.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.GdiGraphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
            <summary>
            Draws the specified portion of the specified Image object at the specified location and with the specified size.
            </summary>
            <param name="image">Image object to draw.</param>
            <param name="destRect">Rectangle structure that specifies the location and size of the drawn image. The image is scaled to fit the rectangle.</param>
            <param name="srcX">x-coordinate of the upper-left corner of the portion of the source image to draw.</param>
            <param name="srcY">y-coordinate of the upper-left corner of the portion of the source image to draw.</param>
            <param name="srcWidth">Width of the portion of the source image to draw.</param>
            <param name="srcHeight">Height of the portion of the source image to draw.</param>
            <param name="srcUnit">Member of the GraphicsUnit enumeration that specifies the units of measure used to determine the source rectangle.</param>
            <param name="imageAttr">ImageAttributes object that specifies recoloring and gamma information for the image object.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.GdiGraphics.DrawEllipse(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws an ellipse defined by a bounding rectangle specified by 
            a pair of coordinates: a height, and a width.
            </summary>
            <param name="pen">Pen object that determines the color, width, and style of the ellipse.</param>
            <param name="x">x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</param>
            <param name="y">y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</param>
            <param name="width">Width of the bounding rectangle that defines the ellipse.</param>
            <param name="height">Height of the bounding rectangle that defines the ellipse.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.GdiGraphics.DrawCurve(System.Drawing.Pen,System.Drawing.PointF[],System.Int32,System.Int32,System.Single)">
            <summary>
            Draws a cardinal spline through a specified array of PointF structures 
            using a specified tension. The drawing begins offset from 
            the beginning of the array.
            </summary>
            <param name="pen">Pen object that determines the color, width, and height of the curve.</param>
            <param name="points">Array of PointF structures that define the spline.</param>
            <param name="offset">Offset from the first element in the array of the points parameter to the starting point in the curve.</param>
            <param name="numberOfSegments">Number of segments after the starting point to include in the curve.</param>
            <param name="tension">Value greater than or equal to 0.0F that specifies the tension of the curve.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.GdiGraphics.DrawRectangle(System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws a rectangle specified by a coordinate pair: a width, and a height.
            </summary>
            <param name="pen">Pen object that determines the color, width, and style of the rectangle.</param>
            <param name="x">x-coordinate of the upper-left corner of the rectangle to draw.</param>
            <param name="y">y-coordinate of the upper-left corner of the rectangle to draw.</param>
            <param name="width">Width of the rectangle to draw.</param>
            <param name="height">Height of the rectangle to draw.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.GdiGraphics.DrawPolygon(System.Drawing.Pen,System.Drawing.PointF[])">
            <summary>
            Draws a polygon defined by an array of PointF structures.
            </summary>
            <param name="pen">Pen object that determines the color, width, and style of the polygon.</param>
            <param name="points">Array of PointF structures that represent the vertices of the polygon.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.GdiGraphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.RectangleF,System.Drawing.StringFormat)">
            <summary>
            Draws the specified text string in the specified rectangle with the specified Brush and Font objects using the formatting attributes of the specified StringFormat object.
            </summary>
            <param name="s">String to draw.</param>
            <param name="font">Font object that defines the text format of the string.</param>
            <param name="brush">Brush object that determines the color and texture of the drawn text.</param>
            <param name="layoutRectangle">RectangleF structure that specifies the location of the drawn text.</param>
            <param name="format">StringFormat object that specifies formatting attributes, such as line spacing and alignment, that are applied to the drawn text.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.GdiGraphics.DrawString(System.String,System.Drawing.Font,System.Drawing.Brush,System.Drawing.PointF,System.Drawing.StringFormat)">
            <summary>
            Draws the specified text string at the specified location with the specified Brush and Font objects using the formatting attributes of the specified StringFormat object.
            </summary>
            <param name="s">String to draw.</param>
            <param name="font">Font object that defines the text format of the string.</param>
            <param name="brush">Brush object that determines the color and texture of the drawn text.</param>
            <param name="point">PointF structure that specifies the upper-left corner of the drawn text.</param>
            <param name="format">StringFormat object that specifies formatting attributes, such as line spacing and alignment, that are applied to the drawn text.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.GdiGraphics.DrawImage(System.Drawing.Image,System.Drawing.Rectangle,System.Single,System.Single,System.Single,System.Single,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
            <summary>
            Draws the specified portion of the specified Image object at the specified location and with the specified size.
            </summary>
            <param name="image">Image object to draw.</param>
            <param name="destRect">Rectangle structure that specifies the location and size of the drawn image. The image is scaled to fit the rectangle.</param>
            <param name="srcX">x-coordinate of the upper-left corner of the portion of the source image to draw.</param>
            <param name="srcY">y-coordinate of the upper-left corner of the portion of the source image to draw.</param>
            <param name="srcWidth">Width of the portion of the source image to draw.</param>
            <param name="srcHeight">Height of the portion of the source image to draw.</param>
            <param name="srcUnit">Member of the GraphicsUnit enumeration that specifies the units of measure used to determine the source rectangle.</param>
            <param name="imageAttrs">ImageAttributes object that specifies recoloring and gamma information for the image object.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.GdiGraphics.DrawRectangle(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws a rectangle specified by a coordinate pair: a width, and a height.
            </summary>
            <param name="pen">A Pen object that determines the color, width, and style of the rectangle.</param>
            <param name="x">The x-coordinate of the upper-left corner of the rectangle to draw.</param>
            <param name="y">The y-coordinate of the upper-left corner of the rectangle to draw.</param>
            <param name="width">The width of the rectangle to draw.</param>
            <param name="height">The height of the rectangle to draw.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.GdiGraphics.DrawPath(System.Drawing.Pen,System.Drawing.Drawing2D.GraphicsPath)">
            <summary>
            Draws a GraphicsPath object.
            </summary>
            <param name="pen">Pen object that determines the color, width, and style of the path.</param>
            <param name="path">GraphicsPath object to draw.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.GdiGraphics.DrawPie(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws a pie shape defined by an ellipse specified by a coordinate pair: a width, a height and two radial lines.
            </summary>
            <param name="pen">Pen object that determines the color, width, and style of the pie shape.</param>
            <param name="x">x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie shape comes.</param>
            <param name="y">y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie shape comes.</param>
            <param name="width">Width of the bounding rectangle that defines the ellipse from which the pie shape comes.</param>
            <param name="height">Height of the bounding rectangle that defines the ellipse from which the pie shape comes.</param>
            <param name="startAngle">Angle measured in degrees clockwise from the x-axis to the first side of the pie shape.</param>
            <param name="sweepAngle">Angle measured in degrees clockwise from the startAngle parameter to the second side of the pie shape.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.GdiGraphics.DrawArc(System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws an arc representing a portion of an ellipse specified by a pair of coordinates: a width, and a height.
            </summary>
            <param name="pen">Pen object that determines the color, width, and style of the arc.</param>
            <param name="x">x-coordinate of the upper-left corner of the rectangle that defines the ellipse.</param>
            <param name="y">y-coordinate of the upper-left corner of the rectangle that defines the ellipse.</param>
            <param name="width">Width of the rectangle that defines the ellipse.</param>
            <param name="height">Height of the rectangle that defines the ellipse.</param>
            <param name="startAngle">Angle in degrees measured clockwise from the x-axis to the starting point of the arc.</param>
            <param name="sweepAngle">Angle in degrees measured clockwise from the startAngle parameter to ending point of the arc.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.GdiGraphics.DrawImage(System.Drawing.Image,System.Drawing.RectangleF)">
            <summary>
            Draws the specified Image object at the specified location and with the specified size.
            </summary>
            <param name="image">Image object to draw.</param>
            <param name="rect">RectangleF structure that specifies the location and size of the drawn image.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.GdiGraphics.DrawEllipse(System.Drawing.Pen,System.Drawing.RectangleF)">
            <summary>
            Draws an ellipse defined by a bounding RectangleF.
            </summary>
            <param name="pen">Pen object that determines the color, width, and style of the ellipse.</param>
            <param name="rect">RectangleF structure that defines the boundaries of the ellipse.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.GdiGraphics.DrawLines(System.Drawing.Pen,System.Drawing.PointF[])">
            <summary>
            Draws a series of line segments that connect an array of PointF structures.
            </summary>
            <param name="pen">Pen object that determines the color, width, and style of the line segments.</param>
            <param name="points">Array of PointF structures that represent the points to connect.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.GdiGraphics.FillEllipse(System.Drawing.Brush,System.Drawing.RectangleF)">
            <summary>
            Fills the interior of an ellipse defined by a bounding rectangle 
            specified by a RectangleF structure.
            </summary>
            <param name="brush">Brush object that determines the characteristics of the fill.</param>
            <param name="rect">RectangleF structure that represents the bounding rectangle that defines the ellipse.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.GdiGraphics.FillPath(System.Drawing.Brush,System.Drawing.Drawing2D.GraphicsPath)">
            <summary>
            Fills the interior of a GraphicsPath object.
            </summary>
            <param name="brush">Brush object that determines the characteristics of the fill.</param>
            <param name="path">GraphicsPath object that represents the path to fill.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.GdiGraphics.FillRegion(System.Drawing.Brush,System.Drawing.Region)">
            <summary>
            Fills the interior of a Region object.
            </summary>
            <param name="brush">Brush object that determines the characteristics of the fill.</param>
            <param name="region">Region object that represents the area to fill.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.GdiGraphics.FillRectangle(System.Drawing.Brush,System.Drawing.RectangleF)">
            <summary>
            Fills the interior of a rectangle specified by a RectangleF structure.
            </summary>
            <param name="brush">Brush object that determines the characteristics of the fill.</param>
            <param name="rect">RectangleF structure that represents the rectangle to fill.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.GdiGraphics.FillRectangle(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Fills the interior of a rectangle specified by a pair of coordinates, a width, and a height.
            </summary>
            <param name="brush">Brush object that determines the characteristics of the fill.</param>
            <param name="x">x-coordinate of the upper-left corner of the rectangle to fill.</param>
            <param name="y">y-coordinate of the upper-left corner of the rectangle to fill.</param>
            <param name="width">Width of the rectangle to fill.</param>
            <param name="height">Height of the rectangle to fill.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.GdiGraphics.FillPolygon(System.Drawing.Brush,System.Drawing.PointF[])">
            <summary>
            Fills the interior of a polygon defined by an array of points specified by PointF structures .
            </summary>
            <param name="brush">Brush object that determines the characteristics of the fill.</param>
            <param name="points">Array of PointF structures that represent the vertices of the polygon to fill.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.GdiGraphics.FillPie(System.Drawing.Brush,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Fills the interior of a pie section defined by an ellipse 
            specified by a pair of coordinates, a width, and a height 
            and two radial lines.
            </summary>
            <param name="brush">Brush object that determines the characteristics of the fill.</param>
            <param name="x">x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie section comes.</param>
            <param name="y">y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie section comes.</param>
            <param name="width">Width of the bounding rectangle that defines the ellipse from which the pie section comes.</param>
            <param name="height">Height of the bounding rectangle that defines the ellipse from which the pie section comes.</param>
            <param name="startAngle">Angle in degrees measured clockwise from the x-axis to the first side of the pie section.</param>
            <param name="sweepAngle">Angle in degrees measured clockwise from the startAngle parameter to the second side of the pie section.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.GdiGraphics.MeasureString(System.String,System.Drawing.Font,System.Drawing.SizeF,System.Drawing.StringFormat)">
            <summary>
            Measures the specified string when drawn with the specified 
            Font object and formatted with the specified StringFormat object.
            </summary>
            <param name="text">String to measure.</param>
            <param name="font">Font object defines the text format of the string.</param>
            <param name="layoutArea">SizeF structure that specifies the maximum layout area for the text.</param>
            <param name="stringFormat">StringFormat object that represents formatting information, such as line spacing, for the string.</param>
            <returns>This method returns a SizeF structure that represents the size, in pixels, of the string specified in the text parameter as drawn with the font parameter and the stringFormat parameter.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.GdiGraphics.MeasureString(System.String,System.Drawing.Font)">
            <summary>
            Measures the specified string when drawn with the specified 
            Font object and formatted with the specified StringFormat object.
            </summary>
            <param name="text">String to measure.</param>
            <param name="font">Font object defines the text format of the string.</param>
            <returns>This method returns a SizeF structure that represents the size, in pixels, of the string specified in the text parameter as drawn with the font parameter and the stringFormat parameter.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.GdiGraphics.Save">
            <summary>
            Saves the current state of this Graphics object and identifies the saved state with a GraphicsState object.
            </summary>
            <returns>This method returns a GraphicsState object that represents the saved state of this Graphics object.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.GdiGraphics.Restore(System.Drawing.Drawing2D.GraphicsState)">
            <summary>
            Restores the state of this Graphics object to the state represented by a GraphicsState object.
            </summary>
            <param name="gstate">GraphicsState object that represents the state to which to restore this Graphics object.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.GdiGraphics.ResetClip">
            <summary>
            Resets the clip region of this Graphics object to an infinite region.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.GdiGraphics.SetClip(System.Drawing.RectangleF)">
            <summary>
            Sets the clipping region of this Graphics object to the rectangle specified by a RectangleF structure.
            </summary>
            <param name="rect">RectangleF structure that represents the new clip region.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.GdiGraphics.SetClip(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.CombineMode)">
            <summary>
            Sets the clipping region of this Graphics object to the result of the 
            specified operation combining the current clip region and the 
            specified GraphicsPath object.
            </summary>
            <param name="path">GraphicsPath object to combine.</param>
            <param name="combineMode">Member of the CombineMode enumeration that specifies the combining operation to use.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.GdiGraphics.TranslateTransform(System.Single,System.Single)">
            <summary>
            Prepends the specified translation to the transformation matrix of this Graphics object.
            </summary>
            <param name="dx">x component of the translation.</param>
            <param name="dy">y component of the translation.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.GdiGraphics.BeginSelection(System.String,System.String)">
            <summary>
            This method starts Selection mode
            </summary>
            <param name="hRef">The location of the referenced object, expressed as a URI reference.</param>
            <param name="title">Title which could be used for tooltips.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.GdiGraphics.EndSelection">
            <summary>
            This method stops Selection mode
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.GdiGraphics.graphics">
            <summary>
            Graphics object
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.GdiGraphics.Transform">
            <summary>
            Gets or sets the world transformation for this Graphics object.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.GdiGraphics.SmoothingMode">
            <summary>
            Gets or sets the rendering quality for this Graphics object.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.GdiGraphics.TextRenderingHint">
            <summary>
            Gets or sets the rendering mode for text associated with this Graphics object.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.GdiGraphics.Clip">
            <summary>
            Gets or sets a Region object that limits the drawing region of this Graphics object.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.GdiGraphics.IsClipEmpty">
            <summary>
            Gets a value indicating whether the clipping region of this Graphics object is empty.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.GdiGraphics.Graphics">
            <summary>
            Reference to the Graphics object
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.ChartAreaCollection">
            <summary>
            ChartAreaCollection class represents a strongly typed collection of 
            ChartArea objects. Each chart area has a unique name in the collection
            and can be retrieved by name or index.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartAreaCollection.array">
            <summary>
            Reference to ArrayList class
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartAreaCollection.common">
            <summary>
            Reference to Common Elements
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartAreaCollection.#ctor(Dundas.Olap.WebUIControls.CommonElements)">
            <summary>
            Constructor
            </summary>
            <param name="common">Common element</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartAreaCollection.#ctor">
            <summary>
            Default collecton constructor
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartAreaCollection.GetIndex(System.String)">
            <summary>
            Get chart area index by name
            </summary>
            <param name="name">Name of the chart area.</param>
            <returns>Index of the chart area or -1 if it does not exist.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartAreaCollection.Add(System.String)">
            <summary>
            Add item to the collection
            </summary>
            <param name="name">Name of the chart area</param>
            <returns>New Chart Area</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartAreaCollection.Add(System.Object)">
            <summary>
            Add Chart area object to the collection
            of chart areas
            </summary>
            <param name="value">Chart area object</param>
            <returns>The ArrayList index at which the value has been added.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartAreaCollection.Insert(System.Int32,Dundas.Olap.WebUIControls.ChartArea)">
            <summary>
            Insert a chart area to the chart area collection
            </summary>
            <param name="index">Position</param>
            <param name="value">Chart area object</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartAreaCollection.Insert(System.Int32,System.Object)">
            <summary>
            Insert a chart area to the chart area collection
            </summary>
            <param name="index">Position</param>
            <param name="value">Chart area object</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartAreaCollection.CreateName(System.String)">
            <summary>
            Create Name of chart area and 
            check if that name exist.
            </summary>
            <param name="Name">Recomended Chart Area Name</param>
            <returns>New Chart Area Name</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartAreaCollection.UniqueName(System.String)">
            <summary>
            Checks whether a name is unique.
            </summary>
            <param name="name">Chart area name</param>
            <returns>true if a name is unique</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartAreaCollection.Invalidate">
            <summary>
            Invalidate chart 
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartAreaCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the element at the specified index
            </summary>
            <param name="index">The zero-based index of the element to remove</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartAreaCollection.Remove(System.Object)">
            <summary>
            Removes the first occurrence of a specific object
            </summary>
            <param name="value">The Object to remove from the ChartAreaCollection</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartAreaCollection.IndexOf(System.Object)">
            <summary>
            Searches for the specified Object and returns the zero-based 
            index of the first occurrence within the entire collection.
            </summary>
            <param name="value">The Object to locate in the collection.</param>
            <returns>The zero-based index of the first occurrence of value within the entire collection, if found; otherwise, -1.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartAreaCollection.Contains(System.Object)">
            <summary>
            Determines whether an element is in the collection.
            </summary>
            <param name="value">The Object to locate in the collection. The element to locate can be a null reference. </param>
            <returns>true if item is found in the collection; otherwise, false.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartAreaCollection.Clear">
            <summary>
            Removes all elements from the collection.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartAreaCollection.GetEnumerator">
            <summary>
            Returns an enumerator for the entire collection
            </summary>
            <returns>An IEnumerator for the entire collection</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartAreaCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the ArrayList or a portion of it to 
            a one-dimensional array.
            </summary>
            <param name="array">The one-dimensional Array that is the destination 
            of the elements copied from ArrayList. The Array must have 
            zero-based indexing.</param>
            <param name="index">The zero-based index in array at which copying begins.</param>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartAreaCollection.Item(System.Object)">
            <summary>
            Indexer of the class. Returns the ChartArea object
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartAreaCollection.System#Collections#IList#Item(System.Int32)">
            <summary>
            IList interface
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartAreaCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the collection is read-only.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartAreaCollection.IsFixedSize">
            <summary>
            Gets a value indicating whether the collection has a fixed size.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartAreaCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the collection is 
            synchronized (thread-safe).
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartAreaCollection.Count">
            <summary>
            Gets the number of elements actually contained in the collection.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartAreaCollection.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the collection.
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.Design.LabelFormatEditor">
            <summary>
            Editor for labels format
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.LabelFormatEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Edit label format by showing the form
            </summary>
            <param name="context">Editing context.</param>
            <param name="provider">Provider.</param>
            <param name="value">Value to edit.</param>
            <returns>Result</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.LabelFormatEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Show modal form.
            </summary>
            <param name="context">Editing context.</param>
            <returns>Editor style.</returns>
        </member>
        <member name="T:Dundas.Charting.WebControl.Design.LabelFormatEditorForm">
            <summary>
            Summary description for LabelFormatEditorForm.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Design.LabelFormatEditorForm.resultFormat">
            <summary>
            Result format
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Design.LabelFormatEditorForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.LabelFormatEditorForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.LabelFormatEditorForm.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.LabelFormatEditorForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.LabelFormatEditorForm.UpdateNumericSample">
            <summary>
            Updates numeric sample on the form.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.LabelFormatEditorForm.LabelFormatEditorForm_Load(System.Object,System.EventArgs)">
            <summary>
            Form loading
            </summary>
            <param name="sender">Sender.</param>
            <param name="e">Argument.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.LabelFormatEditorForm.textBoxPrecision_TextChanged(System.Object,System.EventArgs)">
            <summary>
            Precision changed.
            </summary>
            <param name="sender">Sender.</param>
            <param name="e">Argument.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.LabelFormatEditorForm.comboBoxDateForamat_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            Date format changed.
            </summary>
            <param name="sender">Sender.</param>
            <param name="e">Argument.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.LabelFormatEditorForm.textBoxFormatString_TextChanged(System.Object,System.EventArgs)">
            <summary>
            Format changed.
            </summary>
            <param name="sender">Sender.</param>
            <param name="e">Argument.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.LabelFormatEditorForm.comboBoxCustomFormatType_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            Custom format changed.
            </summary>
            <param name="sender">Sender.</param>
            <param name="e">Argument.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.LabelFormatEditorForm.UpdateCustomExample">
            <summary>
            Updates custom formatting sample.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.LabelFormatEditorForm.tabControl_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            Tab control changed.
            </summary>
            <param name="sender">Sender.</param>
            <param name="e">Argument.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.LabelFormatEditorForm.buttonOk_Click(System.Object,System.EventArgs)">
            <summary>
            Ok button clicked.
            </summary>
            <param name="sender">Sender.</param>
            <param name="e">Argument.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.LabelFormatEditorForm.buttonCancel_Click(System.Object,System.EventArgs)">
            <summary>
            Cancel button clicked.
            </summary>
            <param name="sender">Sender.</param>
            <param name="e">Argument.</param>
        </member>
        <member name="T:Dundas.Charting.WebControl.Design.KeywordsStringEditorForm">
            <summary>
            Stirng editor form that is used to edit properties that support keywords.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Design.KeywordsStringEditorForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Design.KeywordsStringEditorForm.propertyName">
            <summary>
            Property name that is beign edited.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Design.KeywordsStringEditorForm.classTypeName">
            <summary>
            Object/class name beign edited.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Design.KeywordsStringEditorForm.initialString">
            <summary>
            Initial string to be edited.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Design.KeywordsStringEditorForm.ResultString">
            <summary>
            Result String after editing.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Design.KeywordsStringEditorForm.maxYValueIndex">
            <summary>
            Maximum Y value index that can be used
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Design.KeywordsStringEditorForm.applicableKeywords">
            <summary>
            List of applicable keywords
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Design.KeywordsStringEditorForm.KeywordsRegistry">
            <summary>
            Reference to the keywords registry
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Design.KeywordsStringEditorForm.selectedKeywordName">
            <summary>
            Name of the last selected keyword name
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Design.KeywordsStringEditorForm.selectedKeywordStart">
            <summary>
            Start index of selected keyword.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Design.KeywordsStringEditorForm.selectedKeywordLength">
            <summary>
            Length of selected keyword.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Design.KeywordsStringEditorForm.updating">
            <summary>
            Indicates that RTF control control is updating its text.
            Used to prevent recursive calls.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.KeywordsStringEditorForm.#ctor">
            <summary>
            Default public constructor
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.KeywordsStringEditorForm.#ctor(System.String,System.String,System.String,System.Int32)">
            <summary>
            Object constructor.
            </summary>
            <param name="initialString">String to edit.</param>
            <param name="classTypeName">Class name that beign edited.</param>
            <param name="propertyName">Property name that is beign edited.</param>
            <param name="maxYValueIndex">Maximum number of supported Y values.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.KeywordsStringEditorForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">True if disposing.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.KeywordsStringEditorForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.KeywordsStringEditorForm.KeywordsStringEditorForm_Load(System.Object,System.EventArgs)">
            <summary>
            Form loaded event handler.
            </summary>
            <param name="sender">Event sender.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.KeywordsStringEditorForm.buttonInsert_Click(System.Object,System.EventArgs)">
            <summary>
            Insert keyword button clicked event handler.
            </summary>
            <param name="sender">Event sender.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.KeywordsStringEditorForm.buttonEdit_Click(System.Object,System.EventArgs)">
            <summary>
            Edit keyword button clicked event handler.
            </summary>
            <param name="sender">Event sender.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.KeywordsStringEditorForm.richTextBox_TextChanged(System.Object,System.EventArgs)">
            <summary>
            Rich text box text changed event handler.
            </summary>
            <param name="sender">Event sender.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.KeywordsStringEditorForm.richTextBox_SelectionChanged(System.Object,System.EventArgs)">
            <summary>
            Rich text box selection changed event handler.
            </summary>
            <param name="sender">Event sender.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.KeywordsStringEditorForm.richTextBox_KeyPress(System.Object,System.Windows.Forms.KeyPressEventArgs)">
            <summary>
            Rich text box key pressed event handler.
            </summary>
            <param name="sender">Event sender.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.KeywordsStringEditorForm.richTextBox_KeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Rich text box key down event handler.
            </summary>
            <param name="sender">Event sender.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.KeywordsStringEditorForm.buttonOk_Click(System.Object,System.EventArgs)">
            <summary>
            Ok button pressed event handler.
            </summary>
            <param name="sender">Event sender.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.KeywordsStringEditorForm.GetRtfText(System.String)">
            <summary>
            Helper method that generates the RTF text based on the string.
            </summary>
            <param name="originalText">Input text.</param>
            <returns>Input text formatted as RTF.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.KeywordsStringEditorForm.GetColorHilightedRtfText(System.String)">
            <summary>
            Gets specified text in RTF format where keyword are color highlighted.
            </summary>
            <param name="originalText">Original text.</param>
            <returns>Color higlighted RTF text.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.KeywordsStringEditorForm.GetApplicableKeywords">
            <summary>
            Get list of keywords applicable to current object and property.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Dundas.Charting.WebControl.Design.KeywordsStringEditor">
            <summary>
            Editor for the string properties that may contain keyords.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.KeywordsStringEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Edit label format by showing the form
            </summary>
            <param name="context">Editing context.</param>
            <param name="provider">Provider.</param>
            <param name="value">Value to edit.</param>
            <returns>Result</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.KeywordsStringEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Show modal form.
            </summary>
            <param name="context">Editing context.</param>
            <returns>Editor style.</returns>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.CommonAttributes">
            <summary>
            Enumeration of common attributes names.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.DataPointComparer">
            <summary>
            Data points comparer class
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataPointComparer.#ctor">
            <summary>
            Private default constructor.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataPointComparer.#ctor(Dundas.Olap.WebUIControls.Series,Dundas.Olap.WebUIControls.PointsSortOrder,System.String)">
            <summary>
            Data points comparer class constructor.
            </summary>
            <param name="series">Data series.</param>
            <param name="order">Sorting order.</param>
            <param name="sortBy">Value used for sorting ("X", "Y or Y1", "Y2", ...).</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataPointComparer.Compare(System.Object,System.Object)">
            <summary>
            Compares two data points.
            </summary>
            <param name="point1">First data point.</param>
            <param name="point2">Second data point.</param>
            <returns>Zero if equal, less than zero if point1 less than point2, otherwise more than zero.</returns>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.DataPointCollection">
            <summary>
            Data points collection
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataPointCollection.#ctor">
            <summary>
            Data Point Collection object constructor.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataPointCollection.#ctor(Dundas.Olap.WebUIControls.Series)">
            <summary>
            Data Point Collection object constructor.
            </summary>
            <param name="series">Series object, which the Data Point Collection belongs to.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataPointCollection.DataPointInit(Dundas.Olap.WebUIControls.DataPoint@)">
            <summary>
            Initialize data point series and name.
            </summary>
            <param name="dataPoint">Reference to the data point object to initialize.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataPointCollection.DataPointInit(Dundas.Olap.WebUIControls.Series,Dundas.Olap.WebUIControls.DataPoint@)">
            <summary>
            Initialize data point series and name.
            </summary>
            <param name="series">Series the data point belongs to.</param>
            <param name="dataPoint">Reference to the data point object to initialize.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataPointCollection.ParsePointFieldsParameter(System.String,System.String[]@,System.String[]@,System.String[]@)">
            <summary>
            Parse the input parameter with other point attribute binding rule
            in format: PointProperty=Field[{Format}] [,PointProperty=Field[{Format}]]. 
            For example: "Tooltip=Price{C1},Href=WebSiteName".
            </summary>
            <param name="otherFields">Other fields parameter.</param>
            <param name="otherAttributeNames">Returns array of atribute names.</param>
            <param name="otherFieldNames">Returns array of field names.</param>
            <param name="otherValueFormat">Returns array of format strings.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataPointCollection.DataBind(System.Collections.IEnumerable,System.String,System.String,System.String)">
            <summary>
            Data bind X, Y and other values (like Tooltip, Label,...) of the data points to the data source.
            Data source can be the Ole(SQL)DataReader, DataView, DataSet, DataTable or DataRow.
            </summary>
            <param name="dataSource">Data source.</param>
            <param name="xField">Name of the field for X values.</param>
            <param name="yFields">Comma separated name(s) of the field(s) for Y value(s).</param>
            <param name="otherFields">Other point properties binding rule in format: PointProperty=Field[{Format}] [,PointProperty=Field[{Format}]]. For example: "Tooltip=Price{C1},Href=WebSiteName".</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataPointCollection.DataBindY(System.Collections.IEnumerable[])">
            <summary>
            Data bind Y values of the data points to the data source.
            Data source can be the Array, Collection, Ole(SQL)DataReader, DataView, DataSet, DataTable or DataRow.
            </summary>
            <param name="yValue">One or more enumerable objects with Y values.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataPointCollection.DataBindXY(System.Collections.IEnumerable,System.Collections.IEnumerable[])">
            <summary>
            Data bind X and Y values of the data points to the data source.
            Data source can be the Array, Collection, Ole(SQL)DataReader, DataView, DataSet, DataTable or DataRow.
            </summary>
            <param name="xValue">Enumerable objects with X values.</param>
            <param name="yValues">One or more enumerable objects with Y values.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataPointCollection.DataBindY(System.Collections.IEnumerable,System.String)">
            <summary>
            Data bind Y values of the data points to the data source.
            Data source can be the Array, Collection, Ole(SQL)DataReader, DataView, DataSet, DataTable or DataRow.
            </summary>
            <param name="yValue">Enumerable objects with Y values.</param>
            <param name="yFields">Name of the field(s) for Y value(s).</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataPointCollection.DataBindXY(System.Collections.IEnumerable,System.String,System.Collections.IEnumerable,System.String)">
            <summary>
            Data bind X and Y values of the data points to the data source.
            Data source can be the Array, Collection, Ole(SQL)DataReader, DataView, DataSet, DataTable or DataRow.
            </summary>
            <param name="xValue">Enumerable object with X values.</param>
            <param name="xField">Name of the field for X values.</param>
            <param name="yValue">Enumerable objects with Y values.</param>
            <param name="yFields">Comma separated name(s) of the field(s) for Y value(s).</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataPointCollection.IsEmptyValue(System.Object)">
            <summary>
            Returns true if objet represents an empty value.
            </summary>
            <param name="val">Value to test.</param>
            <returns>True if empty.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataPointCollection.AddY(System.Double)">
            <summary>
            Adds one data point with one Y value.
            </summary>
            <param name="yValue">Y value of the data point.</param>
            <returns>Index of newly added data point.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataPointCollection.AddY(System.Object[])">
            <summary>
            Adds one data point with one or more Y values.
            </summary>
            <param name="yValue">Comma separated Y values of the data point.</param>
            <returns>Index of newly added data point.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataPointCollection.AddXY(System.Double,System.Double)">
            <summary>
            Adds one data point with X value and one Y value.
            </summary>
            <param name="yValue">Y value of the data point.</param>
            <param name="xValue">X value of the data point.</param>
            <returns>Index of newly added data poit.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataPointCollection.AddXY(System.Object,System.Object[])">
            <summary>
            Adds one data point with X value and one or more Y values.
            </summary>
            <param name="yValue">List of Y values of the data point.</param>
            <param name="xValue">X value of the data point.</param>
            <returns>Index of newly added data poit.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataPointCollection.InsertXY(System.Int32,System.Object,System.Object[])">
            <summary>
            Insert one data point with X value and one or more Y values.
            </summary>
            <param name="index">Index after wich to insert the data point.</param>
            <param name="xValue">X value of the data point.</param>
            <param name="yValue">List of Y values of the data point.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataPointCollection.InsertY(System.Int32,System.Object[])">
            <summary>
            Insert one data point with one or more Y values.
            </summary>
            <param name="index">Index after wich to insert the data point.</param>
            <param name="yValue">List of Y values of the data point.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataPointCollection.GetDataSourceEnumerator(System.Collections.IEnumerable)">
            <summary>
            Get data source enumerator object helper function.
            </summary>
            <param name="dataSource">Data source.</param>
            <returns>Returns data source enumerator.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataPointCollection.ConvertEnumerationItem(System.Object,System.String)">
            <summary>
            Convert enumeration item object from DataRow and DataRowView 
            to the actual value of specified column in row
            </summary>
            <param name="item">Enumeration item.</param>
            <param name="fieldName">Converted item.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataPointCollection.AutoDetectValuesType(Dundas.Olap.WebUIControls.Series,System.Collections.IEnumerator,System.String,System.Collections.IEnumerator,System.String)">
            <summary>
            Auto detects the X and Y(s) values type
            </summary>
            <param name="series">Series the values type is detected for.</param>
            <param name="xEnumerator">X values enumerator.</param>
            <param name="xField">X value field.</param>
            <param name="yEnumerator">Y values enumerator.</param>
            <param name="yField">Y value field.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataPointCollection.GetValueType(System.Collections.IEnumerator,System.String)">
            <summary>
            Return value type.
            </summary>
            <param name="enumerator">Values enumerator.</param>
            <param name="field">Value field.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataPointCollection.FindValue(System.Double,System.String,System.Int32@)">
            <summary>
            Find first point with Max value from specified index.
            </summary>
            <param name="valueToFind">Point value to find.</param>
            <param name="useValue">Which point value to use (X, Y1, Y2,...).</param>
            <param name="startFromIndex">Index of the point to start looking from. Returns index of found point or -1.</param>
            <returns>Found point or null.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataPointCollection.FindValue(System.Double,System.String)">
            <summary>
            Find first point with Max value from specified index.
            </summary>
            <param name="valueToFind">Point value to find.</param>
            <param name="useValue">Which point value to use (X, Y1, Y2,...).</param>
            <returns>Found point or null.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataPointCollection.FindValue(System.Double)">
            <summary>
            Find first point with Max value from specified index.
            </summary>
            <param name="valueToFind">Point value to find.</param>
            <returns>Found point or null.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataPointCollection.FindMaxValue(System.String,System.Int32@)">
            <summary>
            Find first point with Max value from specified index.
            </summary>
            <param name="useValue">Which point value to use (X, Y1, Y2,...).</param>
            <param name="startFromIndex">Index of the point to start looking from. Returns index of found point or -1.</param>
            <returns>Found point or null.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataPointCollection.FindMaxValue(System.String)">
            <summary>
            Find first point with Max value from specified index.
            </summary>
            <param name="useValue">Which point value to use (X, Y1, Y2,...).</param>
            <returns>Found point or null.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataPointCollection.FindMaxValue">
            <summary>
            Find first point with Max value from specified index.
            </summary>
            <returns>Found point or null.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataPointCollection.FindMinValue(System.String,System.Int32@)">
            <summary>
            Find first point with Min value from specified index.
            </summary>
            <param name="useValue">Which point value to use (X, Y1, Y2,...).</param>
            <param name="startFromIndex">Index of the point to start looking from. Returns index of found point or -1.</param>
            <returns>Found point or null.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataPointCollection.FindMinValue(System.String)">
            <summary>
            Find first point with Min value from specified index.
            </summary>
            <param name="useValue">Which point value to use (X, Y1, Y2,...).</param>
            <returns>Found point or null.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataPointCollection.FindMinValue">
            <summary>
            Find first point with Min value from specified index.
            </summary>
            <returns>Found point or null.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataPointCollection.Clear">
            <summary>
            Removes all items from the collection.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataPointCollection.Contains(System.Object)">
            <summary>
            Check if specified object exists in the collection.
            </summary>
            <param name="value">Object to check.</param>
            <returns>True if object exist.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataPointCollection.IndexOf(System.Object)">
            <summary>
            Gets first index of the collection item equal to the object provided.
            </summary>
            <param name="value">Object to look for.</param>
            <returns>Index of found object.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataPointCollection.Remove(System.Object)">
            <summary>
            Remove object from the collection
            </summary>
            <param name="value">Value to be removed.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataPointCollection.RemoveAt(System.Int32)">
            <summary>
            Remove item from the collection by index.
            </summary>
            <param name="index">Zero based index.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataPointCollection.RemoveRange(System.Int32,System.Int32)">
            <summary>
            Removes a range of data points from the collection.
            </summary>
            <param name="index">The zero-based starting index of the range of elements to remove.</param>
            <param name="count">The number of elements to remove.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataPointCollection.Add(Dundas.Olap.WebUIControls.DataPoint)">
            <summary>
            Add data point object into the collection.
            </summary>
            <param name="value">Data point to add.</param>
            <returns>Index of the newly added object.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataPointCollection.Add(System.Object)">
            <summary>
            Add data point object into the collection.
            </summary>
            <param name="value">Data point to add.</param>
            <returns>Index of the newly added object.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataPointCollection.Insert(System.Int32,Dundas.Olap.WebUIControls.DataPoint)">
            <summary>
            Insert data point object into the collection.
            </summary>
            <param name="index">Zero based index.</param>
            <param name="value">Data point to insert.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataPointCollection.Insert(System.Int32,System.Object)">
            <summary>
            Insert data point object into the collection.
            </summary>
            <param name="index">Zero based index.</param>
            <param name="value">Data point to insert.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataPointCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies all the elements of the current collection to the specified one-dimensional 
            collection starting at the specified destination index.
            </summary>
            <param name="array">Destination collection.</param>
            <param name="index">The index in collection at which copying begins.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataPointCollection.GetEnumerator">
            <summary>
            Get collection enumerator.
            </summary>
            <returns>Collection enumerator.</returns>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.DataPointCollection.Item(System.Int32)">
            <summary>
            Indexer of the class. Returns the Data Point object by integer index.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.DataPointCollection.IsFixedSize">
            <summary>
            Gets a value indicating whether the collection has a fixed size.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.DataPointCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the collection is read-only.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.DataPointCollection.Count">
            <summary>
            Number of items in the collection.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.DataPointCollection.IsSynchronized">
            <summary>
            Gets a value indicating whether access to the collection is synchronized (thread-safe).
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.DataPointCollection.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the collection.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.DataPoint">
            <summary>
            Stores values and attributes of one Data Point in the Data series.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataPoint.#ctor">
            <summary>
            Data Point object constructor.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataPoint.#ctor(Dundas.Olap.WebUIControls.Series)">
            <summary>
            Data Point object constructor.
            </summary>
            <param name="series">series object, which the Data Point belongs to.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataPoint.#ctor(System.Double,System.String)">
            <summary>
            Data Point object constructor.
            </summary>
            <param name="xValue">Point X value.</param>
            <param name="yValues">String of comma separated Y values.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataPoint.#ctor(System.Double,System.Double)">
            <summary>
            Data Point object constructor.
            </summary>
            <param name="xValue">Point X value.</param>
            <param name="yValue">Point Y value.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataPoint.SetPointAttribute(System.Object,System.String,System.String)">
            <summary>
            Sets data point attribute to specified value.
            </summary>
            <param name="obj">Attribute value.</param>
            <param name="attributeName">Atribute name.</param>
            <param name="format">Value format.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataPoint.ConvertValue(System.Object)">
            <summary>
            Converts object to double.
            </summary>
            <param name="value">Object to convert.</param>
            <returns>Double value.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataPoint.SetValueXY(System.Object,System.Object[])">
            <summary>
            Set X value and one or more Y values of the data point.
            </summary>
            <param name="xValue">X value of the data point.</param>
            <param name="yValue">Y value(s) of the data point. Separate multiple values with commas.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataPoint.SetValueY(System.Object[])">
            <summary>
            Set one or more Y values of the data point.
            </summary>
            <param name="yValue">Y value(s) of the data point. Separate multiple values with commas.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataPoint.Clone">
            <summary>
            Creates an exact copy of this DataPoint object.
            </summary>
            <returns>An exact copy of this DataPoint object.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataPoint.ResizeYValueArray(System.Int32)">
            <summary>
            Resize Y values array.
            </summary>
            <param name="newSize">New number of Y valuesin array.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataPoint.GetValueY(System.Int32)">
            <summary>
            Gets on of the data points Y values by index.
            </summary>
            <param name="yValueIndex">Y value index.</param>
            <returns>Y value</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataPoint.SetValueY(System.Int32,System.Double)">
            <summary>
            Sets on of the data points Y values by index.
            </summary>
            <param name="yValueIndex">Y value index.</param>
            <param name="yValue">Y value.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataPoint.GetValueByName(System.String)">
            <summary>
            Helper function, which returns point value by it's name.
            </summary>
            <param name="valueName">Point value names. X, Y, Y2,...</param>
            <returns>Point value.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataPoint.ReplaceKeywords(System.String)">
            call this method if you want to get Label of the DataPoint
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataPoint.ReplaceKeywords(System.String,System.Boolean)">
            call this method requiredGetDataLabelTextEvent = FALSE if you want to replace string with keywords from DataPoint
            if requiredGetDataLabelTextEvent = FALSE, this method will not fire OnGetDataPointLabelText event
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataPoint.ReplaceCustomAttributeKeyword(System.String,Dundas.Olap.WebUIControls.DataPointAttributes)">
            <summary>
            Replaces all "#CUSTOMATTRIBUTE(XXX)" (where XXX is the custom attribute name) 
            keywords in the string provided. 
            </summary>
            <param name="originalString">String where the kyword need to be replaced.</param>
            <param name="attributes">DataPoint or Series attribute class.</param>
            <returns>Converted string.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DataPoint.ResetYValues">
            <summary>
            Resets point's Y values.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.DataPoint.XValue">
            <summary>
            X value of the series data point
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.DataPoint.YValues">
            <summary>
            Y value(s) of the series data point
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.DataPoint.Empty">
            <summary>
            Empty data point flag
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.DataPoint.Name">
            <summary>
            Data point name. For internal use only!
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.DataPoint3D">
            <summary>
            Class stores additional information about the data point in 3D space.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.DataPoint3D.dataPoint">
            <summary>
            Reference to the 2D data point object
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.DataPoint3D.index">
            <summary>
            Data point index.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.DataPoint3D.xPosition">
            <summary>
            Point X position in relative coordinates.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.DataPoint3D.yPosition">
            <summary>
            Point Y position in relative coordinates.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.DataPoint3D.xCenterVal">
            <summary>
            Point X center position in relative coordinates. Used for side-by-side charts.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.DataPoint3D.zPosition">
            <summary>
            Point Z position in relative coordinates.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.DataPoint3D.width">
            <summary>
            Point width.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.DataPoint3D.height">
            <summary>
            Point height.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.DataPoint3D.depth">
            <summary>
            Point depth.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.DataPoint3D.indexedSeries">
            <summary>
            Indicates that point belongs to indexed series.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.CustomAttributes">
            <summary>
            Design-time representation of the CustomAttributes.
            This class is used instead of the string "CustomAttributes"
            property at design time and supports expandable list
            of custom attributes.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CustomAttributes.#ctor(Dundas.Olap.WebUIControls.DataPointAttributes)">
            <summary>
            Constructor
            </summary>
            <param name="attributes">Attributes object.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CustomAttributes.GetUserDefinedAttributes">
            <summary>
            Gets a comma separated string of user defined custom attributes.
            </summary>
            <returns>Comma separated string of user defined custom attributes.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CustomAttributes.GetUserDefinedAttributes(System.Boolean)">
            <summary>
            Gets a comma separated string of user defined or non-user defined custom attributes.
            </summary>
            <param name="userDefined">True if user defined attributes must be returned.</param>
            <returns>Comma separated string of user defined custom attributes.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CustomAttributes.SetUserDefinedAttributes(System.String)">
            <summary>
            Sets user defined custom attributes without cleaning registered attributes.
            </summary>
            <param name="val">New user defined attributes.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CustomAttributes.Equals(System.Object)">
            <summary>
            Determines whether the specified Object is equal to the current Object.
            </summary>
            <param name="obj">The Object to compare with the current Object.</param>
            <returns>true if the specified Object is equal to the current Object; otherwise, false.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CustomAttributes.GetHashCode">
            <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            </summary>
            <returns>A hash code for the current Object.</returns>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.CommandFiredArgs">
            <summary>
            The <see cref="T:Dundas.Olap.WebUIControls.CommandFiredArgs"/> is a parameter of <see cref="E:Dundas.Olap.WebUIControls.Chart.CommandFired"/> event
            which is fired after executing a <see cref="P:Dundas.Olap.WebUIControls.CommandFiredArgs.Command"/>.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.CommandFiredArgs.command">
            <summary>
            The command reference
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CommandFiredArgs.#ctor(Dundas.Olap.WebUIControls.Command)">
            <summary>
            Initializes new instance of <see cref="T:Dundas.Olap.WebUIControls.CommandFiredArgs"/> object
            </summary>
            <param name="command">The <see cref="P:Dundas.Olap.WebUIControls.CommandFiredArgs.Command"/> which fires this event</param>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.CommandFiredArgs.Command">
            <summary>
            Gets the command which fires this event.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.CommandFiringArgs">
            <summary>
            The <see cref="T:Dundas.Olap.WebUIControls.CommandFiringArgs"/> is a parameter of <see cref="E:Dundas.Olap.WebUIControls.Chart.CommandFiring"/> event
            which is fired just before executing a <see cref="T:Dundas.Olap.WebUIControls.Command"/>
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.CommandFiringArgs.context">
            <summary>
            The context of command. Represents object which command will apply to.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.CommandFiringArgs.aborted">
            <summary>
            Aborted flag. True aborts command execution.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CommandFiringArgs.#ctor(Dundas.Olap.WebUIControls.Command,System.Object)">
            <summary>
            Initializes new instance of CommandFiringArgs object.
            </summary>
            <param name="command">The command which fires this event</param>
            <param name="context">The object context which is used during command execution</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CommandFiringArgs.Abort">
            <summary>
            Aborts further execution of the command.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.CommandFiringArgs.Context">
            <summary>
            Gets and sets the object context of command execution.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.Command">
            <summary>
            Commands are the basis for interactions with user-interface elements. 
            <para>Each command contains a chart functionality that developers can 
            utilize to build their own custom toolbar and/or context menu.</para>
            <para>The type of command is determined by <see cref="P:Dundas.Olap.WebUIControls.Command.CommandType"/> property.
            The Command has <see cref="P:Dundas.Olap.WebUIControls.Command.Parameters"/> and can be executed 
            by <see cref="M:Dundas.Olap.WebUIControls.Command.Execute"/> method.</para>
            </summary>
            <remarks>
            Commands are either Standart and Used-Defined. 
            The Standart Commands are provided for common actions required by end-user while 
            User-Defined Commands afford the extension of existing commands 
            or creating unique behavior.
            <para>Some commands  contains other commands and this determines 
            their special behavior - they are group conainers and 
            apear in the context menu as menu item with subitems or 
            pulldown buttons in toolbar.</para>
            <para>The command contans visual attributes 
            such as <see cref="P:Dundas.Olap.WebUIControls.Command.Text"/>,<see cref="P:Dundas.Olap.WebUIControls.Command.Image"/> and <see cref="P:Dundas.Olap.WebUIControls.Command.Visible"/> 
             which determines the appereance of the command in the toolbar and the context menu.</para>
            </remarks>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Command.commandID">
            <summary>
            The ID of the command.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Command.commandGroupID">
            <summary>
            The ID of the command.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Command.text">
            <summary>
            The text for the command.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Command.description">
            <summary>
            The description for the command.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Command.enabled">
            <summary>
            The command enabled flag.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Command.visible">
            <summary>
            The command enabled flag.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Command.imageName">
            <summary>
            The image ID for the command.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Command.imageColor">
            <summary>
            Image transparent color
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Command.shortcut">
            <summary>
            The shortcut key for the command.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Command.toggled">
            <summary>
            The command toggled flag.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Command.commandUIList">
            <summary>
            The ArrayList of CommandParams
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Command.chartCommandType">
            <summary>
            The command type
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Command.parameter">
            <summary>
            The command parameter used to execute this command
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Command.supportedElements">
            <summary>
            The supported elements of this command
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Command.useLastSubCommand">
            <summary>
            Determines if should use last sub command as default behavior
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Command.popupStyle">
            <summary>
            Determines the style of pop up object
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Command.style">
            <summary>
            Determines the command behavior in tool bar
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Command.subCommands">
            <summary>
            The command sub items
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Command.commandProxy">
            <summary>
            Reference to command proxy ( command executor )
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Command.internalCmd">
            <summary>
            Determines if the command is internal generated.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Command.isInternalComponentCall">
            <summary>
            Determines if command properties is called within component or from external component
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Command.isInternalMenuCall">
            <summary>
            Determines if command properties is called within menu generation
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Command.index">
            <summary>
            The command order index in collection;
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Command.indexCreated">
            <summary>
            The command order index in collection when has been added;
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Command.lastSubCommand">
            <summary>
            Reference last execited sub command.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Command.#ctor">
            <summary>
            Initialize a new instance of Command object.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Command.#ctor(Dundas.Olap.WebUIControls.ChartCommandType)">
            <summary>
            Initialize a new reference of Command object.
            </summary>
            <param name="commandType">Default command type of this command</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Command.ShouldSerializeChartCommandType">
            <summary>
            Checks if collection is modified and should be serialized.
            </summary>
            <returns>True if collection where modified and they need to be serialized.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Command.ResetCommandType">
            <summary>
            Resets the collection to its default items.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Command.ShouldSerializeSubCommands">
            <summary>
            Checks if collection is modified and should be serialized.
            </summary>
            <returns>True if collection where modified and they need to be serialized.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Command.ResetCommands">
            <summary>
            Resets the collection to its default items.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Command.ShouldSerializeIndex">
            <summary>
            Checks if index is modified and should be serialized.
            </summary>
            <returns>True if index were modified and they need to be serialized.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Command.ResetIndex">
            <summary>
            Resets the command index during serialization.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Command.ShouldSerializeText">
            <summary>
            Checks if text is modified and should be serialized.
            </summary>
            <returns>True if text where modified and they need to be serialized.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Command.ResetText">
            <summary>
            Checks if text is modified and should be serialized.
            </summary>
            <returns>True if text where modified and they need to be serialized.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Command.ShouldSerializeDescription">
            <summary>
            Checks if description is modified and should be serialized.
            </summary>
            <returns>True if description where modified and they need to be serialized.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Command.ResetDescription">
            <summary>
            Resets the description is modified.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Command.ShouldSerializeEnabled">
            <summary>
            Checks if <see cref="P:Dundas.Olap.WebUIControls.Command.Enabled"/> is modified and should be serialized.
            </summary>
            <returns>True if <see cref="P:Dundas.Olap.WebUIControls.Command.Enabled"/> is modified and they need to be serialized.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Command.ResetEnabled">
            <summary>
            Resets the <see cref="P:Dundas.Olap.WebUIControls.Command.Enabled"/> property is modified.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Command.ShouldSerializeImage">
            <summary>
            Checks if <see cref="P:Dundas.Olap.WebUIControls.Command.Image"/> is modified and should be serialized.
            </summary>
            <returns>True if <see cref="P:Dundas.Olap.WebUIControls.Command.Image"/> where modified and they need to be serialized.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Command.ResetImage">
            <summary>
            Resets the <see cref="P:Dundas.Olap.WebUIControls.Command.Image"/> property is modified.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Command.ShouldSerializeUseLastSubCommand">
            <summary>
            Checks if text is UseLastSubCommand and should be serialized.
            </summary>
            <returns>True if UseLastSubCommand where modified and its need to be serialized.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Command.ResetUseLastSubCommand">
            <summary>
            Checks if UseLastSubCommand is modified and should be serialized.
            </summary>
            <returns>True if UseLastSubCommand where modified and its need to be serialized.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Command.ShouldSerializeSupportedElements">
            <summary>
            Checks if SupportedElements is modified and should be serialized.
            </summary>
            <returns>True if SupportedElements where modified and its need to be serialized.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Command.ResetSupportedElements">
            <summary>
            Resets SupportedElements if its modified.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Command.ShouldSerializePopupStyle">
            <summary>
            Checks if popup style is modified and should to be serialized.
            </summary>
            <returns>True if popup style is modified and needs to be serialized.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Command.ResetPopupStyle">
            <summary>
            Resets if popup style is modified.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Command.SetDefaultSubCommand(Dundas.Olap.WebUIControls.Command)">
            <summary>
            Sets a sub-command as a default one.
            </summary>
            <remarks>
             Specified command must be added to the SubCommand collection first.
            </remarks>
            <param name="command">
            Default command.
            </param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Command.Execute">
            <summary>
            Executes the command without parameters.
            </summary>
            <returns>True if the command is executed succesfuly, otherwise - false</returns>
            <remarks>
            The context of execution is the chart element pointed in last mouse click.
            </remarks>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Command.Execute(System.Object)">
            <summary>
            Executes the command with defined context.
            </summary>
            <param name="selectedObject">The object context over which command to be executed</param>
            <returns>True if the command is executed succesfuly, otherwize - false</returns>
            <remarks>
            The <c>selectedObject</c> can be null, a chart element or <see cref="T:System.Collections.IEnumerable"/> object of chart elements.
            The possible supported chart elements are: <see cref="T:Dundas.Olap.WebUIControls.ChartArea"/>, <see cref="T:Dundas.Olap.WebUIControls.Series"/>, 
            <see cref="T:Dundas.Olap.WebUIControls.Axis"/>, <see cref="T:Dundas.Olap.WebUIControls.Annotation"/>, 
            <see cref="T:Dundas.Olap.WebUIControls.Legend"/>, <see cref="T:Dundas.Olap.WebUIControls.LegendItem"/>, 
            <see cref="T:Dundas.Olap.WebUIControls.Title"/> or <see cref="T:Dundas.Olap.WebUIControls.DataPoint"/>.
            <note type="note">
            Each <see cref="T:Dundas.Olap.WebUIControls.Command"/> can handle with limited set of 
            object types determined by <see cref="P:Dundas.Olap.WebUIControls.Command.SupportedElements"/> property.</note>
            </remarks>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Command.Execute(System.Object,System.String)">
            <summary>
            Executes the command with defined context and parameters.
            </summary>
            <param name="selectedObject">The object context over which command to be executed</param>
            <param name="parameters">String representation of object context and additional parameters to override default behavior of the command</param>
            <returns>True if the command is executed succesfuly, otherwize - false</returns>
            <remarks>
            The <c>selectedObject</c> can be null, a chart element or <see cref="T:System.Collections.IEnumerable"/> object of chart elements.
            The possible supported chart elements are: <see cref="T:Dundas.Olap.WebUIControls.ChartArea"/>, <see cref="T:Dundas.Olap.WebUIControls.Series"/>, 
            <see cref="T:Dundas.Olap.WebUIControls.Axis"/>, <see cref="T:Dundas.Olap.WebUIControls.Annotation"/>, 
            <see cref="T:Dundas.Olap.WebUIControls.Legend"/>, <see cref="T:Dundas.Olap.WebUIControls.LegendItem"/>, 
            <see cref="T:Dundas.Olap.WebUIControls.Title"/> or <see cref="T:Dundas.Olap.WebUIControls.DataPoint"/>.
            The parameters parameter can adds to object context elements by name 
            or additinal parameters to change default behavior of the <see cref="T:Dundas.Olap.WebUIControls.Command"/>.
            <note type="note">
            Each <see cref="T:Dundas.Olap.WebUIControls.Command"/> can handle with limited set of 
            object types determined by <see cref="P:Dundas.Olap.WebUIControls.Command.SupportedElements"/> property.</note>
            </remarks>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Command.IsEnabled">
            <summary>
            Evaluates the enabled state of the command.
            </summary>
            <returns>True if command is enabled in null ( Chart ) context.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Command.IsEnabled(System.Object)">
            <summary>
            Evaluates the enabled state of the command in its specified context.
            </summary>
            <param name="context">Object context to evaluate enable state whithin it</param>
            <returns>True if command is enabled in this context.</returns>
            <remarks>The <see cref="T:Dundas.Olap.WebUIControls.Command"/> can be enabled in one context and disabled in other.
            The context represents the objects which <see cref="T:Dundas.Olap.WebUIControls.Command"/> will change or operate over it.
            </remarks>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Command.IsEnabled(System.Object,System.String)">
            <summary>
            Evaluates the enabled state of the command using context with string parameters.
            </summary>
            <param name="context">Object context to evaluate enable state whithin it</param>
            <param name="parameters">Additional parameters to evaluate enabled state</param>
            <returns>True if command is enabled in this context.</returns>
            <remarks>The <see cref="T:Dundas.Olap.WebUIControls.Command"/> can be enabled in one context and disabled in other.
            The context represents the objects which <see cref="T:Dundas.Olap.WebUIControls.Command"/> will change or operate over it.
            </remarks>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Command.IsToggled">
            <summary>
            Evaluates the pressed state of the command. 
            </summary>
            <returns>True if command is enabled in null context.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Command.IsToggled(System.Object)">
            <summary>
            Evaluates the pressed state of the command in its specified context. 
            </summary>
            <param name="context">Object context to check pressed state against it </param>
            <returns>True if command is enabled in this context.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Command.IsToggled(System.Object,System.String)">
            <summary>
            Evaluates the pressed state of the command using context and string parameters. 
            </summary>
            <param name="context">Object context to check pressed state against it</param>
            <param name="parameters">Additional parameters to evaluate pressed state</param>
            <returns>True if command is enabled in this context.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Command.SetToggled">
            <summary>
            Set toggled state on current command and untoggled
            on the others commands in command group if any.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Command.ToString">
            <summary>
            Returns a string that represents the current command.
            </summary>
            <returns>A String that represents the current Command.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Command.Assign(Dundas.Olap.WebUIControls.Command)">
            <summary>
            Transfer properties  from command to this command
            </summary>
            <param name="cmd">Command which properties should transfer</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Command.IsDesignMode">
            <summary>
            Returns Design state. Controls also internal calls within component.
            </summary>
            <returns>True during design time</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Command.OnAdded">
            <summary>
            Performs procedures after this element is added to a collection.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Command.CanRemove">
            <summary>
            Check of this element can be removed from command collection. 
            Used from CommandElementCollection to check if this element can be removed
            </summary>
            <returns>False if this command is predefined and cannot be removed.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Command.ResetCommand">
            <summary>
            Resets the command properties to default values.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Command.ShouldSerialize">
            <summary>
            Determines if this command should be serialized.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Command.AddSubCommands">
            <summary>
            Adds the command default subcommands registred in CommanExecutor
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Command.CalculateTable(System.Int32)">
            <summary>
            Calculates the size of popup table dialog
            </summary>
            <param name="commandsCount">The commands count in table</param>
            <returns>The size ( rows,cols ) of the popup table dialog</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Command.CalculateTableStatic(System.Int32)">
            <summary>
            Calculates the size of popup table dialog
            </summary>
            <param name="commandsCount">The commands count in table</param>
            <returns>The size ( rows,cols ) of the popup table dialog</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Command.UpdateUI">
            <summary>
            Forces updating of all visual components
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Command.UpdateUI(Dundas.Olap.WebUIControls.UpdateUIPart)">
            <summary>
            Forces updating of all visual components
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Command.CommandTypeChanged">
            <summary>
            Updates default propertes after changing the CommandType property
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Command.GetInternalCommandID">
            <summary>
            Returns command id
            </summary>
            <returns>The command id which repesents this Command</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Command.GetImageName">
            <summary>
            Gets the non empty imageName. Uses CommandProxy to get default ImageName 
            </summary>
            <returns>Non empty image name</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Command.GetImage">
            <summary>
            Gets the image associated with the command.
            </summary>
            <returns>The Image associated with this Command object</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Command.GetSupportedElements">
            <summary>
            Gets the context supported element in section with CommandProxy.SupportedElements
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Command.OnCommandMessage(Dundas.Olap.WebUIControls.CommandMessage,System.Object,System.Object)">
            <summary>
            Handles internal message
            </summary>
            <param name="msg">The message type</param>
            <param name="source">Sender which broadcast thois message</param>
            <param name="parameters">Additional parameters</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Command.SendCommandMessage(Dundas.Olap.WebUIControls.CommandMessage,System.Object,System.Object)">
            <summary>
            Sends Command Notification Message to all ChartUI components
            </summary>
            <param name="msg">Type of message</param>
            <param name="source">The sender of the message</param>
            <param name="parameters">Additional parameters</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Command.ChartInvalidated">
            <summary>
            Receive chart invalidated message and forces invalidating 
            for all connected UI elements ( toolbal, buttons, etc.)
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Command.NormalizeRectangle(System.Drawing.RectangleF,System.Drawing.SizeF,System.Boolean)">
            <summary>
            Calculates rectangle specified by bound rectangle and size. 
            The result is centered into the bound renctangle
            </summary>
            <param name="boundRect">Bound rectangle</param>
            <param name="insetSize">Specifies the size of the result</param>
            <param name="resizeResult">Determines if result should be resized or only centered</param>
            <returns>Centered rectangle into the "boundRect" bound rectangle</returns>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Command.CommandType">
            <summary>
            Gets or sets the command type. The command type determines the functionality of the command being executed. 
            </summary>
            <value>
            The <see cref="T:Dundas.Olap.WebUIControls.ChartCommandType"/> which determines end-user functionality of the <see cref="T:Dundas.Olap.WebUIControls.Command"/>.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Command.SubCommands">
            <summary>
            Gets the SubCommands collection of the command.
            </summary>
            <value>A CommandCollection value representing the sub-command collection of the command.</value>
            <remarks>
            The command which contains sub commands has special behavior as command container.
            <para>Such command apears in the context menu as menu item with subitems or pulldown buttons in toolbar. 
             The <see cref="P:Dundas.Olap.WebUIControls.Command.PopupStyle"/> property determines visual 
             appearance of subcommands while <see cref="P:Dundas.Olap.WebUIControls.Command.UseLastSubCommand"/> property
             determines root command behavior.</para>
            </remarks>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Command.CommandID">
            <summary>
            Gets or sets the unique identifier of the command.
            </summary>
            <value>Unique identifier of the command.</value>
            <remarks>The user defined command have to have unique non zero identifier while predefined commands the identifier is allways zero.
            <para>This indentifier can be used in event handling or 
            as parameter of <see cref="M:Dundas.Olap.WebUIControls.CommandCollection.FindCommand(Dundas.Olap.WebUIControls.ChartCommandType)"/> method 
            to locate a <see cref="T:Dundas.Olap.WebUIControls.Command"/> object in <see cref="T:Dundas.Olap.WebUIControls.CommandCollection"/></para>
            </remarks>
            <example>
            <code lang="C#">
            <![CDATA[ 
            Command cmd = new Command();
            cmd.CommandID = 100;
            chart1.UI.Commands.Add( cmd );
            .....
            chart1.UI.Commands.FindCommand( 100).Execute();
            ]]>
            </code>
            </example>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Command.ToggleGroupID">
            <summary>
            Gets or sets the group ID of the command. If not zero, all elements with this value will be grouped together exhibiting the same behavior as a radio button list. 
            </summary>
            <value>Group identifier of the command which determines command toggled behavior.</value>
            <remarks>
            The <see cref="P:Dundas.Olap.WebUIControls.Command.ToggleGroupID"/>, <see cref="P:Dundas.Olap.WebUIControls.Command.ToggleStyle"/> and <see cref="P:Dundas.Olap.WebUIControls.Command.Toggled"/> properties work together.
            Then the <see cref="P:Dundas.Olap.WebUIControls.Command.ToggleStyle"/> is <c>Grouped</c>, the <see cref="P:Dundas.Olap.WebUIControls.Command.ToggleGroupID"/> 
            is used to determine the toggled <see cref="T:Dundas.Olap.WebUIControls.Command"/> that are whithin the group.
            </remarks>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Command.Index">
            <summary>
            Gets or sets the index of the command which determines the position of the command within the collection. 
            </summary>
            <value>The index of the command into parent <see cref="T:Dundas.Olap.WebUIControls.CommandCollection"/></value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Command.Text">
            <summary>
            Gets or sets the text of the command that appears on both the toolbar and context menu.
            </summary>
            <value>
            The text for the command which appears in controls.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Command.Description">
            <summary>
            Gets or sets the description text for the command. This is displayed as a tooltip on the toolbar.
            </summary>
            <value>
            The description text for the command.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Command.Visible">
            <summary>
            Gets or sets the visibility attribute of the command on the toolbar and context menu. 
            </summary>
            <value>		
            <c>True</c> if command is visible, <c>false</c> otherwise. Default is
            <c>true</c>.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Command.Enabled">
            <summary>
            Gets or sets the enabled flag for the command. 
            Determines if the command can be executed.
            </summary>
            <value>
            <b>True</b> if command can be executed, <b>false</b> otherwise. Defaults is
            <b>true</b>.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Command.Image">
            <summary>
            Gets or sets the image of the command. 
            </summary>
            <value>
            A string value, representing the command's image name. 
            </value>
            <remarks>
            The image name can be a file name, URL for the Web control or a name from the <see cref="T:Dundas.Olap.WebUIControls.NamedImagesCollection"/>  class. 
            </remarks>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Command.Name">
            <summary>
            Gets the unique name of the command.
            </summary>
            <value>
            The string represents name for the command.
            </value>
            <remarks>
            The command name is automatic generated in format CommandType_Index.
            The command name can be used for locating a command into <see cref="T:Dundas.Olap.WebUIControls.CommandCollection"/> 
            as well as recognizing in event handlers.
            </remarks>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Command.ImageTranspColor">
            <summary>
            Gets or sets a color used for transparency when drawing an image in toolbar and context menu. 
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color"/> value which is replaced with a transparent color while drawing the image. 
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Command.Shortcut">
            <summary>
            Gets or sets a value indicating the shortcut key associated with the command.
            </summary>
            <value>
            One of the <see cref="P:Dundas.Olap.WebUIControls.Command.Shortcut"/> values. The default is Shortcut.None.
            </value>
            <remarks>
            Shortcut keys provide a method for users to activate 
            frequently used command items in to provide keyboard 
            access to your application for those users who do not have access to a 
            mouse or other pointer device.
            </remarks>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Command.Toggled">
            <summary>
            Gets or sets the toggled flag for the command.
            </summary>
            <value>
            The toggled flag for the command.
            </value>
            <remarks>
            In the toolbar toggled button appears sunken when clicked 
            and retains the sunken appearance until clicked again.
            In the context menu the menu item appears checked when clicked 
            and retains the checked appearance until clicked again.
            </remarks>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Command.Parameters">
            <summary>
            The command parameter which is used to execute this command.
            </summary>
            <value>
            The string which represents the command's parameter.Default is empty string.
            </value>
            <remarks>
            The <see cref="T:Dundas.Olap.WebUIControls.Command"/> parameters are a set of comma-separated values
            and  adds possibility to change the default context 
            of executing of a <see cref="T:Dundas.Olap.WebUIControls.Command"/>.
            </remarks>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Command.ToggleStyle">
            <summary>
            Determines the toggle behavior in the toolbar and context menu. 
            </summary>
            <value>
            The <see cref="P:Dundas.Olap.WebUIControls.Command.ToggleStyle"/> which determines the 'toggled' behavior of the command.
            Default value is <see cref="!:ToggleStyle.Auto"/>
            </value>
            <remarks>
            The <see cref="P:Dundas.Olap.WebUIControls.Command.ToggleStyle"/> possible values are:
            <list type="table">
            <listheader><term>ToggleStyle</term><description>Descriptions</description></listheader>
            <item><term>None</term><description>Command behaves like regular button or menu item.</description></item>
            <item><term>Toggled</term><description>Command behaves like chechbox.</description></item>
            <item><term>Grouped</term><description>Command behaves like radio button whithin a group.</description></item>
            </list>
            </remarks>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Command.UseLastSubCommand">
            <summary>
            Determines if the last sub-command executed will be set as the default behavior.
            </summary>
            <value>True to use last executed command, otherwize false. Default is true</value>
            <remarks>
            The <c>UseLastSubCommand</c> property allows the user quickly call the toolbar command more than once if nesessary.
            When <c>UseLastSubCommand</c> is set to <c>True</c> the button will display last executed sub-command 
            and execute it when button is pressed.
            </remarks>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Command.SupportedElements">
            <summary>
            Gets or sets the supported elements of the command. 
            </summary>
            <value>
            The <see cref="T:Dundas.Olap.WebUIControls.ContextElementType"/> set which represents supported chart 
            elements of this <see cref="T:Dundas.Olap.WebUIControls.Command"/>.
            </value>
            <remarks>
            The <c>SupportedElements</c> reflects in the context menu deployment.
            On right mouse click the selected chart element is inspected and compared with 
            <see cref="P:Dundas.Olap.WebUIControls.Command.SupportedElements"/> value to determine which <see cref="N:Dundas.Olap.WebUIControls.Commands"/> to be displayed.
            <note type="note">Each <see cref="T:Dundas.Olap.WebUIControls.Command"/> has predefined set of <see cref="T:Dundas.Olap.WebUIControls.ContextElementType"/> which can be accepted and
            handled by this <see cref="T:Dundas.Olap.WebUIControls.Command"/>. The <c>SupportedElements</c> property can limit default predefined set but cannot expand it.
            </note>
            </remarks>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Command.PopupStyle">
            <summary>
            Gets or sets the style of the pop-up object, displayed for commands with one or more sub-commands. 
            </summary>
            <value>The <see cref="T:Dundas.Olap.WebUIControls.CommandPopupStyle"/> which determines the style of displaying of group of items.</value>
            <remarks>
            The <see cref="P:Dundas.Olap.WebUIControls.Command.PopupStyle"/> property is used to determine how to display group of <see cref="N:Dundas.Olap.WebUIControls.Commands"/> ( sub-commands).
            The <see cref="T:Dundas.Olap.WebUIControls.CommandPopupStyle"/> possible values are:
            <list type="table">
            <listheader><term>CommandPopupStyle</term><description>Descriptions</description></listheader>
            <item><term>Menu</term><description>The UI will display the command group as menu items, with text and adjacent icon.</description></item>
            <item><term>Table</term><description>The UI will display the command group as table of icons.</description></item>
            </list>
            </remarks>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Command.CommandProxy">
            <summary>
            Gets the CommandProxy ( command executor)
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Command.ParentCommand">
            <summary>
            Gets the parent Command. Returns null if this Command are at top level.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Command.LastSubCommand">
            <summary>
            Reference to last executed command
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Command.CommandUIList">
            <summary>
            Gets the ArrayList of CommandUI objects linked to this command;
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Command.ImageID">
            <summary>
            Gets the command image number if into ChartUI.ImageList
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Command.IsInternalCmd">
            <summary>
            Returns true if this command is internal ( autogenerated or predefined)  
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Command.Serializing">
            <summary>
            Returns true during serialization stage of the chart, 
            including the code generation from designer.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.Command.Converter">
            <summary>
            The Command clas type Converter.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Command.Converter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            This method overrides CanConvertTo from TypeConverter. This is called when someone
            wants to convert an instance of object to another type.  Here,
            only conversion to an InstanceDescriptor is supported.
            </summary>
            <param name="context">Descriptor context.</param>
            <param name="destinationType">Destination type.</param>
            <returns>True if object can be converted.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Command.Converter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            This code performs the actual conversion from an object to an InstanceDescriptor.
            </summary>
            <param name="context">Descriptor context.</param>
            <param name="culture">Culture information.</param>
            <param name="value">Object value.</param>
            <param name="destinationType">Destination type.</param>
            <returns>Converted object.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Command.Converter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>
            Returns a collection of properties for the type of array specified by the value parameter.
            </summary>
            <param name="context">An ITypeDescriptorContext that provides a format context. </param>
            <param name="value">An Object that specifies the type of array for which to get properties.</param>
            <param name="attributes">An array of type Attribute that is used as a filter. </param>
            <returns>A PropertyDescriptorCollection with the properties that are exposed for this data type, or a null reference (Nothing in Visual Basic) if there are no properties.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Command.Converter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Returns whether this object supports properties, using the specified context.
            </summary>
            <param name="context">An ITypeDescriptorContext that provides a format context. </param>
            <returns>true if GetProperties should be called to find the properties of this object; otherwise, false.</returns>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.Command.CommandPropertyDescriptor">
            <summary>
            Property descriptor with ability to dynamically change attributes 
            of the base property descriptor object.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Command.CommandPropertyDescriptor.#ctor(System.ComponentModel.PropertyDescriptor)">
            <summary>
            Constructor of the dynamic property descriptor.
            </summary>
            <param name="basePropertyDescriptor">Base property descriptor.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Command.CommandPropertyDescriptor.CanResetValue(System.Object)">
            <summary>
            Returns whether resetting an object changes its value.
            </summary>
            <param name="component">The component to test for reset capability.</param>
            <returns>true if resetting the component changes its value; otherwise, false.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Command.CommandPropertyDescriptor.GetValue(System.Object)">
            <summary>
            Gets the current value of the property on a component.
            </summary>
            <param name="component">The component with the property for which to retrieve the value.</param>
            <returns>The value of a property for a given component.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Command.CommandPropertyDescriptor.ResetValue(System.Object)">
            <summary>
            Resets the value for this property of the component to the default value.
            </summary>
            <param name="component">The component with the property value that is to be reset to the default value.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Command.CommandPropertyDescriptor.ShouldSerializeValue(System.Object)">
            <summary>
            Determines a value indicating whether the value of this property needs to be persisted.
            </summary>
            <param name="component">The component with the property to be examined for persistence.</param>
            <returns>True if the property should be persisted; otherwise, false.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Command.CommandPropertyDescriptor.SetValue(System.Object,System.Object)">
            <summary>
            Sets the value of the component to a different value.
            </summary>
            <param name="component">The component with the property value that is to be set.</param>
            <param name="value">The new value.</param>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Command.CommandPropertyDescriptor.ComponentType">
            <summary>
            Gets the type of the component this property is bound to.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Command.CommandPropertyDescriptor.DisplayName">
            <summary>
            Gets the name that can be displayed in a window, such as a Properties window.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Command.CommandPropertyDescriptor.IsBrowsable">
            <summary>
            Gets a value indicating whether this property is browsable.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Command.CommandPropertyDescriptor.IsReadOnly">
            <summary>
            Gets a value indicating whether this property is read-only.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Command.CommandPropertyDescriptor.PropertyType">
            <summary>
            Gets the type of the property.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.Command.CommandCommandTypeConverter">
            <summary>
            The Command.CommandType property TypeConverter
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Command.CommandCommandTypeConverter.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the CommandCommandTypeConverter class.
            </summary>
            <param name="type"></param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Command.CommandCommandTypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Standart values supported - return true
            </summary>
            <param name="context">Descriptor context.</param>
            <returns>Standard values supported.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Command.CommandCommandTypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Standart values are not exclusive - return false
            </summary>
            <param name="context">Descriptor context.</param>
            <returns>Non exclusive standard values.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Command.CommandCommandTypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Fill in the list of the InputValues for the BaseValueName.
            </summary>
            <param name="context">Descriptor context.</param>
            <returns>Standart values collection.</returns>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.Command.CommandImageValueEditor">
            <summary>
            The Command.Image property value editor
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Command.CommandImageValueEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)">
            <summary>
            Override this function to support palette colors drawing
            </summary>
            <param name="e">Paint value event arguments.</param>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.Command.ItemsComparer">
            <summary>
            IComparer implementation, used for table size calculations.
            The comparer compares Rectange structs where
            X is table width
            Y is table height
            Width is (X*Y) table area
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Command.ItemsComparer.countWidth">
            <summary>
            force comparison by area ( true ) or minimum flattness ( x-y ) ( false )
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Command.ItemsComparer.#ctor(System.Boolean)">
            <summary>
            Intitializes new ItemsComparer instance
            </summary>
            <param name="countWidth">The compare mode flag</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Command.ItemsComparer.Compare(System.Object,System.Object)">
            <summary>
            Compares two objects ( Rectangle) and returns a value indicating 
            whether one is less than, equal to or greater than the other
            </summary>
            <param name="x">First object to compare. </param>
            <param name="y">Second object to compare</param>
            <returns>value condition -1 - less, 0 - equal, 1 - greater</returns>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.CommandCollection">
            <summary>
            The CommandCollection represents collection of Command object instances.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CommandCollection.#ctor(Dundas.Olap.WebUIControls.ICommandElement)">
            <summary>
            Creates new instance of CommandCollection object;
            </summary>
            <param name="parent">The parent object which holds this collection</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CommandCollection.FindCommand(Dundas.Olap.WebUIControls.ChartCommandType)">
            <summary>
            Searches by ChartCommandType for the Command and its sub-commands.
            </summary>
            <param name="type">The command type to search.</param>
            <returns>Command object reference or null if not found</returns>
            <remarks>
            This method will search predefined command. In order to search user-defined command use 
            <see cref="M:Dundas.Olap.WebUIControls.CommandCollection.FindCommand(Dundas.Olap.WebUIControls.ChartCommandType)"/> by Command <see cref="P:Dundas.Olap.WebUIControls.Command.Name"/> or Command <see cref="P:Dundas.Olap.WebUIControls.Command.CommandID"/>.
            </remarks>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CommandCollection.FindCommand(System.Int32)">
            <summary>
            Searches by CommandID for the Command and its sub-commands.
            </summary>
            <param name="id">The CommandID of the Command to search.</param>
            <returns>Command reference or null if not found</returns>
            <note type="note">
            In order to find predefined command use <see cref="M:Dundas.Olap.WebUIControls.CommandCollection.FindCommand(Dundas.Olap.WebUIControls.ChartCommandType)"/>  with <see cref="T:Dundas.Olap.WebUIControls.ChartCommandType"/> parameter or
            cast Commands' <see cref="T:Dundas.Olap.WebUIControls.ChartCommandType"/> to <see cref="T:System.Int32"/>.
            </note>
            <example>
            <code lang="C#">
            chart1.UI.Commands.Find( (int) ChartCommandType.Properties);
            </code>
            <code lang="VB.Net">
            chart1.UI.Commands.Find(CType(ChartCommandType.Properties, Integer))
            </code>
            </example>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CommandCollection.FindCommand(System.String)">
            <summary>
            Searches by name for the Command and its sub-commands. 
            </summary>
            <param name="commandName">The name of the command to search. </param>
            <returns>Command reference or null if not found</returns>
            <remarks>
            See also <seealso cref="P:Dundas.Olap.WebUIControls.Command.Name"/> of the Command.
            </remarks>
            <example>
            <code lang="C#">
            chart1.UI.Commands.Find( "Properties");
            </code>
            <code lang="VB.Net">
            chart1.UI.Commands.Find("Properties")
            </code>
            </example>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CommandCollection.Add(Dundas.Olap.WebUIControls.Command)">
            <summary>
            Adds the specified Command object to the CommandCollection.
            </summary>
            <param name="value">The Command instance to add.</param>
            <returns>The index at which the new element was inserted.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CommandCollection.System#Collections#IList#Add(System.Object)">
            <summary>
            IList interface implementation
            </summary>
            <param name="value">Object Value to add</param>
            <returns>Index in the collection where the value is placed</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CommandCollection.IList_Insert(System.Int32,System.Object)">
            <summary>
            Inserts collection item ob a specified index,
            </summary>
            <param name="index"></param>
            <param name="value"></param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CommandCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
            <summary>
            inserts an item to the IList at the specified position.
            </summary>
            <param name="index">The zero-based index at which value should be inserted. </param>
            <param name="value">The Object to insert into the IList. </param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CommandCollection.IndexOf(Dundas.Olap.WebUIControls.Command)">
            <summary>
            Returns the zero-based index of the first occurrence of a Command in the CommandCollection. 
            </summary>
            <param name="value">The command object to locate in the collection.</param>
            <returns>The zero-based index of the first occurrence 
            of <see cref="T:Dundas.Olap.WebUIControls.Command"/> within the entire <see cref="T:Dundas.Olap.WebUIControls.CommandCollection"/>, if found; otherwise, -1.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CommandCollection.Insert(System.Int32,Dundas.Olap.WebUIControls.Command)">
            <summary>
            Inserts a Command into the CommandCollection.
            </summary>
            <param name="index">The zero-based index at which command should be inserted.</param>
            <param name="value">The command to insert.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CommandCollection.Remove(Dundas.Olap.WebUIControls.Command)">
            <summary>
            Removes a Command from the CommandCollection.
            </summary>
            <param name="value">The command to remove from the CommandCollection.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CommandCollection.Contains(Dundas.Olap.WebUIControls.Command)">
            <summary>
            Determines whether the specified Command is in the CommandCollection. 
            </summary>
            <param name="value">The command to locate in the CommandCollection.</param>
            <returns>true if <see cref="T:Dundas.Olap.WebUIControls.Command"/> is found in the <see cref="T:Dundas.Olap.WebUIControls.CommandCollection"/>; otherwise, false.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CommandCollection.UpdateUI">
            <summary>
            Invalidates all visual controls connected with Command elements in the CommandCollection.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CommandCollection.Reset">
            <summary>
            Resets the collecton to its defaut state and members.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CommandCollection.Initialize">
            <summary>
            Initlializes the command collcetion by adding default commands.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CommandCollection.ShouldSerialize">
            <summary>
            Checks if this collection should be serialized
            </summary>
            <returns>True is collection should be serialized</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CommandCollection.GetNextCommandID">
            <summary>
            Generate uniquie command ID. needed in design time.
            </summary>
            <returns>Next free command ID</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CommandCollection.OnIndexChanged(Dundas.Olap.WebUIControls.Command)">
            <summary>
            Occurs after command Index property change
            </summary>
            <param name="cmd">Command with changed index </param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CommandCollection.OnRemoveComplete(System.Int32,System.Object)">
            <summary>
            Called by <see cref="T:System.Collections.CollectionBase"/> after any collection element is removed.
            </summary>
            <param name="index">The Index of removed element</param>
            <param name="value">The collection element</param>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.CommandCollection.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:Dundas.Olap.WebUIControls.Command"/> at the specified index within the collection.
            </summary>
            <param name="index">
            The index of the item in the collection to get or set. 
            </param>
            <value>
            An <see cref="T:Dundas.Olap.WebUIControls.Command"/> representing the item located at the specified index within the collection.
            </value>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.SeriesFormulaRegistry.GetFormulaInfoArray(Dundas.Olap.WebUIControls.Series,System.Boolean)">
            <summary>
            Gets an array with FormulaInfo objects assosiated with a series.
            </summary>
            <param name="series">Parent series</param>
            <param name="doInspect">Force checking for deleted series</param>
            <returns>an array with FormulaInfo objects associated with parent series</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.SeriesFormulaRegistry.AddFormulaInfo(Dundas.Olap.WebUIControls.Series,Dundas.Olap.WebUIControls.Series,System.String,System.String)">
            <summary>
            Assosiate new formula info to parent series
            </summary>
            <param name="series"></param>
            <param name="newSeries"></param>
            <param name="formulaName"></param>
            <param name="parameters"></param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.SeriesFormulaRegistry.DeleteFormulaInfo(Dundas.Olap.WebUIControls.Series,System.String)">
            <summary>
            Deletes formula info
            </summary>
            <param name="series"></param>
            <param name="formulaName"></param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.SeriesFormulaRegistry.GetFormulaInfoNoInspect(Dundas.Olap.WebUIControls.Series,System.String)">
            <summary>
            Gets formula info assosiated with a series and formula name
            </summary>
            <param name="series"></param>
            <param name="formulaName"></param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.SeriesFormulaRegistry.GetFormulaInfo(Dundas.Olap.WebUIControls.Series,System.String)">
            <summary>
            Gets formula info assosiated with a series and formula name
            </summary>
            <param name="series"></param>
            <param name="formulaName"></param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.SeriesFormulaRegistry.GetFormulaInfo(Dundas.Olap.WebUIControls.Series,Dundas.Olap.WebUIControls.ChartCommandType)">
            <summary>
            Gets formula info assosiated with a series and formula type
            </summary>
            <param name="series">The series to assosiated with formula info</param>
            <param name="type">Target <see cref="T:Dundas.Olap.WebUIControls.ChartCommandType"/> type</param>
            <returns>The stored formula information, null if not found</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.SeriesFormulaRegistry.GetParentSeries(Dundas.Olap.WebUIControls.Series)">
            <summary>
            Returns parent series of generated series if exists
            </summary>
            <param name="formulaSeries">new generated formula series</param>
            <returns>parent series</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.SeriesFormulaRegistry.GetFormulaParams(Dundas.Olap.WebUIControls.Series)">
            <summary>
            Returns parameters of generated series if exists
            </summary>
            <param name="formulaSeries">new generated formula series</param>
            <returns>parent series</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartToolbarInternal.#ctor">
            <summary>
            Initializes new instance of OlapChartToolbar class.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.Ajax.AxisZoomHelper">
            <summary>
            AxisZoomHelper is a helper class for controlling the zommin/zoomout and scrolling 
            of particular chart area axis. Responsible also for rendering for chart axis  
            scrollers buttons and so on.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AxisZoomHelper.#ctor(Dundas.Olap.WebUIControls.Axis,Dundas.Olap.WebUIControls.Ajax.AreaZoomHelper)">
            <summary>
            Initializes a new instance of the <see cref="T:AxisZoomHelper"/> class.
            </summary>
            <param name="axis">The axis.</param>
            <param name="areaZoom">The area zoom.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AxisZoomHelper.ValueToPixelPosition(System.Double)">
            <summary>
            Converts value to pixel position.
            </summary>
            <param name="position">The position.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AxisZoomHelper.PixelPositionToValue(System.Int32)">
            <summary>
            Converts pixel position to value.
            </summary>
            <param name="pixel">The pixel.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AxisZoomHelper.ProcessZoom">
            <summary>
            Processes the zoom command.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AxisZoomHelper.GetPixelValueRatio">
            <summary>
            Gets the pixel/value ratio.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AxisZoomHelper.LoadState">
            <summary>
            Loads the axis viewstate.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AxisZoomHelper.SaveState">
            <summary>
            Saves the axis viewstate.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AxisZoomHelper.PrepareCuttingState">
            <summary>
            Prepares the axis state for cutting mode.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AxisZoomHelper.PrepareCallbackInfo">
            <summary>
            Prepares the callback info for in-page registering.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AxisZoomHelper.RoundPosition(System.Double)">
            <summary>
            Rounds the axis position for zoom-in.
            </summary>
            <param name="position">The position.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AxisZoomHelper.GetCursor">
            <summary>
            Gets the corresponded area cursor.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AxisZoomHelper.ProcessMargins(System.Boolean)">
            <summary>
            Processes the margins save/load.
            </summary>
            <param name="save">if set to <c>true</c> save.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AxisZoomHelper.SaveLabelsAutoFit">
            <summary>
            Saves the labels auto fit flags.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AxisZoomHelper.RestoreLabelsAutoFit">
            <summary>
            Restores the labels auto fit flags.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AxisZoomHelper.SaveAxisColor">
            <summary>
            Saves the color of the axis.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AxisZoomHelper.RestoreAxisColor">
            <summary>
            Restores the color of the axis.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AxisZoomHelper.GatherMinMaxValues">
            <summary>
            Gathers the min max values.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AxisZoomHelper.GatherValues">
            <summary>
            Gathers the axis internal values.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AxisZoomHelper.FixLabelsAutoFit">
            <summary>
            Fixes the labels auto fit flags.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AxisZoomHelper.FixIntervals">
            <summary>
            Fixes the axis intervals.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AxisZoomHelper.SaveIntervals">
            <summary>
            Saves the axis intervals.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AxisZoomHelper.RestoreIntervals">
            <summary>
            Restores the axis intervals.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AxisZoomHelper.RestoreIntervals(System.Boolean)">
            <summary>
            Restores the axis intervals.
            </summary>
            <param name="intervalsOnly">if set to <c>true</c> restore intervals only otherwize axis margins too.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AxisZoomHelper.RestoreViewPosition">
            <summary>
            Restores the view position.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.AxisZoomHelper.GetAxisSeries">
            <summary>
            Gets the axis series.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Ajax.AxisZoomHelper.Axis">
            <summary>
            Gets the axis.
            </summary>
            <value>The axis.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Ajax.AxisZoomHelper.AxisPositionType">
            <summary>
            Gets the type of the axis position.
            </summary>
            <value>The type of the axis position.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Ajax.AxisZoomHelper.AxisSectionType">
            <summary>
            Gets the type of the axis section.
            </summary>
            <value>The type of the axis section.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Ajax.AxisZoomHelper.AxisSectionSuffix">
            <summary>
            Gets the axis section suffix (vertical "-v" or horizontal "-h").
            </summary>
            <value>The axis section suffix.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Ajax.AxisZoomHelper.TotalPixelLength">
            <summary>
            Gets the total length in pixels.
            </summary>
            <value>The total length of the pixel.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Ajax.AxisZoomHelper.ReducedSize">
            <summary>
            Gets the relative reduced size.
            </summary>
            <value>The reduced size.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Ajax.AxisZoomHelper.PositionInPixels">
            <summary>
            Gets the position in pixels.
            </summary>
            <value>The position in pixels.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Ajax.AxisZoomHelper.SizeInPixels">
            <summary>
            Gets the size in pixels.
            </summary>
            <value>The size in pixels.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Ajax.AxisZoomHelper.SlicePixelLength">
            <summary>
            Gets the length of the slice in pixels.
            </summary>
            <value>The length of the slice in pixels.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Ajax.AxisZoomHelper.LabelsPixelHeight">
            <summary>
            Gets the height of the labels in pixels
            </summary>
            <value>The height of the labels in pixels.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Ajax.AxisZoomHelper.ScrollBarArea">
            <summary>
            Gets the scroll bar area rectangle.
            </summary>
            <value>The scroll bar area rectangle.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Ajax.AxisZoomHelper.IsUserEnabled">
            <summary>
            Gets a value indicating whether this instance is user enabled.
            </summary>
            <value>
            	<c>true</c> if this instance is user enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Ajax.AxisZoomHelper.IsZoomed">
            <summary>
            Gets a value indicating whether this instance is zoomed.
            </summary>
            <value><c>true</c> if this instance is zoomed; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Ajax.AxisZoomHelper.Total">
            <summary>
            Gets the total axis.
            </summary>
            <value>The total.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Ajax.AxisZoomHelper.Minimum">
            <summary>
            Gets the minimum of the axis (note that this minimum contains margins).
            </summary>
            <value>The minimum.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Ajax.AxisZoomHelper.Maximum">
            <summary>
            Gets the maximum of the axis (note that this maximum contains margins).
            </summary>
            <value>The maximum.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Ajax.AxisZoomHelper.PagesCount">
            <summary>
            Gets the pages count.
            </summary>
            <value>The pages count.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Ajax.AxisZoomHelper.PageNumber">
            <summary>
            Gets or sets the current page number.
            </summary>
            <value>The page number.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Ajax.AxisZoomHelper.AxisType">
            <summary>
            Gets the type of the axis.
            </summary>
            <value>The type of the axis.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Ajax.AxisZoomHelper.AreaZoom">
            <summary>
            Gets the parent AreaZoomHelper instance.
            </summary>
            <value>The area zoom.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Ajax.AxisZoomHelper.Engine">
            <summary>
            Gets parent ChartZoomEngine instance.
            </summary>
            <value>The engine.</value>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.OlapGridElementStyle">
            <summary>
            Element style
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.OlapGridElementStyle.id">
            <summary>
            Style id, used for identification of style in default styles
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.OlapGridElementStyle.shouldserializeFont">
            <summary>
            Indicates that font should be serialized
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.OlapGridElementStyle.alignment">
            <summary>
            Horizontal alignment
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.OlapGridElementStyle.alignmentVertical">
            <summary>
            Vertical alignment
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.OlapGridElementStyle.visible">
            <summary>
            Indicates that element is visible
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.OlapGridElementStyle.padding">
            <summary>
            Element padding
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.OlapGridElementStyle.name">
            <summary>
            CSS class name
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.OlapGridElementStyle.parentFont">
            <summary>
            Font of parent control.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.OlapGridElementStyle.useDefaultCopy">
            <summary>
            Indicates that style info should be overridden by default values manager.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.OlapGridElementStyle.paddingAttr">
            <summary>
            padding attribute names
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGridElementStyle.CompareFont(System.Web.UI.WebControls.FontInfo,System.Web.UI.WebControls.FontInfo)">
            <summary>
            Compares two fonts.
            </summary>
            <param name="font1">Font</param>
            <param name="font2">Font</param>
            <returns>true if fonts are equal, otherwise-false</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGridElementStyle.Reset">
            <summary>
            Resets default values for the style.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGridElementStyle.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGridElementStyle.#ctor(System.String)">
            <summary>
            Olap element style constructor.
            </summary>
            <param name="aId">element id</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGridElementStyle.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serialization constructor
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGridElementStyle.DesignTimeStyleApplier(System.Web.UI.HtmlTextWriter,Dundas.Olap.WebUIControls.OlapGridElementStyle)">
            <summary>
            Applies style in design time.
            </summary>
            <param name="writer">writer</param>
            <param name="style">style to be applied</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGridElementStyle.RunTimeStyleApplier(System.Web.UI.HtmlTextWriter,Dundas.Olap.WebUIControls.OlapGridElementStyle)">
            <summary>
            applies style in run time
            </summary>
            <param name="writer">writer</param>
            <param name="style">style to be applied</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGridElementStyle.ApplyAlignmentAttributes(System.Web.UI.HtmlTextWriter)">
            <summary>
            Applies alignment attributes for writer.
            </summary>
            <param name="writer">writer</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGridElementStyle.ApplyStyle(System.Web.UI.HtmlTextWriter)">
            <summary>
            Applies current style to writer
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGridElementStyle.ToCSSString">
            <summary>
            Returns  for CSS rules definition.
            </summary>
            <returns>style values</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGridElementStyle.ApplyPaddingAttributes(System.Web.UI.HtmlTextWriter)">
            <summary>
            Apply attributes for padding.
            </summary>
            <param name="writer">writer instance.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGridElementStyle.ApplyFontAttributes(System.Web.UI.HtmlTextWriter)">
            <summary>
            Apply font attributes.
            </summary>
            <param name="writer">writer instance.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGridElementStyle.ShouldSerializeVisible">
            <summary>
            Indicates that visible property should be serialized.
            </summary>
            <returns>true if should</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGridElementStyle.ShouldSerializeAlignment">
            <summary>
            Indicates that Alignment property should be serialized.
            </summary>
            <returns>true if should</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGridElementStyle.ShouldSerializeAlignmentVertical">
            <summary>
            Indicates that AlignmentVertical property should be serialized.
            </summary>
            <returns>true if should</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGridElementStyle.ShouldSerializePadding">
            <summary>
            Indicates that Padding property should be serialized.
            </summary>
            <returns>true if should</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGridElementStyle.ShouldSerializeFont">
            <summary>
            Indicates that Font property should be serialized.
            </summary>
            <returns>true if should</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGridElementStyle.ShouldSerializeBackColor">
            <summary>
            Indicates that BackColor property should be serialized.
            </summary>
            <returns>true if should</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGridElementStyle.ShouldSerializeBorderColor">
            <summary>
            Indicates that BorderColor property should be serialized.
            </summary>
            <returns>true if should</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGridElementStyle.ShouldSerializeBorderStyle">
            <summary>
            Indicates that BorderStyle property should be serialized.
            </summary>
            <returns>true if should</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGridElementStyle.ShouldSerializeBorderWidth">
            <summary>
            Indicates that BorderWidth property should be serialized.
            </summary>
            <returns>true if should</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGridElementStyle.ShouldSerializeForeColor">
            <summary>
            Indicates that ForeColor property should be serialized.
            </summary>
            <returns>true if should</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGridElementStyle.MergeWith(System.Web.UI.WebControls.Style)">
            <summary>
            Merges current style with argument
            </summary>
            <param name="style">OlapGridElementStyle instance to be merged with.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGridElementStyle.CopyFrom(System.Web.UI.WebControls.Style)">
            <summary>
            Copies style information from argument style.
            </summary>
            <param name="style">style to be copied</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGridElementStyle.Dispose(System.Boolean)">
            <summary>
            dispose the instance
            </summary>
            <param name="disposing">dispose</param>
        </member>
        <member name="E:Dundas.Olap.WebUIControls.OlapGridElementStyle.styleApplier">
            <summary>
            Delegate which performs application of current style.
            </summary>
        </member>
        <member name="E:Dundas.Olap.WebUIControls.OlapGridElementStyle.StyleApplier">
            <summary>
            Event for applying style in design/run time.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapGridElementStyle.UseDefaultCopy">
            <summary>
            Indicates that style should be overwritten 
            by DefaultValuesManager
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapGridElementStyle.ID">
            <summary>
            Gets/sets current style id
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapGridElementStyle.Name">
            <summary>
            Gets/sets element css class name
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapGridElementStyle.Height">
            <summary>
            Element height. Not used.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapGridElementStyle.Width">
            <summary>
            Element width. Not used.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapGridElementStyle.Padding">
            <summary>
            Padding for element.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapGridElementStyle.Alignment">
            <summary>
            Horizontal alignment.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapGridElementStyle.AlignmentVertical">
            <summary>
            Vertical alignment.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapGridElementStyle.Font">
            <summary>
            Font for serialization, returns null if it is default font.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapGridElementStyle.InnerFont">
            <summary>
            Gets or sets font.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapGridElementStyle.BackColor">
            <summary>
            Gets or sets background color.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapGridElementStyle.BorderColor">
            <summary>
            Gets or sets border color.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapGridElementStyle.BorderStyle">
            <summary>
            Gets or sets border style.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapGridElementStyle.BorderWidth">
            <summary>
            Gets or sets Border width.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapGridElementStyle.ForeColor">
            <summary>
            Gets or sets Foreground color.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapGridElementStyle.Visible">
            <summary>
            Gets or sets visible value for element.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapGridElementStyle.AttributeValues">
            <summary>
            Array with attribute values.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.DefaultValuesManager">
            <summary>
            Default values manager.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DefaultValuesManager.#ctor">
            <summary>
            Default constructor (private)
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DefaultValuesManager.IsDefaultValue(System.String,System.String,System.Object)">
            <summary>
            Checks if given value is default.
            </summary>
            <param name="id">element style id</param>
            <param name="propertyName">name of property</param>
            <param name="propertyValue">current property value</param>
            <returns>true if value is default</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DefaultValuesManager.SetDefaultStyle(Dundas.Olap.WebUIControls.OlapGridElementStyle)">
            <summary>
            Sets default style for given element style.
            </summary>
            <param name="element"></param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DefaultValuesManager.GetFontById(System.String)">
            <summary>
            Gets default font. 
            </summary>
            <param name="id">element id</param>
            <returns>default font info instance or null if style not found</returns>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.DefaultValuesManager.Manager">
            <summary>
            Manager instance.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.StyleCombination">
            <summary>
            Enumeration for style combinations.
            </summary>   
        </member>
        <member name="T:Dundas.Olap.WebUIControls.StyleApplier">
            <summary>
            Applies style for given element style.
            </summary>
            <param name="writer">writer</param>
            <param name="style">style to be applied</param>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.OlapGrids.GridAppearance">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapGrids.GridAppearance.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapGrids.GridAppearance.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapGrids.GridAppearance.Berry">
            <summary>
              Looks up a localized string similar to AAEAAAD/////AQAAAAAAAAAMAgAAAFhEdW5kYXNXZWJVSUNvbnRyb2xzLCBWZXJzaW9uPTUuMC4xMjYuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj01MGQ2NDY5YWM0NzhkOTg1BQEAAAA4RHVuZGFzLk9sYXAuV2ViVUlDb250cm9scy5PbGFwR3JpZHMuT2xhcEdyaWRFbGVtZW50U3R5bGULAAAABGZvbnQHcGFkZGluZwtib3JkZXJTdHlsZQtib3JkZXJXaWR0aAtib3JkZXJDb2xvcgliYWNrQ29sb3IJZm9yZUNvbG9yBnZhbGlnbgVhbGlnbgd2aXNpYmxlBG5hbWUBBAEBAQEBAQEBASdEdW5kYXMuT2xhcC5XZWJVSUNvbnRyb2xzLkhlYWRlclBhZGRpbmcCAAAAAgAAAAYDAAAAH0ZhbHNlO0ZhbHNlOztGYWxzZTs7RmFsc2U7RmFsc2UJBAAAAAYFAAAABVNvbGlk [rest of string was truncated]&quot;;.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapGrids.GridAppearance.Chocolate">
            <summary>
              Looks up a localized string similar to AAEAAAD/////AQAAAAAAAAAMAgAAAFhEdW5kYXNXZWJVSUNvbnRyb2xzLCBWZXJzaW9uPTUuMC4xMjYuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj01MGQ2NDY5YWM0NzhkOTg1BQEAAAA4RHVuZGFzLk9sYXAuV2ViVUlDb250cm9scy5PbGFwR3JpZHMuT2xhcEdyaWRFbGVtZW50U3R5bGULAAAABGZvbnQHcGFkZGluZwtib3JkZXJTdHlsZQtib3JkZXJXaWR0aAtib3JkZXJDb2xvcgliYWNrQ29sb3IJZm9yZUNvbG9yBnZhbGlnbgVhbGlnbgd2aXNpYmxlBG5hbWUBBAEBAQEBAQEBASdEdW5kYXMuT2xhcC5XZWJVSUNvbnRyb2xzLkhlYWRlclBhZGRpbmcCAAAAAgAAAAYDAAAAH0ZhbHNlO0ZhbHNlOztGYWxzZTs7RmFsc2U7RmFsc2UJBAAAAAYFAAAABVNvbGlk [rest of string was truncated]&quot;;.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapGrids.GridAppearance.Dundas">
            <summary>
              Looks up a localized string similar to AAEAAAD/////AQAAAAAAAAAMAgAAAFhEdW5kYXNXZWJVSUNvbnRyb2xzLCBWZXJzaW9uPTUuMC4xMjYuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj01MGQ2NDY5YWM0NzhkOTg1BQEAAAA4RHVuZGFzLk9sYXAuV2ViVUlDb250cm9scy5PbGFwR3JpZHMuT2xhcEdyaWRFbGVtZW50U3R5bGULAAAABGZvbnQHcGFkZGluZwtib3JkZXJTdHlsZQtib3JkZXJXaWR0aAtib3JkZXJDb2xvcgliYWNrQ29sb3IJZm9yZUNvbG9yBnZhbGlnbgVhbGlnbgd2aXNpYmxlBG5hbWUBBAEBAQEBAQEBASdEdW5kYXMuT2xhcC5XZWJVSUNvbnRyb2xzLkhlYWRlclBhZGRpbmcCAAAAAgAAAAYDAAAAH0ZhbHNlO0ZhbHNlOztGYWxzZTs7RmFsc2U7RmFsc2UJBAAAAAYFAAAABVNvbGlk [rest of string was truncated]&quot;;.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapGrids.GridAppearance.EarthTones">
            <summary>
              Looks up a localized string similar to AAEAAAD/////AQAAAAAAAAAMAgAAAFhEdW5kYXNXZWJVSUNvbnRyb2xzLCBWZXJzaW9uPTUuMC4xMjYuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj01MGQ2NDY5YWM0NzhkOTg1BQEAAAA4RHVuZGFzLk9sYXAuV2ViVUlDb250cm9scy5PbGFwR3JpZHMuT2xhcEdyaWRFbGVtZW50U3R5bGULAAAABGZvbnQHcGFkZGluZwtib3JkZXJTdHlsZQtib3JkZXJXaWR0aAtib3JkZXJDb2xvcgliYWNrQ29sb3IJZm9yZUNvbG9yBnZhbGlnbgVhbGlnbgd2aXNpYmxlBG5hbWUBBAEBAQEBAQEBASdEdW5kYXMuT2xhcC5XZWJVSUNvbnRyb2xzLkhlYWRlclBhZGRpbmcCAAAAAgAAAAYDAAAAH0ZhbHNlO0ZhbHNlOztGYWxzZTs7RmFsc2U7RmFsc2UJBAAAAAYFAAAABVNvbGlk [rest of string was truncated]&quot;;.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapGrids.GridAppearance.ExcelLike">
            <summary>
              Looks up a localized string similar to AAEAAAD/////AQAAAAAAAAAMAgAAAFhEdW5kYXNXZWJVSUNvbnRyb2xzLCBWZXJzaW9uPTUuMC4xMjYuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj01MGQ2NDY5YWM0NzhkOTg1BQEAAAA4RHVuZGFzLk9sYXAuV2ViVUlDb250cm9scy5PbGFwR3JpZHMuT2xhcEdyaWRFbGVtZW50U3R5bGULAAAABGZvbnQHcGFkZGluZwtib3JkZXJTdHlsZQtib3JkZXJXaWR0aAtib3JkZXJDb2xvcgliYWNrQ29sb3IJZm9yZUNvbG9yBnZhbGlnbgVhbGlnbgd2aXNpYmxlBG5hbWUBBAEBAQEBAQEBASdEdW5kYXMuT2xhcC5XZWJVSUNvbnRyb2xzLkhlYWRlclBhZGRpbmcCAAAAAgAAAAYDAAAAH0ZhbHNlO0ZhbHNlOztGYWxzZTs7RmFsc2U7RmFsc2UJBAAAAAYFAAAABVNvbGlk [rest of string was truncated]&quot;;.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapGrids.GridAppearance.Fire">
            <summary>
              Looks up a localized string similar to AAEAAAD/////AQAAAAAAAAAMAgAAAFhEdW5kYXNXZWJVSUNvbnRyb2xzLCBWZXJzaW9uPTUuMC4xMjYuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj01MGQ2NDY5YWM0NzhkOTg1BQEAAAA4RHVuZGFzLk9sYXAuV2ViVUlDb250cm9scy5PbGFwR3JpZHMuT2xhcEdyaWRFbGVtZW50U3R5bGULAAAABGZvbnQHcGFkZGluZwtib3JkZXJTdHlsZQtib3JkZXJXaWR0aAtib3JkZXJDb2xvcgliYWNrQ29sb3IJZm9yZUNvbG9yBnZhbGlnbgVhbGlnbgd2aXNpYmxlBG5hbWUBBAEBAQEBAQEBASdEdW5kYXMuT2xhcC5XZWJVSUNvbnRyb2xzLkhlYWRlclBhZGRpbmcCAAAAAgAAAAYDAAAAH0ZhbHNlO0ZhbHNlOztGYWxzZTs7RmFsc2U7RmFsc2UJBAAAAAYFAAAABVNvbGlk [rest of string was truncated]&quot;;.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapGrids.GridAppearance.GrayScale">
            <summary>
              Looks up a localized string similar to AAEAAAD/////AQAAAAAAAAAMAgAAAFhEdW5kYXNXZWJVSUNvbnRyb2xzLCBWZXJzaW9uPTUuMC4xMjYuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj01MGQ2NDY5YWM0NzhkOTg1BQEAAAA4RHVuZGFzLk9sYXAuV2ViVUlDb250cm9scy5PbGFwR3JpZHMuT2xhcEdyaWRFbGVtZW50U3R5bGULAAAABGZvbnQHcGFkZGluZwtib3JkZXJTdHlsZQtib3JkZXJXaWR0aAtib3JkZXJDb2xvcgliYWNrQ29sb3IJZm9yZUNvbG9yBnZhbGlnbgVhbGlnbgd2aXNpYmxlBG5hbWUBBAEBAQEBAQEBASdEdW5kYXMuT2xhcC5XZWJVSUNvbnRyb2xzLkhlYWRlclBhZGRpbmcCAAAAAgAAAAYDAAAAH0ZhbHNlO0ZhbHNlOztGYWxzZTs7RmFsc2U7RmFsc2UJBAAAAAYFAAAABk5vdFNl [rest of string was truncated]&quot;;.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapGrids.GridAppearance.GreenBlue">
            <summary>
              Looks up a localized string similar to AAEAAAD/////AQAAAAAAAAAMAgAAAFhEdW5kYXNXZWJVSUNvbnRyb2xzLCBWZXJzaW9uPTUuMC4xMjYuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj01MGQ2NDY5YWM0NzhkOTg1BQEAAAA4RHVuZGFzLk9sYXAuV2ViVUlDb250cm9scy5PbGFwR3JpZHMuT2xhcEdyaWRFbGVtZW50U3R5bGULAAAABGZvbnQHcGFkZGluZwtib3JkZXJTdHlsZQtib3JkZXJXaWR0aAtib3JkZXJDb2xvcgliYWNrQ29sb3IJZm9yZUNvbG9yBnZhbGlnbgVhbGlnbgd2aXNpYmxlBG5hbWUBBAEBAQEBAQEBASdEdW5kYXMuT2xhcC5XZWJVSUNvbnRyb2xzLkhlYWRlclBhZGRpbmcCAAAAAgAAAAYDAAAAH0ZhbHNlO0ZhbHNlOztGYWxzZTs7RmFsc2U7RmFsc2UJBAAAAAYFAAAABVNvbGlk [rest of string was truncated]&quot;;.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapGrids.GridAppearance.LightBeige">
            <summary>
              Looks up a localized string similar to AAEAAAD/////AQAAAAAAAAAMAgAAAFhEdW5kYXNXZWJVSUNvbnRyb2xzLCBWZXJzaW9uPTUuMC4xMjYuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj01MGQ2NDY5YWM0NzhkOTg1BQEAAAA4RHVuZGFzLk9sYXAuV2ViVUlDb250cm9scy5PbGFwR3JpZHMuT2xhcEdyaWRFbGVtZW50U3R5bGULAAAABGZvbnQHcGFkZGluZwtib3JkZXJTdHlsZQtib3JkZXJXaWR0aAtib3JkZXJDb2xvcgliYWNrQ29sb3IJZm9yZUNvbG9yBnZhbGlnbgVhbGlnbgd2aXNpYmxlBG5hbWUBBAEBAQEBAQEBASdEdW5kYXMuT2xhcC5XZWJVSUNvbnRyb2xzLkhlYWRlclBhZGRpbmcCAAAAAgAAAAYDAAAAH0ZhbHNlO0ZhbHNlOztGYWxzZTs7RmFsc2U7RmFsc2UJBAAAAAYFAAAABVNvbGlk [rest of string was truncated]&quot;;.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapGrids.GridAppearance.LightSteelBlue">
            <summary>
              Looks up a localized string similar to AAEAAAD/////AQAAAAAAAAAMAgAAAFhEdW5kYXNXZWJVSUNvbnRyb2xzLCBWZXJzaW9uPTUuMC4xMjYuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj01MGQ2NDY5YWM0NzhkOTg1BQEAAAA4RHVuZGFzLk9sYXAuV2ViVUlDb250cm9scy5PbGFwR3JpZHMuT2xhcEdyaWRFbGVtZW50U3R5bGULAAAABGZvbnQHcGFkZGluZwtib3JkZXJTdHlsZQtib3JkZXJXaWR0aAtib3JkZXJDb2xvcgliYWNrQ29sb3IJZm9yZUNvbG9yBnZhbGlnbgVhbGlnbgd2aXNpYmxlBG5hbWUBBAEBAQEBAQEBASdEdW5kYXMuT2xhcC5XZWJVSUNvbnRyb2xzLkhlYWRlclBhZGRpbmcCAAAAAgAAAAYDAAAAH0ZhbHNlO0ZhbHNlOztGYWxzZTs7RmFsc2U7RmFsc2UJBAAAAAYFAAAABVNvbGlk [rest of string was truncated]&quot;;.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapGrids.GridAppearance.SemiTransparent">
            <summary>
              Looks up a localized string similar to AAEAAAD/////AQAAAAAAAAAMAgAAAFhEdW5kYXNXZWJVSUNvbnRyb2xzLCBWZXJzaW9uPTUuMC4xMjYuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj01MGQ2NDY5YWM0NzhkOTg1BQEAAAA4RHVuZGFzLk9sYXAuV2ViVUlDb250cm9scy5PbGFwR3JpZHMuT2xhcEdyaWRFbGVtZW50U3R5bGULAAAABGZvbnQHcGFkZGluZwtib3JkZXJTdHlsZQtib3JkZXJXaWR0aAtib3JkZXJDb2xvcgliYWNrQ29sb3IJZm9yZUNvbG9yBnZhbGlnbgVhbGlnbgd2aXNpYmxlBG5hbWUBBAEBAQEBAQEBASdEdW5kYXMuT2xhcC5XZWJVSUNvbnRyb2xzLkhlYWRlclBhZGRpbmcCAAAAAgAAAAYDAAAAH0ZhbHNlO0ZhbHNlOztGYWxzZTs7RmFsc2U7RmFsc2UJBAAAAAYFAAAABVNvbGlk [rest of string was truncated]&quot;;.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.Dialogs.Controls_DataAxisFilterDlg">
            <summary>
            The Controls_DataAxisFilterDlg class represents the Data Axis Filter Dialog
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Dialogs.Controls_DataAxisFilterDlg.Page_Load(System.Object,System.EventArgs)">
            <summary>
            Handles the Load event of the Page control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Dialogs.Controls_DataAxisFilterDlg.FrameworkInitialize">
            <summary>
            Frameworks the initialize.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Dialogs.Controls_DataAxisFilterDlg.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Dialogs.Controls_DataAxisFilterDlg.manager">
            <summary>
            OlapManager private
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Dialogs.Controls_DataAxisFilterDlg.dataAxisType">
            <summary>
            DataAxisType private
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Dialogs.Controls_DataAxisFilterDlg.sortingAndFiltering">
            <summary>
            SortingAndFiltering private
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Dialogs.Controls_DataAxisFilterDlg.MoveCheckBoxUp(System.Web.UI.WebControls.CheckBox)">
            <summary>
            Moves the check box up.
            </summary>
            <param name="cb">The cb.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Dialogs.Controls_DataAxisFilterDlg.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Sends server control content to a provided <see cref="T:System.Web.UI.HtmlTextWriter"></see> object, which writes the content to be rendered on the client.
            </summary>
            <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter"></see> object that receives the server control content.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Dialogs.Controls_DataAxisFilterDlg.GetElementsByType(System.Web.UI.ControlCollection,System.Type)">
            <summary>
            Gets List of controls by type.
            </summary>
            <param name="controls">The controls.</param>
            <param name="type">The type.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Dialogs.Controls_DataAxisFilterDlg.LoadPostData(System.Web.UI.Control)">
            <summary>
            Loads the post data.
            </summary>
            <param name="control">The control.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Dialogs.Controls_DataAxisFilterDlg.LoadPostBackDataAll">
            <summary>
            Loads the post back data all.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Dialogs.Controls_DataAxisFilterDlg.btnOK_Click(System.Object,System.EventArgs)">
            <summary>
            Handles the Click event of the btnOK control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Dialogs.Controls_DataAxisFilterDlg.ProcessCheckBoxes">
            <summary>
            Processes the check boxes.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Dialogs.Controls_DataAxisFilterDlg.SafeSelectListItem(System.Web.UI.WebControls.DropDownList,System.String)">
            <summary>
            Safes the select list item.
            </summary>
            <param name="list">The list.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Dialogs.Controls_DataAxisFilterDlg.LoadData">
            <summary>
            Helper method that load data into the form.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Dialogs.Controls_DataAxisFilterDlg.PopupInterface">
            <summary>
            Gets the popup interface.
            </summary>
            <value>The popup interface.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Dialogs.Controls_DataAxisFilterDlg.OlapManager">
            <summary>
            Gets or sets the olap manager.
            </summary>
            <value>The olap manager.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Dialogs.Controls_DataAxisFilterDlg.DataAxisType">
            <summary>
            Gets or sets the type of the data axis.
            </summary>
            <value>The type of the data axis.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Dialogs.Controls_DataAxisFilterDlg.SortingAndFiltering">
            <summary>
            Gets the sorting and filtering.
            </summary>
            <value>The sorting and filtering.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Dialogs.Controls_DataAxisFilterDlg.Dundas#Olap#Manager#IOlapPopupDialog#OlapManager">
            <summary>
            Gets or sets the olap manager.
            </summary>
            <value>The olap manager.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Dialogs.Controls_DataAxisFilterDlg.Dundas#Olap#Manager#IOlapPopupDialog#Parameters">
            <summary>
            Gets or sets the parameters.
            </summary>
            <value>The parameters.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Dialogs.Controls_DataAxisFilterDlg.Dundas#Olap#Manager#IOlapPopupDialog#DialogPostBack">
            <summary>
            Gets or sets a value indicating whether that dialog is in post back stage.
            </summary>
            <value><c>true</c> if [dialog post back]; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Dundas.Charting.WebControl.Utilities.ValueConverter">
            <summary>
            ValueConverter class is used when numeric or DateTime 
            value needs to be converted to a string using specified format.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Utilities.ValueConverter.FormatValue(Dundas.Olap.WebUIControls.Chart,System.Object,System.Double,System.String,Dundas.Olap.WebUIControls.ChartValueTypes,Dundas.Olap.WebUIControls.ChartElementType)">
            <summary>
            Converts value to string using specified format.
            </summary>
            <param name="chart">Reference to the chart object.</param>
            <param name="obj">Reference to the object beign formatted.</param>
            <param name="value">Value converted to string.</param>
            <param name="format">Format string.</param>
            <param name="valueType">Value type.</param>
            <param name="elementType">Chart element type beign formatted.</param>
        </member>
        <member name="T:Dundas.Charting.WebControl.Utilities.PolarDrawingStyle">
            <summary>
            Circular chart drawing style.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Utilities.PolarDrawingStyle.Line">
            <summary>
            Series are drawn as lines.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Utilities.PolarDrawingStyle.Marker">
            <summary>
            Series are drawn as markers.
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.Utilities.CircularAreaDrawingStyle">
            <summary>
            CircularAreaDrawingStyle
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Utilities.CircularAreaDrawingStyle.Polygon">
            <summary>
            Drawn as polygon
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Utilities.CircularAreaDrawingStyle.Circle">
            <summary>
            Drawn as circle
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.Utilities.ErrorBarMarkerStyle">
            <summary>
            Marker Style
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Utilities.ErrorBarMarkerStyle.None">
            <summary>
            Marker disabled
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Utilities.ErrorBarMarkerStyle.Square">
            <summary>
            The marker style is Square
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Utilities.ErrorBarMarkerStyle.Circle">
            <summary>
            The marker style is Circle
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Utilities.ErrorBarMarkerStyle.Diamond">
            <summary>
            The marker style is Diamond
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Utilities.ErrorBarMarkerStyle.Triangle">
            <summary>
            The marker style is Triangle
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Utilities.ErrorBarMarkerStyle.Cross">
            <summary>
            The marker style is Cross
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Utilities.ErrorBarMarkerStyle.Star4">
            <summary>
            The marker style is 4 corner star
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Utilities.ErrorBarMarkerStyle.Star5">
            <summary>
            The marker style is 5 corner star
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Utilities.ErrorBarMarkerStyle.Star6">
            <summary>
            The marker style is 6 corner star
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Utilities.ErrorBarMarkerStyle.Star10">
            <summary>
            The marker style is 10 corner star
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Utilities.ErrorBarMarkerStyle.Line">
            <summary>
            Line marker
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.Utilities.StockShowOpenCloseAttribute">
            <summary>
            Type of stock chart markers
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Utilities.StockShowOpenCloseAttribute.Both">
            <summary>
            Open and Close markers are shown.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Utilities.StockShowOpenCloseAttribute.Open">
            <summary>
            Only Open markers are shown.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Utilities.StockShowOpenCloseAttribute.Close">
            <summary>
            Only Close markers are shown.
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.Utilities.EmptyPointValueAttribute">
            <summary>
            Empty point value attribute
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Utilities.EmptyPointValueAttribute.Average">
            <summary>
            Average of two neighbour points is used.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Utilities.EmptyPointValueAttribute.Zero">
            <summary>
            Zero value is used
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.Utilities.StockLabelValueTypeAttribute">
            <summary>
            Stock chart point labels attribute
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Utilities.StockLabelValueTypeAttribute.High">
            <summary>
            High Y value is used to generate point label.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Utilities.StockLabelValueTypeAttribute.Low">
            <summary>
            Low Y value is used to generate point label.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Utilities.StockLabelValueTypeAttribute.Open">
            <summary>
            Open Y value is used to generate point label.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Utilities.StockLabelValueTypeAttribute.Close">
            <summary>
            Close Y value is used to generate point label.
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.Utilities.LabelAlignmentAttribute">
            <summary>
            Data point label alignment.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Utilities.LabelAlignmentAttribute.Auto">
            <summary>
            Automatic position.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Utilities.LabelAlignmentAttribute.Top">
            <summary>
            Label aligned on the top of the marker.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Utilities.LabelAlignmentAttribute.Bottom">
            <summary>
            Label aligned on the bottom of the marker.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Utilities.LabelAlignmentAttribute.Right">
            <summary>
            Label aligned on the right of the marker.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Utilities.LabelAlignmentAttribute.Left">
            <summary>
            Label aligned on the left of the marker.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Utilities.LabelAlignmentAttribute.TopLeft">
            <summary>
            Label aligned on the top-left of the marker.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Utilities.LabelAlignmentAttribute.TopRight">
            <summary>
            Label aligned on the top-right of the marker.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Utilities.LabelAlignmentAttribute.BottomLeft">
            <summary>
            Label aligned on the bottom-left of the marker.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Utilities.LabelAlignmentAttribute.BottomRight">
            <summary>
            Label aligned on the bottom-right of the marker.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Utilities.LabelAlignmentAttribute.Center">
            <summary>
            Label aligned in the center of the marker.
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.Utilities.CustomAttributeName">
            <summary>
            CustomAttributeName class contains constant strings defining
            names of all custom attributes used in the chart.
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.Utilities.CustomAttributeRegistry">
            <summary>
            CustomAttributeRegistry contains information for all chart 
            custom attributes. This data is exposed through the 
            ‘registeredCustomAttributes’ field which is an ArrayList 
            containing CustomAttributeInfo classes.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Utilities.CustomAttributeRegistry.#ctor">
            <summary>
            Default private constructor.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Utilities.CustomAttributeRegistry.#ctor(System.ComponentModel.Design.IServiceContainer)">
            <summary>
            Custom attributes registry public constructor.
            </summary>
            <param name="container">Reference to the service container.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Utilities.CustomAttributeRegistry.GetService(System.Type)">
            <summary>
            Returns custom attributes registry service object.
            </summary>
            <param name="serviceType">Service type to get.</param>
            <returns>Custom attributes registry service.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Utilities.CustomAttributeRegistry.RegisterAttributes">
            <summary>
            This method registers all standard custom attributes used in 
            the chart and provides all the aditional information like 
            description, value validation and scenarios where custom 
            attribute can be used.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Utilities.CustomAttributeRegistry.Register(Dundas.Charting.WebControl.Utilities.CustomAttributeInfo)">
            <summary>
            Adds custom attribute information into the registry.
            </summary>
            <param name="customAttributeInfo">Custom attribute information.</param>
        </member>
        <member name="T:Dundas.Charting.WebControl.Utilities.CustomAttributeInfo">
            <summary>
            CustomAttributeInfo class stores information about single 
            custom attribute. It includes Name, Description, Default 
            Value, any restrictions and the conditions when it can 
            be used.
            
            Most of the custom attribute can only be used when specific 
            chart type is selected. Some of the attributes only work 
            in 2D or 3D mode and some can be applied to the whole 
            series or data points only.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Utilities.CustomAttributeInfo.Name">
            <summary>
            Attribute name.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Utilities.CustomAttributeInfo.ValueType">
            <summary>
            Attribute value type.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Utilities.CustomAttributeInfo.DefaultValue">
            <summary>
            Attribute default value.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Utilities.CustomAttributeInfo.Description">
            <summary>
            Attribute description.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Utilities.CustomAttributeInfo.AppliesToChartType">
            <summary>
            Array of chart type supported by the attribute
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Utilities.CustomAttributeInfo.AppliesToSeries">
            <summary>
            Indicates that attribute can be applied on series.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Utilities.CustomAttributeInfo.AppliesToDataPoint">
            <summary>
            Indicates that attribute can be applied on data point.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Utilities.CustomAttributeInfo.AppliesTo3D">
            <summary>
            Indicates that attribute can be applied on 3D chart type.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Utilities.CustomAttributeInfo.AppliesTo2D">
            <summary>
            Indicates that attribute can be applied on 2D chart type.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Utilities.CustomAttributeInfo.MinValue">
            <summary>
            Attribute minimum value.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Utilities.CustomAttributeInfo.MaxValue">
            <summary>
            Attribute maximum value.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Utilities.CustomAttributeInfo.#ctor(System.String,System.Type,System.Object,System.String,Dundas.Olap.WebUIControls.SeriesChartType[],System.Boolean,System.Boolean)">
            <summary>
            Public constructor.
            </summary>
            <param name="name">Attribute name</param>
            <param name="valueType">Attribute value type.</param>
            <param name="defaultValue">Attribute default value.</param>
            <param name="description">Attribute description.</param>
            <param name="appliesToChartType">Array of chart types where attribute used.</param>
            <param name="appliesToSeries">True if attributes can be set in series.</param>
            <param name="appliesToDataPoint">True if attributes can be set in data point.</param>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.SubAxis">
            <summary>
            SubAxis class is derived from the main Axis class and provides
            additional axis associated with one of the main chart axis.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.SubAxis.parentAxis">
            <summary>
            Sub-Axis parent axis object.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.SubAxis.offsetFromParent">
            <summary>
            Sub axis offset from the parent axis
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.SubAxis.locationOffset">
            <summary>
            Margin between prev. axis
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.SubAxis.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.SubAxis.#ctor(System.String)">
            <summary>
            Object constructor.
            </summary>
            <param name="name">Unique name of the object.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.SubAxis.GetAxisPosition(System.Boolean)">
            <summary>
            Find axis position using crossing value.
            </summary>
            <param name="ignoreCrossing">Axis crossing should be ignored.</param>
            <returns>Relative position</returns>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.SubAxis.ScaleBreakStyle">
            <summary>
            Axis automatic scale breaks style.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.SubAxis.ParentAxis">
            <summary>
            Sub axis parent axis.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.SubAxis.LocationOffset">
            <summary>
            Sub axis location offset relative to the previous axis.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.SubAxis.AxisPosition">
            <summary>
            Axis position
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.SubAxis.Name">
            <summary>
            SubAxis name.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.SubAxis.MarksNextToAxis">
            <summary>
            Tick marks and labels move with axis when 
            the crossing value is changed.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.SubAxis.Crossing">
            <summary>
            Point where axis is crossed by another axis.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.SubAxis.SubAxes">
            <summary>
            Sub-axes collection.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.SubAxis.IsSubAxis">
            <summary>
            Indicates if this axis object present the main or sub axis.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.SubAxis.SubAxisName">
            <summary>
            Returns sub-axis name.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.SubAxisCollection">
            <summary>
            <b>SubAxisCollection</b> is a strongly typed collection of chart sub-axes objects.
            Collection indexer can accept sub-axis index or it's unique name as a parameter.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.SubAxisCollection.parentAxis">
            <summary>
            Sub-Axis parent axis object.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.SubAxisCollection.#ctor">
            <summary>
            Default public constructor.
            </summary>
            <remarks>
            This constructor is for internal use and should not be part of documentation.
            </remarks>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.SubAxisCollection.#ctor(Dundas.Olap.WebUIControls.Axis)">
            <summary>
            Public constructor.
            </summary>
            <param name="parentAxis">
            Chart <see cref="T:Dundas.Olap.WebUIControls.Axis"/> object.
            </param>
            <remarks>
            This constructor is for the internal use and should not be part of documentation.
            </remarks>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.SubAxisCollection.Remove(System.String)">
            <summary>
            Removes the SubAxis with the specified name from the collection.
            </summary>
            <param name="name">
            Name of the SubAxis to be removed.
            </param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.SubAxisCollection.Remove(Dundas.Olap.WebUIControls.SubAxis)">
            <summary>
            Removes the given SubAxis from the collection.
            </summary>
            <param name="SubAxis">
            <see cref="T:Dundas.Olap.WebUIControls.SubAxis"/> object to be removed.
            </param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.SubAxisCollection.Add(Dundas.Olap.WebUIControls.SubAxis)">
            <summary>
            Adds a SubAxis to the end of the collection.
            </summary>
            <param name="SubAxis">
            <see cref="T:Dundas.Olap.WebUIControls.SubAxis"/> object to add.
            </param>
            <returns>
            Index of the newly added object.
            </returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.SubAxisCollection.Insert(System.Int32,Dundas.Olap.WebUIControls.SubAxis)">
            <summary>
            Inserts a SubAxis into the collection.
            </summary>
            <param name="index">
            Index to insert the object at.
            </param>
            <param name="SubAxis">
            <see cref="T:Dundas.Olap.WebUIControls.SubAxis"/> object to insert.
            </param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.SubAxisCollection.OnInsert(System.Int32,System.Object)">
            <summary>
            Called before the new item is inserted.
            </summary>
            <param name="index">Item index.</param>
            <param name="value">Item object.</param>
            <remarks>
            This is an internal method and should not be part of the documentation.
            </remarks>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.SubAxisCollection.OnInsertComplete(System.Int32,System.Object)">
            <summary>
            After new item inserted.
            </summary>
            <param name="index">Item index.</param>
            <param name="value">Item object.</param>
            <remarks>
            This is an internal method and should not be part of the documentation.
            </remarks>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.SubAxisCollection.OnRemoveComplete(System.Int32,System.Object)">
            <summary>
            After item removed.
            </summary>
            <param name="index">Item index.</param>
            <param name="value">Item object.</param>
            <remarks>
            This is an internal method and should not be part of the documentation.
            </remarks>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.SubAxisCollection.OnClearComplete">
            <summary>
            After all items removed.
            </summary>
            <remarks>
            This is an internal method and should not be part of the documentation.
            </remarks>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.SubAxisCollection.Invalidate">
            <summary>
            Invalidates chart the collection belongs to.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.SubAxisCollection.AssignUniqueName(Dundas.Olap.WebUIControls.SubAxis)">
            <summary>
            Assigns a unique name to the SubAxis object based on it's type.
            </summary>
            <param name="SubAxis">SubAxis object to be named.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.SubAxisCollection.FindByName(System.String)">
            <summary>
            Finds SubAxis by name.
            </summary>
            <param name="name">Name of the chart SubAxis.</param>
            <returns>SubAxis or null if it does not exist.</returns>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.SubAxisCollection.Item(System.Object)">
            <summary>
            SubAxis collection indexer.
            </summary>
            <remarks>
            The <b>SubAxis</b> object's name or index can be provided as a parameter. Returns the <see cref="T:Dundas.Olap.WebUIControls.SubAxis"/> object. 
            Make sure to cast the SubAxis to it's type (e.g. LineSubAxis) to access type 
            specific properties.
            </remarks>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.ChartElementType">
            <summary>
            Chart Element Type enumeration
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartElementType.Nothing">
            <summary>
            No chart element.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartElementType.DataPoint">
            <summary>
            A DataPoint object.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartElementType.Axis">
            <summary>
            An Axis object.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartElementType.PlottingArea">
            <summary>
            Plotting area (chart area excluding axes, labels, etc.).  
            Also excludes the regions that data points may occupy.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartElementType.LegendArea">
            <summary>
            The area inside a Legend object.  Does not include 
            the space occupied by legend items.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartElementType.LegendItem">
            <summary>
            A LegendItem object.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartElementType.GridLines">
            <summary>
            Any major or minor grid line (both vertical or horizontal).
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartElementType.StripLines">
            <summary>
            A StripLine object.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartElementType.TickMarks">
            <summary>
            Any major or minor tick mark.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartElementType.Title">
            <summary>
            The title of a chart.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartElementType.AxisLabels">
            <summary>
            Axis Labels
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartElementType.AxisTitle">
            <summary>
            Axis Title
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartElementType.SBThumbTracker">
            <summary>
            A scrollbar tracking thumb.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartElementType.SBSmallDecrement">
            <summary>
            A scrollbar small decrement button.  A "down arrow" 
            button for a vertical scrollbar, or a "left arrow" 
            button for a horizontal scroll bar.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartElementType.SBSmallIncrement">
            <summary>
            A scrollbar small increment button.  An "up arrow" 
            button for a vertical scrollbar, or a "right arrow" 
            button for a horizontal scroll bar.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartElementType.SBLargeDecrement">
            <summary>
            The background of a scrollbar that will result in 
            a large decrement in the view size when clicked.  
            This is the background below the thumb for 
            a vertical scrollbar, and to the left of 
            the thumb for a horizontal scrollbar.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartElementType.SBLargeIncrement">
            <summary>
            The background of a scrollbar that will result in 
            a large increment in the view size when clicked.  
            This is the background above the thumb for 
            a vertical scrollbar, and to the right of 
            the thumb for a horizontal scrollbar.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartElementType.SBZoomReset">
            <summary>
            The ZoomReset button of a scrollbar.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartElementType.Annotation">
            <summary>
            Chart annotation object.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartElementType.DataPointLabel">
            <summary>
            Series data point label.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartElementType.Toolbar">
            <summary>
            Chart toolbar.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartElementType.AxisLabelImage">
            <summary>
            Axis Label Image
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartElementType.LegendTitle">
            <summary>
            Legend Title
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartElementType.LegendHeader">
            <summary>
            Legend Header
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.ProcessMode">
            <summary>
            Enumeration (Flag) used for processing chart types.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ProcessMode.Paint">
            <summary>
            Paint mode
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ProcessMode.HotRegions">
            <summary>
            Selection mode. Collection of hot regions has to be created.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ProcessMode.ImageMaps">
            <summary>
            Used for image maps
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.HotRegion">
            <summary>
            This class presents item in 
            the collection of hot regions.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.HotRegion.Path">
            <summary>
            Region is Graphics path
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.HotRegion.RelativeCoordinates">
            <summary>
            Relative cooedinates are used 
            to define region
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.HotRegion.BoundingRectangle">
            <summary>
            Bounding Rectangle of an shape
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.HotRegion.SelectedObject">
            <summary>
            Object which is presented with this region
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.HotRegion.SelectedSubObject">
            <summary>
            Sub-Object which is presented with this region
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.HotRegion.PointIndex">
            <summary>
            Index of the data point which is presented with this region
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.HotRegion.SeriesName">
            <summary>
            Name of the series which is presented with the region
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.HotRegion.Type">
            <summary>
            Chart Element Type
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.HotRegionsList">
            <summary>
            This class is used to fill and 
            manage collection with Hot Regions
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.HotRegionsList.processChartMode">
            <summary>
            Process chart mode Flag
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.HotRegionsList.regionList">
            <summary>
            Collection with Hor Region Elements
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.HotRegionsList.common">
            <summary>
            Reference to the common elements object
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.HotRegionsList.hitTestCalled">
            <summary>
            True if hit test function is called
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.HotRegionsList.#ctor(Dundas.Olap.WebUIControls.CommonElements)">
            <summary>
            Constructor
            </summary>
            <param name="common">Reference to the CommonElements</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.HotRegionsList.CheckHotRegions(System.Int32,System.Int32,Dundas.Olap.WebUIControls.ChartElementType,System.Boolean,System.String@,System.Int32@,Dundas.Olap.WebUIControls.ChartElementType@,System.Object@,System.Object@)">
            <summary>
            This method checks if any hot region element has position x and y.
            </summary>
            <param name="x">X coordinate</param>
            <param name="y">Y coordinate</param>
            <param name="requestedElement">Only this chart elements will be hit tested.</param>
            <param name="ignoreTransparent">Indicates that transparent elements should be ignored.</param>
            <param name="series">Selected series</param>
            <param name="point">Selected data point</param>
            <param name="type">Selected Element Type</param>
            <param name="obj">Selected Object</param>
            <param name="subObj">Selected sub-Object</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.HotRegionsList.IsElementTransparent(Dundas.Olap.WebUIControls.HotRegion)">
            <summary>
            Checks if chart element assosiated with hot region has transparent background.
            </summary>
            <param name="region">Element hot region.</param>
            <returns>True if chart element is transparent.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.HotRegionsList.AddHotRegion(Dundas.Olap.WebUIControls.ChartGraphics,System.Drawing.RectangleF,Dundas.Olap.WebUIControls.DataPoint,System.String,System.Int32)">
            <summary>
            Add Hot region to the collection.
            </summary>
            <param name="graph">Chart Graphics Object</param>
            <param name="rectSize">Rectangle which presents an Hot Region</param>
            <param name="point">Data Point</param>
            <param name="seriesName">Data Series</param>
            <param name="pointIndex">Index of an Data Point in the series</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.HotRegionsList.AddHotRegion(System.Int32,Dundas.Olap.WebUIControls.ChartGraphics,System.Drawing.RectangleF,Dundas.Olap.WebUIControls.DataPoint,System.String,System.Int32)">
            <summary>
            Add Hot region to the collection.
            </summary>
            <param name="insertIndex">Insert Index for map areas</param>
            <param name="graph">Chart Graphics Object</param>
            <param name="rectSize">Rectangle which presents an Hot Region</param>
            <param name="point">Data Point</param>
            <param name="seriesName">Data Series</param>
            <param name="pointIndex">Index of an Data Point in the series</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.HotRegionsList.AddHotRegion(Dundas.Olap.WebUIControls.ChartGraphics,System.Drawing.Drawing2D.GraphicsPath,System.Boolean,System.Single[],Dundas.Olap.WebUIControls.DataPoint,System.String,System.Int32)">
            <summary>
            Add Hot region to the collection.
            </summary>
            <param name="graph">Chart Graphics Object</param>
            <param name="path">Graphics path which presents hot region</param>
            <param name="relativePath">Graphics path uses relative or absolute coordinates</param>
            <param name="coord">Coordinates which defines polygon (Graphics Path). Used for image maps</param>
            <param name="point">Selected data point</param>
            <param name="seriesName">Data Series</param>
            <param name="pointIndex">Index of an Data Point in the series</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.HotRegionsList.AddHotRegion(System.Int32,Dundas.Olap.WebUIControls.ChartGraphics,System.Single,System.Single,System.Single,Dundas.Olap.WebUIControls.DataPoint,System.String,System.Int32)">
            <summary>
            Add Hot region to the collection.
            </summary>
            <param name="insertIndex">Position where to insert element. Used for image maps only</param>
            <param name="graph">Chart Graphics Object</param>
            <param name="x"></param>
            <param name="y"></param>
            <param name="radius"></param>
            <param name="point">Selected data point</param>
            <param name="seriesName">Data Series</param>
            <param name="pointIndex">Index of an Data Point in the series</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.HotRegionsList.AddHotRegion(Dundas.Olap.WebUIControls.ChartGraphics,System.Drawing.RectangleF,System.String,System.String,System.String,System.Object,Dundas.Olap.WebUIControls.ChartElementType,System.String)">
            <summary>
            Add Hot region to the collection.
            </summary>
            <param name="graph">Chart Graphics Object</param>
            <param name="rectArea">Hot Region rectangle</param>
            <param name="toolTip">Tool Tip Text</param>
            <param name="hRef">HRef string</param>
            <param name="mapAreaAttributes">Map area Attribute string</param>
            <param name="selectedObject">Object which present hot region</param>
            <param name="type">Type of the object wich present hot region</param>
            <param name="series">Selected series</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.HotRegionsList.AddHotRegion(Dundas.Olap.WebUIControls.ChartGraphics,System.Drawing.RectangleF,System.String,System.String,System.String,System.Object,System.Object,Dundas.Olap.WebUIControls.ChartElementType,System.String)">
            <summary>
            Add Hot region to the collection.
            </summary>
            <param name="graph">Chart Graphics Object</param>
            <param name="rectArea">Hot Region rectangle</param>
            <param name="toolTip">Tool Tip Text</param>
            <param name="hRef">HRef string</param>
            <param name="mapAreaAttributes">Map area Attribute string</param>
            <param name="selectedObject">Object which present hot region</param>
            <param name="selectedSubObject">Sub-Object which present hot region</param>
            <param name="type">Type of the object wich present hot region</param>
            <param name="series">Selected series</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.HotRegionsList.AddHotRegion(Dundas.Olap.WebUIControls.ChartGraphics,System.Drawing.Drawing2D.GraphicsPath,System.Boolean,System.String,System.String,System.String,System.Object,Dundas.Olap.WebUIControls.ChartElementType)">
            <summary>
            Add Hot region to the collection.
            </summary>
            <param name="graph">Chart Graphics Object</param>
            <param name="path">Graphics path</param>
            <param name="relativePath">Used relatice coordinates for graphics path.</param>
            <param name="toolTip">Tool Tip Text</param>
            <param name="hRef">HRef string</param>
            <param name="mapAreaAttributes">Map area Attribute string</param>
            <param name="selectedObject">Object which present hot region</param>
            <param name="type">Type of the object wich present hot region</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.HotRegionsList.AddHotRegion(System.Drawing.RectangleF,System.Object,Dundas.Olap.WebUIControls.ChartElementType,System.Boolean)">
            <summary>
            Add Hot region to the collection.
            </summary>
            <param name="rectArea">Hot Region rectangle</param>
            <param name="selectedObject">Object which present hot region</param>
            <param name="type">Type of the object wich present hot region</param>
            <param name="relativeCoordinates">Coordinates for rectangle are relative</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.HotRegionsList.AddHotRegion(System.Drawing.RectangleF,System.Object,Dundas.Olap.WebUIControls.ChartElementType,System.Boolean,System.Boolean)">
            <summary>
            Add Hot region to the collection.
            </summary>
            <param name="rectArea">Hot Region rectangle</param>
            <param name="selectedObject">Object which present hot region</param>
            <param name="type">Type of the object wich present hot region</param>
            <param name="relativeCoordinates">Coordinates for rectangle are relative</param>
            <param name="insertAtBeginning">Insert the hot region at the beginning of the collection</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.HotRegionsList.FindInsertIndex">
            <summary>
            This method serch for position in Map Areas which is the first 
            position after Custom areas.
            </summary>
            <returns>Insert Index</returns>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.HotRegionsList.ProcessChartMode">
            <summary>
            Flag used for processing chart types. It could 
            be Paint, HotRegion or both mode.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.HotRegionsList.List">
            <summary>
            Collection with Hor Region Elements
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.HitTestResult">
            <summary>
            This class is used as a result of hit test function
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.HitTestResult.Series">
            <summary>
            Data series object
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.HitTestResult.PointIndex">
            <summary>
            Data Point Index
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.HitTestResult.ChartArea">
            <summary>
            Chart Area object
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.HitTestResult.Axis">
            <summary>
            Axis object
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.HitTestResult.ChartElementType">
            <summary>
            Chart element type
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.HitTestResult.Object">
            <summary>
             Selected object
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.HitTestResult.SubObject">
            <summary>
             Selected sub object.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.LightStyle">
            <summary>
            3D chart area light styles.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.LightStyle.None">
            <summary>
            No light.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.LightStyle.Simplistic">
            <summary>
            Simplistic ligth.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.LightStyle.Realistic">
            <summary>
            Realistic ligth.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.COPCoordinates">
            <summary>
            Coordinates of the Center Of Projection
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.COPCoordinates.X">
            <summary>
            Check X coordinate.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.COPCoordinates.Y">
            <summary>
            Check Y coordinate.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.COPCoordinates.Z">
            <summary>
            Check Z coordinate.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.ChartArea3DStyle">
            <summary>
            ChartArea3DStyleClass class represents chart area 3D settings like
            totation angles, perspective and others.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartArea3DStyle.#ctor">
            <summary>
            Public constructor.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartArea3DStyle.#ctor(Dundas.Olap.WebUIControls.ChartArea)">
            <summary>
            Public constructor.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartArea3DStyle.Initialize(Dundas.Olap.WebUIControls.ChartArea)">
            <summary>
            Initialize Chart area and axes
            </summary>
            <param name="chartArea">Chart area object.</param>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartArea3DStyle.Enable3D">
            <summary>
            Enables/disables 3D chart types in the area.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartArea3DStyle.RightAngleAxes">
            <summary>
            Indicates that axes are set at the right angle independent of the rotation.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartArea3DStyle.Clustered">
            <summary>
            Indicates that series should be drawn as clustered.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartArea3DStyle.Light">
            <summary>
            3D area light style.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartArea3DStyle.Perspective">
            <summary>
            3D area perspective which controls the view of the chart depth.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartArea3DStyle.XAngle">
            <summary>
            Chart area rotation angle around the X axis.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartArea3DStyle.YAngle">
            <summary>
            Chart area rotation angle around the Y axis.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartArea3DStyle.WallWidth">
            <summary>
            Chart area walls width in pixels.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartArea3DStyle.PointDepth">
            <summary>
            Series points depth in percentages (0-1000%).
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartArea3DStyle.PointGapDepth">
            <summary>
            Series points gap depth in percentages (0-1000%).
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.Design.AxisLabelDateValueConverter">
            <summary>
            Converts labels, grid and ticks start position to support dates format
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.AxisLabelDateValueConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Convert Min and Max values to string if step type is set to one of the DateTime type
            </summary>
            <param name="context">Descriptor context.</param>
            <param name="culture">Culture information.</param>
            <param name="value">Value to convert.</param>
            <param name="destinationType">Convertion destination type.</param>
            <returns>Converted object.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.AxisLabelDateValueConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Convert Min and Max values from string if step type is set to one of the DateTime type
            </summary>
            <param name="context">Descriptor context.</param>
            <param name="culture">Culture information.</param>
            <param name="value">Value to convert from.</param>
            <returns>Converted object.</returns>
        </member>
        <member name="T:Dundas.Charting.WebControl.Design.AxisCrossingValueConverter">
            <summary>
            Converts crossing property of the axis. 
            Possible values: double, date, "Auto", "Min", "Max"
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.Design.AxisMinMaxValueConverter">
            <summary>
            Converts min and max properties of the axis depending on the values type
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.AxisMinMaxValueConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Convert Min and Max values to string if step type is set to one of the DateTime type
            </summary>
            <param name="context">Descriptor context.</param>
            <param name="culture">Culture information.</param>
            <param name="value">Value to convert.</param>
            <param name="destinationType">Convertion destination type.</param>
            <returns>Converted object.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.AxisMinMaxValueConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Convert Min and Max values from string if step type is set to one of the DateTime type
            </summary>
            <param name="context">Descriptor context.</param>
            <param name="culture">Culture information.</param>
            <param name="value">Value to convert from.</param>
            <returns>Converted object.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.AxisCrossingValueConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Standart values supported - return true.
            </summary>
            <param name="context">Descriptor context.</param>
            <returns>Standard values supported.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.AxisCrossingValueConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Standart values are not exclusive - return false
            </summary>
            <param name="context">Descriptor context.</param>
            <returns>Non exclusive standard values.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.AxisCrossingValueConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Fill in the list of standart values.
            </summary>
            <param name="context">Descriptor context.</param>
            <returns>Standart values collection.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.AxisCrossingValueConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Convert crossing value to string.
            </summary>
            <param name="context">Descriptor context.</param>
            <param name="culture">Culture information.</param>
            <param name="value">Value to convert.</param>
            <param name="destinationType">Convertion destination type.</param>
            <returns>Converted object.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.AxisCrossingValueConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Convert crossing values from string
            </summary>
            <param name="context">Descriptor context.</param>
            <param name="culture">Culture information.</param>
            <param name="value">Value to convert from.</param>
            <returns>Converted object.</returns>
        </member>
        <member name="T:Dundas.Charting.WebControl.Design.AxisMinMaxAutoValueConverter">
            <summary>
            Converts maximum and minimum property of the axis. 
            Possible values: double, date, "Auto",
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.AxisMinMaxAutoValueConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Standart values supported - return true
            </summary>
            <param name="context">Descriptor context.</param>
            <returns>Standard values supported.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.AxisMinMaxAutoValueConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Standart values are not exclusive - return false
            </summary>
            <param name="context">Descriptor context.</param>
            <returns>Non exclusive standard values.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.AxisMinMaxAutoValueConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Fill in the list of data series names.
            </summary>
            <param name="context">Descriptor context.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.AxisMinMaxAutoValueConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Convert minimum or maximum value to string
            </summary>
            <param name="context">Descriptor context.</param>
            <param name="culture">Culture information.</param>
            <param name="value">Value to convert.</param>
            <param name="destinationType">Convertion destination type.</param>
            <returns>Converted object.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.AxisMinMaxAutoValueConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Convert minimum or maximum values from string
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.Design.StripLineTitleAngleConverter">
            <summary>
            Converts title angle property of the strip line
            Possible values: 0, 90, 180, 270
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.StripLineTitleAngleConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Standart values supported - return true
            </summary>
            <param name="context">Descriptor context.</param>
            <returns>Standard values supported.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.StripLineTitleAngleConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Standart values are not exclusive - return false
            </summary>
            <param name="context">Descriptor context.</param>
            <returns>Non exclusive standard values.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.StripLineTitleAngleConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Fill in the list of data series names.
            </summary>
            <param name="context">Descriptor context.</param>
        </member>
        <member name="T:Dundas.Charting.WebControl.Design.AxisIntervalValueConverter">
            <summary>
            Converts Interval and IntervalOffset properties of the axis
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Design.AxisIntervalValueConverter.hideNotSet">
            <summary>
            Inicates that "NotSet" option is available
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.AxisIntervalValueConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Standart values supported - return true.
            </summary>
            <param name="context">Descriptor context.</param>
            <returns>Standard values supported.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.AxisIntervalValueConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Standart values are not exclusive - return false
            </summary>
            <param name="context">Descriptor context.</param>
            <returns>Non exclusive standard values.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.AxisIntervalValueConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Fill in the list of standart values.
            </summary>
            <param name="context">Descriptor context.</param>
            <returns>Standart values collection.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.AxisIntervalValueConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Convert crossing value to string.
            </summary>
            <param name="context">Descriptor context.</param>
            <param name="culture">Culture information.</param>
            <param name="value">Value to convert.</param>
            <param name="destinationType">Convertion destination type.</param>
            <returns>Converted object.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.AxisIntervalValueConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Convert crossing values from string
            </summary>
            <param name="context">Descriptor context.</param>
            <param name="culture">Culture information.</param>
            <param name="value">Value to convert from.</param>
            <returns>Converted object.</returns>
        </member>
        <member name="T:Dundas.Charting.WebControl.Design.AxisElementIntervalValueConverter">
            <summary>
            Converts Interval and IntervalOffset properties of the label style, tick marks and grids
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.AxisElementIntervalValueConverter.#ctor">
            <summary>
            Show the NotSet option for interval
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.Commands.CommandUserDefined">
            <summary>
            Implements UserDefined ChartCommandType.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandUserDefined.#ctor">
            <summary>
            Initializes new instance of CommandUserDefined class.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandUserDefined.GetCommandIType">
            <summary>
            Gets defined  <see cref="T:Dundas.Olap.WebUIControls.CommandInterfaceType"/> of this command executor which
            defines command behavior when command contains subcommands
            </summary>
            <returns>The command interface type</returns>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.Commands.CommandSeparator">
            <summary>
            Implements Separator ChartCommandType.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Commands.CommandSeparator.cacheImage">
            <summary>
            The image cache for command icon.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandSeparator.#ctor">
            <summary>
            Initializes new instance of CommandSeparator class;
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandSeparator.#ctor(Dundas.Olap.WebUIControls.ChartCommandType)">
            <summary>
            Initializes new instance of CommandSeparator class;
            </summary>
            <param name="type">ChartCommandType which implements this command. Used from derived classes</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandSeparator.GenerateImage">
            <summary>
            Generates command image( icon ) - Gainsboro rectangle with thin vertical LightGray line.
            </summary>
            <returns>The generated image</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandSeparator.GetImageName">
            <summary>
            Gets image name registered in Chart.NamedImageCollection 
            or dynamicaly loaded from resources. 
            In this case image name is not real 
            because the class implement ICommandSupplyImage
            </summary>
            <returns>Formated image name</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandSeparator.Dundas#Olap#WebUIControls#Commands#ICommandSupplyImage#GetImage">
            <summary>
            Returns the image which supply this <see cref="T:Dundas.Olap.WebUIControls.Commands.CommandExecutor"/>
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.Commands.CommandSpacer">
            <summary>
            Implements Spacer ChartCommandType.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandSpacer.#ctor">
            <summary>
            Initializes new instance of CommandSpacer class
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandSpacer.GenerateImage">
            <summary>
            Generates command image( icon ) - empty Gainsboro rectangle
            </summary>
            <returns>The generated image</returns>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.Commands.CommandCopy">
            <summary>
            Implements Copy ChartCommandType.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandCopy.#ctor">
            <summary>
            Initializes new instance of CommandCopy class;
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandCopy.IsSupportState">
            <summary>
            Returns true if this command support enable/disable state
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandCopy.GetEnableState(Dundas.Olap.WebUIControls.Command,System.Object,System.String)">
            <summary>
            Check command enable state against object context.
            </summary>
            <param name="cmd">Command to check</param>
            <param name="context">Object context</param>
            <param name="parameters"></param>
            <returns>True if command is in toggle state</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandCopy.CopyImage(Dundas.Olap.WebUIControls.Chart)">
            <summary>
            Copyes image to clipboard
            </summary>
            <param name="chart">The chart object</param>
            <param name="dataObject">The clipboard DataObject</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandCopy.CopyCSV(Dundas.Olap.WebUIControls.Chart,Dundas.Olap.WebUIControls.ObjectInfo)">
            <summary>
            Copyes chart series data to clibloard in CSV format.
            If context object is not provided the copyes first chart series.
            </summary>
            <param name="chart">The chart object</param>
            <param name="dataObject">The clipboard DataObject</param>
            <param name="context">The command context</param>
            <returns>True if CSV data is inserted into clipboard</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandCopy.Execute(Dundas.Olap.WebUIControls.Command,System.Object,System.String)">
            <summary>
            Executes a command.
            </summary>
            <param name="cmd">The original <see cref="T:Dundas.Olap.WebUIControls.Command"/> object which invoke this call</param>
            <param name="selectedObject">The context object which command to apply. 
            It can be array of objects.</param>
            <param name="parameters">Additional parameters for execution</param>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.Commands.CommandPaste">
            <summary>
            Implements Paste command
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandPaste.#ctor">
            <summary>
            Initializes new instance of CommandPaste object
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandPaste.IsSupportState">
            <summary>
            Returns true if this command support enable/disable state
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandPaste.GetEnableState(Dundas.Olap.WebUIControls.Command,System.Object,System.String)">
            <summary>
            Check command enable state against object context.
            </summary>
            <param name="cmd">Command to check</param>
            <param name="context">Object context</param>
            <param name="parameters"></param>
            <returns>True if command is in toggle state</returns>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.Commands.CommandLoad">
            <summary>
            Implements LoadXXX commands
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandLoad.#ctor(Dundas.Olap.WebUIControls.ChartCommandType)">
            <summary>
            Initialize new instance of CommandLoad object;
            </summary>
            <param name="type">The ChartCommandType; can be LoadXXXX types</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandLoad.GetCommandIType">
            <summary>
            Gets the <see cref="T:Dundas.Olap.WebUIControls.CommandInterfaceType"/> which represents 
            if command is empty and do nothing ( <see cref="F:Dundas.Olap.WebUIControls.CommandInterfaceType.Container"/> ) or 
            executable ( <see cref="F:Dundas.Olap.WebUIControls.CommandInterfaceType.Executable"/> ) or both
            ( <see cref="F:Dundas.Olap.WebUIControls.CommandInterfaceType.Mixed"/> ).
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandLoad.GetSubCommandTypes">
            <summary>
            Gets array of ChartCommandType which represents default sub commands.
            </summary>
            <returns>Array of ChartCommandType</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandLoad.CheckCommandType(Dundas.Olap.WebUIControls.ChartCommandType)">
            <summary>
            Checks if type of command is supported by this class.
            </summary>
            <param name="type">The command type</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandLoad.Execute(Dundas.Olap.WebUIControls.Command,System.Object,System.String)">
            <summary>
            Executes this command.
            </summary>
            <param name="cmd">The original <see cref="T:Dundas.Olap.WebUIControls.Command"/> object which invoke this call</param>
            <param name="selectedObject">The context object which command to apply. 
            It can be array of objects.</param>
            <param name="parameters">Additional parameters for execution</param>
            <returns>CommandResult which contain error status and message</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandLoad.IsSupportState">
            <summary>
            Returns true if this command support enable/disable state
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandLoad.GetEnableState(Dundas.Olap.WebUIControls.Command,System.Object,System.String)">
            <summary>
            Check command enable state against object context.
            </summary>
            <param name="cmd">Command to check</param>
            <param name="context">Object context</param>
            <param name="parameters"></param>
            <returns>True if command is in toggle state</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandLoad.ChartReset(Dundas.Olap.WebUIControls.Chart,System.Boolean)">
            <summary>
            Resets chart using serializer.
            </summary>
            <param name="chart">Chart to reset</param>
            <param name="appearanceOnly">True for appearance</param>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.Commands.CommandSave">
            <summary>
            Implements SaveGroup, SaveImage, SaveAppearance and SaveAll commands.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandSave.#ctor(Dundas.Olap.WebUIControls.ChartCommandType)">
            <summary>
            Initializes new instance of CommandSave.
            </summary>
            <param name="type">One of SaveXXXX command types</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandSave.GetCommandIType">
            <summary>
            Gets defined  <see cref="T:Dundas.Olap.WebUIControls.CommandInterfaceType"/> of this command executor which
            defines command behavior when command contains subcommands
            </summary>
            <returns>The command interface type</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandSave.GetSubCommandTypes">
            <summary>
            Gets array of ChartCommandType which represents default sub commands.
            </summary>
            <returns>Array of ChartCommandType</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandSave.SaveChart(Dundas.Olap.WebUIControls.Chart,System.String,System.IO.MemoryStream)">
            <summary>
            Saves the chart to a file ( Image or Serialized Data )
            </summary>
            <param name="chart">The chart to serialize</param>
            <param name="imageExt">Provides image type if CommandType is SaveImage</param>
            <param name="memStream">Stream to save data into</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandSave.IsSupportState">
            <summary>
            Returns true if this command support enable/disable state
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandSave.GetEnableState(Dundas.Olap.WebUIControls.Command,System.Object,System.String)">
            <summary>
            Check command enable state against object context.
            </summary>
            <param name="cmd">Command to check</param>
            <param name="context">Object context</param>
            <param name="parameters"></param>
            <returns>True if command is in toggle state</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandSave.Execute(Dundas.Olap.WebUIControls.Command,System.Object,System.String)">
            <summary>
            Executes SaveXXX commands.
            </summary>
            <param name="cmd">The original <see cref="T:Dundas.Olap.WebUIControls.Command"/> object which invoke this call</param>
            <param name="selectedObject">The context object which command to apply. 
            It can be array of objects.</param>
            <param name="parameters">Additional parameters for execution</param>
            <returns>CommandResult which contain information of execution</returns>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.Commands.CommandPrint">
            <summary>
            Implements Print command
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandPrint.Execute(Dundas.Olap.WebUIControls.Command,System.Object,System.String)">
            <summary>
            Executes Print command.
            </summary>
            <param name="cmd">The original <see cref="T:Dundas.Olap.WebUIControls.Command"/> object 
            which invoke this call</param>
            <param name="selectedObject">The context object which command to apply. 
            It can be array of objects.</param>
            <param name="parameters">Additional parameters for execution</param>
            <returns>CommandResult which contain information of execution</returns>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.Commands.CommandPrintPreview">
            <summary>
            Implements PrintPreview command
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandPrintPreview.#ctor">
            <summary>
            Initializes new instance of CommandPrintPreview class
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandPrintPreview.Execute(Dundas.Olap.WebUIControls.Command,System.Object,System.String)">
            <summary>
            Executes Print command.
            </summary>
            <param name="cmd">The original <see cref="T:Dundas.Olap.WebUIControls.Command"/> object 
            which invoke this call</param>
            <param name="selectedObject">The context object which command to apply. 
            It can be array of objects.</param>
            <param name="parameters">Additional parameters for execution</param>
            <returns>CommandResult which contain information of execution</returns>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.Commands.CommandToggle3D">
            <summary>
            Implements Toggle3DGroup, Toggle3D, Toggle3DClustered and 
            	Toggle3DRightAngle command types.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandToggle3D.#ctor(Dundas.Olap.WebUIControls.ChartCommandType)">
            <summary>
            Initializes new instance of CommandToggle3D object
            </summary>
            <param name="type">The command type</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandToggle3D.GetSubCommandTypes">
            <summary>
            Gets array of ChartCommandType which represents default sub commands.
            </summary>
            <returns>Array of ChartCommandType</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandToggle3D.GetCommandIType">
            <summary>
            Gets defined  <see cref="T:Dundas.Olap.WebUIControls.CommandInterfaceType"/> of this command executor which
            defines command behavior when command contains subcommands
            </summary>
            <returns>The command interface type</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandToggle3D.IsSupportState">
            <summary>
            Returns true if this command support enable/disable state
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandToggle3D.GetEnableState(Dundas.Olap.WebUIControls.Command,System.Object,System.String)">
            <summary>
            Check command enable state against object context.
            </summary>
            <param name="cmd">Command to check</param>
            <param name="context">Object context</param>
            <param name="parameters">Object context</param>
            <returns>True if command is in toggle state</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandToggle3D.GetToggleState(Dundas.Olap.WebUIControls.Command,System.Object,System.String)">
            <summary>
            Check command togle state against object context.
            </summary>
            <param name="cmd">Command to check</param>
            <param name="context">Object context</param>
            <param name="parameters"></param>
            <returns>True if command is in toggle state</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandToggle3D.Execute(Dundas.Olap.WebUIControls.Command,System.Object,System.String)">
            <summary>
            Executes ToggleXXX commands.
            </summary>
            <param name="cmd">The original <see cref="T:Dundas.Olap.WebUIControls.Command"/> object which invoke this call</param>
            <param name="selectedObject">The context object which command to apply. 
            It can be array of objects.</param>
            <param name="parameters">Additional parameters for execution</param>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.Commands.CommandModify3D">
            <summary>
            Implements the Modify3DXXXX commands
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandModify3D.#ctor(Dundas.Olap.WebUIControls.ChartCommandType)">
            <summary>
            Initializes new instance of CommandModify3D class
            </summary>
            <param name="type">One of Modify3DXXXX command types</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandModify3D.GetCommandIType">
            <summary>
            Gets defined  <see cref="T:Dundas.Olap.WebUIControls.CommandInterfaceType"/> of this command executor which
            defines command behavior when command contains subcommands
            </summary>
            <returns>The command interface type</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandModify3D.GetSubCommandTypes">
            <summary>
            Gets array of ChartCommandType which represents default sub commands.
            </summary>
            <returns>Array of ChartCommandType</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandModify3D.IsSupportState">
            <summary>
            Returns true if this command support enable/disable state
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandModify3D.GetEnableState(Dundas.Olap.WebUIControls.Command,System.Object,System.String)">
            <summary>
            Check command enable state against object context.
            </summary>
            <param name="cmd">Command to check</param>
            <param name="context">Object context</param>
            <param name="parameters">Object context</param>
            <returns>True if command is in toggle state</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandModify3D.Execute(Dundas.Olap.WebUIControls.Command,System.Object,System.String)">
            <summary>
            Executes this command.
            </summary>
            <param name="cmd">The original <see cref="T:Dundas.Olap.WebUIControls.Command"/> object which invoke this call</param>
            <param name="selectedObject">The context object which command to apply. 
            It can be array of objects.</param>
            <param name="parameters">Additional parameters for execution</param>
            <returns>CommandResult which contain error status and message</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandModify3D.RotateCommands(System.Collections.ArrayList,Dundas.Olap.WebUIControls.Commands.CommandModify3D.Directions,System.Int32)">
            <summary>
            Executes rotate sub set of commands
            </summary>
            <param name="areas">The array of chart areas</param>
            <param name="direction">The rotate direction</param>
            <param name="step">Step for increment/decrement value</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandModify3D.StepNewValue(System.Int32,Dundas.Olap.WebUIControls.Commands.CommandModify3D.Directions,System.Int32)">
            <summary>
            Increment/decrement a value determined by direction and step  
            </summary>
            <param name="oldValue">Value to be changed</param>
            <param name="direction">Direction info</param>
            <param name="step">step change</param>
            <returns>new value</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandModify3D.PerspectiveCommand(System.Collections.ArrayList,Dundas.Olap.WebUIControls.Commands.CommandModify3D.Directions,System.Int32)">
            <summary>
            Executes PerspectiveXXX commands
            </summary>
            <param name="areas">Aray of chart areas</param>
            <param name="direction">Direction info</param>
            <param name="step">step change</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandModify3D.PointGapCommand(System.Collections.ArrayList,Dundas.Olap.WebUIControls.Commands.CommandModify3D.Directions,System.Int32)">
            <summary>
            Executes PointGapXXX commands
            </summary>
            <param name="areas">Aray of chart areas</param>
            <param name="direction">Direction info</param>
            <param name="step">step change</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandModify3D.PointDepthCommand(System.Collections.ArrayList,Dundas.Olap.WebUIControls.Commands.CommandModify3D.Directions,System.Int32)">
            <summary>
            Executes PointDepthXXX commands
            </summary>
            <param name="areas">Aray of chart areas</param>
            <param name="direction">Direction info</param>
            <param name="step">step change</param>
            <returns></returns>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.Commands.CommandToggleLegend">
            <summary>
            Implements ToggleLegend chart command type.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandToggleLegend.#ctor">
            <summary>
            Initializes new instance of CommandToggleLegend class
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandToggleLegend.IsSupportState">
            <summary>
            Returns true if this command support enable/disable state
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandToggleLegend.GetToggleState(Dundas.Olap.WebUIControls.Command,System.Object,System.String)">
            <summary>
            Check command togle state against object context.
            </summary>
            <param name="cmd">Command to check</param>
            <param name="context">Object context</param>
            <param name="parameters">additional parameters</param>
            <returns>True if command is in toggle state</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandToggleLegend.Execute(Dundas.Olap.WebUIControls.Command,System.Object,System.String)">
            <summary>
            Executes this command.
            </summary>
            <param name="cmd">The original <see cref="T:Dundas.Olap.WebUIControls.Command"/> object which invoke this call</param>
            <param name="selectedObject">The context object which command to apply. 
            It can be array of objects.</param>
            <param name="parameters">Additional parameters for execution</param>
            <returns>CommandResult which contain error status and message</returns>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.Commands.CommandSelectChart">
            <summary>
            Implements SelectChartXXXX chart command types.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Commands.CommandSelectChart.chartType">
            <summary>
            The coressponded chart type of this command
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Commands.CommandSelectChart.chartTypeName">
            <summary>
            The chart type name
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandSelectChart.#ctor">
            <summary>
            Initializes new instance of CommandSelectChart class
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandSelectChart.#ctor(Dundas.Olap.WebUIControls.ChartCommandType)">
            <summary>
            Initializes new instance of CommandSelectChart class by defined ChartCommandType.
            </summary>
            <param name="type">One of SelectChartXXX command type</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandSelectChart.IsSupportState">
            <summary>
            Returns true if this command support enable/disable state
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandSelectChart.GetCommandIType">
            <summary>
            Gets defined  <see cref="T:Dundas.Olap.WebUIControls.CommandInterfaceType"/> of this command executor.
            The SelectChartGroup is container
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandSelectChart.GetCommandPopupStyle">
            <summary>
            Gets defined  <see cref="T:Dundas.Olap.WebUIControls.CommandPopupStyle"/> of this command executor.
            For SelectChartGroup is table.
            </summary>
            <returns>The command popup style</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandSelectChart.GetSubCommandTypes">
            <summary>
            Gets array of ChartCommandType which represents default sub commands.
            </summary>
            <returns>Array of ChartCommandType</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandSelectChart.GetEnableState(Dundas.Olap.WebUIControls.Command,System.Object,System.String)">
            <summary>
            Check command enable state against object context.
            </summary>
            <param name="cmd">Command to check</param>
            <param name="context">Object context</param>
            <param name="parameters"></param>
            <returns>True if command is in toggle state</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandSelectChart.IsFunnelChartAlone(System.Collections.ArrayList,Dundas.Olap.WebUIControls.Command)">
            <summary>
            To switch to funell or pyramid series we have to change all 
            series in this type in particular area.
            </summary>
            <param name="seriesArray">The array of series to inspect</param>
            <param name="cmd">Executed Command object</param>
            <returns>True if series can be changed to funnel/pyramid</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandSelectChart.IsSwitchedAxes(System.Collections.ArrayList,Dundas.Olap.WebUIControls.Command)">
            <summary>
            Inspect if some area will contain  series with diferrent 
            SwitchValueAxes ( example: columns and bars).
            </summary>
            <param name="seriesArray">Array with series to inspect</param>
            <param name="cmd">Executed Command object</param>
            <returns>True if series have different SwitchValueAxes series in particular chart area</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandSelectChart.IsRadarChartEnable(System.Collections.ArrayList,Dundas.Olap.WebUIControls.Command)">
            <summary>
            
            </summary>
            <param name="seriesArray"></param>
            <param name="cmd"></param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandSelectChart.InspectFormulaSeries(Dundas.Olap.WebUIControls.Command,System.Collections.ArrayList)">
            <summary>
            Inspect and removes automate generated series (formulas )
            </summary>
            <param name="cmd">Executed Command object</param>
            <param name="seriesArray">Array with series</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandSelectChart.Execute(Dundas.Olap.WebUIControls.Command,System.Object,System.String)">
            <summary>
            Executes Print command.
            </summary>
            <param name="cmd">The original <see cref="T:Dundas.Olap.WebUIControls.Command"/> object 
            which invoke this call</param>
            <param name="selectedObject">The context object which command to apply. 
            It can be array of objects.</param>
            <param name="parameters">Additional parameters for execution</param>
            <returns>CommandResult which contain information of execution</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandSelectChart.GetImageName">
            <summary>
            Gets the default image name. The image can be loaded from Chart.NamedImages.
            </summary>
            <returns>String that represent the image resource</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandSelectChart.EvalChartTypeName">
            <summary>
            Extract text from chart command type. "100%StackedBar" becomes "100% Stacked Bar"
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandSelectChart.SetDefaultItems">
            <summary>
            Loads text and description from resource. Format them using chartTypeName
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.Commands.CommandToggleDataLabels">
            <summary>
            Implements ToggleLegend chart command type.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandToggleDataLabels.#ctor">
            <summary>
            Initializes new instance of CommandToggleLegend class
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandToggleDataLabels.IsSupportState">
            <summary>
            Returns true if this command support enable/disable state
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandToggleDataLabels.GetToggleState(Dundas.Olap.WebUIControls.Command,System.Object,System.String)">
            <summary>
            Check command togle state against object context.
            </summary>
            <param name="cmd">Command to check</param>
            <param name="context">Object context</param>
            <param name="parameters">additional parameters</param>
            <returns>True if command is in toggle state</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandToggleDataLabels.Execute(Dundas.Olap.WebUIControls.Command,System.Object,System.String)">
            <summary>
            Executes this command.
            </summary>
            <param name="cmd">The original <see cref="T:Dundas.Olap.WebUIControls.Command"/> object which invoke this call</param>
            <param name="selectedObject">The context object which command to apply. 
            It can be array of objects.</param>
            <param name="parameters">Additional parameters for execution</param>
            <returns>CommandResult which contain error status and message</returns>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.Commands.CommandSelectPalette">
            <summary>
            Implements SelectPaletteXXXXX commands
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Commands.CommandSelectPalette.colorPalette">
            <summary>
            The ChartAppearanceStyle of the command
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Commands.CommandSelectPalette.colorPaletteName">
            <summary>
            string used for evaluating name and description
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandSelectPalette.#ctor(Dundas.Olap.WebUIControls.ChartCommandType)">
            <summary>
            Initializes new instance of CommandSelectPalette;
            </summary>
            <param name="type">One of SelectPaletteXXXX command types</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandSelectPalette.EvalColorPaletteName">
            <summary>
            Build colorPalette string and colorPalette type.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandSelectPalette.SetDefaultItems">
            <summary>
            Setups the name and desctiption of the command
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandSelectPalette.GetCommandIType">
            <summary>
            Gets defined  <see cref="T:Dundas.Olap.WebUIControls.CommandInterfaceType"/> of this command executor
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandSelectPalette.GetCommandPopupStyle">
            <summary>
            Gets defined  <see cref="T:Dundas.Olap.WebUIControls.CommandPopupStyle"/> of this command executor.
            Default is Menu.
            </summary>
            <returns>The command popup style</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandSelectPalette.GetSubCommandTypes">
            <summary>
            Gets array of ChartCommandType which represents default sub commands.
            </summary>
            <returns>Array of ChartCommandType</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandSelectPalette.Execute(Dundas.Olap.WebUIControls.Command,System.Object,System.String)">
            <summary>
            Executes a command.
            </summary>
            <param name="cmd">The original <see cref="T:Dundas.Olap.WebUIControls.Command"/> object which invoke this call</param>
            <param name="selectedObject">The context object which command to apply. It can be array of objects.</param>
            <param name="parameters">Parameters for additional tunning of the execution</param>
            <returns>The command result</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandSelectPalette.ResetPalette(Dundas.Olap.WebUIControls.Chart)">
            <summary>
            Implements ChartAppearanceStyle.Current
            </summary>
            <param name="chart">Chart to reset appearance</param>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.Commands.CommandAnnotation">
            <summary>
            Implements AnnotattionXXX chart command types
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Commands.CommandAnnotation.annotattionName">
            <summary>
            The name of annotattion type
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandAnnotation.#ctor(Dundas.Olap.WebUIControls.ChartCommandType)">
            <summary>
            Initialize new instance of CommandAnnotation class
            </summary>
            <param name="commandType">One of AnnotattionXXX command types</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandAnnotation.EvalAnnotattionName">
            <summary>
            Extract annotation name from command type: "AddBorder3DAnnotation" = "Border 3D Annotation"
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandAnnotation.IsSupportState">
            <summary>
            Returns true if this command support enable/disable state
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandAnnotation.GetEnableState(Dundas.Olap.WebUIControls.Command,System.Object,System.String)">
            <summary>
            Check command enable state against object context.
            </summary>
            <param name="cmd">Command to check</param>
            <param name="context">Object context</param>
            <param name="parameters"></param>
            <returns>True if command is in toggle state</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandAnnotation.GetCommandIType">
            <summary>
            Gets the <see cref="T:Dundas.Olap.WebUIControls.CommandInterfaceType"/> which 
            if command is empty and do nothing - ( <see cref="F:Dundas.Olap.WebUIControls.CommandInterfaceType.Container"/> ) or 
            executable -( <see cref="F:Dundas.Olap.WebUIControls.CommandInterfaceType.Executable"/> ) or both
            ( <see cref="F:Dundas.Olap.WebUIControls.CommandInterfaceType.Mixed"/> ).
            The AddAnnotationGroup command type returns Mixed.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandAnnotation.GetCommandPopupStyle">
            <summary>
            Gets default CommandPopupStyle ( menu for Annotation Group)
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandAnnotation.GetSubCommandTypes">
            <summary>
            Gets array of ChartCommandType which represents default sub commands.
            </summary>
            <returns>Array of ChartCommandType</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandAnnotation.SetDefaultItems">
            <summary>
            Setups the name and desctiption of the command
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandAnnotation.GetImageName">
            <summary>
            Generates the image (icon ) resource name
            </summary>
            <returns></returns>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.Commands.CommandAnnotationFrontBack">
            <summary>
            Implements "SendToBack and BringToFront" commands.
            Note that this command support annotattions and series too.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandAnnotationFrontBack.#ctor(Dundas.Olap.WebUIControls.ChartCommandType)">
            <summary>
            Initializes new instance of CommandAnnotationFrontBack class;
            </summary>
            <param name="type">SendToBack ot BringToFront command types</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandAnnotationFrontBack.GetSupportedElements">
            <summary>
            Returns set of supported elements of this command
            </summary>
            <returns>Returns set of supported elements of this command</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandAnnotationFrontBack.IsSupportState">
            <summary>
            Returns true if this command support enable/disable state
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandAnnotationFrontBack.GetEnableState(Dundas.Olap.WebUIControls.Command,System.Object,System.String)">
            <summary>
            Check command enable state against object context.
            </summary>
            <param name="cmd">Command to check</param>
            <param name="context">Object context</param>
            <param name="parameters">Object context</param>
            <returns>True if command is in toggle state</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandAnnotationFrontBack.Execute(Dundas.Olap.WebUIControls.Command,System.Object,System.String)">
            <summary>
            Executes this command.
            </summary>
            <param name="cmd">The original <see cref="T:Dundas.Olap.WebUIControls.Command"/> object which invoke this call</param>
            <param name="selectedObject">The context object which command to apply. 
            It can be array of objects.</param>
            <param name="parameters">Additional parameters for execution</param>
            <returns>CommandResult which contain error status and message</returns>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.Commands.CommandDelete">
            <summary>
            Implemens Delete command type
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandDelete.#ctor">
            <summary>
            Initializes new instance of CommandDelete class
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandDelete.GetSupportedElements">
            <summary>
            Returns set of supported elements of this command
            </summary>
            <returns>Returns set of supported elements of this command</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandDelete.IsSupportState">
            <summary>
            Returns true if this command support enable/disable state
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandDelete.GetEnableState(Dundas.Olap.WebUIControls.Command,System.Object,System.String)">
            <summary>
            Check command enable state against object context.
            </summary>
            <param name="cmd">Command to check</param>
            <param name="context">Object context</param>
            <param name="parameters"></param>
            <returns>True if command is in toggle state</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandDelete.Execute(Dundas.Olap.WebUIControls.Command,System.Object,System.String)">
            <summary>
            Executes this command.
            </summary>
            <param name="cmd">The original <see cref="T:Dundas.Olap.WebUIControls.Command"/> object which invoke this call</param>
            <param name="selectedObject">The context object which command to apply. 
            It can be array of objects.</param>
            <param name="parameters">Additional parameters for execution</param>
            <returns>CommandResult which contain error status and message</returns>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.Commands.CommandAxes">
            <summary>
            Implements AxesXXXX command types.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandAxes.#ctor(Dundas.Olap.WebUIControls.ChartCommandType)">
            <summary>
            Initializes new instance of CommandAxes class
            </summary>
            <param name="type"></param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandAxes.GetSupportedElements">
            <summary>
            Returns set of supported elements of this command
            </summary>
            <returns>Returns set of supported elements of this command</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandAxes.IsSupportState">
            <summary>
            Returns true if this command support enable/disable state
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandAxes.GetEnableState(Dundas.Olap.WebUIControls.Command,System.Object,System.String)">
            <summary>
            Check command enable state against object context.
            </summary>
            <param name="cmd">Command to check</param>
            <param name="context">Object context</param>
            <param name="parameters"></param>
            <returns>True if command is in toggle state</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandAxes.GetToggleState(Dundas.Olap.WebUIControls.Command,System.Object,System.String)">
            <summary>
            Check command togle state against object context.
            </summary>
            <param name="cmd">Command to check</param>
            <param name="context">Object context</param>
            <param name="parameters"></param>
            <returns>True if command is in toggle state</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandAxes.Execute(Dundas.Olap.WebUIControls.Command,System.Object,System.String)">
            <summary>
            Executes this command.
            </summary>
            <param name="cmd">The original <see cref="T:Dundas.Olap.WebUIControls.Command"/> object which invoke this call</param>
            <param name="selectedObject">The context object which command to apply. 
            It can be array of objects.</param>
            <param name="parameters">Additional parameters for execution</param>
            <returns>CommandResult which contain error status and message</returns>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.Commands.CommandFinancialIndicators">
            <summary>
            Implements FinancialIndicatorsXXX command types.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Commands.CommandFinancialIndicators.formulaName">
            <summary>
            the formula name which represents this command
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Commands.CommandFinancialIndicators._frmXml">
            <summary>
            XmlDocument cache wich holds formula information
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandFinancialIndicators.#ctor(Dundas.Olap.WebUIControls.ChartCommandType)">
            <summary>
            Initializes new instance of CommandFinancialIndicators
            </summary>
            <param name="type">One of FinancialIndicatorsXXX types</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandFinancialIndicators.EvalName">
            <summary>
            Extract formula name from command type
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandFinancialIndicators.GetCommandIType">
            <summary>
            Gets the <see cref="T:Dundas.Olap.WebUIControls.CommandInterfaceType"/> which 
            if command is empty and do nothing - ( <see cref="F:Dundas.Olap.WebUIControls.CommandInterfaceType.Container"/> ) or 
            executable -( <see cref="F:Dundas.Olap.WebUIControls.CommandInterfaceType.Executable"/> ) or both
            ( <see cref="F:Dundas.Olap.WebUIControls.CommandInterfaceType.Mixed"/> ).
            The AddAnnotationGroup command type returns Mixed.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandFinancialIndicators.GetCommandPopupStyle">
            <summary>
            Gets default CommandPopupStyle ( menu for FinancialIndicatorsGroup Group)
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandFinancialIndicators.GetSubCommandTypes">
            <summary>
            Gets array of ChartCommandType which represents default sub commands.
            </summary>
            <returns>Array of ChartCommandType</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandFinancialIndicators.SetDefaultItems">
            <summary>
            Reads object fields from resources
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandFinancialIndicators.GetImageName">
            <summary>
            Gets image name registered in Chart.NamedImageCollection 
            or dynamicaly loaded from resources
            </summary>
            <returns>Formated image name</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandFinancialIndicators.GetFormulaDisplayText(Dundas.Olap.WebUIControls.ChartCommandType)">
            <summary>
            Returns string which is used to find display text in resource
            </summary>
            <param name="commandType">The command type</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandFinancialIndicators.GetFormulaDescriptionText(Dundas.Olap.WebUIControls.ChartCommandType)">
            <summary>
            Returns string which is used to find description text in resource
            </summary>
            <param name="commandType">The command type</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandFinancialIndicators.GetFormulaShortText(Dundas.Olap.WebUIControls.ChartCommandType)">
            <summary>
            Returns string which is used to find legend text in resource
            </summary>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandFinancialIndicators.GetXmlData">
            <summary>
            Gets the xml resource info ( see formulas.xml in the project);
            </summary>
            <returns>The cached XML document</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandFinancialIndicators.ParseSeriesNames(System.String)">
            <summary>
            Extracts series names from string
            </summary>
            <param name="outputSeries">String with pattern "series1:Y,series2:Y,...</param>
            <returns>String array with series names</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandFinancialIndicators.GetFormulaName">
            <summary>
            Gets the formula name to seek in XML document
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandFinancialIndicators.GetNeededYDepth">
            <summary>
            Gets the needed Y dimension for this type formula
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandFinancialIndicators.GetFormulaName(Dundas.Olap.WebUIControls.ChartCommandType)">
            <summary>
            Convert command type to text which appears in menus
            </summary>
            <param name="commandType"></param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandFinancialIndicators.GetNeededYDepth(Dundas.Olap.WebUIControls.ChartCommandType)">
            <summary>
            Returns how much Y points depth is needed to calculate formula
            </summary>
            <param name="commandType">The command type which MUST represent formula</param>
            <returns>How much Y points depth is needed to calculate formula. -1 if information is not found</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandFinancialIndicators.SetupSeries(Dundas.Olap.WebUIControls.Chart,System.String,System.String,Dundas.Olap.WebUIControls.SeriesFormulaRegistry,System.String,System.Drawing.Color,System.Int32,System.String@)">
            <summary>
            Calculates formulas, adds new chart series and areas if needed.
            </summary>
            <param name="chart">The chart component for series to be added</param>
            <param name="formulaName">The formula name</param>
            <param name="inputSeriesName">the input series name</param>
            <param name="reg">The SeriesFormulaRegistry</param>
            <param name="externalParams">the outputs custom parameters</param>
            <param name="lineWidth">Shart line width, default 3</param>
            <param name="seriesColor">Series color</param>
            <param name="formulaParam">generated parameters for new series</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandFinancialIndicators.IsSupportState">
            <summary>
            Returns true if this command support enable/disable state
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandFinancialIndicators.GetEnableState(Dundas.Olap.WebUIControls.Command,System.Object,System.String)">
            <summary>
            Check command enable state against object context.
            </summary>
            <param name="cmd">Command to check</param>
            <param name="context">Object context</param>
            <param name="parameters"></param>
            <returns>True if command is in toggle state</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandFinancialIndicators.GetFormulaAttrubutes(Dundas.Olap.WebUIControls.SeriesFormulaRegistry,Dundas.Olap.WebUIControls.Series,System.IO.Stream)">
            <summary>
            Saves formula series appearance into stream
            </summary>
            <param name="reg">The formula registry</param>
            <param name="series">series to save</param>
            <param name="stream">stream to save</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandFinancialIndicators.ApplyFormulaAttrubutes(Dundas.Olap.WebUIControls.SeriesFormulaRegistry,Dundas.Olap.WebUIControls.Series,System.IO.Stream)">
            <summary>
            Restore series appearance from stream
            </summary>
            <param name="reg">The formula registry</param>
            <param name="series">The series which will be restored</param>
            <param name="stream">Stream with appearance information</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandFinancialIndicators.CanApplyFormulaToSeries(Dundas.Olap.WebUIControls.Series)">
            <summary>
            Checks if formula can be applied to the series.
            </summary>
            <param name="series">Series to check.</param>
            <returns>True if formula can be applied.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandFinancialIndicators.Execute(Dundas.Olap.WebUIControls.Command,System.Object,System.String)">
            <summary>
            Executes this command.
            </summary>
            <param name="cmd">The original <see cref="T:Dundas.Olap.WebUIControls.Command"/> object which invoke this call</param>
            <param name="selectedObject">The context object which command to apply. 
            It can be array of objects.</param>
            <param name="parameters">Additional parameters for execution</param>
            <returns>CommandResult which contain error status and message</returns>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.Commands.CommandErrorBarFinancialIndicator">
            <summary>
            Implements ErrorBarFinancialIndicator command type.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandErrorBarFinancialIndicator.#ctor">
            <summary>
            Inittialize new instance of CommandErrorBarFinancialIndicator class
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandErrorBarFinancialIndicator.Execute(Dundas.Olap.WebUIControls.Command,System.Object,System.String)">
            <summary>
            Executes this command.
            </summary>
            <param name="cmd">The original <see cref="T:Dundas.Olap.WebUIControls.Command"/> object which invoke this call</param>
            <param name="selectedObject">The context object which command to apply. 
            It can be array of objects.</param>
            <param name="parameters">Additional parameters for execution</param>
            <returns>CommandResult which contain error status and message</returns>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.Commands.ChartAppearanceStyleHelper">
            <summary>
            Helper class used to set chart appearance styles.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.ChartAppearanceStyleHelper.GetStyleImage(Dundas.Olap.WebUIControls.Chart,Dundas.Olap.WebUIControls.Commands.ChartAppearanceStyle)">
            <summary>
            Applies provided style to the chart.
            </summary>
            <param name="chart">Reference to the chart.</param>
            <param name="style">Style.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.ChartAppearanceStyleHelper.ApplyStyle(Dundas.Olap.WebUIControls.Chart,Dundas.Olap.WebUIControls.Commands.ChartAppearanceStyle)">
            <summary>
            Applies provided style to the chart.
            </summary>
            <param name="chart">Reference to the chart.</param>
            <param name="style">Style.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.ChartAppearanceStyleHelper.ApplyAcidWashStyle(Dundas.Olap.WebUIControls.Chart)">
            <summary>
            Applies AcidWash style - new one.
            </summary>
            <param name="chart"></param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.ChartAppearanceStyleHelper.ApplyArtDecoStyle(Dundas.Olap.WebUIControls.Chart)">
            <summary>
            Applies ArtDeco style - new one.
            </summary>
            <param name="chart"></param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.ChartAppearanceStyleHelper.ApplyEarthTonesStyle(Dundas.Olap.WebUIControls.Chart)">
            <summary>
            Applyes EarthTonesStyle. - new one applied
            </summary>
            <param name="chart">Chart to apply appearance</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.ChartAppearanceStyleHelper.ApplyLightSteelBlueStyle(Dundas.Olap.WebUIControls.Chart)">
            <summary>
            Applyes LightSteelBlueStyle. - no chanegs
            </summary>
            <param name="chart">Chart to apply appearance</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.ChartAppearanceStyleHelper.ApplyGrayScaleStyle(Dundas.Olap.WebUIControls.Chart)">
            <summary>
            Applyes GrayScaleStyle. - no changes
            </summary>
            <param name="chart">Chart to apply appearance</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.ChartAppearanceStyleHelper.ApplySemiTransparentStyle(Dundas.Olap.WebUIControls.Chart)">
            <summary>
            Applyes SemiTransparentStyle. - new implemented
            </summary>
            <param name="chart">Chart to apply appearance</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.ChartAppearanceStyleHelper.ApplyExcelLikeStyle(Dundas.Olap.WebUIControls.Chart)">
            <summary>
            Applyes ExcelLikeStyle. - deprecated?
            </summary>
            <param name="chart">Chart to apply appearance</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.ChartAppearanceStyleHelper.ApplyLightBeigeStyle(Dundas.Olap.WebUIControls.Chart)">
            <summary>
            Applyes LightBeigeStyle. - new implemented
            </summary>
            <param name="chart">Chart to apply appearance</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.ChartAppearanceStyleHelper.ApplyBerryStyle(Dundas.Olap.WebUIControls.Chart)">
            <summary>
            Applyes BerryStyle - new implemented.
            </summary>
            <param name="chart">Chart to apply appearance</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.ChartAppearanceStyleHelper.ApplyChocolateStyle(Dundas.Olap.WebUIControls.Chart)">
            <summary>
            Applyes ChocolateStyle. - implemented new
            </summary>
            <param name="chart">Chart to apply appearance</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.ChartAppearanceStyleHelper.ApplyFireStyle(Dundas.Olap.WebUIControls.Chart)">
            <summary>
            Applyes FireStyle. - new implemented
            </summary>
            <param name="chart">Chart to apply appearance</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.ChartAppearanceStyleHelper.ApplyGreenBlueStyle(Dundas.Olap.WebUIControls.Chart)">
            <summary>
            Applyes GreenBlueStyle. new implemented
            </summary>
            <param name="chart">Chart to apply appearance</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.ChartAppearanceStyleHelper.ApplyDundasStyle(Dundas.Olap.WebUIControls.Chart)">
            <summary>
            Applyes Dundas Style. - unchanged
            </summary>
            <param name="chart">Chart to apply appearance</param>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.Commands.ChartAppearanceStyle">
            <summary>
            Chart appearance styles
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.ChartTypes.StockOpenCloseMarkStyle">
            <summary>
            Style of the Open-Close marks in the stock chart
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.ChartTypes.StockOpenCloseMarkStyle.Line">
            <summary>
            Line
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.ChartTypes.StockOpenCloseMarkStyle.Triangle">
            <summary>
            Triangle
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.ChartTypes.StockOpenCloseMarkStyle.CandleStick">
            <summary>
            CandleStick. Color of the bar depends if Open value was bigger than Close value.
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.ChartTypes.CandleStickChart">
            <summary>
            CandleStick class provides chart unique name and changes the marking 
            style in the StockChart class to StockOpenCloseMarkStyle.CandleStick.
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.ChartTypes.StockChart">
            <summary>
            StockChart class provides 2D/3D drawing and hit testing 
            functionality for the Stock and CandleStick charts.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.ChartTypes.StockChart.vAxis">
            <summary>
            Vertical axis
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.ChartTypes.StockChart.hAxis">
            <summary>
            Horizontal axis
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.ChartTypes.StockChart.openCloseStyle">
            <summary>
            Default open-close style
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.ChartTypes.StockChart.forceCandleStick">
            <summary>
            Indicates that only candle-stick type of the open-close marks should be used
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.StockChart.#ctor">
            <summary>
            Stock chart constructor.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.StockChart.#ctor(Dundas.Charting.WebControl.ChartTypes.StockOpenCloseMarkStyle)">
            <summary>
            Stock chart constructor.
            </summary>
            <param name="style">Open-close marks default style.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.StockChart.GetLegendImageStyle(Dundas.Olap.WebUIControls.Series)">
            <summary>
            How to draw series/points in legend:
            Filled rectangle, Line or Marker
            </summary>
            <param name="series">Legend item series.</param>
            <returns>Legend item style.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.StockChart.GetImage(Dundas.Charting.WebControl.ChartTypes.ChartTypeRegistry)">
            <summary>
            Gets chart type image.
            </summary>
            <param name="registry">Chart types registry object.</param>
            <returns>Chart type image.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.StockChart.Paint(Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.CommonElements,Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.Series)">
            <summary>
            Paint stock chart.
            </summary>
            <param name="graph">The Chart Graphics object.</param>
            <param name="common">The Common elements object.</param>
            <param name="area">Chart area for this chart.</param>
            <param name="seriesToDraw">Chart series to draw.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.StockChart.ProcessChartType(System.Boolean,Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.CommonElements,Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.Series)">
            <summary>
            This method recalculates size of the bars. This method is used 
            from Paint or Select method.
            </summary>
            <param name="selection">If True selection mode is active, otherwise paint mode is active.</param>
            <param name="graph">The Chart Graphics object.</param>
            <param name="common">The Common elements object.</param>
            <param name="area">Chart area for this chart.</param>
            <param name="seriesToDraw">Chart series to draw.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.StockChart.DrawOpenCloseMarks(Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.Series,Dundas.Olap.WebUIControls.DataPoint,System.Single,System.Single)">
            <summary>
            Draws stock chart open-close marks depending on selected style.
            </summary>
            <param name="graph">Chart graphics object.</param>
            <param name="area">Chart area.</param>
            <param name="ser">Data point series.</param>
            <param name="point">Data point to draw.</param>
            <param name="xPosition">X position.</param>
            <param name="width">Point width.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.StockChart.DrawLabel(Dundas.Olap.WebUIControls.CommonElements,Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.Series,Dundas.Olap.WebUIControls.DataPoint,System.Drawing.PointF,System.Int32)">
            <summary>
            Draws stock chart data point label.
            </summary>
            <param name="common">The Common elements object</param>
            <param name="area">Chart area for this chart</param>
            <param name="graph">Chart graphics object.</param>
            <param name="ser">Data point series.</param>
            <param name="point">Data point to draw.</param>
            <param name="position">Label position.</param>
            <param name="pointIndex">Data point index in the series.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.StockChart.ProcessChartType3D(System.Boolean,Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.CommonElements,Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.Series)">
            <summary>
            This method recalculates size of the bars. This method is used 
            from Paint or Select method.
            </summary>
            <param name="selection">If True selection mode is active, otherwise paint mode is active.</param>
            <param name="graph">The Chart Graphics object.</param>
            <param name="common">The Common elements object.</param>
            <param name="area">Chart area for this chart.</param>
            <param name="seriesToDraw">Chart series to draw.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.StockChart.DrawOpenCloseMarks3D(Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.Series,Dundas.Olap.WebUIControls.DataPoint,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws stock chart open-close marks depending on selected style.
            </summary>
            <param name="graph">Chart graphics object.</param>
            <param name="area">Chart area.</param>
            <param name="ser">Data point series.</param>
            <param name="point">Data point to draw.</param>
            <param name="xPosition">X position.</param>
            <param name="width">Point width.</param>
            <param name="zPosition">Series Z position.</param>
            <param name="depth">Series depth.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.StockChart.GetYValue(Dundas.Olap.WebUIControls.CommonElements,Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.Series,Dundas.Olap.WebUIControls.DataPoint,System.Int32,System.Int32)">
            <summary>
            Helper function, which returns the Y value of the point.
            </summary>
            <param name="common">Chart common elements.</param>
            <param name="area">Chart area the series belongs to.</param>
            <param name="series">Sereis of the point.</param>
            <param name="point">Point object.</param>
            <param name="pointIndex">Index of the point.</param>
            <param name="yValueIndex">Index of the Y value to get.</param>
            <returns>Y value of the point.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.StockChart.AddSmartLabelMarkerPositions(Dundas.Olap.WebUIControls.CommonElements,Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.Series,System.Collections.ArrayList)">
            <summary>
            Adds markers position to the list. Used to check SmartLabels overlapping.
            </summary>
            <param name="common">Common chart elements.</param>
            <param name="area">Chart area.</param>
            <param name="series">Series values to be used.</param>
            <param name="list">List to add to.</param>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.StockChart.Name">
            <summary>
            Chart type name
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.StockChart.Stacked">
            <summary>
            True if chart type is stacked
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.StockChart.SupportStackedGroups">
            <summary>
            True if stacked chart type supports groups
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.StockChart.StackSign">
            <summary>
            True if stacked chart type should draw separately positive and 
            negative data points ( Bar and column Stacked types ).
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.StockChart.RequireAxes">
            <summary>
            True if chart type supports axeses
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.StockChart.SecondYScale">
            <summary>
            Chart type with two y values used for scale ( bubble chart type )
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.StockChart.CircularChartArea">
            <summary>
            True if chart type requires circular chart area.
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.StockChart.SupportLogarithmicAxes">
            <summary>
            True if chart type supports logarithmic axes
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.StockChart.SwitchValueAxes">
            <summary>
            True if chart type requires to switch the value (Y) axes position
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.StockChart.SideBySideSeries">
            <summary>
            True if chart series can be placed side-by-side.
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.StockChart.DataPointsInLegend">
            <summary>
            True if each data point of a chart must be represented in the legend
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.StockChart.ZeroCrossing">
            <summary>
            If the crossing value is auto Crossing value should be 
            automatically set to zero for some chart 
            types (Bar, column, area etc.)
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.StockChart.ApplyPaletteColorsToPoints">
            <summary>
            True if palette colors should be applied for each data paoint.
            Otherwise the color is applied to the series.
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.StockChart.ExtraYValuesConnectedToYAxis">
            <summary>
            Indicates that extra Y values are connected to the scale of the Y axis
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.StockChart.HundredPercent">
            <summary>
            Indicates that it's a hundredred percent chart.
            Axis scale from 0 to 100 percent should be used.
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.StockChart.HundredPercentSupportNegative">
            <summary>
            Indicates that it's a hundredred percent chart.
            Axis scale from 0 to 100 percent should be used.
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.StockChart.YValuesPerPoint">
            <summary>
            Number of supported Y value(s) per point 
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.CandleStickChart.#ctor">
            <summary>
            CandleStick chart constructor.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.CandleStickChart.GetImage(Dundas.Charting.WebControl.ChartTypes.ChartTypeRegistry)">
            <summary>
            Gets chart type image.
            </summary>
            <param name="registry">Chart types registry object.</param>
            <returns>Chart type image.</returns>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.CandleStickChart.Name">
            <summary>
            Chart type name
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.ChartTypes.SplineRangeChart">
            <summary>
            SplineRangeChart class extends the RangeChart class by 
            providing a different initial tension for the lines.
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.ChartTypes.RangeChart">
            <summary>
            RangeChart class provides 2D/3D drawing and hit testing 
            functionality for the Range and SplineRange charts. The 
            only difference of the SplineRange chart is the default 
            tension of the line.
            
            SplineChart base class provides most of the functionality 
            like drawing lines, labels and markers.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.ChartTypes.RangeChart.gradientFill">
            <summary>
            Fields used to fill area with gradient 
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.ChartTypes.RangeChart.areaBottomPath">
            <summary>
            Shape of the low values
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.ChartTypes.RangeChart.areaPath">
            <summary>
            Coordinates of the area path
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.ChartTypes.RangeChart.series">
            <summary>
            Reference to the current series object
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.ChartTypes.RangeChart.lowPoints">
            <summary>
            Array of low line values
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.ChartTypes.RangeChart.indexedBasedX">
            <summary>
            Check if series are indexed based
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.ChartTypes.RangeChart.thirdPointY2Value">
            <summary>
            Secondary Y coordinate that should be used for bottom line of the range (left point)
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.ChartTypes.RangeChart.fourthPointY2Value">
            <summary>
            Secondary Y coordinate that should be used for bottom line of the range (right point)
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.RangeChart.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.RangeChart.GetLegendImageStyle(Dundas.Olap.WebUIControls.Series)">
            <summary>
            How to draw series/points in legend:
            Filled rectangle, Line or Marker
            </summary>
            <param name="series">Legend item series.</param>
            <returns>Legend item style.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.RangeChart.GetImage(Dundas.Charting.WebControl.ChartTypes.ChartTypeRegistry)">
            <summary>
            Gets chart type image.
            </summary>
            <param name="registry">Chart types registry object.</param>
            <returns>Chart type image.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.RangeChart.GetDefaultTension">
            <summary>
            Gets default line tension.
            </summary>
            <returns>Line tension.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.RangeChart.IsLineTensionSupported">
            <summary>
            Checks if line tension is supported by the chart type.
            </summary>
            <returns>True if line tension is supported.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.RangeChart.FillLastSeriesGradient(Dundas.Olap.WebUIControls.ChartGraphics)">
            <summary>
            Fills last series area with gradient.
            If gradient is used as a back color of the series it must be drawn 
            at the same time.
            </summary>
            <param name="graph">The Chart Graphics object.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.RangeChart.ProcessChartType(System.Boolean,Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.CommonElements,Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.Series)">
            <summary>
            This method recalculates position of the end points of lines. This method 
            is used from Paint or Select method.
            </summary>
            <param name="selection">If True selection mode is active, otherwise paint mode is active.</param>
            <param name="graph">The Chart Graphics object.</param>
            <param name="common">The Common elements object.</param>
            <param name="area">Chart area for this chart.</param>
            <param name="seriesToDraw">Chart series to draw.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.RangeChart.DrawLine(Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.CommonElements,Dundas.Olap.WebUIControls.DataPoint,Dundas.Olap.WebUIControls.Series,System.Drawing.PointF[],System.Int32,System.Single)">
            <summary>
            Override line drawing method to fill the range and draw lines.
            </summary>
            <param name="graph">Graphics object.</param>
            <param name="common">The Common elements object.</param>
            <param name="point">Point to draw the line for.</param>
            <param name="series">Point series.</param>
            <param name="points">Array of oints coordinates.</param>
            <param name="pointIndex">Index of point to draw.</param>
            <param name="tension">Line tension.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.RangeChart.Draw3DSurface(Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.Matrix3D,Dundas.Olap.WebUIControls.LightStyle,Dundas.Olap.WebUIControls.DataPoint3D,System.Single,System.Single,System.Collections.ArrayList,System.Int32,System.Int32,System.Single,Dundas.Olap.WebUIControls.DrawingOperationType,System.Single,System.Single,System.Drawing.PointF,System.Drawing.PointF,System.Boolean)">
            <summary>
            Draws a 3D surface connecting the two specified points in 2D space.
            Used to draw Line based charts.
            </summary>
            <param name="area">Chart area reference.</param>
            <param name="graph">Chart graphics.</param>
            <param name="matrix">Coordinates transformation matrix.</param>
            <param name="lightStyle">Light style (None, Simplistic, Realistic).</param>
            <param name="prevDataPointEx">Previous data point object.</param>
            <param name="positionZ">Z position of the back side of the 3D surface.</param>
            <param name="depth">Depth of the 3D surface.</param>
            <param name="points">Array of points.</param>
            <param name="pointIndex">Index of point to draw.</param>
            <param name="pointLoopIndex">Index of points loop.</param>
            <param name="tension">Line tension.</param>
            <param name="operationType">Type of operation Drawing, Calculating Path or Both</param>
            <param name="topDarkening">Darkenning scale for top surface. 0 - None.</param>
            <param name="bottomDarkening">Darkenning scale for bottom surface. 0 - None.</param>
            <param name="thirdPointPosition">Position where the third point is actually located or float.NaN if same as in "firstPoint".</param>
            <param name="fourthPointPosition">Position where the fourth point is actually located or float.NaN if same as in "secondPoint".</param>
            <param name="clippedSegment">Indicates that drawn segment is 3D clipped. Only top/bottom should be drawn.</param>
            <returns>Returns elemnt shape path if operationType parameter is set to CalcElementPath, otherwise Null.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.RangeChart.GetTopSurfaceVisibility(Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.DataPoint3D,Dundas.Olap.WebUIControls.DataPoint3D,System.Boolean,System.Single,System.Single,Dundas.Olap.WebUIControls.Matrix3D,Dundas.Olap.WebUIControls.SurfaceName@)">
            <summary>
            Gets visibility of the top surface.
            </summary>
            <param name="area">Chart area object.</param>
            <param name="firstPoint">First data point of the line.</param>
            <param name="secondPoint">Second data point of the line.</param>
            <param name="upSideDown">Indicates that Y values of the data points are below axis line.</param>
            <param name="positionZ">Z coordinate of the back side of the cube.</param>
            <param name="depth">Cube depth.</param>
            <param name="matrix">Coordinate transformation matrix.</param>
            <param name="visibleSurfaces">Surface visibility reference. Initialized with bounary cube visibility.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.RangeChart.GetBottomPointsPosition(Dundas.Olap.WebUIControls.CommonElements,Dundas.Olap.WebUIControls.ChartArea,System.Single,Dundas.Olap.WebUIControls.DataPoint3D@,Dundas.Olap.WebUIControls.DataPoint3D@,System.Drawing.PointF@,System.Drawing.PointF@)">
            <summary>
            Gets position ob the bottom points in area chart.
            </summary>
            <param name="common">Chart common elements.</param>
            <param name="area">Chart area the series belongs to.</param>
            <param name="axisPosition">Axis position.</param>
            <param name="firstPoint">First top point coordinates.</param>
            <param name="secondPoint">Second top point coordinates.</param>
            <param name="thirdPoint">Returns third bottom point coordinates.</param>
            <param name="fourthPoint">Returns fourth bottom point coordinates.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.RangeChart.Draw3DSplinePolygon(Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.ChartArea,System.Single,System.Drawing.Color,System.Drawing.Color,System.Int32,Dundas.Olap.WebUIControls.ChartDashStyle,Dundas.Olap.WebUIControls.DataPoint3D,Dundas.Olap.WebUIControls.DataPoint3D,Dundas.Olap.WebUIControls.DataPoint3D,Dundas.Olap.WebUIControls.DataPoint3D,System.Collections.ArrayList,System.Int32,System.Single,Dundas.Olap.WebUIControls.DrawingOperationType,Dundas.Olap.WebUIControls.LineSegmentType,System.Boolean)">
            <summary>
            Draws a 3D polygon defined by 4 points in 2D space.
            Top and Bottom lines are drawn as splines of specified tension.
            </summary>
            <param name="area">Chart area reference.</param>
            <param name="graph">Chart graphics.</param>
            <param name="positionZ">Z position of the back side of the 3D surface.</param>
            <param name="backColor">Color of rectangle</param>
            <param name="borderColor">Border Color</param>
            <param name="borderWidth">Border Width</param>
            <param name="borderStyle">Border Style</param>
            <param name="firstPoint">First point.</param>
            <param name="secondPoint">Second point.</param>
            <param name="thirdPoint">Third point.</param>
            <param name="fourthPoint">Fourth point.</param>
            <param name="points">Array of points.</param>
            <param name="pointIndex">Index of point to draw.</param>
            <param name="tension">Line tension.</param>
            <param name="operationType">Type of operation Drawing, Calculating Path or Both</param>
            <param name="lineSegmentType">Type of line segment. Used for step lines and splines.</param>
            <param name="forceThinBorder">Thin border will be drawn on all segments.</param>
            <returns>Returns elemnt shape path if operationType parameter is set to CalcElementPath, otherwise Null.</returns>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.RangeChart.Name">
            <summary>
            Chart type name
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.RangeChart.YValuesPerPoint">
            <summary>
            Number of supported Y value(s) per point 
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.RangeChart.ExtraYValuesConnectedToYAxis">
            <summary>
            Indicates that extra Y values are connected to the scale of the Y axis
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.SplineRangeChart.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.SplineRangeChart.GetImage(Dundas.Charting.WebControl.ChartTypes.ChartTypeRegistry)">
            <summary>
            Gets chart type image.
            </summary>
            <param name="registry">Chart types registry object.</param>
            <returns>Chart type image.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.SplineRangeChart.GetDefaultTension">
            <summary>
            Gets default line tension.
            </summary>
            <returns>Default line tension.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.SplineRangeChart.IsLineTensionSupported">
            <summary>
            Checks if line tension is supported by the chart type.
            </summary>
            <returns>True if line tension is supported.</returns>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.SplineRangeChart.Name">
            <summary>
            Chart type name
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.AnnotationGroup">
            <summary>
            <b>AnnotationGroup</b> is a class that represents an annotation group.
            </summary>
            <remarks>
            This annotation stores a collection of child annotations, and can be used 
            to manipulate annotations relative to each other.
            </remarks>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AnnotationGroup.#ctor">
            <summary>
            Default public constructor.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AnnotationGroup.Paint(Dundas.Olap.WebUIControls.Chart,Dundas.Olap.WebUIControls.ChartGraphics)">
            <summary>
            Paints an annotation object using the specified graphics.
            </summary>
            <param name="graphics">
            A <see cref="T:Dundas.Olap.WebUIControls.ChartGraphics"/> object, used to paint the annotation object.
            </param>
            <param name="chart">
            Reference to the <see cref="T:Dundas.Olap.WebUIControls.Chart"/> control.
            </param>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.AnnotationGroup.ClipToChartArea">
            <summary>
            Gets or sets the name of the chart area the annotation is clipped to.
            </summary>
            <value>
            A string that represents the name of an existing chart area.
            </value>
            <remarks>
            If a chart area name is specified the annotation will only be drawn inside the 
            plotting area of that chart area. All parts of the annotation 
            outside of the plotting area will be clipped.
            <para>
            To disable chart area clipping set this property to "NotSet", or an empty string.
            </para>
            </remarks>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.AnnotationGroup.SizeAlwaysRelative">
            <summary>
            Gets or sets a flag that specifies whether the annotation size is always 
            defined in relative chart coordinates.
            <seealso cref="P:Dundas.Olap.WebUIControls.Annotation.Width"/>
            <seealso cref="P:Dundas.Olap.WebUIControls.Annotation.Height"/>
            </summary>
            <value>
            <b>True</b> if this annotation's <see cref="P:Dundas.Olap.WebUIControls.Annotation.Width"/> and <see cref="P:Dundas.Olap.WebUIControls.Annotation.Height"/> are always
            in chart relative coordinates, <b>false</b> otherwise.
            </value>
            <remarks>
            An annotation's width and height may be set in chart relative or axes coordinates. 
            By default relative chart coordinates are used. To use axes coordinates for size 
            set this property to <b>false</b> and either anchor the annotation to 
            a data point or set the <see cref="P:Dundas.Olap.WebUIControls.Annotation.AxisX"/> or <see cref="P:Dundas.Olap.WebUIControls.Annotation.AxisY"/> properties.
            </remarks>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.AnnotationGroup.Selected">
            <summary>
            Gets or sets a flag that specifies whether the annotation is selected.
            <seealso cref="P:Dundas.Olap.WebUIControls.Annotation.AllowSelecting"/>
            </summary>
            <value>
            <b>True</b> if this annotation is selected, <b>false</b> otherwise.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.AnnotationGroup.Visible">
            <summary>
            Gets or sets a flag that specifies whether the annotation is visible.
            </summary>
            <value>
            <b>True</b> if this annotation is visible, <b>false</b> otherwise.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.AnnotationGroup.Alignment">
            <summary>
            Gets or sets an annotation's content alignment.
            </summary>
            <value>
            A <see cref="T:System.Drawing.ContentAlignment"/> value that represents the annotation's content alignment.
            </value>
            <remarks>
            This property is used to align text in <see cref="T:Dundas.Olap.WebUIControls.TextAnnotation"/>, <see cref="T:Dundas.Olap.WebUIControls.RectangleAnnotation"/>,  
            <see cref="T:Dundas.Olap.WebUIControls.EllipseAnnotation"/> and <see cref="T:Dundas.Olap.WebUIControls.CalloutAnnotation"/> objects, and to align 
            a non-scaled image inside an <see cref="T:Dundas.Olap.WebUIControls.ImageAnnotation"/> object.
            </remarks>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.AnnotationGroup.TextColor">
            <summary>
            Gets or sets an annotation's text color.
            <seealso cref="P:Dundas.Olap.WebUIControls.AnnotationGroup.TextFont"/>
            <seealso cref="P:Dundas.Olap.WebUIControls.Annotation.TextStyle"/>
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color"/> value used to draw the annotation text.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.AnnotationGroup.TextFont">
            <summary>
            Gets or sets an annotation's text font.
            <seealso cref="P:Dundas.Olap.WebUIControls.AnnotationGroup.TextColor"/>
            <seealso cref="P:Dundas.Olap.WebUIControls.Annotation.TextStyle"/>
            </summary>
            <value>
            A <see cref="T:System.Drawing.Font"/> object used to draw the annotation text.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.AnnotationGroup.TextStyle">
            <summary>
            Gets or sets an annotation's text style.
            <seealso cref="P:Dundas.Olap.WebUIControls.AnnotationGroup.TextFont"/>
            <seealso cref="P:Dundas.Olap.WebUIControls.AnnotationGroup.TextColor"/>
            </summary>
            <value>
            A <see cref="P:Dundas.Olap.WebUIControls.AnnotationGroup.TextStyle"/> value used to draw an annotation's text.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.AnnotationGroup.LineColor">
            <summary>
            Gets or sets an annotation's line color.
            <seealso cref="P:Dundas.Olap.WebUIControls.AnnotationGroup.LineWidth"/>
            <seealso cref="P:Dundas.Olap.WebUIControls.AnnotationGroup.LineStyle"/>
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color"/> value used to draw an annotation line.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.AnnotationGroup.LineWidth">
            <summary>
            Gets or sets an annotation's line width.
            <seealso cref="P:Dundas.Olap.WebUIControls.AnnotationGroup.LineColor"/>
            <seealso cref="P:Dundas.Olap.WebUIControls.AnnotationGroup.LineStyle"/>
            </summary>
            <value>
            An integer value defining the annotation line width in pixels.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.AnnotationGroup.LineStyle">
            <summary>
            Gets or sets an annotation's line style.
            <seealso cref="P:Dundas.Olap.WebUIControls.AnnotationGroup.LineWidth"/>
            <seealso cref="P:Dundas.Olap.WebUIControls.AnnotationGroup.LineColor"/>
            </summary>
            <value>
            A <see cref="T:Dundas.Olap.WebUIControls.ChartDashStyle"/> value used to draw an annotation line.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.AnnotationGroup.BackColor">
            <summary>
            Gets or sets an annotation's background color.
            <seealso cref="P:Dundas.Olap.WebUIControls.AnnotationGroup.BackGradientEndColor"/>
            <seealso cref="P:Dundas.Olap.WebUIControls.AnnotationGroup.BackHatchStyle"/>
            <seealso cref="P:Dundas.Olap.WebUIControls.AnnotationGroup.BackGradientType"/>
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color"/> value used to draw an annotation's background.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.AnnotationGroup.BackHatchStyle">
            <summary>
            Gets or sets an annotation's background hatch style.
            <seealso cref="P:Dundas.Olap.WebUIControls.AnnotationGroup.BackGradientEndColor"/>
            <seealso cref="P:Dundas.Olap.WebUIControls.AnnotationGroup.BackColor"/>
            <seealso cref="P:Dundas.Olap.WebUIControls.AnnotationGroup.BackGradientType"/>
            </summary>
            <value>
            A <see cref="T:Dundas.Olap.WebUIControls.ChartHatchStyle"/> value used to draw an annotation's background.
            </value>
            <remarks>
            Two colors are used to draw the hatching, <see cref="P:Dundas.Olap.WebUIControls.AnnotationGroup.BackColor"/> and <see cref="P:Dundas.Olap.WebUIControls.AnnotationGroup.BackGradientEndColor"/>.
            </remarks>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.AnnotationGroup.BackGradientType">
            <summary>
            Gets or sets an annotation's background gradient style.
            <seealso cref="P:Dundas.Olap.WebUIControls.AnnotationGroup.BackGradientEndColor"/>
            <seealso cref="P:Dundas.Olap.WebUIControls.AnnotationGroup.BackColor"/>
            <seealso cref="P:Dundas.Olap.WebUIControls.AnnotationGroup.BackHatchStyle"/>
            </summary>
            <value>
            A <see cref="T:Dundas.Olap.WebUIControls.GradientType"/> value used to draw an annotation's background.
            </value>
            <remarks>
            Two colors are used to draw the gradient, <see cref="P:Dundas.Olap.WebUIControls.AnnotationGroup.BackColor"/> and <see cref="P:Dundas.Olap.WebUIControls.AnnotationGroup.BackGradientEndColor"/>.
            </remarks>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.AnnotationGroup.BackGradientEndColor">
            <summary>
            Gets or sets an annotation background's secondary color.
            <seealso cref="P:Dundas.Olap.WebUIControls.AnnotationGroup.BackColor"/>
            <seealso cref="P:Dundas.Olap.WebUIControls.AnnotationGroup.BackHatchStyle"/>
            <seealso cref="P:Dundas.Olap.WebUIControls.AnnotationGroup.BackGradientType"/>
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color"/> value used to draw the background with 
            hatching or gradient fill.
            </value>
            <remarks>
            This color is used with <see cref="P:Dundas.Olap.WebUIControls.AnnotationGroup.BackColor"/> when <see cref="P:Dundas.Olap.WebUIControls.AnnotationGroup.BackHatchStyle"/> or
            <see cref="P:Dundas.Olap.WebUIControls.AnnotationGroup.BackGradientType"/> are used.
            </remarks>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.AnnotationGroup.ShadowColor">
            <summary>
            Gets or sets an annotation's shadow color.
            <seealso cref="P:Dundas.Olap.WebUIControls.AnnotationGroup.ShadowOffset"/>
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color"/> value used to draw the shadow.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.AnnotationGroup.ShadowOffset">
            <summary>
            Gets or sets an annotation's shadow size.
            <seealso cref="P:Dundas.Olap.WebUIControls.AnnotationGroup.ShadowColor"/>
            </summary>
            <value>
            An integer value that represents the shadow size.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.AnnotationGroup.Annotations">
            <summary>
            Gets the collection of annotations in the group.
            </summary>
            <value>
            An <see cref="T:Dundas.Olap.WebUIControls.AnnotationCollection"/> object.
            </value>
            <remarks>
            Note that the coordinates of all annotations in the group are relative to the 
            group annotation.
            </remarks>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.AnnotationGroup.AnnotationType">
            <summary>
            Gets or sets annotation type name.
            </summary>
            <remarks>
            This abstract property is used to get the name of each annotation type
            (e.g. Line, Rectangle, Ellipse,...). 
            <para>
            Property is for internal use and is hidden at design and run time. Should
            not be part of the documentation.
            </para>
            </remarks>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.AnnotationGroup.SelectionPointsStyle">
            <summary>
            Gets or sets annotation selection points style.
            </summary>
            <value>
            A <see cref="P:Dundas.Olap.WebUIControls.AnnotationGroup.SelectionPointsStyle"/> value that represents annotation
            selection style.
            </value>
            <remarks>
            Property is for internal use and is hidden at design and run time. 
            Should not be part of the documentation.
            </remarks>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.ArrowStyle">
            <summary>
            Arrow annotation styles.
            <seealso cref="P:Dundas.Olap.WebUIControls.ArrowAnnotation.ArrowStyle"/>
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ArrowStyle.Simple">
            <summary>
            Simple arrow.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ArrowStyle.DoubleArrow">
            <summary>
            Arrow pointing in two directions.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ArrowStyle.Tailed">
            <summary>
            Arrow with a tail.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.ArrowAnnotation">
            <summary>
            <b>ArrowAnnotation</b> is a class class that represents arrow annotation.
            </summary>
            <remarks>
            Arrow annotations can be used to connect to points on the chart or highligh a
            single chart area. Different arrow styles and sizes may be aplied.
            </remarks>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ArrowAnnotation.#ctor">
            <summary>
            Default public constructor.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ArrowAnnotation.Paint(Dundas.Olap.WebUIControls.Chart,Dundas.Olap.WebUIControls.ChartGraphics)">
            <summary>
            Paints annotation object on specified graphics.
            </summary>
            <param name="graphics">
            A <see cref="T:Dundas.Olap.WebUIControls.ChartGraphics"/> used to paint annotation object.
            </param>
            <param name="chart">
            Reference to the <see cref="T:Dundas.Olap.WebUIControls.Chart"/> control.
            </param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ArrowAnnotation.GetArrowPath(Dundas.Olap.WebUIControls.ChartGraphics,System.Drawing.RectangleF)">
            <summary>
            Get arrow path for the specified annotation position
            </summary>
            <param name="graphics"></param>
            <param name="position"></param>
            <returns></returns>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ArrowAnnotation.ArrowStyle">
            <summary>
            Gets or sets arrow style.
            <seealso cref="P:Dundas.Olap.WebUIControls.ArrowAnnotation.ArrowSize"/>
            </summary>
            <value>
            <see cref="P:Dundas.Olap.WebUIControls.ArrowAnnotation.ArrowStyle"/> of the annotation.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ArrowAnnotation.ArrowSize">
            <summary>
            Gets or sets arrow size in pixels.
            <seealso cref="P:Dundas.Olap.WebUIControls.ArrowAnnotation.ArrowStyle"/>
            </summary>
            <value>
            Integer value that represents arrow size (thickness) in pixels.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ArrowAnnotation.AnchorAlignment">
            <summary>
            Gets or sets annotation position alignment to the anchor point.
            <seealso cref="P:Dundas.Olap.WebUIControls.Annotation.AnchorX"/>
            <seealso cref="P:Dundas.Olap.WebUIControls.Annotation.AnchorY"/>
            <seealso cref="P:Dundas.Olap.WebUIControls.Annotation.AnchorDataPoint"/>
            <seealso cref="P:Dundas.Olap.WebUIControls.Annotation.AnchorOffsetX"/>
            <seealso cref="P:Dundas.Olap.WebUIControls.Annotation.AnchorOffsetY"/>
            </summary>
            <value>
            A <see cref="T:System.Drawing.ContentAlignment"/> value that represents annotation alignment to 
            the anchor point.
            </value>
            <remarks>
            Annotation must be anchored using <see cref="P:Dundas.Olap.WebUIControls.Annotation.AnchorDataPoint"/>, <see cref="P:Dundas.Olap.WebUIControls.Annotation.AnchorX"/> 
            or <see cref="P:Dundas.Olap.WebUIControls.Annotation.AnchorY"/> properties. It's <see cref="P:Dundas.Olap.WebUIControls.Annotation.X"/> and <see cref="P:Dundas.Olap.WebUIControls.Annotation.Y"/> 
            properties must be set to <b>Double.NaN</b>.
            </remarks>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ArrowAnnotation.AnnotationType">
            <summary>
            Gets or sets annotation type name.
            </summary>
            <remarks>
            This abstract property is used to get the name of each annotation type
            (e.g. Line, Rectangle, Ellipse,...). 
            <para>
            Property is for internal use and is hidden at design and run time. Should
            not be part of the documentation.
            </para>
            </remarks>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ArrowAnnotation.SelectionPointsStyle">
            <summary>
            Gets or sets annotation selection points style.
            </summary>
            <value>
            A <see cref="P:Dundas.Olap.WebUIControls.ArrowAnnotation.SelectionPointsStyle"/> value that represents annotation
            selection style.
            </value>
            <remarks>
            Property is for internal use and is hidden at design and run time. 
            Should not be part of the documentation.
            </remarks>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.ColorSelectorDlgClassControl.GetInitialzeScript">
            <summary>
            Gets the initialze script.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.ColorSelectorDlgClassControl.OnPreRender(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Web.UI.Control.PreRender"></see> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"></see> object that contains the event data.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.ColorSelectorDlgClassControl.getObjID(System.String)">
            <summary>
            Gets the script object ID.
            </summary>
            <param name="method">The method name.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.ColorSelectorDlgClassControl.GetBestColor(System.Drawing.Color)">
            <summary>
            Gets the nearest color to current color.
            </summary>
            <param name="color">The color.</param>
            <returns>nearest color</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.ColorSelectorDlgClassControl.GetColors">
            <summary>
            Gets the color palette.
            </summary>
            <returns>Array of colors</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.ColorSelectorDlgClassControl.BuildColorTable">
            <summary>
            Builds the color table.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.ColorSelectorDlgClassControl.SetControlColor">
            <summary>
            Sets the color of the control sample panel.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.ColorSelectorDlgClassControl.GetControlColor">
            <summary>
            Gets the color of the control after edit.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.ColorSelectorDlgClassControl.ToHtmlColor(System.Drawing.Color)">
            <summary>
            Converts a color to HTML format.
            </summary>
            <param name="c">The c.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.ColorSelectorDlgClassControl.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Sends server control content to a provided <see cref="T:System.Web.UI.HtmlTextWriter"></see> object, which writes the content to be rendered on the client.
            </summary>
            <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter"></see> object that receives the server control content.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.ColorSelectorDlgClassControl.Page_Load(System.Object,System.EventArgs)">
            <summary>
            Handles the Load event of the Page control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Ajax.ColorSelectorDlgClassControl.Color">
            <summary>
            Gets or sets the current color.
            </summary>
            <value>The color.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Ajax.ColorSelectorDlgClassControl.ColorEditorID">
            <summary>
            Gets or sets the color editor ID.
            </summary>
            <value>The color editor ID.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Ajax.ColorSelectorDlgClassControl.Chart">
            <summary>
            Gets or sets the chart.
            </summary>
            <value>The chart.</value>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.TreeViewPopulateEventArgs">
            <summary>
            Provides data for the OnPopulate events of the <see cref="T:Dundas.Olap.WebUIControls.OlapTreeView"/> control.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.TreeViewPopulateEventArgs.#ctor(Dundas.Olap.WebUIControls.OlapTreeNode)">
            <summary>
            Creates new instance of TreeViewPopulateEventArgs class
            </summary>
            <param name="node"></param>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.TreeViewPopulateEventArgs.Node">
            <summary>
            Gets the <see cref="T:Dundas.Olap.WebUIControls.OlapTreeNode"/> which need to be populated.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.TreeViewPopulateEventHandler">
            <summary>
            Represents the method that will handle the OnPopulate events of the <see cref="T:Dundas.Olap.WebUIControls.OlapTreeView"/> control.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.OlapTreeViewImageType">
            <summary>
            Represents Olap TreeView Image Types
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.OlapTreeViewImageType.Expanded">
            <summary>
            Expanded image
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.OlapTreeViewImageType.Colapsed">
            <summary>
            Collapsed image
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.OlapTreeViewImageType.NodeList">
            <summary>
            NodeList image
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.OlapTreeViewImageType.Checked">
            <summary>
            Checked node image
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.OlapTreeViewImageType.Unchecked">
            <summary>
            Unchecked node image
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.OlapTreeViewImageType.Multiple">
            <summary>
            Multiple checks image
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.OlapTreeViewImageType.Folder">
            <summary>
            Folder image
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.OlapTreeViewImageType.Previous">
            <summary>
            Get previous page in the tree
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.OlapTreeViewImageType.Next">
            <summary>
            Get next page in the tree
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.OlapTreeViewImageType.Empty">
            <summary>
            Empty - no image.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.Dialogs.Controls_LoadReportsDlg">
            <summary>
            The class represents the Dimension Mermbers Dialog
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Dialogs.Controls_LoadReportsDlg.FrameworkInitialize">
            <summary>
            Frameworks the initialize.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Dialogs.Controls_LoadReportsDlg.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Sends server control content to a provided <see cref="T:System.Web.UI.HtmlTextWriter"></see> object, which writes the content to be rendered on the client.
            </summary>
            <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter"></see> object that receives the server control content.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Dialogs.Controls_LoadReportsDlg.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Dialogs.Controls_LoadReportsDlg.UpLoadReportsProcess">
            <summary>
            Ups the load reports process.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Dialogs.Controls_LoadReportsDlg.btnOK_ServerClick(System.Object,System.EventArgs)">
            <summary>
            Handles the ServerClick event of the btnOK control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Dialogs.Controls_LoadReportsDlg.PrepareForRender">
            <summary>
            Prepares for render.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Dialogs.Controls_LoadReportsDlg.OlapManager">
            <summary>
            Gets or sets the olap manager.
            </summary>
            <value>The olap manager.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Dialogs.Controls_LoadReportsDlg.Dundas#Olap#Manager#IOlapPopupDialog#OlapManager">
            <summary>
            Gets or sets the olap manager.
            </summary>
            <value>The olap manager.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Dialogs.Controls_LoadReportsDlg.Dundas#Olap#Manager#IOlapPopupDialog#Parameters">
            <summary>
            Gets or sets the parameters.
            </summary>
            <value>The parameters.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Dialogs.Controls_LoadReportsDlg.Dundas#Olap#Manager#IOlapPopupDialog#DialogPostBack">
            <summary>
            Gets or sets a value indicating whether that dialog is in post back stage.
            </summary>
            <value><c>true</c> if [dialog post back]; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Dundas.Charting.WebControl.Utilities.SelectorManager">
            <summary>
            SelectionManager provides selection feature 
            of subset of chart object as well as visual representation of the selection
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Utilities.SelectorManager.service">
            <summary>
            The chart service container
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Utilities.SelectorManager.selectableObjectList">
            <summary>
            List with selectable objects.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Utilities.SelectorManager.enabled">
            <summary>
            Flag to enagle selection drawing
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Utilities.SelectorManager.selectionPoint">
            <summary>
            Selection point ( hit test point );
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Utilities.SelectorManager.invalidated">
            <summary>
            Flag determines if the selector is invalidated and need to update
            hot region and selectedObjectInfo.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Utilities.SelectorManager.selectableTypes">
            <summary>
            Determines the selectable types
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Utilities.SelectorManager.selectedObjectInfo">
            <summary>
            the selected object information
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Utilities.SelectorManager.hotRegion">
            <summary>
            the selected hot region.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Utilities.SelectorManager.#ctor(System.ComponentModel.Design.IServiceContainer,System.Boolean)">
            <summary>
            Initializes new instance of SelectorManager class.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Utilities.SelectorManager.#ctor(System.ComponentModel.Design.IServiceContainer)">
            <summary>
            Initializes new instance of SelectorManager class.
            </summary>
            <param name="service">The chart ServiceContainer</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Utilities.SelectorManager.Invalidate">
            <summary>
            Sets the invalidated flag 
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Utilities.SelectorManager.CheckInvalidated">
            <summary>
            Checks if selector is invalidated and performs HitTest if it is.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Utilities.SelectorManager.GetRelativeHitPoint">
            <summary>
            Converts the current selection point to chart relative point.
            </summary>
            <returns>Converted point in relative coord. system</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Utilities.SelectorManager.GetHitOrderList">
            <summary>
            Builds the ordered list of elements to perform filtered hit test.
            </summary>
            <returns>Ordered list of ContextElementType type</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Utilities.SelectorManager.GetAxisMarkers(Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.Axis)">
            <summary>
            Gets the axis markers - list of points where markers are drawn.
            </summary>
            <param name="graph">The graph.</param>
            <param name="axis">The axis.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Utilities.SelectorManager.SearchForHotRegion">
            <summary>
            Searches for the hot region corresponeded on selection point.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Utilities.SelectorManager.Reset">
            <summary>
            Resets this instance.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Utilities.SelectorManager.HitTest">
            <summary>
            Perform hit test and invalidation of selection.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Utilities.SelectorManager.DrawSelection">
            <summary>
            Draws the selected object
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Utilities.SelectorManager.GetMarkers(System.Drawing.RectangleF)">
            <summary>
            Biulds list of markers (PointF) based on rectangle
            </summary>
            <param name="rect">The rectangle</param>
            <returns>List of PointF</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Utilities.SelectorManager.Transform3D(Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.DataPoint,Dundas.Olap.WebUIControls.ChartGraphics)">
            <summary>
            Calculates a DataPoint of 3D area into PointF to draw.
            </summary>
            <param name="chartArea">3D chart area</param>
            <param name="point">The DataPoint</param>
            <param name="graph">ChartGraphics reference</param>
            <returns>Calculated PointF</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Utilities.SelectorManager.GetMarkers(Dundas.Olap.WebUIControls.ChartGraphics)">
            <summary>
            Returns list of PointF elements as markers based on seleced object
            </summary>
            <param name="graph">ChartGraphics reference</param>
            <returns>List of PointF as markers</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Utilities.SelectorManager.DrawSelection(System.Drawing.Graphics)">
            <summary>
            Draws the selection markers. It is assumed that the 
            given Graphics contain chart picture before calling this method.
            </summary>
            <param name="g">The Grapgics object for drawing</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Utilities.SelectorManager.System#IServiceProvider#GetService(System.Type)">
            <summary>
            Gets the service object of the specified type
            </summary>
            <param name="serviceType">An object that specifies the type of service object to get.</param>
            <returns>A service object of type serviceType. -or- null if there is no service object of type serviceType.</returns>
        </member>
        <member name="P:Dundas.Charting.WebControl.Utilities.SelectorManager.ChartControl">
            <summary>
            Returns the attached chart control
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.Utilities.SelectorManager.Chart">
            <summary>
            Returns the attached ChartPicture
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.Utilities.SelectorManager.DataManager">
            <summary>
            Gets the chart data manager ( for series access )
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.Utilities.SelectorManager.Graph">
            <summary>
            Gets the chart ChartGraphics
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.Utilities.SelectorManager.SelectableTypes">
            <summary>
            Gets and sets the selectable object types
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.Utilities.SelectorManager.SelectionPoint">
            <summary>
            Gets and sets ths selection point
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.Utilities.SelectorManager.Result">
            <summary>
            Gets the ObjectInfo result which coresponds on the SelectionPoint 
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.Utilities.SelectorManager.HitTestResult">
            <summary>
            Gets the hit test result.
            </summary>
            <value>The hit test result.</value>
        </member>
        <member name="P:Dundas.Charting.WebControl.Utilities.SelectorManager.HotRegion">
            <summary>
            Gets or sets the hot region.
            </summary>
            <value>The hot region.</value>
        </member>
        <member name="P:Dundas.Charting.WebControl.Utilities.SelectorManager.Enabled">
            <summary>
            Enables and disables automatic selection drawing.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.Statistics">
            <summary>
            Statistics class provides helper methods for statisctical calculations.
            Actual calculations are made in the FormulaData class and the Statistics
            class provide a simplified API which automatically prepares parameters and 
            deals with input and output series. 
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Statistics.#ctor(Dundas.Olap.WebUIControls.FormulaData)">
            <summary>
            Constructor
            </summary>
            <param name="formulaData">Formula Data</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Statistics.ZTest(System.Double,System.Double,System.Double,System.Double,System.String,System.String)">
            <summary>
            The z-test generates a standard score for 
            x with respect to the data set, 
            array, and returns the two-tailed probability for the 
            normal distribution. You can use this function to assess 
            the likelihood that a particular observation is drawn 
            from a particular population.
            </summary>
            <param name="hypothesizedMeanDifference">Hypothesized Mean Difference</param>
            <param name="varianceFirstGroup">Variance First Group</param>
            <param name="varianceSecondGroup">Variance Second Group</param>
            <param name="probability">Probability</param>
            <param name="firstInputSeriesName">First Input Series Name</param>
            <param name="secondInputSeriesName">Second Input Series Name</param>
            <returns>Returns Result class from T Test</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Statistics.TTestUnEqualVariances(System.Double,System.Double,System.String,System.String)">
            <summary>
            This analysis tool and its formulas perform a two-sample student's t-test. 
            This t-test form assumes that the variances of both ranges of data are 
            unequal; it is referred to as a heteroscedastic t-test. You can use a 
            t-test to determine whether two sample means are equal. Use this test 
            when the groups under study are distinct. Use a paired test when there 
            is one group before and after a treatment.
            </summary>
            <param name="hypothesizedMeanDifference">Hypothesized Mean Difference</param>
            <param name="probability">Probability</param>
            <param name="firstInputSeriesName">First Input Series Name</param>
            <param name="secondInputSeriesName">Second Input Series Name</param>
            <returns>Returns Result class from T Test</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Statistics.TTestEqualVariances(System.Double,System.Double,System.String,System.String)">
            <summary>
            Two-Sample Assuming Equal Variances - This analysis tool performs a two-sample 
            student's t-test. This t-test form assumes that the means of both data sets 
            are equal; it is referred to as a homoscedastic t-test. You can use t-tests to 
            determine whether two sample means are equal.
            </summary>
            <param name="hypothesizedMeanDifference">Hypothesized Mean Difference</param>
            <param name="probability">Probability</param>
            <param name="firstInputSeriesName">First Input Series Name</param>
            <param name="secondInputSeriesName">Second Input Series Name</param>
            <returns>Returns Result class from T Test</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Statistics.TTestPaired(System.Double,System.Double,System.String,System.String)">
            <summary>
            This analysis tool and its formula perform a paired two-sample student's 
            t-test to determine whether a sample's means are distinct. This t-test 
            form does not assume that the variances of both populations are equal. 
            You can use a paired test when there is a natural pairing of observations 
            in the samples, such as when a sample group is tested twice — before and 
            after an experiment.
            </summary>
            <param name="hypothesizedMeanDifference">Hypothesized Mean Difference</param>
            <param name="probability">Probability</param>
            <param name="firstInputSeriesName">First Input Series Name</param>
            <param name="secondInputSeriesName">Second Input Series Name</param>
            <returns>Returns Result class from T Test</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Statistics.RemoveEmptyPoints(System.String)">
            <summary>
            Removes empty points from series.
            </summary>
            <param name="seriesName">series name</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Statistics.FTest(System.Double,System.String,System.String)">
            <summary>
            This analysis tool performs a two-sample F-test to compare two population 
            variances. For example, you can use an F-test to determine whether the 
            time scores in a swimming meet have a difference in variance for samples 
            from two teams.
            </summary>
            <param name="probability">Probability</param>
            <param name="firstInputSeriesName">First Input Series Name</param>
            <param name="secondInputSeriesName">Second Input Series Name</param>
            <returns>Returns Result class from F Test</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Statistics.Anova(System.Double,System.String)">
            <summary>
            This analysis tool performs simple analysis of variance (anova) 
            to test the hypothesis that means from two or more samples 
            are equal (drawn from populations with the same mean). This 
            technique expands on the tests for two means, such as the t-test.
            </summary>
            <param name="probability">Probability</param>
            <param name="inputSeriesNames">Input Series Names</param>
            <returns>Returns Result class from Anova Test</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Statistics.NormalDistribution(System.Double)">
            <summary>
            Returns the normal cumulative distribution for the specified mean and standard 
            deviation. This function has a very wide range of applications in statistics, 
            including hypothesis testing.
            </summary>
            <param name="zValue">Z Value</param>
            <returns>Returns value from standard normal cumulative distribution function.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Statistics.InverseNormalDistribution(System.Double)">
            <summary>
            Returns the inverse of the normal cumulative distribution for the specified 
            mean and standard deviation.
            </summary>
            <param name="probability">Probability</param>
            <returns>Returns value from inverse standard normal cumulative distribution function.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Statistics.FDistribution(System.Double,System.Int32,System.Int32)">
            <summary>
            /// Returns the F probability distribution. You can use this function to determine 
            whether two data sets have different degrees of diversity. For example, you can 
            examine test scores given to men and women entering high school and determine 
            if the variability in the females is different from that found in the males.
            </summary>
            <param name="fValue">F Value</param>
            <param name="firstDegreeOfFreedom">First Degree of Freedom</param>
            <param name="secondDegreeOfFreedom">Second Degree Of Freedom</param>
            <returns>Returns value from cumulative F distribution function.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Statistics.InverseFDistribution(System.Double,System.Int32,System.Int32)">
            <summary>
            Returns the inverse of the F probability distribution. If p = FDIST(x,...), 
            then FINV(p,...) = x. The F distribution can be used in an F-test that 
            compares the degree of variability in two data sets. For example, you 
            can analyze income distributions in the United States and Canada to 
            determine whether the two countries have a similar degree of diversity.
            </summary>
            <param name="probability">Probability</param>
            <param name="firstDegreeOfFreedom">First Degree of Freedom</param>
            <param name="secondDegreeOfFreedom">Second Degree of Freedom</param>
            <returns>Returns value from inverse F distribution function.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Statistics.TDistribution(System.Double,System.Int32,System.Boolean)">
            <summary>
            Returns the Percentage Points (probability) for the Student t-distribution 
            where a numeric value (x) is a calculated value of t for which the Percentage 
            Points are to be computed. The t-distribution is used in the hypothesis 
            testing of small sample data sets. Use this function in place of a table 
            of critical values for the t-distribution.
            </summary>
            <param name="tValue">T value</param>
            <param name="degreeOfFreedom">Degree of Freedom</param>
            <param name="oneTail">Returns the one-tailed distribution</param>
            <returns>Returns T Distribution cumulative function</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Statistics.InverseTDistribution(System.Double,System.Int32)">
            <summary>
            Returns the t-value of the Student's t-distribution as a function of the 
            probability and the degrees of freedom.
            </summary>
            <param name="probability">Probability</param>
            <param name="degreeOfFreedom">Degree of Freedom</param>
            <returns>Returns Inverse T distribution.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Statistics.Covariance(System.String,System.String)">
            <summary>
            This analysis tool and its formula return the average of the product 
            of deviations of data points from their respective means. Covariance 
            is a measure of the relationship between two ranges of data. You can 
            use the Covariance tool to determine whether two ranges of data move 
            together — that is, whether large values of one set are associated 
            with large values of the other (positive covariance), whether small 
            values of one set are associated with large values of the other 
            (negative covariance), or whether values in both sets are unrelated 
            (covariance near zero). 
            </summary>
            <param name="firstInputSeriesName">First Input Series Name</param>
            <param name="secondInputSeriesName">Second Input Series Name</param>
            <returns>Returns Covariance</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Statistics.Correlation(System.String,System.String)">
            <summary>
            This analysis tool and its formulas measure the relationship between 
            two data sets that are scaled to be independent of the unit of 
            measurement. The population correlation calculation returns the 
            covariance of two data sets divided by the product of their 
            standard deviations. You can use the Correlation tool to determine 
            whether two ranges of data move together — that is, whether large 
            values of one set are associated with large values of the other 
            (positive correlation), whether small values of one set are 
            associated with large values of the other (negative correlation), 
            or whether values in both sets are unrelated (correlation near zero). 
            </summary>
            <param name="firstInputSeriesName">First Input Series Name</param>
            <param name="secondInputSeriesName">Second Input Series Name</param>
            <returns>Returns Correlation</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Statistics.Mean(System.String)">
            <summary>
            /// Returns the average (arithmetic mean) of the arguments.
            </summary>
            <param name="inputSeriesName">Input Series Name</param>
            <returns>Returns Mean</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Statistics.Median(System.String)">
            <summary>
            Returns the median of the given numbers. The median is 
            the number in the middle of a set of numbers; that is, 
            half the numbers have values that are greater than the 
            median, and half have values that are less.
            </summary>
            <param name="inputSeriesName">Input Series Name</param>
            <returns>Returns Median</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Statistics.Variance(System.String,System.Boolean)">
            <summary>
            Estimates variance based on a sample.
            </summary>
            <param name="inputSeriesName">Input Series Name</param>
            <param name="sampleVariance">Boolen variable which determine if variance is used from sample.</param>
            <returns>Returns Variance</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Statistics.BetaFunction(System.Double,System.Double)">
            <summary>
            Calculates Beta Function
            </summary>
            <param name="m">First parameter for beta function</param>
            <param name="n">Second Parameter for beta function</param>
            <returns>Returns beta function</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Statistics.GammaFunction(System.Double)">
            <summary>
            Calculates Gamma Function
            </summary>
            <param name="n">Parameter for gamma function</param>
            <returns>Returns gamma function</returns>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.TTestResult">
            <summary>
            TTestResult class stores results of the TTest statistical calculations.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.TTestResult.firstSeriesMean">
            <summary>
            First series' mean.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.TTestResult.secondSeriesMean">
            <summary>
            Second series' mean.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.TTestResult.firstSeriesVariance">
            <summary>
            First series' variance.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.TTestResult.secondSeriesVariance">
            <summary>
            Second series' variance.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.TTestResult.tValue">
            <summary>
            T value.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.TTestResult.degreeOfFreedom">
            <summary>
            Degree of freedom.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.TTestResult.probabilityTOneTail">
            <summary>
            Probability T one tail.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.TTestResult.tCriticalValueOneTail">
            <summary>
            Critical T one tail.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.TTestResult.probabilityTTwoTail">
            <summary>
            Probability T two tails.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.TTestResult.tCriticalValueTwoTail">
            <summary>
            Critical T two tails.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.TTestResult.FirstSeriesMean">
            <summary>
            First series' mean.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.TTestResult.SecondSeriesMean">
            <summary>
            Second series' mean.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.TTestResult.FirstSeriesVariance">
            <summary>
            First series' variance.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.TTestResult.SecondSeriesVariance">
            <summary>
            Second series' variance.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.TTestResult.TValue">
            <summary>
            T value.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.TTestResult.DegreeOfFreedom">
            <summary>
            Degree of freedom.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.TTestResult.ProbabilityTOneTail">
            <summary>
            Probability T one tail.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.TTestResult.TCriticalValueOneTail">
            <summary>
            Critical T one tail.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.TTestResult.ProbabilityTTwoTail">
            <summary>
            Probability T two tails.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.TTestResult.TCriticalValueTwoTail">
            <summary>
            Critical T two tails.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.FTestResult">
            <summary>
            FTestResult class stores results of the FTest statistical calculations.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.FTestResult.firstSeriesMean">
            <summary>
            First series' mean.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.FTestResult.secondSeriesMean">
            <summary>
            Second series' mean.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.FTestResult.firstSeriesVariance">
            <summary>
            First series' variance.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.FTestResult.secondSeriesVariance">
            <summary>
            Second series' variance.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.FTestResult.fValue">
            <summary>
            F value.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.FTestResult.probabilityFOneTail">
            <summary>
            Probability F one tail.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.FTestResult.fCriticalValueOneTail">
            <summary>
            Critical F one tail.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.FTestResult.FirstSeriesMean">
            <summary>
            First series' mean.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.FTestResult.SecondSeriesMean">
            <summary>
            Second series' mean.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.FTestResult.FirstSeriesVariance">
            <summary>
            First series' variance.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.FTestResult.SecondSeriesVariance">
            <summary>
            Second series' variance.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.FTestResult.FValue">
            <summary>
            F value.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.FTestResult.ProbabilityFOneTail">
            <summary>
            Probability F one tail.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.FTestResult.FCriticalValueOneTail">
            <summary>
            Critical F one tail.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.AnovaResult">
            <summary>
            AnovaResult class stores results of the Anova statistical calculations.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.AnovaResult.sumOfSquaresBetweenGroups">
            <summary>
            Sum of squares between groups.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.AnovaResult.sumOfSquaresWithinGroups">
            <summary>
            Sum of squares whitin groups.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.AnovaResult.sumOfSquaresTotal">
            <summary>
            Total sum of squares.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.AnovaResult.degreeOfFreedomBetweenGroups">
            <summary>
            Degree of freedom between groups.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.AnovaResult.degreeOfFreedomWithinGroups">
            <summary>
            Degree of freedom whitin groups.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.AnovaResult.degreeOfFreedomTotal">
            <summary>
            Total degree of freedom.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.AnovaResult.meanSquareVarianceBetweenGroups">
            <summary>
            Mean square variance between groups.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.AnovaResult.meanSquareVarianceWithinGroups">
            <summary>
            Mean square variance between groups.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.AnovaResult.fRatio">
            <summary>
            F ratio.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.AnovaResult.fCriticalValue">
            <summary>
            F critical value.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.AnovaResult.SumOfSquaresBetweenGroups">
            <summary>
            Sum of squares between groups.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.AnovaResult.SumOfSquaresWithinGroups">
            <summary>
            Sum of squares whitin groups.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.AnovaResult.SumOfSquaresTotal">
            <summary>
            Total sum of squares.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.AnovaResult.DegreeOfFreedomBetweenGroups">
            <summary>
            Degree of freedom between groups.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.AnovaResult.DegreeOfFreedomWithinGroups">
            <summary>
            Degree of freedom whitin groups.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.AnovaResult.DegreeOfFreedomTotal">
            <summary>
            Total degree of freedom.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.AnovaResult.MeanSquareVarianceBetweenGroups">
            <summary>
            Mean square variance between groups.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.AnovaResult.MeanSquareVarianceWithinGroups">
            <summary>
            Mean square variance within groups.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.AnovaResult.FRatio">
            <summary>
            F ratio.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.AnovaResult.FCriticalValue">
            <summary>
            F critical value.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.ZTestResult">
            <summary>
            ZTestResult class stores results of the ZTest statistical calculations.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ZTestResult.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ZTestResult.FirstSeriesMean">
            <summary>
            First Series Mean
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ZTestResult.SecondSeriesMean">
            <summary>
            Second Seies Mean
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ZTestResult.FirstSeriesVariance">
            <summary>
            First Series Variance
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ZTestResult.SecondSeriesVariance">
            <summary>
            Second Series Variance
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ZTestResult.ZValue">
            <summary>
            Z Value
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ZTestResult.ProbabilityZOneTail">
            <summary>
            Probability Z One-Tail
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ZTestResult.ZCriticalValueOneTail">
            <summary>
            Z Critical Value One-Tail
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ZTestResult.ProbabilityZTwoTail">
            <summary>
            Probability Z Two-Tail
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ZTestResult.ZCriticalValueTwoTail">
            <summary>
            Z Critical Value Two-Tail
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.Cursor">
            <summary>
            Cursor class is responsible for chart axes cursor and selection 
            functionality. It contains properties which define visual appearance, 
            position and behavior settings. It also contains methods for 
            drawing cursor and selection in the plotting area.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Cursor.#ctor">
            <summary>
            Public constructor
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Cursor.Initialize(Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.AxisName)">
            <summary>
            Initialize cursor class.
            </summary>
            <param name="chartArea">Chart area the cursor belongs to.</param>
            <param name="attachedToXAxis">Indicates which axes should be used X or Y.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Cursor.Dispose">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Cursor.Paint(Dundas.Olap.WebUIControls.ChartGraphics)">
            <summary>
            Draws chart area cursor and selection.
            </summary>
            <param name="graph">Reference to the ChartGraphics object.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Cursor.RoundPosition(System.Double)">
            <summary>
            Rounds new position of the cursor or range selection
            </summary>
            <param name="cursorPosition"></param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Cursor.GetChartObject">
            <summary>
            Helper function which returns a reference to the chart object
            </summary>
            <returns>Chart object reference.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Cursor.GetSelectionRect(System.Drawing.RectangleF)">
            <summary>
            Get rectangle of the axis range selection.
            </summary>
            <returns>Selection rectangle.</returns>
            <param name="plotAreaPosition">Plot area rectangle.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Cursor.GetOppositeSelectionRect(System.Drawing.RectangleF)">
            <summary>
            Get rectangle of the opposite axis selection
            </summary>
            <param name="plotAreaPosition">Plot area rectangle.</param>
            <returns>Opposite selection rectangle.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Cursor.PositionToCursorPosition(System.Drawing.PointF)">
            <summary>
            Converts X or Y position value to the cursor axis value
            </summary>
            <param name="position">Position in relative coordinates.</param>
            <returns>Cursor position as axis value.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Cursor.GetPositionInPlotArea(System.Drawing.PointF,System.Boolean)">
            <summary>
            Checks if specified point is located inside the plotting area.
            Converts pixel coordinates to relative.
            </summary>
            <param name="point">Point coordinates to test.</param>
            <param name="roundToBoundary">Indicates that coordinates must be rounded to area boundary.</param>
            <returns>PointF.Empty or relative coordinates in plotting area.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Cursor.Invalidate(System.Boolean)">
            <summary>
            Invalidate chart are with the cursor.
            </summary>
            <param name="invalidateArea">Chart area must be invalidated.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Cursor.GetAxis">
            <summary>
            Gets axis objects the cursor is attached to.
            </summary>
            <returns>Axis object.</returns>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Cursor.Position">
            <summary>
            Cursor position.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Cursor.SelectionStart">
            <summary>
            Range selection start position.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Cursor.SelectionEnd">
            <summary>
            Range selection end position.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Cursor.UserEnabled">
            <summary>
            Enables/Disables chart area cursor user interface.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Cursor.UserSelection">
            <summary>
            Enables/disables the range selection user interface.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Cursor.AutoScroll">
            <summary>
            Indicates that cursor will automatically scroll the area view if necessary.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Cursor.AxisType">
            <summary>
            The type of axis the cursor is attached to.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Cursor.Interval">
            <summary>
            Cursor movement interval.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Cursor.IntervalType">
            <summary>
            Cursor movement interval type.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Cursor.IntervalOffset">
            <summary>
            Cursor movement interval offset.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Cursor.IntervalOffsetType">
            <summary>
            Cursor movement interval offset type.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Cursor.LineColor">
            <summary>
            Cursor color.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Cursor.LineStyle">
            <summary>
            Cursor line style.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Cursor.LineWidth">
            <summary>
            Cursor line width.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Cursor.SelectionColor">
            <summary>
            Chart area range selection color.
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.Formulas.GeneralFormulas">
            <summary>
            This class calculates Running total and average.
            Could be used for Pareto chart
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Formulas.GeneralFormulas.RuningTotal(System.Double[][],System.Double[][]@,System.String[],System.String[])">
            <summary>
            Formula which calculates cumulative total.
            ---------------------------------------------------------
            Input: 
            	- Y values.
            Output: 
            	- Runing Total.
            Parameters: 
            	- 
            Extra Parameters: 
            	- 
            
            </summary>
            <param name="inputValues">Arrays of doubles: 1. row - X values, 2. row - Y values</param>
            <param name="outputValues">Arrays of doubles: 1. row - X values, 2. row - Moving average</param>
            <param name="parameterList">Array of strings: 1. Period</param>
            <param name="extraParameterList">Array of strings: 1. Start from zero</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Formulas.GeneralFormulas.RuningAverage(System.Double[][],System.Double[][]@,System.String[],System.String[])">
            <summary>
            Runing Average Formual
            ---------------------------------------------------------
            Input: 
            	- Y values.
            Output: 
            	- Runing Average.
            Parameters: 
            	- 
            Extra Parameters: 
            	- 
            
            </summary>
            <param name="inputValues">Arrays of doubles: 1. row - X values, 2. row - Y values</param>
            <param name="outputValues">Arrays of doubles: 1. row - X values, 2. row - Moving average</param>
            <param name="parameterList">Array of strings: 1. Period</param>
            <param name="extraParameterList">Array of strings: 1. Start from zero</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Formulas.GeneralFormulas.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Formulas.GeneralFormulas.Formula(System.String,System.Double[][],System.Double[][]@,System.String[],System.String[],System.String[][]@)">
            <summary>
            The first method in the module, which converts a formula 
            name to the corresponding private method.
            </summary>
            <param name="formulaName">String which represent a fomula name.</param>
            <param name="inputValues">Arrays of doubles - Input values.</param>
            <param name="outputValues">Arrays of doubles - Output values.</param>
            <param name="parameterList">Array of strings - Formula parameters.</param>
            <param name="extraParameterList">Array of strings - Extra Formula parameters from DataManipulator object.</param>
            <param name="outLabels">Array of strings - Used for Labels. Description for ouput results.</param>
        </member>
        <member name="P:Dundas.Charting.WebControl.Formulas.GeneralFormulas.Name">
            <summary>
            Formula Module name
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.Design.MarkerStyleEditor">
            <summary>
            Type editor for the marker style.
            Paints a rectangle with marker sample.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.MarkerStyleEditor.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Override this function to support palette colors drawing
            </summary>
            <param name="context">Descriptor context.</param>
            <returns>Can paint values.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.MarkerStyleEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)">
            <summary>
            Override this function to support palette colors drawing
            </summary>
            <param name="e">Paint value event arguments.</param>
        </member>
        <member name="T:Dundas.Charting.WebControl.Design.GradientEditor">
            <summary>
            Type editor for the gradient type.
            Paints a rectangle with gradient sample.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.GradientEditor.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Override this function to support palette colors drawing
            </summary>
            <param name="context">Descriptor context.</param>
            <returns>Can paint values.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.GradientEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)">
            <summary>
            Override this function to support palette colors drawing
            </summary>
            <param name="e">Paint value event arguments.</param>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.SelectionPointsStyle">
            <summary>
            Annotation object selection points style.
            </summary>
            <remarks>
            Enumeration is for internal use only and should not be part of the documentation.
            </remarks>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.SelectionPointsStyle.TwoPoints">
            <summary>
            Selection points are displayed top left and bottom right corners
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.SelectionPointsStyle.Rectangle">
            <summary>
            Selection points are displayed on all sides and corners of the rectangle.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.ResizingMode">
            <summary>
            Annotation object resizing\moving mode.
            </summary>
            <remarks>
            Enumeration is for internal use only and should not be part of the documentation.
            </remarks>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ResizingMode.TopLeftHandle">
            <summary>
            Top Left selection handle is used.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ResizingMode.TopHandle">
            <summary>
            Top selection handle is used.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ResizingMode.TopRightHandle">
            <summary>
            Top Right selection handle is used.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ResizingMode.RightHandle">
            <summary>
            Right selection handle is used.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ResizingMode.BottomRightHandle">
            <summary>
            Bottom Right selection handle is used.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ResizingMode.BottomHandle">
            <summary>
            Bottom selection handle is used.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ResizingMode.BottomLeftHandle">
            <summary>
            Bottom Left selection handle is used.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ResizingMode.LeftHandle">
            <summary>
            Left selection handle is used.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ResizingMode.AnchorHandle">
            <summary>
            Anchor selection handle is used.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ResizingMode.Moving">
            <summary>
            No selection handles used - moving mode.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ResizingMode.MovingPathPoints">
            <summary>
            Moving points of the annotation path.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ResizingMode.None">
            <summary>
            No moving or resizing.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.Dialogs.Controls_DimensionMembersDlg">
            <summary>
            The classes represents the Dimension Mermbers Dialog
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Dialogs.Controls_DimensionMembersDlg.FrameworkInitialize">
            <summary>
            Frameworks the initialize.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Dialogs.Controls_DimensionMembersDlg.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Dialogs.Controls_DimensionMembersDlg.OnLoad(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Web.UI.Control.Load"></see> event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"></see> object that contains the event data.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Dialogs.Controls_DimensionMembersDlg.FixImages">
            <summary>
            Fixes the images.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Dialogs.Controls_DimensionMembersDlg.CheckButtonStates">
            <summary>
            Checks the button states.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Dialogs.Controls_DimensionMembersDlg.PrepareForRender">
            <summary>
            Prepares for render.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Dialogs.Controls_DimensionMembersDlg.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Sends server control content to a provided <see cref="T:System.Web.UI.HtmlTextWriter"></see> object, which writes the content to be rendered on the client.
            </summary>
            <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter"></see> object that receives the server control content.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Dialogs.Controls_DimensionMembersDlg.GenerateParameterFields">
            <summary>
            Generates the parameter fields.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Dialogs.Controls_DimensionMembersDlg.OkButton_ServerClick(System.Object,System.EventArgs)">
            <summary>
            Handles the ServerClick event of the OkButton control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Dialogs.Controls_DimensionMembersDlg.CommandBtnClick(System.Object,System.Web.UI.ImageClickEventArgs)">
            <summary>
            Commands the BTN click.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Web.UI.ImageClickEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Dialogs.Controls_DimensionMembersDlg.AddInvisibleMembers">
            <summary>
            Add members which are not in tree
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Dialogs.Controls_DimensionMembersDlg.PopupInterface">
            <summary>
            Gets the popup interface.
            </summary>
            <value>The popup interface.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Dialogs.Controls_DimensionMembersDlg.OlapManager">
            <summary>
            Gets or sets the olap manager.
            </summary>
            <value>The olap manager.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Dialogs.Controls_DimensionMembersDlg.DimensionDescriptorID">
            <summary>
            Gets or sets the dimension descriptor ID.
            </summary>
            <value>The dimension descriptor ID.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Dialogs.Controls_DimensionMembersDlg.DataAxisType">
            <summary>
            Gets or sets the type of the data axis.
            </summary>
            <value>The type of the data axis.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Dialogs.Controls_DimensionMembersDlg.Dundas#Olap#Manager#IOlapPopupDialog#OlapManager">
            <summary>
            Gets or sets the olap manager.
            </summary>
            <value>The olap manager.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Dialogs.Controls_DimensionMembersDlg.Dundas#Olap#Manager#IOlapPopupDialog#Parameters">
            <summary>
            Gets or sets the parameters.
            </summary>
            <value>The parameters.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Dialogs.Controls_DimensionMembersDlg.Dundas#Olap#Manager#IOlapPopupDialog#DialogPostBack">
            <summary>
            Gets or sets a value indicating whether that dialog is in post back stage.
            </summary>
            <value><c>true</c> if [dialog post back]; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.SurfaceName">
            <summary>
            3D cube surfaces names.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.SurfaceName.Front">
            <summary>
            Front.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.SurfaceName.Back">
            <summary>
            Back.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.SurfaceName.Left">
            <summary>
            Left.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.SurfaceName.Right">
            <summary>
            Right.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.SurfaceName.Top">
            <summary>
            Top.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.SurfaceName.Bottom">
            <summary>
            Bottom.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.PiePoints">
            <summary>
            This enumeration defines all significant points in a pie 
            slice. Only these points should be transformed for pie 
            chart using Matrix object.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.PiePoints.Top180">
            <summary>
            Angle 180 Top point on the arc
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.PiePoints.Bottom180">
            <summary>
            Angle 180 Bottom point on the arc
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.PiePoints.Top0">
            <summary>
            Angle 0 Top point on the arc
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.PiePoints.Bottom0">
            <summary>
            Angle 0 Bottom point on the arc
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.PiePoints.TopStart">
            <summary>
            Top Start Angle point on the arc
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.PiePoints.TopEnd">
            <summary>
            Top End Angle point on the arc
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.PiePoints.BottomStart">
            <summary>
            Bottom Start Angle point on the arc
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.PiePoints.BottomEnd">
            <summary>
            Bottom End Angle point on the arc
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.PiePoints.TopCenter">
            <summary>
            Center Top
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.PiePoints.BottomCenter">
            <summary>
            Center Bottom
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.PiePoints.TopLabelLine">
            <summary>
            Top Label Line
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.PiePoints.TopLabelLineOut">
            <summary>
            Top Label Line Out
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.PiePoints.TopLabelCenter">
            <summary>
            Top Label Center
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.PiePoints.TopRectTopLeftPnt">
            <summary>
            Top Rectangle Top Left Point
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.PiePoints.TopRectBottomRightPnt">
            <summary>
            Top Rectangle Right Bottom Point
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.PiePoints.BottomRectTopLeftPnt">
            <summary>
            Bottom Rectangle Top Left Point
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.PiePoints.BottomRectBottomRightPnt">
            <summary>
            Bottom Rectangle Right Bottom Point
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.PiePoints.DoughnutTop180">
            <summary>
            Angle 180 Top point on the Doughnut arc
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.PiePoints.DoughnutBottom180">
            <summary>
            Angle 180 Bottom point on the Doughnut arc
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.PiePoints.DoughnutTop0">
            <summary>
            Angle 0 Top point on the Doughnut arc
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.PiePoints.DoughnutBottom0">
            <summary>
            Angle 0 Bottom point on the Doughnut arc
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.PiePoints.DoughnutTopStart">
            <summary>
            Top Start Angle point on the Doughnut arc
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.PiePoints.DoughnutTopEnd">
            <summary>
            Top End Angle point on the Doughnut arc
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.PiePoints.DoughnutBottomStart">
            <summary>
            Bottom Start Angle point on the Doughnut arc
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.PiePoints.DoughnutBottomEnd">
            <summary>
            Bottom End Angle point on the Doughnut arc
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.PiePoints.DoughnutTopRectTopLeftPnt">
            <summary>
            Doughnut Top Rectangle Top Left Point
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.PiePoints.DoughnutTopRectBottomRightPnt">
            <summary>
            Doughnut Top Rectangle Right Bottom Point
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.PiePoints.DoughnutBottomRectTopLeftPnt">
            <summary>
            Doughnut Bottom Rectangle Top Left Point
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.PiePoints.DoughnutBottomRectBottomRightPnt">
            <summary>
            Doughnut Bottom Rectangle Right Bottom Point
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.DrawingOperationType">
            <summary>
            Type of drawing operation.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.DrawingOperationType.DrawElement">
            <summary>
            Draw element.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.DrawingOperationType.CalcElementPath">
            <summary>
            Calculate element path. (for selection or tooltips)
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.LineSegmentType">
            <summary>
            Type of line segment.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.LineSegmentType.Single">
            <summary>
            Only one segment exists.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.LineSegmentType.First">
            <summary>
            First segment.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.LineSegmentType.Middle">
            <summary>
            Middle segment.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.LineSegmentType.Last">
            <summary>
            Last segment.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.Point3D">
            <summary>
            Point3D class represent point coordinates in 3D space.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Point3D.#ctor(System.Single,System.Single,System.Single)">
            <summary>
            Public constructor.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Point3D.#ctor">
            <summary>
            Public constructor.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Point3D.X">
            <summary>
            X coordinate of the point.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Point3D.Y">
            <summary>
            Y coordinate of the point.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Point3D.Z">
            <summary>
            Z coordinate of the point.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Point3D.PointF">
            <summary>
            Y coordinate of the point.
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.Design.SeriesAreaNameConverter">
            <summary>
            Chart area name converter. Displays list of available areas names
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.SeriesAreaNameConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Standart values supported - return true
            </summary>
            <param name="context">Descriptor context.</param>
            <returns>Standard values supported.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.SeriesAreaNameConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Standart values are not exclusive - return false
            </summary>
            <param name="context">Descriptor context.</param>
            <returns>Non exclusive standard values.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.SeriesAreaNameConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Fill in the list of the chart areas for the series.
            </summary>
            <param name="context">Descriptor context.</param>
            <returns>Standart values collection.</returns>
        </member>
        <member name="T:Dundas.Charting.WebControl.Design.SeriesSubAxisNameConverter">
            <summary>
            SubAxis name converter. Displays list of available SubAxis
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.SeriesSubAxisNameConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Standart values supported - return true
            </summary>
            <param name="context">Descriptor context.</param>
            <returns>Standard values supported.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.SeriesSubAxisNameConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Standart values are not exclusive - return false
            </summary>
            <param name="context">Descriptor context.</param>
            <returns>Non exclusive standard values.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.SeriesSubAxisNameConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Fill in the list of the SubAxes for the series.
            </summary>
            <param name="context">Descriptor context.</param>
            <returns>Standart values collection.</returns>
        </member>
        <member name="T:Dundas.Charting.WebControl.Design.ChartDataSourceConverter">
            <summary>
            Chart data source design-time converter. Displays list of available data sources.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.ChartDataSourceConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Standart values supported - return true
            </summary>
            <param name="context">Descriptor context.</param>
            <returns>Standard values supported.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.ChartDataSourceConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Standart values are not exclusive - return false
            </summary>
            <param name="context">Descriptor context.</param>
            <returns>Non exclusive standard values.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.ChartDataSourceConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Fill in the list of chart type names.
            </summary>
            <param name="context">Descriptor context.</param>
            <returns>Standard values collection.</returns>
        </member>
        <member name="T:Dundas.Charting.WebControl.Design.SeriesDataSourceMemberConverter">
            <summary>
            Series data source members converter.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.SeriesDataSourceMemberConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Standart values supported - return true
            </summary>
            <param name="context">Descriptor context.</param>
            <returns>Standard values supported.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.SeriesDataSourceMemberConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Standart values are not exclusive - return false
            </summary>
            <param name="context">Descriptor context.</param>
            <returns>Non exclusive standard values.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.SeriesDataSourceMemberConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Fill in the list of the data source members.
            </summary>
            <param name="context">Descriptor context.</param>
            <returns>Standart values collection.</returns>
        </member>
        <member name="T:Dundas.Charting.WebControl.Design.SeriesLegendNameConverter">
            <summary>
            Chart legend name converter. Displays list of available legend names
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.SeriesLegendNameConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Standart values supported - return true
            </summary>
            <param name="context">Descriptor context.</param>
            <returns>Standard values supported.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.SeriesLegendNameConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Standart values are not exclusive - return false
            </summary>
            <param name="context">Descriptor context.</param>
            <returns>Non exclusive standard values.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.SeriesLegendNameConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Fill in the list of the chart legend for the series.
            </summary>
            <param name="context">Descriptor context.</param>
            <returns>Standart values collection.</returns>
        </member>
        <member name="T:Dundas.Charting.WebControl.Design.ChartTypeEditor">
            <summary>
            Chart type editor. Paint chart type image in the property grid.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.ChartTypeEditor.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Override this function to support chart type drawing
            </summary>
            <param name="context">Descriptor context.</param>
            <returns>Can paint values.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.ChartTypeEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)">
            <summary>
            Override this function to support chart type drawing
            </summary>
            <param name="e">Paint value event arguments.</param>
        </member>
        <member name="T:Dundas.Charting.WebControl.Design.ChartTypeConverter">
            <summary>
            Chart type converter. Displays list of available chart type names
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.ChartTypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Standart values supported - return true
            </summary>
            <param name="context">Descriptor context.</param>
            <returns>Standard values supported.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.ChartTypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Standart values are not exclusive - return false
            </summary>
            <param name="context">Descriptor context.</param>
            <returns>Non exclusive standard values.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.ChartTypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Fill in the list of chart type names.
            </summary>
            <param name="context">Descriptor context.</param>
            <returns>Standard values collection.</returns>
        </member>
        <member name="T:Dundas.Charting.WebControl.Design.SeriesNameConverter">
            <summary>
            Data series name converter. Displays list of available series names
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.SeriesNameConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Standart values supported - return true
            </summary>
            <param name="context">Descriptor context.</param>
            <returns>Standard values supported.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.SeriesNameConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Standart values are not exclusive - return false
            </summary>
            <param name="context">Descriptor context.</param>
            <returns>Non exclusive standard values.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.SeriesNameConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Fill in the list of data series names.
            </summary>
            <param name="context">Descriptor context.</param>
            <returns>Standard values collection.</returns>
        </member>
        <member name="T:Dundas.Charting.WebControl.Design.UrlValueEditor">
            <summary>
            Url editor class
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.UrlValueEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Edit Url value. 
            Makes a base class call with a chart control descriptor context.
            </summary>
            <param name="context">Descriptor context.</param>
            <param name="provider">Service provider.</param>
            <param name="value">Value to edit.</param>
            <returns>The new value of the object.</returns>
        </member>
        <member name="T:Dundas.Charting.WebControl.Design.AngleValueEditor">
            <summary>
            Editor for angles
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.AngleValueEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Edit angle value by showing the AngleTrackForm form
            </summary>
            <param name="context">Descriptor context.</param>
            <param name="provider">Service provider.</param>
            <param name="value">Value to edit.</param>
            <returns>The new value of the object.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.AngleValueEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Angle value editor type is "DropDown"
            </summary>
            <param name="context">Descriptor context.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.AngleValueEditor.ValueChanged(System.Object,System.EventArgs)">
            <summary>
            Close dropdown form when value was changed.
            </summary>
            <param name="sender">Sender object.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="F:Dundas.Charting.WebControl.Design.AngleTrackForm.components">
            <summary>
               Required designer variable.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.AngleTrackForm.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.AngleTrackForm.Dispose(System.Boolean)">
            <summary>
               Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.AngleTrackForm.InitializeComponent">
            <summary>
               Required method for Designer support—do not modify
               the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.AngleTrackForm.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Mouse button down
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.AngleTrackForm.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Mouse button up
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.AngleTrackForm.OnDoubleClick(System.EventArgs)">
            <summary>
            Mouse double clicked
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.AngleTrackForm.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Mouse move
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.AngleTrackForm.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Draw content of the angle tracking form
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.AngleTrackForm.OnValueChanged(System.EventArgs)">
            <summary>
            Value changed evnt.
            </summary>
            <param name="e">Arguments.</param>
        </member>
        <member name="P:Dundas.Charting.WebControl.Design.AngleTrackForm.Angle">
            <summary>
               Value of the angle in degrees
            </summary>
        </member>
        <member name="E:Dundas.Charting.WebControl.Design.AngleTrackForm.ValueChanged">
            <summary>
            Value changed event.
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.Design.NoNameExpandableObjectConverter">
            <summary>
            Data point attributes converter
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.NoNameExpandableObjectConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Overrides the ConvertTo method of TypeConverter.
            </summary>
            <param name="context">Descriptor context.</param>
            <param name="culture">Culture information.</param>
            <param name="value">Value to convert.</param>
            <param name="destinationType">Convertion destination type.</param>
            <returns>Converted object.</returns>
        </member>
        <member name="T:Dundas.Charting.WebControl.Design.DoubleArrayConverter">
            <summary>
            Converter for the array of doubles
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.DoubleArrayConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Overrides the CanConvertFrom method of TypeConverter.
            The ITypeDescriptorContext interface provides the context for the
            conversion. Typically this interface is used at design time to 
            provide information about the design-time container.
            </summary>
            <param name="context">Descriptor context.</param>
            <param name="sourceType">Convertion source type.</param>
            <returns>Indicates if convertion is possible.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.DoubleArrayConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Overrides the ConvertFrom method of TypeConverter.
            </summary>
            <param name="context">Descriptor context.</param>
            <param name="culture">Culture information.</param>
            <param name="value">Value to convert from.</param>
            <returns>Converted object.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.DoubleArrayConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Overrides the ConvertTo method of TypeConverter.
            </summary>
            <param name="context">Descriptor context.</param>
            <param name="culture">Culture information.</param>
            <param name="value">Value to convert.</param>
            <param name="destinationType">Convertion destination type.</param>
            <returns>Converted object.</returns>
        </member>
        <member name="T:Dundas.Charting.WebControl.Design.DataPointValueConverter">
            <summary>
            Converts data point values to and from date string format
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.DataPointValueConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Convert values to date string
            </summary>
            <param name="context">Descriptor context.</param>
            <param name="culture">Culture information.</param>
            <param name="value">Value to convert.</param>
            <param name="destinationType">Convertion destination type.</param>
            <returns>Converted object.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.DataPointValueConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Convert values from date string.
            </summary>
            <param name="context">Descriptor context.</param>
            <param name="culture">Culture information.</param>
            <param name="value">Value to convert from.</param>
            <returns>Converted object.</returns>
        </member>
        <member name="T:Dundas.Charting.WebControl.Design.DataPointCollectionEditor">
            <summary>
            Designer editor for the data points collection.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.DataPointCollectionEditor.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.DataPointCollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Do not allow to edit if multiple series selected.
            </summary>
            <param name="context">Descriptor context.</param>
            <param name="provider">Service provider.</param>
            <param name="value">Value to edit.</param>
            <returns>The new value of the object.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.DataPointCollectionEditor.CreateInstance(System.Type)">
            <summary>
            Create instance of data point object
            </summary>
            <param name="itemType">Item type.</param>
            <returns>New item instance.</returns>
        </member>
        <member name="T:Dundas.Charting.WebControl.Design.SeriesCollectionEditor">
            <summary>
            Designer editor for the data series collection.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.SeriesCollectionEditor.#ctor">
            <summary>
            Object constructor.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.SeriesCollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Edit series value.
            </summary>
            <param name="context">Descriptor context.</param>
            <param name="provider">Service provider.</param>
            <param name="value">Value to edit.</param>
            <returns>The new value of the object.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.SeriesCollectionEditor.CreateInstance(System.Type)">
            <summary>
            Create series instance in the editor 
            </summary>
            <param name="itemType">Item type.</param>
            <returns>Newly created item.</returns>
        </member>
        <member name="T:Dundas.Charting.WebControl.Design.SeriesYValueTypeConverter">
            <summary>
            Removes the String type for Y axes
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.SeriesYValueTypeConverter.#ctor(System.Type)">
            <summary>
            Public constructor
            </summary>
            <param name="type">Enumeration type.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.SeriesYValueTypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Fill in the list of data series names.
            </summary>
            <param name="context">Descriptor context.</param>
            <returns>Standard values collection.</returns>
        </member>
        <member name="T:Dundas.Charting.WebControl.Design.ColorArrayConverter">
            <summary>
            Data point attributes converter
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.ColorArrayConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            This method overrides CanConvertTo from TypeConverter. This is called when someone
            wants to convert an instance of object to another type.  Here,
            only conversion to an InstanceDescriptor is supported.
            </summary>
            <param name="context">Descriptor context.</param>
            <param name="destinationType">Destination type.</param>
            <returns>True if object can be converted.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.ColorArrayConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Overrides the CanConvertFrom method of TypeConverter.
            The ITypeDescriptorContext interface provides the context for the
            conversion. Typically this interface is used at design time to 
            provide information about the design-time container.
            </summary>
            <param name="context">Descriptor context.</param>
            <param name="sourceType">Convertion source type.</param>
            <returns>Indicates if convertion is possible.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.ColorArrayConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Overrides the ConvertTo method of TypeConverter.
            </summary>
            <param name="context">Descriptor context.</param>
            <param name="culture">Culture information.</param>
            <param name="value">Value to convert.</param>
            <param name="destinationType">Convertion destination type.</param>
            <returns>Converted object.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.ColorArrayConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Overrides the ConvertFrom method of TypeConverter.
            </summary>
            <param name="context">Descriptor context.</param>
            <param name="culture">Culture information.</param>
            <param name="value">Value to convert from.</param>
            <returns>Converted object.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.ColorArrayConverter.ColorArrayToString(System.Drawing.Color[])">
            <summary>
            Converts array of colors into string.
            </summary>
            <param name="colors">Colors array.</param>
            <returns>Result string.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.ColorArrayConverter.StringToColorArray(System.String)">
            <summary>
            Converts string into array of colors.
            </summary>
            <param name="colorNames">String data.</param>
            <returns>Array of colors.</returns>
        </member>
        <member name="T:Dundas.Charting.WebControl.Design.AxesArrayEditor">
            <summary>
            Designer editor for the chart areas collection.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.AxesArrayEditor.#ctor">
            <summary>
            Object constructor.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.AxesArrayEditor.CanRemoveInstance(System.Object)">
            <summary>
            Items can not be removed.
            </summary>
            <param name="value">Value.</param>
            <returns>False if can't remove.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.AxesArrayEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Edit object's value.
            </summary>
            <param name="context">Descriptor context.</param>
            <param name="provider">Service provider.</param>
            <param name="value">Calue.</param>
            <returns>Object.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.AxesArrayEditor.ShowHelp">
            <summary>
            Displaying help for the curently selected item in the property grid
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.AxesArrayEditor.CreateCollectionForm">
            <summary>
            Creates editor's form.
            </summary>
            <returns>Collection form.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.AxesArrayEditor.OnOkClicked(System.Object,System.EventArgs)">
            <summary>
            Update design-time HTML when OK button is clicked in the collection editor
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.AxesArrayEditor.OnControlAddedRemoved(System.Object,System.Windows.Forms.ControlEventArgs)">
            <summary>
            Update design-time HTML when propery is added or removed
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.AxesArrayEditor.OnPropertyChanged(System.Object,System.Windows.Forms.PropertyValueChangedEventArgs)">
            <summary>
            Update design-time HTML when propery is changed
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.Design.AxesArrayEditor.HelpTopic">
            <summary>
            Ovveride the HelpTopic property to provide different topics,
            depending on selected property.
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.Design.AxesArrayConverter">
            <summary>
            Converter object of axes array
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.AxesArrayConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Subproperties NOT suported.
            </summary>
            <param name="context">Descriptor context.</param>
            <returns>Always false.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.AxesArrayConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Overrides the ConvertTo method of TypeConverter.
            </summary>
            <param name="context">Descriptor context.</param>
            <param name="culture">Culture information.</param>
            <param name="value">Value.</param>
            <param name="destinationType">Destination type.</param>
            <returns>Converted object.</returns>
        </member>
        <member name="T:Dundas.Charting.WebControl.Design.AreaCollectionEditor">
            <summary>
            Designer editor for the chart areas collection.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.AreaCollectionEditor.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.AreaCollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Edit area value. 
            Saves a referense to the chart descriptor context.
            </summary>
            <param name="context">Editing context.</param>
            <param name="provider">Provider.</param>
            <param name="value">Value to edit.</param>
            <returns>Result</returns>
        </member>
        <member name="T:Dundas.Charting.WebControl.ChartTypes.PieLabelStyle">
            <summary>
            Pie Labels style
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.ChartTypes.PieLabelStyle.Inside">
            <summary>
            Labels are inside pie slice
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.ChartTypes.PieLabelStyle.Outside">
            <summary>
            Labels are outside pie slice
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.ChartTypes.PieLabelStyle.Disabled">
            <summary>
            Labels are disabled
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.ChartTypes.PieLabelStyle.Ellipse">
            <summary>
            Labels are set on the border of an ellipse
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.Borders3D.EmbossBorder">
            <summary>
            Implements emboss 3D border.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Borders3D.EmbossBorder.defaultRadiusSize">
            <summary>
            Default border radius size (relative)
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Borders3D.EmbossBorder.cornerRadius">
            <summary>
            Array of corner raduis
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Borders3D.EmbossBorder.#ctor">
            <summary>
            Public constructor
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Borders3D.EmbossBorder.GetTitlePositionInBorder">
            <summary>
            Returns the position of the rectangular area in the border where
            title should be displayed. Returns empty rect if title can't be shown in the border.
            </summary>
            <returns>Title position in border.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Borders3D.EmbossBorder.AdjustAreasPosition(Dundas.Olap.WebUIControls.ChartGraphics,System.Drawing.RectangleF@)">
            <summary>
            Adjust areas rectangle coordinate to fit the 3D border.
            </summary>
            <param name="graph">Graphics to darw the border on.</param>
            <param name="areasRect">Position to adjust.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Borders3D.EmbossBorder.DrawBorder(Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.BorderSkinAttributes,System.Drawing.RectangleF,System.Drawing.Color,Dundas.Olap.WebUIControls.ChartHatchStyle,System.String,Dundas.Olap.WebUIControls.ChartImageWrapMode,System.Drawing.Color,Dundas.Olap.WebUIControls.ChartImageAlign,Dundas.Olap.WebUIControls.GradientType,System.Drawing.Color,System.Drawing.Color,System.Int32,Dundas.Olap.WebUIControls.ChartDashStyle)">
            <summary>
            Draws 3D border.
            </summary>
            <param name="graph">Graphics to darw the border on.</param>
            <param name="borderSkin">Border skin object.</param>
            <param name="rect">Rectangle of the border.</param>
            <param name="backColor">Color of rectangle</param>
            <param name="backHatchStyle">Hatch style</param>
            <param name="backImage">Back Image</param>
            <param name="backImageMode">Image mode</param>
            <param name="backImageTranspColor">Image transparent color.</param>
            <param name="backImageAlign">Image alignment</param>
            <param name="backGradientType">Gradient type</param>
            <param name="backGradientEndColor">Gradient End Color</param>
            <param name="borderColor">Border Color</param>
            <param name="borderWidth">Border Width</param>
            <param name="borderStyle">Border Style</param>
        </member>
        <member name="P:Dundas.Charting.WebControl.Borders3D.EmbossBorder.Name">
            <summary>
            Chart type name
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.Design.AnnotationCollectionEditor">
            <summary>
            Designer editor for the Animation Collection collection.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.AnnotationCollectionEditor.#ctor">
            <summary>
            Object constructor.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.AnnotationCollectionEditor.CreateNewItemTypes">
            <summary>
            Gets the data types that this collection editor can contain.
            </summary>
            <returns>An array of data types that this collection can contain.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.AnnotationCollectionEditor.CreateInstance(System.Type)">
            <summary>
            Create annotation instance in the editor 
            </summary>
            <param name="itemType">Item type.</param>
            <returns>Newly created item.</returns>
        </member>
        <member name="T:Dundas.Charting.WebControl.Design.AnchorPointUITypeEditor">
            <summary>
            UI type editor for the annotation anchor point
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.AnchorPointUITypeEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Display a drop down list with check boxes.
            </summary>
            <param name="context">Editing context.</param>
            <param name="provider">Provider.</param>
            <param name="value">Value to edit.</param>
            <returns>Result</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.AnchorPointUITypeEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Gets editing style.
            </summary>
            <param name="context">Editing context.</param>
            <returns>Editor style.</returns>
        </member>
        <member name="T:Dundas.Charting.WebControl.Design.AnchorPointNameTreeView">
            <summary>
            Anchor data points name tree view, which is used for the UI type editing.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.AnchorPointNameTreeView.#ctor(System.Windows.Forms.Design.IWindowsFormsEditorService,Dundas.Olap.WebUIControls.Annotation,Dundas.Olap.WebUIControls.DataPoint)">
            <summary>
            Public constructor.
            </summary>
            <param name="edSvc">Editor service.</param>
            <param name="annotation">Annotation to edit.</param>
            <param name="dataPoint">Annotation anchor data point to edit.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.AnchorPointNameTreeView.FillTree">
            <summary>
            Fills data points name tree.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.AnchorPointNameTreeView.GetNewValue">
            <summary>
            Gets new data point.
            </summary>
            <returns>New enum value.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.AnchorPointNameTreeView.OnDoubleClick(System.EventArgs)">
            <summary>
            Mouse double clicked.
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.Design.AnnotationAxisUITypeEditor">
            <summary>
            UI type editor for the annotation axes.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.AnnotationAxisUITypeEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Display a drop down list with check boxes.
            </summary>
            <param name="context">Editing context.</param>
            <param name="provider">Provider.</param>
            <param name="value">Value to edit.</param>
            <returns>Result</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.AnnotationAxisUITypeEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Gets editing style.
            </summary>
            <param name="context">Editing context.</param>
            <returns>Editor style.</returns>
        </member>
        <member name="T:Dundas.Charting.WebControl.Design.AnnotationAxisNameTreeView">
            <summary>
            Annotation axes names tree view, which is used for the UI type editing.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.AnnotationAxisNameTreeView.#ctor(System.Windows.Forms.Design.IWindowsFormsEditorService,Dundas.Olap.WebUIControls.Annotation,Dundas.Olap.WebUIControls.Axis,System.Boolean)">
            <summary>
            Public constructor.
            </summary>
            <param name="edSvc">Editor service.</param>
            <param name="annotation">Annotation to edit.</param>
            <param name="axis">Axis object.</param>
            <param name="showXAxes">Indicates if X or Y axis should be shown.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.AnnotationAxisNameTreeView.FillTree">
            <summary>
            Fills data points name tree.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.AnnotationAxisNameTreeView.GetNewValue">
            <summary>
            Gets new data point.
            </summary>
            <returns>New enum value.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.AnnotationAxisNameTreeView.OnDoubleClick(System.EventArgs)">
            <summary>
            Mouse double clicked.
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.Design.AnchorPointValueConverter">
            <summary>
            Converts anchor data point to string name.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.AnchorPointValueConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts anchor data point to string name.
            </summary>
            <param name="context">Descriptor context.</param>
            <param name="culture">Culture information.</param>
            <param name="value">Value to convert.</param>
            <param name="destinationType">Convertion destination type.</param>
            <returns>Converted object.</returns>
        </member>
        <member name="T:Dundas.Charting.WebControl.Design.AnnotationAxisValueConverter">
            <summary>
            Converts anchor data point to string name.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.AnnotationAxisValueConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts anchor data point to string name.
            </summary>
            <param name="context">Descriptor context.</param>
            <param name="culture">Culture information.</param>
            <param name="value">Value to convert.</param>
            <param name="destinationType">Convertion destination type.</param>
            <returns>Converted object.</returns>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Ajax.DundasNumericEditor.EventTextChanged">
            <summary>
            Holds the TextChanged event handler
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Ajax.DundasNumericEditor.chart">
            <summary>
            The chart reference
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.DundasNumericEditor.#cctor">
            <summary>
            Initializes the <see cref="T:DundasNumericEditor"/> class.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.DundasNumericEditor.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DundasNumericEditor"/> class.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.DundasNumericEditor.OnTextChanged(System.EventArgs)">
            <summary>
            Raises the text changed event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.DundasNumericEditor.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the control in specified output.
            </summary>
            <param name="output">The output.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.DundasNumericEditor.System#Web#UI#IPostBackDataHandler#LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            When implemented by a class, processes postback data for an ASP.NET server control.
            </summary>
            <param name="postDataKey">The key identifier for the control.</param>
            <param name="postCollection">The collection of all incoming name values.</param>
            <returns>
            true if the server control's state changes as a result of the postback; otherwise, false.
            </returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.DundasNumericEditor.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent">
            <summary>
            When implemented by a class, signals the server control to notify the ASP.NET application that the state of the control has changed.
            </summary>
        </member>
        <member name="E:Dundas.Olap.WebUIControls.Ajax.DundasNumericEditor.TextChanged">
            <summary>
            Exposes TextChanged event handler
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Ajax.DundasNumericEditor.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Ajax.DundasNumericEditor.Tag">
            <summary>
            Gets or sets the tag.
            </summary>
            <value>The tag.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Ajax.DundasNumericEditor.MaxLength">
            <summary>
            Gets or sets the maximum length.
            </summary>
            <value>The maximum length.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Ajax.DundasNumericEditor.Columns">
            <summary>
            Gets or sets the number of columns.
            </summary>
            <value>The number of columns.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Ajax.DundasNumericEditor.Decimals">
            <summary>
            Gets or sets the numner of decimals.
            </summary>
            <value>The numner of decimals.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Ajax.DundasNumericEditor.MaxValue">
            <summary>
            Gets or sets the max value.
            </summary>
            <value>The max value.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Ajax.DundasNumericEditor.IncrementBy">
            <summary>
            Gets or sets the increment step.
            </summary>
            <value>The increment step.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Ajax.DundasNumericEditor.MinValue">
            <summary>
            Gets or sets the min value.
            </summary>
            <value>The min value.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Ajax.DundasNumericEditor.Chart">
            <summary>
            Gets or sets the chart.
            </summary>
            <value>The chart.</value>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.Ajax.DundasHatchGradientListBox">
            <summary>
            DundasHatchGradientListBox is an web control used Property Pages
            to select and display gradient and hatching types;
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.Ajax.DundasImageListBox">
            <summary>
            DundasImageListBox is an web control used Property Pages
            to select and display types assosiated with images as chart type, gradient type and other;
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.DundasImageListBox.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DundasImageListBox"/> class.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.DundasImageListBox.CreateChildControls">
            <summary>
            Called by the ASP.NET page framework to notify server controls that use 
            composition-based implementation to create any child controls they contain 
            in preparation for posting back or rendering.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.DundasImageListBox.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the control into specified output.
            </summary>
            <param name="output">The output.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.DundasImageListBox.System#Web#UI#IPostBackDataHandler#LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            When implemented by a class, processes postback data for an ASP.NET server control.
            </summary>
            <param name="postDataKey">The key identifier for the control.</param>
            <param name="postCollection">The collection of all incoming name values.</param>
            <returns>
            true if the server control's state changes as a result of the postback; otherwise, false.
            </returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.DundasImageListBox.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent">
            <summary>
            When implemented by a class, signals the server control to notify the ASP.NET 
            application that the state of the control has changed.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Ajax.DundasImageListBox.Text">
            <summary>
            Gets or sets the text.
            </summary>
            <value>The text.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Ajax.DundasImageListBox.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Ajax.DundasImageListBox.ImageUrl">
            <summary>
            Gets or sets the image URL.
            </summary>
            <value>The image URL.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Ajax.DundasImageListBox.DropDownImageUrl">
            <summary>
            Gets or sets the drop down image URL.
            </summary>
            <value>The drop down image URL.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Ajax.DundasImageListBox.Items">
            <summary>
            Gets the items.
            </summary>
            <value>The items.</value>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.DundasHatchGradientListBox.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DundasHatchGradientListBox"/> class.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.DundasHatchGradientListBox.CreateChildControls">
            <summary>
            Called by the ASP.NET page framework to notify server controls that use
            composition-based implementation to create any child controls they contain
            in preparation for posting back or rendering.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Ajax.DundasHatchGradientListBox.Color1">
            <summary>
            Gets or sets the color1.
            </summary>
            <value>The color1.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Ajax.DundasHatchGradientListBox.Color2">
            <summary>
            Gets or sets the color2.
            </summary>
            <value>The color2.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Ajax.DundasHatchGradientListBox.DoGradient">
            <summary>
            Gets or sets a value indicating whether to do gradient OR hatch.
            </summary>
            <value><c>true</c> if display gradient; otherwise (hatch), <c>false</c>.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Ajax.DundasHatchGradientListBox.GradientType">
            <summary>
            Gets or sets the type of the gradient.
            </summary>
            <value>The type of the gradient.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Ajax.DundasHatchGradientListBox.HatchingType">
            <summary>
            Gets or sets the type of the hatching.
            </summary>
            <value>The type of the hatching.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Ajax.DundasHatchGradientListBox.Chart">
            <summary>
            Gets or sets the chart.
            </summary>
            <value>The chart.</value>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.OlapGrid">
            <summary>
            OlapGrid WEB control
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGrid.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.OlapGrid.databinded">
            <summary>
            Indicates if data is binded
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.OlapGrid.printing">
            <summary>
            Indicates that grid is in printing mode
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.OlapGrid.olapToolbarSetup">
            <summary>
            Olap toolbar setup
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGrid.OnDataCellRender(Dundas.Olap.WebUIControls.OlapGrid.DataCellRenderEventArgs)">
            <summary>
            Cell rendering event handler
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGrid.OnHeaderCellRender(Dundas.Olap.WebUIControls.OlapGrid.HeaderCellRenderEventArgs)">
            <summary>
            Rns when cell is rendered
            </summary>
            <param name="e">event arg to be changed</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGrid.OnTitleRender(Dundas.Olap.WebUIControls.OlapGrid.RenderEventArgs)">
            <summary>
            Runs when title is rendered
            </summary>
            <param name="e">event argument</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGrid.OnLoad(System.EventArgs)">
            <summary>
            OnLoad event.
            </summary>
            <param name="e">Event argument.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGrid.OnInit(System.EventArgs)">
            <summary>
            OnInit event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGrid.OnPreRender(System.EventArgs)">
            <summary>
            Prerender event handler
            </summary>
            <param name="e">event argument</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGrid.Dispose">
            <summary>
            Dispose the control
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGrid.RaisePostBackEvent(System.String)">
            <summary>
            Processes callback events
            </summary>
            <param name="eventArgument">command argument</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGrid.BuildContextMenu(System.Int32,System.Int32)">
            <summary>
            Builds the context menu.
            </summary>
            <param name="axisIndex">Index of the axis.</param>
            /// <param name="dimensionIndex">Index of the dimension.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGrid.IsOnlyMeasuresInAxis(Dundas.Olap.Data.AxisDescriptor)">
            <summary>
            Checks if not only measure is on given axis
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGrid.ProcessAxisCommand(System.String)">
            <summary>
            Processes command for add/remove dimensions and filtering.
            </summary>
            <param name="eventArgument"></param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGrid.AddDimension(System.String)">
            <summary>
            Adds dimension to the given axis.
            </summary>
            <param name="param">axis and dimension/measure name</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGrid.GetAxisTypeByArea(System.String,System.String)">
            <summary>
            Gets axis type for given grid area.
            </summary>
            <param name="area">area id</param>
            <param name="dimensionName">dimension name</param>
            <returns>axis type</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGrid.SerializeToBinString">
            <summary>
            Serializes grid appearance attributes to base64 string.
            </summary>
            <returns>base64 serialized string</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGrid.SerializeToString(System.Boolean)">
            <summary>
            Serializes grid appearance attributes to base64 string.
            </summary>
            <returns>base64 serialized string</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGrid.DeserializeFromString(System.String,System.Boolean)">
            <summary>
            Deserializes appearance from given string
            </summary>
            <param name="appearance">previously serialized appearance</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGrid.DeserializeFromBinString(System.String)">
            <summary>
            Deserializes appearance from given string
            </summary>
            <param name="appearance">previously serialized appearance</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGrid.RestoreData">
            <summary>
            Restores the size of the grid.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGrid.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Used for class deserialization.
            </summary>
            <param name="info">serialization info.</param>
            <param name="context">context.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGrid.ApplyDefaultStyles">
            <summary>
            Apply default styles
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGrid.SetProxyValues(Dundas.Olap.WebUIControls.OlapGridElementStyle)">
            <summary>
            Sets border width and padding for element styles.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGrid.CheckIE">
            <summary>
            checks if client's browser is IE 
            </summary>
            <returns>true if IE</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGrid.ReplaceJavascriptCharacters(System.String)">
            <summary>
            Replaces ' and \n\r for javascript 
            </summary>
            <param name="content">content to be processed</param>
            <returns>changed string</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGrid.GetClipboardContent">
            <summary>
            Gets grid representation as a string.
            </summary>
            <returns>string value with grid content</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGrid.GetPageHTML(Dundas.Olap.WebUIControls.Renderer)">
            <summary>
            Returns page by renderer
            </summary>
            <param name="aRenderer">renderer</param>
            <returns>grid HTML</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGrid.CopyGrid(System.String)">
            <summary>
            Performs copy grid command.
            </summary>
            <param name="param"></param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGrid.PrintProcessing(System.Boolean)">
            <summary>
            Print and print preview command
            </summary>
            <param name="IsPreview">Indicates that it is preview command.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGrid.PrintGrid(System.String)">
            <summary>
            Performs Print command.
            </summary>
            <param name="param"></param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGrid.PrintPreviewGrid(System.String)">
            <summary>
            Performs print preview command.
            </summary>
            <param name="param"></param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGrid.AppearanceGrid(System.String)">
            <summary>
            Changes grid appearance.
            </summary>
            <param name="param"></param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGrid.ShowTotalsGrid(System.String)">
            <summary>
            Show/Hide total
            </summary>
            <param name="param"></param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGrid.OrientationGrid(System.String)">
            <summary>
            Change grid's orientation
            </summary>
            <param name="param"></param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGrid.OlapDataBind">
            <summary>
            Performs obtaining data from OlapManager
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGrid.SetOlapManager">
            <summary>
            Sets olap manager according to olap manager id
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGrid.OlapDataBind(System.Boolean)">
            <summary>
            Performs obtaining data from OlapManager
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGrid.RegisterEvents">
            <summary>
            Registers olap report change events
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGrid.UnregisterEvents">
            <summary>
            Unregisters olap report change events
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGrid.LoadAppearance">
            <summary>
            Load appearance from CurrentReport
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGrid.SaveAppearance">
            <summary>
            Save appearance to CurrentReport
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGrid.SaveAppearance(System.IO.Stream)">
            <summary>
            Saves grid appearance to stream.
            </summary>
            <param name="stream">stream where the appearance is saved.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGrid.LoadAppearance(Dundas.Olap.Manager.OlapReport,System.String)">
            <summary>
            Loads the appearance of the grid from the current report.
            </summary>
            <param name="report">An OlapReport value representing the instance of the report. </param>
            <param name="ctrlID">A string value representing the ID of the control.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGrid.LoadAppearance(System.IO.Stream)">
            <summary>
            Loads the appearance of the grid from a stream.
            </summary>
            <param name="stream">A Stream value where the data is loaded from.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGrid.SaveAppearance(Dundas.Olap.Manager.OlapReport,System.String)">
            <summary>
            Saves the appearance of the grid to the current report.
            </summary>
            <param name="report">An OlapReport value representing the instance of the report. </param>
            <param name="ctrlID">A string value representing the ID of the control.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGrid.LoadAppearance(Dundas.Olap.Manager.OlapReport)">
            <summary>
            Loads appearance for current control from report.
            </summary>
            <param name="report"></param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGrid.SaveAppearance(Dundas.Olap.Manager.OlapReport)">
            <summary>
            Saves current appearance to report.
            </summary>
            <param name="report"></param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGrid.ApplyPalette(System.String)">
            <summary>
            Applies new palette to the grid.
            </summary>
            <param name="appearance">New appearance.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGrid.Dundas#Olap#Manager#IOlapConditionalCallbackHandler#ShouldPopulateCallbackContent">
            <summary>
            Indicates that grid should be redrawn.
            </summary>
            <returns>true if grid requires redraw.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGrid.Dundas#Olap#Manager#IOlapCallbackHandler#PopulateCallbackContent(System.Web.UI.HtmlTextWriter,System.String)">
            <summary>
            Populates callback content.
            </summary>
            <param name="output">writer</param>
            <param name="contentType">content</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGrid.Invalidate">
            <summary>
            Invalidates this instance for forced rerendering during callbacks.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGrid.RegisterScripts">
            <summary>
            Registers callback scripts
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGrid.RenderContents(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the control.
            </summary>
            <param name="writer">writer</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGrid.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders grid content.
            </summary>
            <param name="writer">html writer</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGrid.Export(System.String)">
            <summary>
            Exports grid to file.
            </summary>
            <param name="FileName">Filename</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGrid.Export(System.IO.Stream)">
            <summary>
            Export the HTML to the stream.
            </summary>
            <param name="stream">Target stream.</param>
        </member>
        <member name="E:Dundas.Olap.WebUIControls.OlapGrid.dataCellRender">
            <summary>
            data cell rendering event
            </summary>
        </member>
        <member name="E:Dundas.Olap.WebUIControls.OlapGrid.headerCellRender">
            <summary>
            data cell rendering event
            </summary>
        </member>
        <member name="E:Dundas.Olap.WebUIControls.OlapGrid.titleRender">
            <summary>
            Title rendering event
            </summary>
        </member>
        <member name="E:Dundas.Olap.WebUIControls.OlapGrid.dataPopulated">
            <summary>
            Data populated event
            </summary>
        </member>
        <member name="E:Dundas.Olap.WebUIControls.OlapGrid.DataCellRender">
            <summary>
            Render cell event
            </summary>
        </member>
        <member name="E:Dundas.Olap.WebUIControls.OlapGrid.HeaderCellRender">
            <summary>
            event for cell render
            </summary>
        </member>
        <member name="E:Dundas.Olap.WebUIControls.OlapGrid.TitleRender">
            <summary>
            Event for cell render
            </summary>
        </member>
        <member name="E:Dundas.Olap.WebUIControls.OlapGrid.OlapDataPopulated">
            <summary>
            data populated event
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapGrid.SubTotalsVisible">
            <summary>
            Indicates that grid subtotals are shown
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapGrid.AddContextMenu">
            <summary>
            Gets or sets a value of context menu is added to the grid
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapGrid.Core">
            <summary>
            Gets core object.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapGrid.Printing">
            <summary>
            Indicates that the grid is in printing mode.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapGrid.BackColor">
            <summary>
            Gets or sets the background color of the grid.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapGrid.BorderColor">
            <summary>
            Gets or sets the border color of the grid.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapGrid.BorderStyle">
            <summary>
            Gets or sets the border style of the grid.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapGrid.BorderWidth">
            <summary>
            Gets or sets the border width of the grid.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapGrid.ForeColor">
            <summary>
            Gets or sets the foreground color of the grid.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapGrid.Padding">
            <summary>
            Gets or sets the padding of the grid.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapGrid.InterlacedRowsStyle">
            <summary>
            Gets or sets the style of the grid interlaced rows.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapGrid.RowsHeaderStyle">
            <summary>
            Gets or sets the style properties of the grid row headers.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapGrid.TotalsStyle">
            <summary>
            Gets or sets the style of grid totals.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapGrid.ColumnsHeaderStyle">
            <summary>
            Gets or sets the style properties of the grid column headers.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapGrid.DataAreaStyle">
            <summary>
            Gets or sets the style properties of the grid row headers.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapGrid.TitleStyle">
            <summary>
            Title style.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapGrid.TotalsVisible">
            <summary>
            Gets or sets a value representing whether the grid totals are visible.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapGrid.InterlacedRows">
            <summary>
            Gets or sets a value representing whether grid rows will be drawn with interlaced background color.
            </summary>        
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapGrid.Orientation">
            <summary>
            Gets or sets the orientation of the grid.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapGrid.EmptyCellValue">
            <summary>
            Gets or sets a string that represents an empty cell in the grid.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapGrid.CellBorderWidth">
            <summary>
            Gets or sets the border width for cells of the grid.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapGrid.TitleText">
            <summary>
            Gets or sets the title text of the grid.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapGrid.TitleColor">
            <summary>
            Gets or sets the title color of the grid.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapGrid.TitleBackColor">
            <summary>
            Gets or sets the title back color of the grid.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapGrid.TitleAlignment">
            <summary>
            Gets or sets the title alignment of the grid.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapGrid.TitleFont">
            <summary>
            Gets or sets the title font of the grid.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapGrid.TitlePadding">
            <summary>
            Gets or sets padding for title.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapGrid.TitleVisible">
            <summary>
            Gets or sets a value representing whether the grid title is visible.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapGrid.EnableMemberDrillDown">
            <summary>
            Gets or sets a value that represents whether individual, member-based drill down is enabled.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapGrid.OlapManagerID">
            <summary>
            Gets or sets the ID of the OlapManager.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapGrid.OlapManager">
            <summary>
            Gets or sets the OlapManager of the grid.
            <seealso cref="T:Dundas.Olap.Manager.OlapManager"/>
            </summary>
            <remarks>
            The <b>OlapReportList</b> control works with a list of reports 
            defined in the <see cref="P:Dundas.Olap.Manager.OlapManager.OlapReports"/> collection of the <see cref="T:Dundas.Olap.Manager.OlapManager"/>
            object. Any change to that list will automatically update the list content.
            
            If the end user adds, deletes or renames reports in the list, it will 
            automatically be reflected in the <b>OlapManager</b>. When the selected 
            report in the list is changed, it is automatically set as the <see cref="P:Dundas.Olap.Manager.OlapManager.CurrentOlapReport"/>
            in the associated <b>OlapManager</b> object.
            </remarks>       
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapGrid.ToolbarSettings">
            <summary>
            Gets the toolbar settings of the grid.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.OlapGrid.RenderEventArgs">
            <summary>
            Base class for render arg events
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGrid.RenderEventArgs.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapGrid.RenderEventArgs.Handled">
            <summary>
            Indicates that rendering is handled
            if true suppresses the standard rendering
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapGrid.RenderEventArgs.Cell">
            <summary>
            Cell object
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.OlapGrid.HeaderCellRenderEventArgs">
            <summary>
            Header cell render
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.OlapGrid.HeaderCellRenderEventArgs.tuple">
            <summary>
            Tuple in header item.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.OlapGrid.HeaderCellRenderEventArgs.headerType">
            <summary>
            Header type.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGrid.HeaderCellRenderEventArgs.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapGrid.HeaderCellRenderEventArgs.Tuple">
            <summary>
            Tuple for the cell
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapGrid.HeaderCellRenderEventArgs.HeaderType">
            <summary>
            Header type.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.OlapGrid.DataCellRenderEventArgs">
            <summary>
            Provides information for cell render
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGrid.DataCellRenderEventArgs.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapGrid.DataCellRenderEventArgs.ColumnIndex">
            <summary>
            Index of column to be rendered.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapGrid.DataCellRenderEventArgs.RowIndex">
            <summary>
            Index of row to be rendered.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapGrid.DataCellRenderEventArgs.CategoricalTuple">
            <summary>
            Categorical tuple
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapGrid.DataCellRenderEventArgs.SeriesTuple">
            <summary>
            Series tuple
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapGrid.DataCellRenderEventArgs.Value">
            <summary>
            Value for datacell
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.OlapGrid.DataCellRenderEventHandler">
            <summary>
            Delegate for cell rendering
            </summary>
            <param name="sender">sender</param>
            <param name="e">event argument</param>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.OlapGrid.HeaderCellRenderEventHandler">
            <summary>
            Delegate for header cell rendering
            </summary>
            <param name="sender">sender</param>
            <param name="e">event argument</param>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.OlapGrid.RenderEventHandler">
            <summary>
            Delegate for custom title rendering
            </summary>
            <param name="sender">sender</param>
            <param name="e">event argument</param>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.Renderer">
            <summary>
            Abstract class for firefox and IE render
            </summary>    
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Renderer.#ctor(Dundas.Olap.WebUIControls.OlapGrid,Dundas.Olap.WebUIControls.OlapGrids.Const.CSSFormats)">
            <summary>
            Renderer constructor.
            </summary>
            <param name="ctrl">olapgrid instance.</param>
            <param name="formats">formats to be applied.</param>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Renderer.styleFormats">
            <summary>
            container for style format strings 
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Renderer.RenderChildren(System.Web.UI.HtmlTextWriter,System.Web.UI.Control)">
            <summary>
            Renders children. 
            </summary>
            <param name="writer">writer</param>
            <param name="control">Control with children.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Renderer.AddCustomContent(System.Web.UI.HtmlTextWriter,System.Web.UI.HtmlControls.HtmlControl)">
            <summary>
            Adds custom rendering to a cell.
            </summary>
            <param name="writer">html writer.</param>
            <param name="control">control to be rendered.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Renderer.AddCustomAttributes(System.Web.UI.HtmlTextWriter,System.Web.UI.HtmlControls.HtmlControl)">
            <summary>
            Adds user custom rendering to writer.
            </summary>
            <param name="writer">html writer </param>
            <param name="control">control with user attributes</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Renderer.GetBasicStyle(Dundas.Olap.WebUIControls.StyleCombination,Dundas.Olap.WebUIControls.StyleCombination@)">
            <summary>
            Retrieve style from style combination
            </summary>
            <param name="styles">styles combination</param>
            <param name="currentStyle">current style enum</param>
            <returns>Result element style</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Renderer.GetSupplimentaryStyle(System.Web.UI.HtmlTextWriter,Dundas.Olap.WebUIControls.StyleCombination,Dundas.Olap.WebUIControls.StyleCombination)">
            <summary>
            Applies interlaced or total style to existing ones.
            </summary>
            <param name="writer">html writer</param>
            <param name="basicStyle">basic style</param>
            <param name="styles">styles to be applied</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Renderer.AddStyleToCellElement(System.Web.UI.HtmlTextWriter,Dundas.Olap.WebUIControls.StyleCombination)">
            <summary>
            Adds style to cell.
            </summary>
            <param name="writer">writer</param>
            <param name="styles">styles combination.</param>
            <returns>result style.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Renderer.AddStyleToElement(System.Web.UI.HtmlTextWriter,Dundas.Olap.WebUIControls.StyleCombination)">
            <summary>
            Appends style class and attributes to html writer
            </summary>
            <param name="writer">html writer</param>
            <param name="styles">styles combination</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Renderer.AddStyleName(System.Web.UI.HtmlTextWriter,Dundas.Olap.WebUIControls.OlapGridElementStyle)">
            <summary>
            Adds style class name to tag.
            </summary>
            <param name="writer">writer.</param>
            <param name="style">style.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Renderer.OpenCellTag(System.Web.UI.HtmlTextWriter,Dundas.Olap.WebUIControls.StyleCombination)">
            <summary>
            Opens cell tag.
            </summary>
            <param name="writer">writer.</param>
            <param name="styles">styles combination to be applied.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Renderer.CloseCellTag(System.Web.UI.HtmlTextWriter)">
            <summary>
            Closes td and div tags.
            </summary>
            <param name="writer">HTML writer</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Renderer.RenderCell(System.Web.UI.HtmlTextWriter,System.String,Dundas.Olap.WebUIControls.StyleCombination)">
            <summary>
            Render data cell
            </summary>
            <param name="writer">html writer</param>
            <param name="text">text to be rendered</param>
            <param name="styles">styles combination</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Renderer.RenderHeaderCell(System.Web.UI.HtmlTextWriter,Dundas.Olap.WebUIControls.OlapGridHeaderCore,System.Int32,System.Int32,System.String,System.Boolean)">
            <summary>
            Render header cell text (used for empty cell)
            </summary>
            <param name="writer">htmlwriter instance</param>
            <param name="header">rendering header</param>
            <param name="rowspan">rowspan cell attribute</param>
            <param name="colspan">colspan cell attribute</param>
            <param name="text">text to be rendered</param>
            <param name="useEmptyClass">use empty cell class</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Renderer.RenderHeaderCell(System.Web.UI.HtmlTextWriter,Dundas.Olap.WebUIControls.OlapGridHeaderCore,Dundas.Olap.WebUIControls.HeaderItem)">
            <summary>
            Render header cell item with drill icon (if required)
            </summary>
            <param name="writer">htmlwriter instance</param>
            <param name="header">rendering header</param>
            <param name="item">item to be rendered</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Renderer.GetItemTooltip(Dundas.Olap.WebUIControls.HeaderItem)">
            <summary>
            Gets tooltip for header
            </summary>
            <param name="item">header item</param>
            <returns>tooltip</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Renderer.RenderTitle(System.Web.UI.HtmlTextWriter)">
            <summary>
            renders title
            </summary>
            <param name="writer">htmlwriter instance</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Renderer.RenderTooltip(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders tooltip
            </summary>
            <param name="writer">html writer</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Renderer.RenderHiddenField(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders hidden field and watermark (for eval)
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Renderer.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Control render method
            </summary>
            <param name="writer">HtmlWriter instance</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Renderer.RenderHeader(System.Web.UI.HtmlTextWriter,Dundas.Olap.WebUIControls.OlapGridHeaderCore)">
            <summary>
            render header element
            </summary>
            <param name="writer">HtmlWriter instance</param>
            <param name="header">header to be rendered</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Renderer.AddTDAttributes(System.Web.UI.HtmlTextWriter,Dundas.Olap.WebUIControls.StyleCombination)">
            <summary>
            add style attributes for TD 
            </summary>
            <param name="writer">html writer</param>
            <param name="styles">styles combination</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Renderer.AddDivAttributes(System.Web.UI.HtmlTextWriter,Dundas.Olap.WebUIControls.StyleCombination)">
            <summary>
            add style attributes for TD's div 
            </summary>
            <param name="writer">html writer</param>
            <param name="styles">styles combination</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Renderer.GetCSSStylesDefinition">
            <summary>
            Gets style definition for rendering in page.
            </summary>
            <returns>css string</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Renderer.GetCSSBlockId">
            <summary>
            Gets css id
            </summary>
            <returns>css id</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Renderer.ImplementStyles">
            <summary>
            add all styles to page
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Renderer.RegisterScript(System.Web.UI.Page)">
            <summary>
            registers javascript and css files
            </summary>
            <param name="page"></param>
            <param name="id"></param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Renderer.AddContextMenu(System.Web.UI.HtmlTextWriter,System.Int32)">
            <summary>
            add context menu to current element.
            </summary>
            <param name="writer">html writer</param>
            <param name="axisIndex">axis index</param>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Renderer.Printing">
            <summary>
            Indicates that grid is in printing mode
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Renderer.StyleName">
            <summary>
            style file name
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Renderer.ScriptFileName">
            <summary>
            script filename
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.PrintRenderer">
            <summary>
            Performs rendering on print/print preview page
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.IERenderer">
            <summary>
            Renderer for internet explorer(old ver), base for clipboard, design time and printing.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.IERenderer.#ctor(Dundas.Olap.WebUIControls.OlapGrid)">
            <summary>
            constructor
            </summary>
            <param name="ctrl">control to be rendered</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.IERenderer.AddTDAttributes(System.Web.UI.HtmlTextWriter,Dundas.Olap.WebUIControls.StyleCombination)">
            <summary>
            add style attributes for TD 
            </summary>
            <param name="writer">htmlwriter instance</param>
            <param name="styles">styles combination to be applied</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.IERenderer.AddDivAttributes(System.Web.UI.HtmlTextWriter,Dundas.Olap.WebUIControls.StyleCombination)">
            <summary>
            add style attributes for TD's div 
            </summary>
            <param name="writer">html writer</param>
            <param name="styles">styles combination to be applied</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.IERenderer.OpenCellTag(System.Web.UI.HtmlTextWriter,Dundas.Olap.WebUIControls.StyleCombination)">
            <summary>
            Renders open tags for cell and/or div. 
            </summary>
            <param name="writer">html writer</param>
            <param name="styles">styles combination to be applied</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.IERenderer.CloseCellTag(System.Web.UI.HtmlTextWriter)">
            <summary>
            Closes cell tags.
            </summary>
            <param name="writer">html writer.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.IERenderer.RenderHeaderCell(System.Web.UI.HtmlTextWriter,Dundas.Olap.WebUIControls.OlapGridHeaderCore,Dundas.Olap.WebUIControls.HeaderItem)">
            <summary>
            Render header cell item with drill icon (if required)
            </summary>
            <param name="writer">htmlwriter instance</param>
            <param name="header">rendering header</param>
            <param name="item">item to be rendered</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.IERenderer.RenderHeaderCell(System.Web.UI.HtmlTextWriter,Dundas.Olap.WebUIControls.OlapGridHeaderCore,System.Int32,System.Int32,System.String,System.Boolean)">
            <summary>
            Render header cell text (used for empty cell)
            </summary>
            <param name="writer">htmlwriter instance</param>
            <param name="header">rendering header</param>
            <param name="rowspan">rowspan cell attribute</param>
            <param name="colspan">colspan cell attribute</param>
            <param name="text">text to be rendered</param>
            <param name="useEmptyClass">use empty cell class</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.IERenderer.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Control render method.
            </summary>
            <param name="writer">HtmlWriter instance</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.IERenderer.RenderHeader(System.Web.UI.HtmlTextWriter,Dundas.Olap.WebUIControls.OlapGridHeaderCore)">
            <summary>
            render header element
            </summary>
            <param name="writer">HtmlWriter instance</param>
            <param name="header">header to be rendered</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.IERenderer.AddStyleName(System.Web.UI.HtmlTextWriter,Dundas.Olap.WebUIControls.OlapGridElementStyle)">
            <summary>
            Adds CSS class name to tag
            </summary>
            <param name="writer">html writer</param>
            <param name="style">grid element style</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.IERenderer.RenderHeaderTransposedRow(System.Web.UI.HtmlTextWriter,Dundas.Olap.WebUIControls.OlapGridRowHeader,System.Int32)">
            <summary>
            renders row for row header
            </summary>
            <param name="writer">HtmlWriter instance</param>
            <param name="header">rendering header</param>
            <param name="rowNo">row number</param>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.IERenderer.ScriptFileName">
            <summary>
            script filename
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.IERenderer.StyleName">
            <summary>
            style file name
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.PrintRenderer.#ctor(Dundas.Olap.WebUIControls.OlapGrid)">
            <summary>
            Default constructor
            </summary>
            <param name="ctrl">ctrl to be rendered</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.PrintRenderer.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders grid printing content
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.PrintRenderer.RegisterScript(System.Web.UI.Page)">
            <summary>
            Doesn't register any scripts
            </summary>
            <param name="page"></param>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.PrintRenderer.StyleName">
            <summary>
            style file name
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.PrintRenderer.ScriptFileName">
            <summary>
            Returns empty string for script name
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.DesignTimeRenderer">
            <summary>
            Design time renderer
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DesignTimeRenderer.RenderHeaderCell(System.Web.UI.HtmlTextWriter,Dundas.Olap.WebUIControls.OlapGridHeaderCore,Dundas.Olap.WebUIControls.HeaderItem)">
            <summary>
            Render header cell item with drill icon (if required)
            </summary>
            <param name="writer">htmlwriter instance</param>
            <param name="header">rendering header</param>
            <param name="item">item to be rendered</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DesignTimeRenderer.RenderHeaderCell(System.Web.UI.HtmlTextWriter,Dundas.Olap.WebUIControls.OlapGridHeaderCore,System.Int32,System.Int32,System.String,System.Boolean)">
            <summary>
            Render header cell text (used for empty cell)
            </summary>
            <param name="writer">htmlwriter instance</param>
            <param name="header">rendering header</param>
            <param name="rowspan">rowspan cell attribute</param>
            <param name="colspan">colspan cell attribute</param>
            <param name="text">text to be rendered</param>
            <param name="useEmptyClass">use empty cell class</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DesignTimeRenderer.AddTDAttributes(System.Web.UI.HtmlTextWriter,Dundas.Olap.WebUIControls.StyleCombination)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="styles"></param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DesignTimeRenderer.OpenCellTag(System.Web.UI.HtmlTextWriter,Dundas.Olap.WebUIControls.StyleCombination)">
            <summary>
            Implements additional styles and opens necessary tags for data area cell.
            </summary>
            <param name="writer">writer</param>
            <param name="styles">srtyle combination to be applied.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DesignTimeRenderer.GetResultColor(System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Checks and returns valid color for total
            </summary>
            <param name="standard">Current area color</param>
            <param name="total">Total style color</param>
            <returns>resulting color</returns>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.FFRenderer">
            <summary>
            Renderer for firefox
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.FFRenderer.#ctor(Dundas.Olap.WebUIControls.OlapGrid)">
            <summary>
            constructor
            </summary>
            <param name="ctrl">control to be rendered</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.FFRenderer.RenderDataCell(System.Web.UI.HtmlTextWriter,System.Int32,System.Int32,Dundas.Olap.WebUIControls.StyleCombination,System.Boolean)">
            <summary>
            Renders data cell.
            </summary>
            <param name="writer">Writer.</param>
            <param name="rowIndex">Row index.</param>
            <param name="columnIndex">Column index.</param>
            <param name="curStyle">style combination</param>
            <param name="addEol">Add ot not EOL in tooltips.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.FFRenderer.AddTDAttributes(System.Web.UI.HtmlTextWriter,Dundas.Olap.WebUIControls.StyleCombination)">
            <summary>
            Add style attributes for TD.
            </summary>
            <param name="writer">HTML writer</param>
            <param name="styles">styles combination</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.FFRenderer.AddDivAttributes(System.Web.UI.HtmlTextWriter,Dundas.Olap.WebUIControls.StyleCombination)">
            <summary>
            Add style attributes for TD's div.
            </summary>
            <param name="writer">HTML writer</param>
            <param name="styles">styles combination</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.FFRenderer.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Control render method.
            </summary>
            <param name="writer">HtmlWriter instance</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.FFRenderer.RenderHeader(System.Web.UI.HtmlTextWriter,Dundas.Olap.WebUIControls.OlapGridHeaderCore)">
            <summary>
            render header element
            </summary>
            <param name="writer">HtmlWriter instance</param>
            <param name="header">header to be rendered</param>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.FFRenderer.StyleName">
            <summary>
            Style file name
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.FFRenderer.ScriptFileName">
            <summary>
            Script filename
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.IEBlockRenderer">
            <summary>
            Performs rendering in IE
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.IEBlockRenderer.#ctor(Dundas.Olap.WebUIControls.OlapGrid)">
            <summary>
            Constructor.
            </summary>
            <param name="aCore">core instance.</param>
            <param name="ctrl">olap grid instance.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.IEBlockRenderer.RenderHeader(System.Web.UI.HtmlTextWriter,Dundas.Olap.WebUIControls.OlapGridHeaderCore)">
            <summary>
            Renders header element.
            </summary>
            <param name="writer">HtmlWriter instance</param>
            <param name="header">header to be rendered</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.IEBlockRenderer.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Control render method
            </summary>
            <param name="writer">HtmlWriter instance</param>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.IEBlockRenderer.ScriptFileName">
            <summary>
            Returns script file name for IE.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.ClipboardRenderer">
            <summary>
            Renders grid content to clipboard
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ClipboardRenderer.#ctor(Dundas.Olap.WebUIControls.OlapGrid)">
            <summary>
            Constructor.
            </summary>
            <param name="aCore">Core instance.</param>
            <param name="ctrl">Grid control.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ClipboardRenderer.AddTDAttributes(System.Web.UI.HtmlTextWriter,Dundas.Olap.WebUIControls.StyleCombination)">
            <summary>
            Adds no attributes to TD tag.
            </summary>
            <param name="writer">writer.</param>
            <param name="styles">Styles to be applied.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ClipboardRenderer.AddDivAttributes(System.Web.UI.HtmlTextWriter,Dundas.Olap.WebUIControls.StyleCombination)">
            <summary>
            Adds no attributes to DIV tag.
            </summary>
            <param name="writer">writer.</param>
            <param name="styles">Styles to be applied.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ClipboardRenderer.CloseCellTag(System.Web.UI.HtmlTextWriter)">
            <summary>
            Closes cell tag.
            </summary>
            <param name="writer">writer.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ClipboardRenderer.OpenCellTag(System.Web.UI.HtmlTextWriter,Dundas.Olap.WebUIControls.StyleCombination)">
            <summary>
            Open cell tag.
            </summary>
            <param name="writer">writer</param>
            <param name="styles">styles to be applied.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ClipboardRenderer.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Control render method
            </summary>
            <param name="writer">HtmlWriter instance</param>       
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ClipboardRenderer.StyleName">
            <summary>
            Returns css file name.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ClipboardRenderer.ScriptFileName">
            <summary>
            Returns javascript file name.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.RendererFactory">
            <summary>
            factory produces instances of renderer according to client's browser 
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.RendererFactory.CreateDummyData(Dundas.Olap.WebUIControls.OlapGrid)">
            <summary>
            Creates dummy data for design-time renderer
            </summary>
            <param name="ctrl">ctrl to be rendered.</param>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.CommandAction">
            <summary>
            Grid command delegate 
            </summary>
            <param name="arg">command argument</param>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.OlapGridOrientation">
            <summary>
            enum for grid orientatiion
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.OlapGridOrientation.Vertical">
            <summary>
            Vertical grid orientation
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.OlapGridOrientation.Horizontal">
            <summary>
            Horizontal grid orientation
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.RendererMode">
            <summary>
            Renderer modes
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.OlapGridAlignment">
            <summary>
            Vertical and horizontal alignment
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.OlapGridAlignment.Auto">
            <summary>
            Not aligned
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.OlapGridAlignment.Near">
            <summary>
            Left alignment.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.OlapGridAlignment.Center">
            <summary>
            Centered
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.OlapGridAlignment.Far">
            <summary>
            Right alignment.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.OlapGridAlignment.None">
            <summary>
            For backward compatibility
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.HeaderType">
            <summary>
            Header type.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.ScriptManagerWrapper">
            <summary>
            ScriptManager for Olap grid startup script registration.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ScriptManagerWrapper.#cctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ScriptManagerWrapper.GetScriptManager(System.Web.UI.Control)">
            <summary>
            Returns script manager
            </summary>
            <param name="ctrl">ctrl to be checked</param>
            <returns>script manager instance or null if not found</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ScriptManagerWrapper.RegisterScript(System.String,System.Web.UI.Control,System.Web.UI.HtmlTextWriter)">
            <summary>
            Registers script
            </summary>
            <param name="script">script text.</param>
            <param name="callingCtrl">OlapGrid control.</param>
            <param name="writer">html writer.</param>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.OlapClient">
            <summary>
            The Dundas OLAP Web Client is a ready-to-use, fully managed .NET control
            that can be dropped from the toolbox onto a form for immediate use in an 
            application.
            </summary>
            <remarks>
            <p>Once the <see cref="P:Dundas.Olap.WebUIControls.OlapClient.DataProvider"/> property is associated with an <b>OlapClient</b>
            control, the Dundas OLAP Web Client can be deployed.</p>
            
            <p>The <b>OlapClient</b> control contains all Dundas OLAP UI components.
            This includes:</p>
            	- <see cref="P:Dundas.Olap.WebUIControls.OlapClient.OlapManager"/><br/>
            	- <see cref="P:Dundas.Olap.WebUIControls.OlapClient.OlapReportList"/><br/> 
            	- <see cref="P:Dundas.Olap.WebUIControls.OlapClient.CubeSelector"/><br/>
            	- <see cref="P:Dundas.Olap.WebUIControls.OlapClient.CubeDimensionBrowser"/><br/>
            	- <see cref="T:Dundas.Olap.WebUIControls.AxisBuilder"/> for Categorical, Series and Slicer axes.<br/>
            	- <see cref="P:Dundas.Olap.WebUIControls.OlapClient.OlapChart"/><br/>
            	- <see cref="T:Dundas.Olap.WebUIControls.OlapChartToolbar"/><br/>
            </remarks>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapClient.#ctor">
            <summary>
            Initializes new instance of OlapClient class.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapClient.InitializeChart">
            <summary>
            Initializes the chart.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapClient.ShouldSerializeDataProviderID">
            <summary>
            Indicates whether the DataProviderID property should be persisted.
            </summary>
            <returns>
            Returns true if the property value has changed from its default; otherwise false.
            </returns>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.OlapClient.invalidated">
            <summary>
            Invadidated flag
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapClient.Invalidate">
            <summary>
            Invalidates this instance.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapClient.AddToControlTable(System.Web.UI.Control,System.String)">
            <summary>
            Adds to control a hashtable.
            </summary>
            <param name="control">The control.</param>
            <param name="controlName">Name of the control.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapClient.GetControlFromTable(System.String)">
            <summary>
            Gets the control from hashtable.
            </summary>
            <param name="controlName">Name of the control.</param>
            <returns>A control</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapClient.SetControlVisible(System.String,System.Boolean)">
            <summary>
            Sets the control visible.
            </summary>
            <param name="controlName">Name of the control.</param>
            <param name="visible">if set to <c>true</c> the control is set to visible.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapClient.GetViewStateBoolProp(System.String,System.Boolean)">
            <summary>
            Gets the view state bool property.
            </summary>
            <param name="name">The name.</param>
            <param name="defaultVal">if set to <c>true</c> returns default value if the ViewState is empty.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapClient.CreateLabel(System.String,System.Boolean)">
            <summary>
            Creates the label.
            </summary>
            <param name="text">The text.</param>
            <param name="visible">if set to <c>true</c> creates visible lavel.</param>
            <returns>A label</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapClient.GetClientHeight">
            <summary>
            Gets the height of the client.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapClient.InitIDs">
            <summary>
            Inits the Ids of internal controls.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapClient.GetDimensionBrowserHeight">
            <summary>
            Gets the height of the dimension browser.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapClient.CreateLeftTable(System.Web.UI.WebControls.WebControl)">
            <summary>
            Creates the left table.
            </summary>
            <param name="parent">The parent.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapClient.GetStyleBorder(System.Web.UI.WebControls.Style)">
            <summary>
            Gets the style border.
            </summary>
            <param name="style">The style.</param>
            <returns>the width of border in pixels</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapClient.GetToolbarHeight">
            <summary>
            Gets the height of the toolbar.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapClient.GetChartHeight">
            <summary>
            Gets the chart hight.
            </summary>
            <returns>Chart height in pixels</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapClient.GetChartWidth">
            <summary>
            Gets the width of the chart.
            </summary>
            <returns>Chart width in pixels</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapClient.AdjustChartSpace">
            <summary>
            Adjusts the chart space.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapClient.AjustTabButtons">
            <summary>
            Ajusts the tab buttons.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapClient.ApplyButtonDesignTimeStyle(System.Web.UI.HtmlControls.HtmlGenericControl,System.String)">
            <summary>
            Applies the button design time style.
            </summary>
            <param name="button">The button.</param>
            <param name="style">The style.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapClient.SetButtonDesignTimeStyle(System.Web.UI.HtmlControls.HtmlGenericControl,System.Boolean)">
            <summary>
            Sets the button design time style.
            </summary>
            <param name="button">The button.</param>
            <param name="pressed">if set to <c>true</c> [pressed].</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapClient.CreateTabButton(System.String,System.String,System.Boolean,System.Int32)">
            <summary>
            Creates the tab button.
            </summary>
            <param name="image">The image.</param>
            <param name="text">The text.</param>
            <param name="pressed">if set to <c>true</c> [pressed].</param>
            <param name="position">The position.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapClient.CreateChartTabControl(System.Web.UI.WebControls.WebControl)">
            <summary>
            Creates the chart tab control.
            </summary>
            <param name="parent">The parent.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapClient.CreateChartSpace(System.Web.UI.WebControls.WebControl)">
            <summary>
            Creates the chart space.
            </summary>
            <param name="parent">The parent.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapClient.CreateRightTable(System.Web.UI.WebControls.WebControl)">
            <summary>
            Creates the right table.
            </summary>
            <param name="parent">The parent.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapClient.CheckFontControl(System.Web.UI.WebControls.WebControl)">
            <summary>
            Checks the font of control.
            </summary>
            <param name="control">The control.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapClient.SetDirty">
            <summary>
            Sets the dirty flag.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapClient.CreateChildControls">
            <summary>
            This member overrides <see cref="M:System.Web.UI.Control.CreateChildControls"/>
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapClient.LoadViewState(System.Object)">
            <summary>
            Restores view-state information from a previous request that was saved with the <see cref="M:System.Web.UI.WebControls.WebControl.SaveViewState"></see> method.
            </summary>
            <param name="savedState">An object that represents the control state to restore.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapClient.SaveViewState">
            <summary>
            Saves any state that was modified after the <see cref="M:System.Web.UI.WebControls.Style.TrackViewState"></see> method was invoked.
            </summary>
            <returns>
            An object that contains the current view state of the control; otherwise, if there is no view state associated with the control, null.
            </returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapClient.OnInit(System.EventArgs)">
            <summary>
            This member overrides <see cref="M:System.Web.UI.Control.OnInit(System.EventArgs)"/>
            </summary>
            <param name="e">Event Arguments</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapClient.OnLoad(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Web.UI.Control.Load"></see> event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"></see> object that contains the event data.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapClient.CheckChartVisibility">
            <summary>
            Checks the chart visibility.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapClient.OnPreRender(System.EventArgs)">
            <summary>
            This member overrides <see cref="M:System.Web.UI.Control.OnPreRender(System.EventArgs)"/>
            </summary>
            <param name="e">Event Arguments</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapClient.RenderDesignTime2(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the design time2.
            </summary>
            <param name="output">The output.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapClient.Render(System.Web.UI.HtmlTextWriter)">
            <summary> 
            Render this control to the output parameter specified.
            </summary>
            <param name="output"> The HTML writer to write out to </param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapClient.CallPreRender(System.Web.UI.Control)">
            <summary>
            Calls the pre render.
            </summary>
            <param name="control">The control.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapClient.GetClientState">
            <summary>
            Gets the state of the client.
            </summary>
            <returns>A BitArray with client state.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapClient.GetClientSavedState">
            <summary>
            Gets the saved state of the client.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapClient.IsMaximized">
            <summary>
            Determines whether this OlapClient is maximized.
            </summary>
            <returns>
            	<c>true</c> if this OlapClient is maximized; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapClient.SwitchView">
            <summary>
            Switches the view.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapClient.Dundas#Olap#Manager#IOlapCallbackHandler#PopulateCallbackContent(System.Web.UI.HtmlTextWriter,System.String)">
            <summary>
            Returns internal content of the control used to visual ( DHTML) or script updating.
            </summary>
            <param name="output">A <see cref="T:System.Web.UI.HtmlTextWriter"/> used for output</param>
            <param name="contentType">The requested type of content</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapClient.Dundas#Olap#Manager#IOlapConditionalCallbackHandler#ShouldPopulateCallbackContent">
            <summary>
            Returns true if this control should populate its callback content
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapClient.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)">
            <summary>
            When implemented by a class, enables a server control to process an event raised when a form is posted to the server.
            </summary>
            <param name="eventArgument">A <see cref="T:System.String"></see> that represents an optional event argument to be passed to the event handler.</param>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapClient.OlapManager">
            <summary>
            Gets the OlapManager object that is used in the client.
            </summary>
            <seealso cref="T:Dundas.Olap.Manager.OlapManager"/>
            <remarks>
            <P>The <b>OlapReportList</b> control works with a list of reports 
            defined in the <see cref="P:Dundas.Olap.Manager.OlapManager.OlapReports"/> collection of the <see cref="T:Dundas.Olap.Manager.OlapManager"/>
            object. Any change to that list will automatically update the contents of the report list.</P>
            
            <p>If the end user adds, deletes or renames reports in the list, this will 
            automatically be reflected in the <b>OlapManager</b>. When the selected 
            report in the list has changed, it is automatically set as the <see cref="P:Dundas.Olap.Manager.OlapManager.CurrentOlapReport"/>
            in the associated <b>OlapManager</b> object.</p>
            </remarks>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapClient.DataProvider">
            <summary>
            Gets or sets the DataProvider object that is used in the client.
            </summary>
            <value>
            An <see cref="T:Dundas.Olap.Data.IDataProvider"/> object that represents the multidimensional 
            data provider currently used by the <b>OlapClient</b>.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapClient.DataProviderID">
            <summary>
            Gets or sets the DataProviderID object that is used in the client.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapClient.EnableViewState">
            <summary>
            Gets or sets a value indicating whether the server control persists its view state 
            (and the view state of any child controls it contains) to the requesting client.
            </summary>
            <value>
            Returns true if the server control maintains its view state; otherwise false. Defaults to false.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapClient.DimensionBrowserWidth">
            <summary>
            Gets or sets the DimensionBrowser width (measured to the left of the chart).
            </summary>
            <value>
            The width of the DimensionBrowser.
            </value>
            <remarks>
            This value must be in pixels.
            </remarks>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapClient.SeriesBuilderWidth">
            <summary>
            Gets or sets the SeriesBuilder width (measured to the right of the chart).
            </summary>
            <value>
            The width of the SeriesBuilder.
            </value>
            <remarks>
            This value must be in pixels.
            </remarks>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapClient.Width">
            <summary>
            Gets or sets the control width.
            </summary>
            <value>
            The control width in pixels.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapClient.Height">
            <summary>
            Gets or sets the control height.
            </summary>
            <value>
            The control height in pixels.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapClient.DimensionBrowserStyle">
            <summary>
            Gets the <see cref="P:Dundas.Olap.WebUIControls.OlapClient.DimensionBrowserStyle"/> style.
            </summary>
            <value>
            A <see cref="P:Dundas.Olap.WebUIControls.OlapClient.DimensionBrowserStyle"/> value that represents the style of the <see cref="P:Dundas.Olap.WebUIControls.OlapClient.CubeDimensionBrowser"/> control.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapClient.AxisBuilderStyle">
            <summary>
            Gets the <see cref="P:Dundas.Olap.WebUIControls.OlapClient.AxisBuilderStyle"/> style.
            </summary>
            <value>
            An <see cref="P:Dundas.Olap.WebUIControls.OlapClient.AxisBuilderStyle"/> which represents the style of all the <see cref="T:Dundas.Olap.WebUIControls.AxisBuilder"/> controls.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapClient.ToolbarStyle">
            <summary>
            Gets the style of the toolbar in the OLAP Client.
            </summary>
            <value>
            An <see cref="P:Dundas.Olap.WebUIControls.OlapClient.AxisBuilderStyle"/> which represents the style of all the <see cref="T:Dundas.Olap.WebUIControls.AxisBuilder"/> controls.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapClient.FrameStyle">
            <summary>
            Gets the <see cref="P:Dundas.Olap.WebUIControls.OlapClient.FrameStyle"/> style.
            </summary>
            <value>
            A <see cref="P:Dundas.Olap.WebUIControls.OlapClient.FrameStyle"/> which represents the style of decorative frames with labels.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapClient.ReportListRows">
            <summary>
            Gets or sets the number of rows displayed in the <b>OlapReportList</b> control.
            </summary>
            <value>
            The number of rows displayed in the <b>OlapReportList</b> control.
            </value>
            <remarks>
            By default, four rows are displayed in the OlapReportList.
            </remarks>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapClient.OlapReportList">
            <summary>
            Olap Report List control.
            <seealso cref="P:Dundas.Olap.WebUIControls.OlapClient.ShowReportList"/>
            </summary>
            <value>
            An <see cref="P:Dundas.Olap.WebUIControls.OlapClient.OlapReportList"/> object that represents an OLAP Report List
            control in the client.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapClient.CubeSelector">
            <summary>
            Olap Cube Selector control.
            <seealso cref="P:Dundas.Olap.WebUIControls.OlapClient.ShowCubeSelector"/>
            </summary>
            <value>
            A <see cref="P:Dundas.Olap.WebUIControls.OlapClient.CubeSelector"/> object that represents the OLAP Cube
            Selector control in the client.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapClient.CubeDimensionBrowser">
            <summary>
            Gets the CubeDimensionBrowser control that is used in the client.
            </summary>
            <seealso cref="P:Dundas.Olap.WebUIControls.OlapClient.ShowDimensionBrowser"/>
            <value>
            A <see cref="P:Dundas.Olap.WebUIControls.OlapClient.CubeDimensionBrowser"/> object that represents the OLAP cube
            dimension browser tree control that is used in the client.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapClient.AxisBuilderCategorical">
            <summary>
            Gets the categorical axis builder control that is used in the client.
            </summary>
            <seealso cref="P:Dundas.Olap.WebUIControls.OlapClient.ShowAxisBuilderCategorical"/>
            <value>
            An <see cref="T:Dundas.Olap.WebUIControls.AxisBuilder"/> object that represents the categorical axis builder control that is used in the client.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapClient.AxisBuilderSlicer">
            <summary>
            Gets the slicer axis builder control that is used in the client.
            </summary>
            <seealso cref="P:Dundas.Olap.WebUIControls.OlapClient.ShowAxisBuilderSlicer"/>
            <value>
            An <see cref="T:Dundas.Olap.WebUIControls.AxisBuilder"/> object that represents the slicer axis builder control that is used in the client.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapClient.AxisBuilderSeries">
            <summary>
            Gets the series axis builder control that is used in the client.
            </summary>
            <seealso cref="P:Dundas.Olap.WebUIControls.OlapClient.ShowAxisBuilderSeries"/>
            <value>
            An <see cref="T:Dundas.Olap.WebUIControls.AxisBuilder"/> object that represents the series axis builder control that is used in the client.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapClient.OlapChart">
            <summary>
            Gets the OlapChart control that is used in the client.
            </summary>
            <value>
            An <see cref="P:Dundas.Olap.WebUIControls.OlapClient.OlapChart"/> object that represents the OlapChart control that is used in the client.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapClient.OlapToolbar">
            <summary>
            Gets the OlapToolbar control that is used in the client.
            </summary>
            <value>
            An <see cref="T:Dundas.Olap.WebUIControls.OlapChartToolbar"/> object that represents the OlapChart control that is used in the client.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapClient.OlapGrid">
            <summary>
            Gets the OlapGrid control that is used in the client.
            </summary>
            <value>
            An <see cref="P:Dundas.Olap.WebUIControls.OlapClient.OlapGrid"/> object that represents the OlapGrid control that is used in the client.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapClient.ShowToolbar">
            <summary>
            Indicates if the <b>OlapToolbar</b> control is shown in the client.
            </summary>
            <value>
            A <b>boolean</b> value that indicates if the <see cref="P:Dundas.Olap.WebUIControls.OlapClient.OlapToolbar"/> control
            is visible from within the OLAP Client.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapClient.ShowReportList">
            <summary>
            Indicates if the <b>OlapReportList</b> control is shown in the client.
            </summary>
            <value>
            A <b>boolean</b> value that indicates if the <see cref="P:Dundas.Olap.WebUIControls.OlapClient.OlapReportList"/> control
            is visible from within the OLAP Client.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapClient.ShowReportListInToolbar">
            <summary>
            Indicates if the <b>OlapReportList</b> control is shown in the toolbar.
            </summary>
            <value>
            A <b>boolean</b> value that indicates if the <see cref="P:Dundas.Olap.WebUIControls.OlapClient.OlapReportList"/> control
            is visible from within the toolbar of the OLAP Client.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapClient.ShowCubeSelector">
            <summary>
            Indicates if the <b>CubeSelector</b> control is shown in the client.
            </summary>
            <value>
            A <b>boolean</b> value that indicates if the <see cref="P:Dundas.Olap.WebUIControls.OlapClient.CubeSelector"/> control
            is visible from within the OLAP Client.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapClient.ShowDimensionBrowser">
            <summary>
            Indicates if <b>CubeDimensionBrowser</b> control is shown in the client.
            </summary>
            <value>
            A <b>boolean</b> value that indicates if the <see cref="P:Dundas.Olap.WebUIControls.OlapClient.CubeDimensionBrowser"/> control
            is visible inside the Olap Client.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapClient.ShowAxisBuilderCategorical">
            <summary>
            Indicates if the categorical <b>AxisBuilder</b> control is shown in the client.
            </summary>
            <value>
            A <b>boolean</b> value that indicates if the categorical <see cref="T:Dundas.Olap.WebUIControls.AxisBuilder"/> control
            is visible from within the Olap client.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapClient.ShowGrid">
            <summary>
            Indicates if the OlapGrid control is shown in the client.
            </summary>
            <value>
            A <b>boolean</b> value that indicates if the OlapGrid control
            is visible from within the OLAP Client.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapClient.ShowAxisBuilderSeries">
            <summary>
            Indicates if series <b>AxisBuilder</b> control is shown in the client.
            </summary>
            <value>
            A <b>boolean</b> value that indicates if the series <see cref="T:Dundas.Olap.WebUIControls.AxisBuilder"/> control
            is visible inside the OLAP Client.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapClient.ShowAxisBuilderSlicer">
            <summary>
            Indicates if slicer <b>AxisBuilder</b> control is shown in the client.
            </summary>
            <value>
            A <b>boolean</b> value that indicates if the slicer <see cref="T:Dundas.Olap.WebUIControls.AxisBuilder"/> control
            is visible inside the OLAP client.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapClient.BarDrawingStyle">
            <summary>
            Defines the style how the bars/columns are drawn.
            </summary>
            <value>The bar drawing style.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapClient.PieDrawingStyle">
            <summary>
            Defines the style how the pie and doughnut charts are drawn.
            </summary>
            <value>The pie drawing style.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapClient.OlapClientViewState">
            <summary>
            Gets the state of the olap client view.
            </summary>
            <value>The state of the olap client view.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapClient.IsGridEnabled">
            <summary>
            Gets a value indicating whether this instance is grid enabled.
            </summary>
            <value>
            	<c>true</c> if this instance is grid enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapClient.Designer">
            <summary>
            Gets the designer.
            </summary>
            <value>The designer.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapClient.IsDesignMode">
            <summary>
            Gets a value indicating whether this instance is in design mode.
            </summary>
            <value>
            	<c>true</c> if this instance is in design mode; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapClient.ToolbarSettings">
            <summary>
            Gets the toolbar settings.
            </summary>
            <value>The toolbar settings.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapClient.Dundas#Olap#Manager#IToolbarClient#ToolbarClientID">
            <summary>
            Gets the toolbar client ID.
            </summary>
            <value>The toolbar client ID.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapClient.Dundas#Olap#Manager#IToolbarClient#Commands">
            <summary>
            Gets the commands.
            </summary>
            <value>The commands.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapClient.Dundas#Olap#Manager#IToolbarClient#GroupOrderBase">
            <summary>
            Gets the Z order base.
            </summary>
            <value>The Z order base.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapClient.Dundas#Olap#Manager#IToolbarClient#IsChanged">
            <summary>
            Gets a value indicating whether this instance is changed.
            </summary>
            <value>
            	<c>true</c> if this instance is changed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.AxisBuilderStyle">
            <summary>
            Represents the style properties for an element of a control that renders as a AxisBuilder.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.AxisBuilderStyle.ButtonStyle">
            <summary>
            Gets the style of the buttons of controls that renders as a AxisBuilder
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.AxisBuilderStyle.AxisButtonStyle">
            <summary>
            Gets or sets the axis button style.
            </summary>
            <value>The axis button style.</value>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.DimensionBrowserStyle">
            <summary>
            Represents the style of the dimension browser.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.DimensionBrowserStyle.NodeStyle">
            <summary>
            Gets the style of the nodes of the dimension browser.
            </summary>
            <value>
            A <see cref="T:Dundas.Olap.WebUIControls.OlapWebItemStyle"/> of nodes of the dimension browser.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.DimensionBrowserStyle.SelectedNodeStyle">
            <summary>
            Gets the style of the selected nodes of the dimension browser.
            </summary>
            <value>
            A <see cref="T:Dundas.Olap.WebUIControls.OlapWebItemStyle"/> of selected nodes of the DimensionBrowser Web control style.
            </value>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.OlapToolbarAppearanceStyle">
            <summary>
            Represents the style of the toolbar browser.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapToolbarAppearanceStyle.#ctor(Dundas.Olap.WebUIControls.OlapToolbar)">
            <summary>
            Initializes a new instance of the <see cref="T:Dundas.Olap.WebUIControls.OlapToolbarAppearanceStyle"/> class.
            </summary>
            <param name="toolbar">The toolbar.</param>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapToolbarAppearanceStyle.BackColor">
            <summary>
            Gets or sets the background color of the Web server control.
            </summary>
            <value></value>
            <returns>A <see cref="T:System.Drawing.Color"></see> that represents the background color of the control. The default is <see cref="F:System.Drawing.Color.Empty"></see>, which indicates that this property is not set.</returns>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapToolbarAppearanceStyle.BorderColor">
            <summary>
            Gets or sets the border color of the Web server control.
            </summary>
            <value></value>
            <returns>A <see cref="T:System.Drawing.Color"></see> that represents the border color of the control. The default is <see cref="F:System.Drawing.Color.Empty"></see>, which indicates that this property is not set.</returns>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapToolbarAppearanceStyle.BorderWidth">
            <summary>
            Gets or sets the width of the border.
            </summary>
            <value>The width of the border.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapToolbarAppearanceStyle.PageColor">
            <summary>
            Gets or sets the border color of the Web server control.
            </summary>
            <value></value>
            <returns>A <see cref="T:System.Drawing.Color"></see> that represents the border color of the control. The default is <see cref="F:System.Drawing.Color.Empty"></see>, which indicates that this property is not set.</returns>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapToolbarAppearanceStyle.ToolbarStyle">
            <summary>
            Gets or sets the toolbar border skin style. 
            </summary>
            <value>
            The border skin style.
            </value>
            <remarks>Default value is Emboss.
            </remarks>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.FrameStyle">
            <summary>
            Represents the style of the DimensionBrowser Web control.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.FrameStyle.ToString">
            <summary>
            This member overrides <see cref="M:System.Object.ToString"/> method.
            </summary>
            <returns>The string representation of the object</returns>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.FrameStyle.BorderColor">
            <summary>
            Gets and sets the border color of decorative frames.
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color"/> which represents the border color of decorative frames.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.FrameStyle.BorderWidth">
            <summary>
            Gets and sets the border size in pixels of decorative frames.
            </summary>
            <value>
            A <see cref="T:System.Web.UI.WebControls.Unit"/> which represents the boder size of decorative frames.
            </value>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.OlapClientDesigner">
            <summary>
            Olap Manager Web control designer.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapClientDesigner.Initialize(System.ComponentModel.IComponent)">
            <summary>
            Initializes component.
            </summary>
            <param name="component">
            Component to initialize.
            </param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapClientDesigner.Dispose(System.Boolean)">
            <summary>
            Dispose object.
            </summary>
            <param name="disposing">
            Indicates if unmanaged resources should be disposed.
            </param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapClientDesigner.OnComponentRemoved(System.Object,System.ComponentModel.Design.ComponentEventArgs)">
            <summary>
            ComponentRemoved event handler.
            </summary>
            <param name="sender">
            Event sender.
            </param>
            <param name="ce">
            Event arguments.
            </param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapClientDesigner.OnComponentRename(System.Object,System.ComponentModel.Design.ComponentRenameEventArgs)">
            <summary>
            ComponentRename event handler.
            </summary>
            <param name="sender">
            Event sender.
            </param>
            <param name="ce">
            Event arguments.
            </param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapClientDesigner.MarkAsDirty">
            <summary>
            Marks as dirty.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapClientDesigner.GetDesignTimeHtml">
            <summary>
            Gets the design time HTML source that present the control.
            </summary>
            <returns>
            HTML source as a string.
            </returns>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapClientDesigner.OlapClient">
            <summary>
            OlapManager object.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.OlapClientToolbarSettings">
            <summary>
            Exposes the toolbar settings for the <see cref="P:Dundas.Olap.WebUIControls.OlapClientToolbarSettings.OlapClient"/>
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapClientToolbarSettings.#ctor(Dundas.Olap.WebUIControls.OlapClient)">
            <summary>
            Initializes a new instance of the <see cref="T:OlapManagerToolbarSettings"/> class.
            </summary>
            <param name="owner">The owner.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapClientToolbarSettings.GetDefaultOrderBase">
            <summary>
            Gets the default order base.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapClientToolbarSettings.GetEmbededCommands">
            <summary>
            Gets the embeded commands.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapClientToolbarSettings.OlapClient">
            <summary>
            Gets the olap client.
            </summary>
            <value>The olap client.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapClientToolbarSettings.Maximize">
            <summary>
            Gets or sets the maximize command used in the client.
            </summary>
            <value>The transpose command.</value>
        </member>
        <member name="T:Dundas.Charting.WebControl.Utilities.SerializationVisibility">
            <summary>
            Enumeration which describes how to persist property during the serialization
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Utilities.SerializationVisibility.Hidden">
            <summary>
            Do not serialize
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Utilities.SerializationVisibility.Attribute">
            <summary>
            Serialize as XML attribute
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Utilities.SerializationVisibility.Element">
            <summary>
            Serialize as XML element
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.Utilities.SerializationStatus">
            <summary>
            Determines chart current serialization status.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Utilities.SerializationStatus.None">
            <summary>
            Chart is not serializing
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Utilities.SerializationStatus.Loading">
            <summary>
            Chart is loading
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Utilities.SerializationStatus.Saving">
            <summary>
            Chart is saving
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Utilities.SerializationStatus.Resetting">
            <summary>
            Chart is resetting
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.Utilities.SerializationVisibilityAttribute">
            <summary>
            Attribute which describes how to persist property during the serialization.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Utilities.SerializationVisibilityAttribute.#ctor(Dundas.Charting.WebControl.Utilities.SerializationVisibility)">
            <summary>
            Public constructor
            </summary>
            <param name="visibility">Serialization visibility.</param>
        </member>
        <member name="P:Dundas.Charting.WebControl.Utilities.SerializationVisibilityAttribute.Visibility">
            <summary>
            Serialization visibility property
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.Utilities.SerializerBase">
            <summary>
            Base class of the serializers. Common properties and methods for all serializers.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Utilities.SerializerBase.ignoreUnknown">
            <summary>
            Indicates that unknown attributes and elements are ignored
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Utilities.SerializerBase.templateMode">
            <summary>
            Indicates that serializer works in template creation mode
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Utilities.SerializerBase.resetWhenLoading">
            <summary>
            Indicates that object properties are reset before loading
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Utilities.SerializerBase.serializableContent">
            <summary>
            Comma separated list of serializable (Save/Load/Reset) properties. "ClassName.PropertyName"
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Utilities.SerializerBase.nonSerializableContent">
            <summary>
            Comma separated list of NON serializable (Save/Load/Reset) properties. "ClassName.PropertyName"
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Utilities.SerializerBase.binaryFormatVersion">
            <summary>
            Binary format version number
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Utilities.SerializerBase.fontConverter">
            <summary>
            Font converters used while serializing/deserializing 
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Utilities.SerializerBase.colorConverter">
            <summary>
            Color converters used while serializing/deserializing 
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Utilities.SerializerBase.sizeConverter">
            <summary>
            Size converters used while serializing/deserializing 
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Utilities.SerializerBase.arrayConverter">
            <summary>
            Array converters used while serializing/deserializing 
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Utilities.SerializerBase.hashCodeProvider">
            <summary>
            Hash code provider.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Utilities.SerializerBase.serializeName">
            <summary>
            Indicates that name property should be serialized.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.Utilities.SerializerBase.suppressShouldSerialize">
            <summary>
            Indicates that shouldserialize method will not be used
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Utilities.SerializerBase.ResetObjectProperties(System.Object)">
            <summary>
            Reset properties of the object to default values.
            </summary>
            <param name="objectToReset">Object to be reset.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Utilities.SerializerBase.ResetObjectProperties(System.Object,System.Object,System.String)">
            <summary>
            Reset properties of the object to default values.
            Method is called recursively to reset child objects properties.
            </summary>
            <param name="objectToReset">Object to be reset.</param>
            <param name="parent">Parent of the reset object.</param>
            <param name="elementName">Object element name.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Utilities.SerializerBase.Serialize(System.Object,System.Object)">
            <summary>
            Serialize specified object into the destination object.
            </summary>
            <param name="objectToSerialize">Object to be serialized.</param>
            <param name="destination">Destination of the serialization.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Utilities.SerializerBase.Deserialize(System.Object,System.Object)">
            <summary>
            Deserialize specified object from the source object.
            </summary>
            <param name="objectToDeserialize">Object to be deserialized.</param>
            <param name="source">Source of the deserialization.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Utilities.SerializerBase.FontToString(System.Drawing.Font)">
            <summary>
            Converts specified font object into a string.
            </summary>
            <param name="font">Font object to convert.</param>
            <returns>String that contains font data.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Utilities.SerializerBase.FontFromString(System.String)">
            <summary>
            Converts string data into a font object.
            </summary>
            <param name="fontString">String with font data.</param>
            <returns>Newly created font object.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Utilities.SerializerBase.GetStringHashCode(System.String)">
            <summary>
            Returns a hash code of a specified string.
            </summary>
            <param name="str">String to get the hash code for.</param>
            <returns>String hash code.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Utilities.SerializerBase.ReadHashID(System.IO.BinaryReader,System.Boolean)">
            <summary>
            Reads hash ID from the specified binary reader.
            </summary>
            <param name="reader">Binary reader to get the data from.</param>
            <param name="isCollectionMember">True if getting ID of collection member type.</param>
            <returns>Property name or collection member type ID.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Utilities.SerializerBase.MapHashValueVersion200(System.Int16)">
            <summary>
            Maps old string hash value with a new hash value.
            </summary>
            <param name="oldHashValue">String old hash value.</param>
            <returns>String new hash value.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Utilities.SerializerBase.IsChartBaseProperty(System.Object,System.Object,System.Reflection.PropertyInfo)">
            <summary>
            Checks if property belongs to the base class of the chart "Control".
            </summary>
            <param name="objectToSerialize">Serializable object.</param>
            <param name="parent">Object parent.</param>
            <param name="pi">Serializable property information.</param>
            <returns>True if property belongs to the base class.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Utilities.SerializerBase.ImageToString(System.Drawing.Image)">
            <summary>
            Converts Image object into the BASE64 encoded string
            </summary>
            <param name="image">Image to convert.</param>
            <returns>BASE64 encoded image data.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Utilities.SerializerBase.ImageFromString(System.String)">
            <summary>
            Converts BASE64 encoded string to image.
            </summary>
            <param name="data">BASE64 encoded data.</param>
            <returns>Image.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Utilities.SerializerBase.GetObjectName(System.Object)">
            <summary>
            Get the name of the object class
            </summary>
            <param name="obj">Object to get the name of.</param>
            <returns>Name of the object class (without namespace).</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Utilities.SerializerBase.GetListNewItem(System.Collections.IList,System.String,System.String@,System.Boolean@)">
            <summary>
            Create new empty item for the list.
            Type of the objects is determined by the return type of the indexer.
            </summary>
            <param name="list">List used to detect type of the item objects.</param>
            <param name="itemTypeName">Name of collection type.</param>
            <param name="itemName">Optional item name to return.</param>
            <param name="reusedObject">Indicates that object with specified name was already in the collection and it beign reused.</param>
            <returns>New list item object.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Utilities.SerializerBase.ShouldSerializeAsAttribute(System.Reflection.PropertyInfo,System.Object)">
            <summary>
            Returns true if the object property should be serialized as 
            parent element attribute. Otherwize as a child element.
            </summary>
            <param name="pi">Property information.</param>
            <param name="parent">Object that the property belongs to.</param>
            <returns>True if property should be serialized as attribute.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Utilities.SerializerBase.SerializeICollAsAtribute(System.Reflection.PropertyInfo,System.Object)">
            <summary>
            Determines if this property should be serialized as attribute
            </summary>
            <param name="pi">Property information.</param>
            <param name="objectToSerialize">Object that the property belongs to.</param>
            <returns>True if should be serialized as attribute</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Utilities.SerializerBase.IsSerializableContent(System.String,System.Object)">
            <summary>
            Returns true if the object property is serializable.
            </summary>
            <param name="propertyName">Property name.</param>
            <param name="parent">Object that the property belongs to.</param>
            <returns>True if property is serializable.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Utilities.SerializerBase.IsPropertyInList(System.Collections.ArrayList,System.String,System.String,System.Int32@,System.Int32@)">
            <summary>
            Checks if propety belongs is defined in the mask list.
            </summary>
            <param name="contentList">Array list of class/property items.</param>
            <param name="className">Class name.</param>
            <param name="propertyName">Property name.</param>
            <param name="classFitType">Return class mask fit type.</param>
            <param name="propertyFitType">Return property mask fit type.</param>
            <returns>True if property was found in the list.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Utilities.SerializerBase.NameMatchMask(Dundas.Charting.WebControl.Utilities.SerializerBase.ItemInfo,System.String,System.Int32@)">
            <summary>
            Compares class/property name with the specifed mask
            </summary>
            <param name="itemInfo">Class/Property item information.</param>
            <param name="objectName">Class/Property name.</param>
            <param name="type">Type of matching. 0-No Match; 1-'*' any wild card; 2-'Back*' contain wild card; 3-exact match</param>
            <returns>True if name match the mask.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Utilities.SerializerBase.GetSerializableContentList">
            <summary>
            Return serializable content list.
            </summary>
            <returns>Serializable content list.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Utilities.SerializerBase.GetNonSerializableContentList">
            <summary>
            Return non serializable content list.
            </summary>
            <returns>Non serializable content list.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Utilities.SerializerBase.FillContentList(System.Collections.ArrayList,System.String)">
            <summary>
            Fill content list from the string.
            </summary>
            <param name="list">Array list class.</param>
            <param name="content">Content string.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Utilities.SerializerBase.CheckWildCars(Dundas.Charting.WebControl.Utilities.SerializerBase.ItemInfo)">
            <summary>
            Checks wildcards in the name of the item.
            Possible values:
            	"*"
            	"*Name"
            	"Name*"
            </summary>
            <param name="info">Item information class.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Utilities.SerializerBase.ReadConvertValue(System.Object,System.String,System.IO.BinaryReader)">
            <summary>
            Converts string or read value from binary reader.
            </summary>
            <param name="obj">Object to set the value to.</param>
            <param name="propertyValue">String value.</param>
            <param name="binaryReader">Binary reader to get the data from.</param>
            <returns>Returns property value.</returns>
        </member>
        <member name="P:Dundas.Charting.WebControl.Utilities.SerializerBase.SerializeName">
            <summary>
            Gets/sets should Name property of object be serialized.
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.Utilities.SerializerBase.IgnoreUnknownAttributes">
            <summary>
            Indicates that unknown attributes and elements will be 
            ignored without throwing an exception.
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.Utilities.SerializerBase.TemplateMode">
            <summary>
            Indicates that serializer works in template creation mode
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.Utilities.SerializerBase.ResetWhenLoading">
            <summary>
            Indicates that object properties are reset to default
            values before loading.
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.Utilities.SerializerBase.SerializableContent">
            <summary>
            Comma separated list of serializable (Save/Load/Reset) properties. 
            "ClassName.PropertyName,[ClassName.PropertyName]".
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.Utilities.SerializerBase.NonSerializableContent">
            <summary>
            Comma separated list of serializable (Save/Load/Reset) properties. 
            "ClassName.PropertyName,[ClassName.PropertyName]".
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.Utilities.SerializerBase.ItemInfo">
            <summary>
            Stores information about content item (class or property)
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.Utilities.XmlFormatSerializer">
            <summary>
            Utility class which serialize object using XML format
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Utilities.XmlFormatSerializer.Serialize(System.Object,System.IO.Stream)">
            <summary>
            Serialize specified object into the stream.
            </summary>
            <param name="objectToSerialize">Object to be serialized.</param>
            <param name="stream">The stream used to write the XML document.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Utilities.XmlFormatSerializer.Serialize(System.Object,System.Xml.XmlWriter)">
            <summary>
            Serialize specified object into the XML writer.
            </summary>
            <param name="objectToSerialize">Object to be serialized.</param>
            <param name="xmlWriter">The XmlWriter used to write the XML document.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Utilities.XmlFormatSerializer.Serialize(System.Object,System.IO.TextWriter)">
            <summary>
            Serialize specified object into the text writer.
            </summary>
            <param name="objectToSerialize">Object to be serialized.</param>
            <param name="textWriter">The TextWriter used to write the XML document.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Utilities.XmlFormatSerializer.Serialize(System.Object,System.String)">
            <summary>
            Serialize specified object into the file.
            </summary>
            <param name="objectToSerialize">Object to be serialized.</param>
            <param name="fileName">The file name used to write the XML document.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Utilities.XmlFormatSerializer.Serialize(System.Object,System.Object)">
            <summary>
            Serialize specified object into different types of writers using XML format.
            Here is what is serialized in the object:
             - all public properties with Set and Get methods
             - all public properties with Get method which derived from ICollection
            </summary>
            <param name="objectToSerialize">Object to be serialized.</param>
            <param name="writer">Defines the serialization destination. Can be Stream, TextWriter, XmlWriter or String (file name).</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Utilities.XmlFormatSerializer.SerializeObject(System.Object,System.Object,System.String,System.Xml.XmlNode,System.Xml.XmlDocument)">
            <summary>
            Serialize specified object into the XML format.
            Method is called recursively to serialize child objects.
            </summary>
            <param name="objectToSerialize">Object to be serialized.</param>
            <param name="parent">Parent of the serialized object.</param>
            <param name="elementName">Object element name.</param>
            <param name="xmlParentNode">The XmlNode of the parent object to serialize the data in.</param>
            <param name="xmlDocument">The XmlDocument the parent node belongs to.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Utilities.XmlFormatSerializer.SerializeCollection(System.Object,System.String,System.Xml.XmlNode,System.Xml.XmlDocument)">
            <summary>
            Serialize specified object into the XML text writer.
            Method is called recursively to serialize child objects.
            </summary>
            <param name="objectToSerialize">Object to be serialized.</param>
            <param name="elementName">Object element name.</param>
            <param name="xmlParentNode">The XmlNode of the parent object to serialize the data in.</param>
            <param name="xmlDocument">The XmlDocument the parent node belongs to.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Utilities.XmlFormatSerializer.SerializeProperty(System.Object,System.Object,System.String,System.Xml.XmlNode,System.Xml.XmlDocument)">
            <summary>
            Serialize specified object into the XML text writer.
            Method is called recursively to serialize child objects.
            </summary>
            <param name="objectToSerialize">Object to be serialized.</param>
            <param name="parent">Parent of the serialized object.</param>
            <param name="elementName">Object element name.</param>
            <param name="xmlParentNode">The XmlNode of the parent object to serialize the data in.</param>
            <param name="xmlDocument">The XmlDocument the parent node belongs to.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Utilities.XmlFormatSerializer.GetXmlValue(System.Object,System.Object,System.String)">
            <summary>
            Converts object value into the string.
            </summary>
            <param name="obj">Object to convert.</param>
            <param name="parent">Object parent.</param>
            <param name="elementName">Object name.</param>
            <returns>Object value as strig.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Utilities.XmlFormatSerializer.RemoveEmptyChildNodes(System.Xml.XmlNode)">
            <summary>
            Removes all empty nodes from the XML document.
            Method is called recursively to remove empty child nodes first.
            </summary>
            <param name="xmlNode">The node where to start the removing.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Utilities.XmlFormatSerializer.Deserialize(System.Object,System.IO.Stream)">
            <summary>
            Deserialize specified object from the stream.
            </summary>
            <param name="objectToDeserialize">Object to be deserialized.</param>
            <param name="stream">The stream used to read the XML document from.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Utilities.XmlFormatSerializer.Deserialize(System.Object,System.Xml.XmlReader)">
            <summary>
            Deserialize specified object from the XML reader.
            </summary>
            <param name="objectToDeserialize">Object to be deserialized.</param>
            <param name="xmlReader">The XmlReader used to read the XML document from.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Utilities.XmlFormatSerializer.Deserialize(System.Object,System.IO.TextReader)">
            <summary>
            Deserialize specified object from the text reader.
            </summary>
            <param name="objectToDeserialize">Object to be deserialized.</param>
            <param name="textReader">The TextReader used to write the XML document from.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Utilities.XmlFormatSerializer.Deserialize(System.Object,System.String)">
            <summary>
            Deserialize specified object from the file.
            </summary>
            <param name="objectToDeserialize">Object to be deserialized.</param>
            <param name="fileName">The file name used to read the XML document from.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Utilities.XmlFormatSerializer.Deserialize(System.Object,System.Object)">
            <summary>
            Deerialize object from different types of readers using XML format.
            </summary>
            <param name="objectToDeserialize">Object to be deserialized.</param>
            <param name="reader">Defines the deserialization data source. Can be Stream, TextReader, XmlReader or String (file name).</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Utilities.XmlFormatSerializer.DeserializeObject(System.Object,System.Object,System.String,System.Xml.XmlNode,System.Xml.XmlDocument)">
            <summary>
            Deserialize object from the XML format.
            Method is called recursively to deserialize child objects.
            </summary>
            <param name="objectToDeserialize">Object to be deserialized.</param>
            <param name="parent">Parent of the deserialized object.</param>
            <param name="elementName">Object element name.</param>
            <param name="xmlParentNode">The XmlNode of the parent object to deserialize the data from.</param>
            <param name="xmlDocument">The XmlDocument the parent node belongs to.</param>
            <returns>Number of properties set.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Utilities.XmlFormatSerializer.SetXmlValue(System.Object,System.String,System.String)">
            <summary>
            Sets a property of an object using name and vallue as string.
            </summary>
            <param name="obj">Object to set.</param>
            <param name="attrName">Attribute (property) name.</param>
            <param name="attrValue">Object value..</param>
            <returns>Object value as strig.</returns>
        </member>
        <member name="T:Dundas.Charting.WebControl.Utilities.BinaryFormatSerializer">
            <summary>
            Utility class which serialize object using binary format
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Utilities.BinaryFormatSerializer.Serialize(System.Object,System.Object)">
            <summary>
            Serialize specified object into the destination using binary format.
            </summary>
            <param name="objectToSerialize">Object to be serialized.</param>
            <param name="destination">Serialization destination.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Utilities.BinaryFormatSerializer.Serialize(System.Object,System.String)">
            <summary>
            Serialize specified object into the file using binary format.
            </summary>
            <param name="objectToSerialize">Object to be serialized.</param>
            <param name="fileName">File name to serialize the data in.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Utilities.BinaryFormatSerializer.Serialize(System.Object,System.IO.Stream)">
            <summary>
            Serialize specified object into the stream using binary format.
            </summary>
            <param name="objectToSerialize">Object to be serialized.</param>
            <param name="stream">Defines the serialization destination.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Utilities.BinaryFormatSerializer.Serialize(System.Object,System.IO.BinaryWriter)">
            <summary>
            Serialize specified object into different types of writers using binary format.
            Here is what is serialized in the object:
             - all public properties with Set and Get methods
             - all public properties with Get method which derived from ICollection
            </summary>
            <param name="objectToSerialize">Object to be serialized.</param>
            <param name="writer">Defines the serialization destination.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Utilities.BinaryFormatSerializer.SerializeObject(System.Object,System.Object,System.String,System.IO.BinaryWriter)">
            <summary>
            Serialize specified object into the binary format.
            Method is called recursively to serialize child objects.
            </summary>
            <param name="objectToSerialize">Object to be serialized.</param>
            <param name="parent">Parent of the serialized object.</param>
            <param name="elementName">Object element name.</param>
            <param name="writer">Binary writer object.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Utilities.BinaryFormatSerializer.SerializeCollection(System.Object,System.String,System.IO.BinaryWriter)">
            <summary>
            Serialize specified object into the binary writer.
            Method is called recursively to serialize child objects.
            </summary>
            <param name="objectToSerialize">Object to be serialized.</param>
            <param name="elementName">Object element name.</param>
            <param name="writer">Binary writer.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Utilities.BinaryFormatSerializer.SerializeProperty(System.Object,System.Object,System.String,System.IO.BinaryWriter)">
            <summary>
            Serialize specified object into the binary writer.
            Method is called recursively to serialize child objects.
            </summary>
            <param name="objectToSerialize">Object to be serialized.</param>
            <param name="parent">Parent of the serialized object.</param>
            <param name="elementName">Object element name.</param>
            <param name="writer">Binary writer.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Utilities.BinaryFormatSerializer.WritePropertyValue(System.Object,System.Object,System.String,System.IO.BinaryWriter)">
            <summary>
            Converts object value into the string.
            </summary>
            <param name="obj">Object to convert.</param>
            <param name="parent">Object parent.</param>
            <param name="elementName">Object name.</param>
            <param name="writer">Binary writer.</param>
            <returns>Object value as strig.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Utilities.BinaryFormatSerializer.CheckPropertiesID(System.Collections.ArrayList)">
            <summary>
            Checks if all properties will have a unique ID.
            Property ID is a hash of it's name.
            !!!USED IN DEBUG BUILD ONLY!!!
            </summary>
            <param name="propNames">Array of properties names.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Utilities.BinaryFormatSerializer.Deserialize(System.Object,System.Object)">
            <summary>
            Deserialize specified object from the source using binary format.
            </summary>
            <param name="objectToDeserialize">Object to be deserialized.</param>
            <param name="source">Deserialization source.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Utilities.BinaryFormatSerializer.Deserialize(System.Object,System.String)">
            <summary>
            Deserialize object from the file using binary format.
            </summary>
            <param name="objectToDeserialize">Object to be deserialized.</param>
            <param name="fileName">File name to read the data from.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Utilities.BinaryFormatSerializer.Deserialize(System.Object,System.IO.Stream)">
            <summary>
            Deserialize object from the stream using binary format.
            </summary>
            <param name="objectToDeserialize">Object to be deserialized.</param>
            <param name="stream">Stream to read the data from.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Utilities.BinaryFormatSerializer.Deserialize(System.Object,System.IO.BinaryReader)">
            <summary>
            Deserialize object from different types of readers using binary format.
            </summary>
            <param name="objectToDeserialize">Object to be deserialized.</param>
            <param name="reader">Binary reader.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Utilities.BinaryFormatSerializer.DeserializeObject(System.Object,System.Object,System.String,System.IO.BinaryReader)">
            <summary>
            Deserialize object from the binary format.
            Method is called recursively to deserialize child objects.
            </summary>
            <param name="objectToDeserialize">Object to be deserialized.</param>
            <param name="parent">Parent of the deserialized object.</param>
            <param name="elementName">Object element name.</param>
            <param name="reader">Binary reader object.</param>
            <returns>Number of properties set.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Utilities.BinaryFormatSerializer.SetPropertyValue(System.Object,System.Reflection.PropertyInfo,System.IO.BinaryReader)">
            <summary>
            Reads and sets a property of an object.
            </summary>
            <param name="obj">Object to set.</param>
            <param name="pi">Property information.</param>
            <param name="reader">Binary reader.</param>
            <returns>True if property was set.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Utilities.BinaryFormatSerializer.ReadPropertyInfo(System.Object,System.Object,System.Reflection.PropertyInfo[],System.IO.BinaryReader)">
            <summary>
            Reads property ID and return property information
            </summary>
            <param name="objectToDeserialize">Object to be deserialized.</param>
            <param name="parent">Parent of the deserialized object.</param>
            <param name="properties">List of properties information.</param>
            <param name="reader">Binary reader.</param>
            <returns>Property information.</returns>
        </member>
        <member name="T:Dundas.Charting.WebControl.Utilities.StringHashCodeConverter">
            <summary>
            Helper class used in convertion of the properties names IDs.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.LineAnchorCap">
            <summary>
            Line anchor cap style.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.LineAnchorCap.None">
            <summary>
            No line anchor cap.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.LineAnchorCap.Arrow">
            <summary>
            Arrow line anchor cap.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.LineAnchorCap.Diamond">
            <summary>
            Diamond line anchor cap.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.LineAnchorCap.Square">
            <summary>
            Square line anchor cap.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.LineAnchorCap.Round">
            <summary>
            Round line anchor cap.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.LabelCalloutStyle">
            <summary>
            Data point label callout style.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.LabelCalloutStyle.None">
            <summary>
            Label connected with the marker using just a line.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.LabelCalloutStyle.Underlined">
            <summary>
            Label is undelined and connected with the marker using a line.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.LabelCalloutStyle.Box">
            <summary>
            Box is drawn around the label and it's connected with the marker using a line.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.LabelOutsidePlotAreaStyle">
            <summary>
            Data point label outside of the plotting area style.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.LabelOutsidePlotAreaStyle.Yes">
            <summary>
            Labels can be positioned outside of the plotting area.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.LabelOutsidePlotAreaStyle.No">
            <summary>
            Labels can not be positioned outside of the plotting area.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.LabelOutsidePlotAreaStyle.Partial">
            <summary>
            Labels can be partially outside of the plotting area.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.SmartLabels">
            <summary>
            SmartLabels class implements the SmartLabels algorithm for the 
            data series points. It keeps track of all labels drawn and 
            detects their collisions. When labels collision is detected 
            the algorithm tries to resolve it by repositioning the labels. 
            If label can not be repositioned it maybe hidden depending on 
            the current settings.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.SmartLabels.#ctor">
            <summary>
            Default public constructor.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.SmartLabels.Reset(Dundas.Olap.WebUIControls.CommonElements,Dundas.Olap.WebUIControls.ChartArea)">
            <summary>
            Reset SmartLabels object.
            </summary>
            <param name="common">Reference to common elements.</param>
            <param name="area">Chart area.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.SmartLabels.AdjustSmartLabelPosition(Dundas.Olap.WebUIControls.CommonElements,Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.SmartLabelsStyle,System.Drawing.PointF,System.Drawing.SizeF,System.Drawing.StringFormat@,System.Drawing.PointF,System.Drawing.SizeF,Dundas.Olap.WebUIControls.LabelAlignment)">
            <summary>
            Process single SmartLabel by adjusting it's position in case of collision.
            </summary>
            <param name="common">Reference to common elements.</param>
            <param name="graph">Reference to chart graphics object.</param>
            <param name="area">Chart area.</param>
            <param name="smartLabelsStyle">Smart labels style.</param>
            <param name="labelPosition">Original label position.</param>
            <param name="labelSize">Label text size.</param>
            <param name="format">Label string format.</param>
            <param name="markerPosition">Marker position.</param>
            <param name="markerSize">Marker size.</param>
            <param name="labelAlignment">Original label alignment.</param>
            <returns>Adjusted position of the label.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.SmartLabels.AdjustSmartLabelPosition(Dundas.Olap.WebUIControls.CommonElements,Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.SmartLabelsStyle,System.Drawing.PointF,System.Drawing.SizeF,System.Drawing.StringFormat@,System.Drawing.PointF,System.Drawing.SizeF,Dundas.Olap.WebUIControls.LabelAlignment,System.Boolean)">
            <summary>
            Process single SmartLabel by adjusting it's position in case of collision.
            </summary>
            <param name="common">Reference to common elements.</param>
            <param name="graph">Reference to chart graphics object.</param>
            <param name="area">Chart area.</param>
            <param name="smartLabelsStyle">Smart labels style.</param>
            <param name="labelPosition">Original label position.</param>
            <param name="labelSize">Label text size.</param>
            <param name="format">Label string format.</param>
            <param name="markerPosition">Marker position.</param>
            <param name="markerSize">Marker size.</param>
            <param name="labelAlignment">Original label alignment.</param>
            <param name="checkCalloutLineOverlapping">Indicates that labels overlapping by callout line must be checked.</param>
            <returns>Adjusted position of the label.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.SmartLabels.FindNewPosition(Dundas.Olap.WebUIControls.CommonElements,Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.SmartLabelsStyle,System.Drawing.PointF@,System.Drawing.SizeF,System.Drawing.StringFormat@,System.Drawing.PointF,System.Drawing.SizeF@,Dundas.Olap.WebUIControls.LabelAlignment@,System.Boolean)">
            <summary>
            Process single SmartLabel by adjusting it's position in case of collision.
            </summary>
            <param name="common">Reference to common elements.</param>
            <param name="graph">Reference to chart graphics object.</param>
            <param name="area">Chart area.</param>
            <param name="smartLabelsStyle">Smart labels style.</param>
            <param name="labelPosition">Original label position.</param>
            <param name="labelSize">Label text size.</param>
            <param name="format">Label string format.</param>
            <param name="markerPosition">Marker position.</param>
            <param name="markerSize">Marker size.</param>
            <param name="labelAlignment">Label alignment.</param>
            <param name="checkCalloutLineOverlapping">Indicates that labels overlapping by callout line must be checked.</param>
            <returns>True if label was moved away from the marker.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.SmartLabels.DrawCallout(Dundas.Olap.WebUIControls.CommonElements,Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.SmartLabelsStyle,System.Drawing.PointF,System.Drawing.SizeF,System.Drawing.StringFormat,System.Drawing.PointF,System.Drawing.SizeF,Dundas.Olap.WebUIControls.LabelAlignment)">
            <summary>
            Process single SmartLabel by adjusting it's position in case of collision.
            </summary>
            <param name="common">Reference to common elements.</param>
            <param name="graph">Reference to chart graphics object.</param>
            <param name="area">Chart area.</param>
            <param name="smartLabelsStyle">Smart labels style.</param>
            <param name="labelPosition">Original label position.</param>
            <param name="labelSize">Label text size.</param>
            <param name="format">Label string format.</param>
            <param name="markerPosition">Marker position.</param>
            <param name="markerSize">Marker size.</param>
            <param name="labelAlignment">Label alignment.</param>
            <returns>Adjusted position of the label.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.SmartLabels.IsSmartLabelCollide(Dundas.Olap.WebUIControls.CommonElements,Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.SmartLabelsStyle,System.Drawing.PointF,System.Drawing.SizeF,System.Drawing.PointF,System.Drawing.StringFormat,Dundas.Olap.WebUIControls.LabelAlignment,System.Boolean)">
            <summary>
            Checks SmartLabel collision.
            </summary>
            <param name="common">Reference to common elements.</param>
            <param name="graph">Reference to chart graphics object.</param>
            <param name="area">Chart area.</param>
            <param name="smartLabelsStyle">Smart labels style.</param>
            <param name="position">Original label position.</param>
            <param name="size">Label text size.</param>
            <param name="markerPosition">Marker position.</param>
            <param name="format">Label string format.</param>
            <param name="labelAlignment">Label alignment.</param>
            <param name="checkCalloutLineOverlapping">Indicates that labels overlapping by callout line must be checked.</param>
            <returns>True if label collides.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.SmartLabels.LineIntersectRectangle(System.Drawing.RectangleF,System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Checks if rectangle intersected by the line.
            </summary>
            <param name="rect">Rectangle to be tested.</param>
            <param name="point1">First line point.</param>
            <param name="point2">Second line point.</param>
            <returns>True if line intersects rectangle.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.SmartLabels.AddMarkersPosition(Dundas.Olap.WebUIControls.CommonElements,Dundas.Olap.WebUIControls.ChartArea)">
            <summary>
            Adds positions of the series markers into the list.
            </summary>
            <param name="common">Reference to common elements.</param>
            <param name="area">Chart area.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.SmartLabels.AddSmartLabelPosition(Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.ChartArea,System.Drawing.PointF,System.Drawing.SizeF,System.Drawing.StringFormat)">
            <summary>
            Adds single Smart Label position into the list.
            </summary>
            <param name="graph">Chart graphics object.</param>
            <param name="area">Chart area.</param>
            <param name="position">Original label position.</param>
            <param name="size">Label text size.</param>
            <param name="format">Label string format.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.SmartLabels.GetLabelPosition(Dundas.Olap.WebUIControls.ChartGraphics,System.Drawing.PointF,System.Drawing.SizeF,System.Drawing.StringFormat,System.Boolean)">
            <summary>
            Gets rectangle position of the label.
            </summary>
            <param name="graph">Chart graphics object.</param>
            <param name="position">Original label position.</param>
            <param name="size">Label text size.</param>
            <param name="format">Label string format.</param>
            <param name="adjustForDrawing">Result position is adjusted for drawing.</param>
            <returns>Label rectangle position.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.SmartLabels.CalculatePosition(Dundas.Olap.WebUIControls.LabelAlignment,System.Drawing.PointF,System.Drawing.SizeF,System.Drawing.SizeF,System.Drawing.StringFormat@)">
            <summary>
            Gets point position of the label.
            </summary>
            <param name="labelAlignment">Label alignment.</param>
            <param name="markerPosition">Marker position.</param>
            <param name="sizeMarker">Marker size.</param>
            <param name="sizeFont">Label size.</param>
            <param name="format">String format.</param>
            <returns>Label point position.</returns>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.AnnotationSmartLabels">
            <summary>
            AnnotationSmartLabels class provides SmartLabels functionality 
            specific to the annotation objects.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AnnotationSmartLabels.#ctor">
            <summary>
            Default public constructor.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AnnotationSmartLabels.IsSmartLabelCollide(Dundas.Olap.WebUIControls.CommonElements,Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.SmartLabelsStyle,System.Drawing.PointF,System.Drawing.SizeF,System.Drawing.PointF,System.Drawing.StringFormat,Dundas.Olap.WebUIControls.LabelAlignment,System.Boolean)">
            <summary>
            Checks SmartLabel collision.
            </summary>
            <param name="common">Reference to common elements.</param>
            <param name="graph">Reference to chart graphics object.</param>
            <param name="area">Chart area.</param>
            <param name="smartLabelsStyle">Smart labels style.</param>
            <param name="position">Original label position.</param>
            <param name="size">Label text size.</param>
            <param name="markerPosition">Marker position.</param>
            <param name="format">Label string format.</param>
            <param name="labelAlignment">Label alignment.</param>
            <param name="checkCalloutLineOverlapping">Indicates that labels overlapping by callout line must be checked.</param>
            <returns>True if label collides.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AnnotationSmartLabels.AddMarkersPosition(Dundas.Olap.WebUIControls.CommonElements,Dundas.Olap.WebUIControls.ChartArea)">
            <summary>
            Adds positions of the series markers into the list.
            </summary>
            <param name="common">Reference to common elements.</param>
            <param name="area">Chart area.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AnnotationSmartLabels.DrawCallout(Dundas.Olap.WebUIControls.CommonElements,Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.SmartLabelsStyle,System.Drawing.PointF,System.Drawing.SizeF,System.Drawing.StringFormat,System.Drawing.PointF,System.Drawing.SizeF,Dundas.Olap.WebUIControls.LabelAlignment)">
            <summary>
            Process single SmartLabel by adjusting it's position in case of collision.
            </summary>
            <param name="common">Reference to common elements.</param>
            <param name="graph">Reference to chart graphics object.</param>
            <param name="area">Chart area.</param>
            <param name="smartLabelsStyle">Smart labels style.</param>
            <param name="labelPosition">Original label position.</param>
            <param name="labelSize">Label text size.</param>
            <param name="format">Label string format.</param>
            <param name="markerPosition">Marker position.</param>
            <param name="markerSize">Marker size.</param>
            <param name="labelAlignment">Label alignment.</param>
            <returns>Adjusted position of the label.</returns>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.ScrollBarButtonType">
            <summary>
            Defines scroll bar button types
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ScrollBarButtonType.ThumbTracker">
            <summary>
            Thumb tracker button
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ScrollBarButtonType.SmallDecrement">
            <summary>
            Scroll view by substracting small distance
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ScrollBarButtonType.SmallIncrement">
            <summary>
            Scroll view by adding small distance
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ScrollBarButtonType.LargeDecrement">
            <summary>
            Scroll view by substracting large distance
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ScrollBarButtonType.LargeIncrement">
            <summary>
            Scroll view by adding large distance
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ScrollBarButtonType.ZoomReset">
            <summary>
            Zoom reset button
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.ScrollBarButtonStyle">
            <summary>
            Scroll bar buttons style flag.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ScrollBarButtonStyle.None">
            <summary>
            No buttons are shown.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ScrollBarButtonStyle.SmallScroll">
            <summary>
            Small increment/decrement buttons are shown.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ScrollBarButtonStyle.ResetZoom">
            <summary>
            Reset zoom buttons are shown.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ScrollBarButtonStyle.All">
            <summary>
            All button are shown. 
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.AxisScrollBar">
            <summary>
            AxisScrollBar class represent axis scroolbar. It is exposed as
            ScrollBar property of the Axis class. It contains scrollbar appearance
            properties and drawing methods.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisScrollBar.#ctor">
            <summary>
            Axis default scroll bar constructor is private.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisScrollBar.#ctor(Dundas.Olap.WebUIControls.Axis)">
            <summary>
            Axis scroll bar constructor.
            </summary>
            <param name="axis">Reference to the axis class.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisScrollBar.Initialize">
            <summary>
            Initialize axis scroll bar class.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisScrollBar.Dispose">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisScrollBar.IsVisible">
            <summary>
            Returns true if the scroll bar is visible.
            </summary>
            <returns>True if the scroll bar is visible.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisScrollBar.Paint(Dundas.Olap.WebUIControls.ChartGraphics)">
            <summary>
            Draws axis scroll bar.
            </summary>
            <param name="graph">Reference to the Chart Graphics object.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisScrollBar.PaintScrollBarConnectionRect(Dundas.Olap.WebUIControls.ChartGraphics,System.Drawing.RectangleF,System.Int32)">
            <summary>
            Fills a connection rectangle between two scoll bars.
            </summary>
            <param name="graph">Chart graphics.</param>
            <param name="scrollBarRect">Scroll bar position.</param>
            <param name="borderWidth">Border width.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisScrollBar.PaintScrollBar3DButton(Dundas.Olap.WebUIControls.ChartGraphics,System.Drawing.RectangleF,System.Boolean,Dundas.Olap.WebUIControls.ScrollBarButtonType)">
            <summary>
            Draws 3D button in the scroll bar
            </summary>
            <param name="graph">Chart graphics.</param>
            <param name="buttonRect">Button position.</param>
            <param name="pressedState">Indicates that button is pressed.</param>
            <param name="buttonType">Button type to draw.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisScrollBar.GetScrollBarButtonRect(System.Drawing.RectangleF,Dundas.Olap.WebUIControls.ScrollBarButtonType)">
            <summary>
            Returns scroll bar button rectangle position in relative coordinates.
            </summary>
            <param name="scrollBarClientRect">Scroll bar client rectangle.</param>
            <param name="buttonType">Scroll bar button type.</param>
            <returns>Scroll bar position.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisScrollBar.GetScrollBarRect">
            <summary>
            Returns scroll bar rectangle position in relative coordinates.
            </summary>
            <returns>Scroll bar position.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisScrollBar.GetScrollBarRelativeSize">
            <summary>
            Internal helper method which returns the relative scroll bar size.
            </summary>
            <returns>Relative scroll bar size.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisScrollBar.GetDataViewPercentage">
            <summary>
            Returns the percentage size (0-100%) of the data view comparing to 
            the axis scale minimum and maximum values.
            </summary>
            <returns>Size of the data view in percentage.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisScrollBar.GetDataViewPositionPercentage">
            <summary>
            Returns the the data view position in percentage (0-100%) using 
            the axis scale minimum and maximum values.
            </summary>
            <returns>Data view position in percentage.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisScrollBar.GetButtonsNumberAll">
            <summary>
            Get total number of buttons in the scroll bar (except tracker).
            </summary>
            <returns>Number of buttons.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisScrollBar.GetButtonsNumberTop">
            <summary>
            Get number of buttons in the top (left) part of the scroll bar.
            </summary>
            <returns>Number of buttons.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisScrollBar.GetButtonsNumberBottom">
            <summary>
            Get number of buttons in the bottom (right) part of the scroll bar.
            </summary>
            <returns>Number of buttons.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisScrollBar.GetAbsoluteSize(System.Drawing.SizeF)">
            <summary>
            Converts Relative size to Absolute size
            </summary>
            <param name="relative">Relative size in %</param>
            <returns>Absolute size</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisScrollBar.GetRelativeSize(System.Drawing.SizeF)">
            <summary>
            Converts Absolute size to Relative size
            </summary>
            <param name="size">Absolute size</param>
            <returns>Relative size</returns>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.AxisScrollBar.PositionInside">
            <summary>
            Indicates that scroll bar is positioned inside or outside of chart area.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.AxisScrollBar.Enabled">
            <summary>
            Indicates that axis view scroll bar is enabled.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.AxisScrollBar.ChartArea">
            <summary>
            Chart area, which contains this Scroll Bar.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.AxisScrollBar.Axis">
            <summary>
            Axis, which contains this Scroll Bar.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.AxisScrollBar.Buttons">
            <summary>
            Data view scroll bar buttons style.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.AxisScrollBar.Size">
            <summary>
            Data view scroll bar size.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.AxisScrollBar.ButtonColor">
            <summary>
            Data view scroll bar buttons color.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.AxisScrollBar.LineColor">
            <summary>
            Data view scroll bar line color.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.AxisScrollBar.BackColor">
            <summary>
            Data view scroll bar back color.
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.Formulas.VolumeIndicators">
            <summary>
            This class is used for calculations of 
            technical analyses volume indicators.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Formulas.VolumeIndicators.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Formulas.VolumeIndicators.Formula(System.String,System.Double[][],System.Double[][]@,System.String[],System.String[],System.String[][]@)">
            <summary>
            The first method in the module, which converts a formula 
            name to the corresponding private method.
            </summary>
            <param name="formulaName">String which represent a fomula name</param>
            <param name="inputValues">Arrays of doubles - Input values</param>
            <param name="outputValues">Arrays of doubles - Output values</param>
            <param name="parameterList">Array of strings - Formula parameters</param>
            <param name="extraParameterList">Array of strings - Extra Formula parameters from DataManipulator object</param>
            <param name="outLabels">Array of strings - Used for Labels. Description for ouput results.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Formulas.VolumeIndicators.MoneyFlow(System.Double[][],System.Double[][]@,System.String[],System.String[])">
            <summary>
            The Money Flow Index ("MFI") is a momentum indicator that 
            measures the strength of money flowing in and out of 
            a security. It is related to the Relative Strength Index, 
            but where the RSI only incorporates prices, the Money Flow 
            Index accounts for volume. 
            ---------------------------------------------------------
            Input: 
            	- 4 Y values ( High, Low, Close, Volume ).
            Output: 
            	- 1 Y value Money Flow Indicator.
            Parameters: 
            	- Period
            Extra Parameters: 
            	- 
            </summary>
            <param name="inputValues">Arrays of doubles</param>
            <param name="outputValues">Arrays of doubles</param>
            <param name="parameterList">Array of strings</param>
            <param name="extraParameterList">Array of strings</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Formulas.VolumeIndicators.PriceVolumeTrend(System.Double[][],System.Double[][]@,System.String[],System.String[])">
            <summary>
            The Price and Volume Trend ("PVT") is similar to 
            On Balance Volume ("OBV,") in that it is a cumulative 
            total of volume that is adjusted depending on changes 
            in closing prices. But where OBV adds all volume on days 
            when prices close higher and subtracts all volume on days 
            when prices close lower, the PVT adds/subtracts only 
            a portion of the daily volume. The amount of volume 
            added to the PVT is determined by the amount that prices 
            rose or fell relative to the previous day’s close. 
            The PVT is calculated by multiplying the day’s volume 
            by the percent that the security’s price changed, and 
            adding this value to a cumulative total.
            ---------------------------------------------------------
            Input: 
            	- 2 Y values ( Close, Volume ).
            Output: 
            	- 1 Y value Price Volume Trend Indicator.
            Parameters: 
            	- 
            Extra Parameters: 
            	- 
            </summary>
            <param name="inputValues">Arrays of doubles - Input values</param>
            <param name="outputValues">Arrays of doubles - Output values</param>
            <param name="parameterList">Array of strings - Parameters</param>
            <param name="extraParameterList">Array of strings - Extra parameters</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Formulas.VolumeIndicators.OnBalanceVolume(System.Double[][],System.Double[][]@,System.String[],System.String[])">
            <summary>
            On Balance Volume ("OBV") is a momentum indicator that 
            relates volume to price change. OBV is one of the most 
            popular volume indicators and was developed by 
            Joseph Granville. Constructing an OBV line is very 
            simple: The total volume for each day is assigned a 
            positive or negative value depending on whether prices 
            closed higher or lower that day. A higher close results 
            in the volume for that day to get a positive value, while 
            a lower close results in negative value. A running total 
            is kept by adding or subtracting each day's volume based 
            on the direction of the close. The direction of the OBV 
            line is the thing to watch, not the actual volume numbers. 
            ---------------------------------------------------------
            Input: 
            	- 2 Y values ( Close, Volume ).
            Output: 
            	- 1 Y value On Balance Volume Indicator.
            Parameters: 
            	- 
            Extra Parameters: 
            	- 
            </summary>
            <param name="inputValues">Arrays of doubles - Input values</param>
            <param name="outputValues">Arrays of doubles - Output values</param>
            <param name="parameterList">Array of strings - Parameters</param>
            <param name="extraParameterList">Array of strings - Extra parameters</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Formulas.VolumeIndicators.NegativeVolumeIndex(System.Double[][],System.Double[][]@,System.String[],System.String[])">
            <summary>
            The Negative Volume Index ("NVI") focuses on days where 
            the volume decreases from the previous day. The premise 
            being that the "smart money" takes positions on days when 
            volume decreases.
            ---------------------------------------------------------
            Input: 
            	- 2 Y values ( Close, Volume ).
            Output: 
            	- 1 Y value Negative Volume index.
            Parameters: 
            	- StartValue : double
            Extra Parameters: 
            	- 
            </summary>
            <param name="inputValues">Arrays of doubles - Input values</param>
            <param name="outputValues">Arrays of doubles - Output values</param>
            <param name="parameterList">Array of strings - Parameters</param>
            <param name="extraParameterList">Array of strings - Extra parameters</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Formulas.VolumeIndicators.PositiveVolumeIndex(System.Double[][],System.Double[][]@,System.String[],System.String[])">
            <summary>
            The Positive Volume Index ("PVI") focuses on days where 
            the volume increased from the previous day. The premise 
            being that the "crowd" takes positions on days when 
            volume increases. Interpretation of the PVI assumes that 
            on days when volume increases, the crowd-following 
            "uninformed" investors are in the market. Conversely, on 
            days with decreased volume, the "smart money" is quietly 
            taking positions. Thus, the PVI displays what the 
            not-so-smart-money is doing. (The Negative Volume Index, 
            displays what the smart money is doing.) Note, however, 
            that the PVI is not a contrarian indicator. Even though 
            the PVI is supposed to show what the not-so-smart-money 
            is doing, it still trends in the same direction as prices.
            ---------------------------------------------------------
            Input: 
            	- 2 Y values ( Close, Volume ).
            Output: 
            	- 1 Y value On Positive Volume index.
            Parameters: 
            	- StartValue : double
            Extra Parameters: 
            	- 
            </summary>
            <param name="inputValues">Arrays of doubles - Input values</param>
            <param name="outputValues">Arrays of doubles - Output values</param>
            <param name="parameterList">Array of strings - Parameters</param>
            <param name="extraParameterList">Array of strings - Extra parameters</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Formulas.VolumeIndicators.AccumulationDistribution(System.Double[][],System.Double[][]@,System.String[],System.String[])">
            <summary>
            The Accumulation/Distribution is a momentum indicator that 
            associates changes in price and volume. The indicator is 
            based on the premise that the more volume that accompanies 
            a price move, the more significant the price move. A portion 
            of each day’s volume is added or subtracted from 
            a cumulative total. The nearer the closing price is to 
            the high for the day, the more volume added to 
            the cumulative total. The nearer the closing price is to 
            the low for the day, the more volume subtracted from the 
            cumulative total. If the close is exactly between the high 
            and low prices, nothing is added to the cumulative total.
            ---------------------------------------------------------
            Input: 
            	- 4 Y values ( Hi, Low, Close, Volume ).
            Output: 
            	- 1 Y value Accumulation Distribution
            Parameters: 
            	- 
            Extra Parameters: 
            	- 
            </summary>
            <param name="inputValues">Arrays of doubles - Input values</param>
            <param name="outputValues">Arrays of doubles - Output values</param>
            <param name="parameterList">Array of strings - Parameters</param>
            <param name="extraParameterList">Array of strings - Extra parameters</param>
        </member>
        <member name="P:Dundas.Charting.WebControl.Formulas.VolumeIndicators.Name">
            <summary>
            Formula Module name
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.CommandUI">
            <summary>
            The CommandUI class is a link between a visual component and Chart <see cref="P:Dundas.Olap.WebUIControls.CommandUI.Command"/>.
            </summary>
            <remarks>
            The supported components are <see cref="T:System.Windows.Forms.Button"/>, <see cref="T:System.Windows.Forms.ToolBarButton"/> 
            and <see cref="T:System.Windows.Forms.MenuItem"/>.
            </remarks>
            <example>Your description...
            <code lang="C#">
            // Attach command 'Properties' to a Button.
            Bitton btn = new Button();
            ...
            // Assign btn with command
            this.chart1.SetCommand( this.btn, new CommandUI( "Properties", true, true, true));
            ....
            // Execute command with generating a Click event
            btn.PerformClick();
            </code>
            </example>
            <example>Your description...
            <code lang="VB.Net">
            ' Attach command 'Properties' to a Button.
            Dim btn As Bitton =  New Button() 
            ...
            ' Assign btn with command
            Me.chart1.SetCommand(Me.btn, New CommandUI("Properties", True, True, True))
            ...
            ' Execute command with generating a Click event
            btn.PerformClick()
            </code>
            </example>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.CommandUI.commandName">
            <summary>
            The command name
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.CommandUI.enableImage">
            <summary>
             image tooltip and text flags
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.CommandUI.parameters">
            <summary>
            command additional parameters
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.CommandUI.command">
            <summary>
            command object reference
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.CommandUI.component">
            <summary>
            Linked component
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.CommandUI.owner">
            <summary>
            parent ChartUI object
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.CommandUI.backupChartUI">
            <summary>
            backup ChartUI object; used during initialization
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CommandUI.#ctor">
            <summary>
            Create new instance of CommandUI object.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CommandUI.#ctor(System.String,System.Boolean,System.Boolean,System.Boolean,System.String)">
            <summary>
            Create new instance of CommandUI object.
            </summary>
            <param name="commandName">The Command name to link this CommandUI instance with <see cref="P:Dundas.Olap.WebUIControls.CommandUI.Command"/></param>
            <param name="enableImage">Determines whether or not to show image in control automaticaly</param>
            <param name="enableTooltip">Determines whether or not to show tooltip in control automaticaly</param>
            <param name="enableText">Determines whether or not to show text in control automaticaly</param>
            <param name="parameters">Represents the parameters which is passed to command to execute</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CommandUI.#ctor(Dundas.Olap.WebUIControls.ChartUI)">
            <summary>
            Create new instance of CommandUI object. For internal use.
            </summary>
            <param name="backupChartUI">The <see cref="T:Dundas.Olap.WebUIControls.ChartUI"/> object instance as parent of this <see cref="T:Dundas.Olap.WebUIControls.CommandUI"/></param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CommandUI.ChangeCommand(Dundas.Olap.WebUIControls.Command)">
            <summary>
            Sets property defaults after command is changed
            </summary>
            <param name="cmd"></param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CommandUI.Invalidate">
            <summary>
            Invalidate UI
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CommandUI.Attach(Dundas.Olap.WebUIControls.ChartUI,System.ComponentModel.Component)">
            <summary>
            Attaches this object to component events; Part of initialization
            </summary>
            <param name="owner">The parent ChartUI</param>
            <param name="component">The component to hook in</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CommandUI.DoAttach">
            <summary>
            Represents notification to initialize event hooks for components which is not supported.
            The supported components are <see cref="T:System.Windows.Forms.MenuItem"/>,
            <see cref="T:System.Windows.Forms.Button"/> and <see cref="T:System.Windows.Forms.ToolBarButton"/>.
            Should be overided and result should be true.
            </summary>
            <returns>Returns true if events hooks are successful</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CommandUI.Detach">
            <summary>
            Deinitializes and unhook component events from this instance.
            Called during deintitialization.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CommandUI.DoDetach">
            <summary>
            Represents notification to deinitialize event hooks (unhook events)
            for components which is not supported.
            The supported components are <see cref="T:System.Windows.Forms.MenuItem"/>,
            <see cref="T:System.Windows.Forms.Button"/> and <see cref="T:System.Windows.Forms.ToolBarButton"/>.
            Should be overided and result should be true.
            </summary>
            <returns>Returns true if event detachments are successful</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CommandUI.UpdateUI(Dundas.Olap.WebUIControls.UpdateUIPart)">
            <summary>
            Updates linked user interface
            </summary>
            <param name="part">Determines which part of interface to be updated</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CommandUI.DoUpdateUI(Dundas.Olap.WebUIControls.UpdateUIPart)">
            <summary>
            This method can be overriden in order to process user interface update events.
            </summary>
            <param name="part">The <see cref="T:Dundas.Olap.WebUIControls.UpdateUIPart"/> which shows which part of user interface should be updated</param>
            <returns>Should return true if its overriden</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CommandUI.Equals(System.Object)">
            <summary>
            Tests whether the given object is equal to this object.
            </summary>
            <param name="obj">The object to compare to this object.</param>
            <returns>true if obj is an instance of CommandUI class and is equal to this object; otherwise, false.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CommandUI.GetHashCode">
            <summary>
            Returns the hash code of this object.
            </summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.CommandUI.Component">
            <summary>
            Gets the component which is connected to this CommandUI.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.CommandUI.Owner">
            <summary>
            Gets the ChartUI of the chart. Returns null if this CommandUI is registered.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.CommandUI.Command">
            <summary>
            Returns the command assosiated with this CommandUI.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.CommandUI.Attached">
            <summary>
            Returns true if this command is attached to chart.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.CommandUI.CommandName">
            <summary>
            Determines the <see cref="P:Dundas.Olap.WebUIControls.CommandUI.Command"/> in <see cref="T:Dundas.Olap.WebUIControls.CommandCollection"/> 
            in order to link this <see cref="T:Dundas.Olap.WebUIControls.CommandUI"/> with.
            </summary>
            <value>
            The string which represents <see cref="P:Dundas.Olap.WebUIControls.CommandUI.Command"/> Name. Default is empty string. 
            </value>
            <remarks>
            
            </remarks>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.CommandUI.EnableImage">
            <summary>
            Gets and sets boolean value which determines whether or 
            not to show image in control automaticaly.
            </summary>
            <value>
            True to show <see cref="P:Dundas.Olap.WebUIControls.CommandUI.Command"/> image, otherwise - false.Default is 'True'.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.CommandUI.EnableText">
            <summary>
            Gets and sets boolean value which determines whether or not to show <see cref="P:Dundas.Olap.WebUIControls.CommandUI.Command"/> text in the control automaticaly.
            </summary>
            <value>
            True to show <see cref="P:Dundas.Olap.WebUIControls.CommandUI.Command"/> text, otherwise - false.Default is 'True'.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.CommandUI.EnableTooltip">
            <summary>
            Gets and sets boolean value which determines 
            whether or not to show command desctiption as tooltip in the control automaticaly.
            </summary>
            <value>
            True to show <see cref="P:Dundas.Olap.WebUIControls.CommandUI.Command"/> description, otherwise - false. Default is 'True'.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.CommandUI.Parameters">
            <summary>
            Gets and sets the parameter which is passed to command to execute
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.CommandUI.Converter">
            <summary>
            Design time Converter class
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CommandUI.Converter.#ctor">
            <summary>
            Initializes a new instance of the Converter class.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CommandUI.Converter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert an 
            object of one type to the type of this converter.
            </summary>
            <param name="context">An ITypeDescriptorContext that provides a format context</param>
            <param name="sourceType">A Type that represents the type you want to convert from. </param>
            <returns>true if this converter can perform the conversion; otherwise, false.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CommandUI.Converter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert the object to the specified type,
            using the specified context.
            </summary>
            <param name="context">An ITypeDescriptorContext that provides a format context</param>
            <param name="destinationType">A Type that represents the type you want to convert to</param>
            <returns>true if this converter can perform the conversion; otherwise, false</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CommandUI.Converter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the given object to the type of this converter, 
            using the specified context and culture information
            </summary>
            <param name="context">An ITypeDescriptorContext that provides a format context</param>
            <param name="culture">The CultureInfo to use as the current culture</param>
            <param name="value">The Object to convert</param>
            <returns>An Object that represents the converted value</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CommandUI.Converter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the given value object to the specified type, 
            using the specified context and culture information
            </summary>
            <param name="context">An ITypeDescriptorContext that provides a format context</param>
            <param name="culture">A CultureInfo object. If a null reference (Nothing in Visual Basic) is passed, 
            the current culture is assumed. </param>
            <param name="value">The Object to convert</param>
            <param name="destinationType">The Type to convert the value parameter to</param>
            <returns>An Object that represents the converted value</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CommandUI.Converter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
            <summary>
            Creates an instance of the Type that this TypeConverter is associated with, 
            using the specified context, given a set of property values for the object
            </summary>
            <param name="context">An ITypeDescriptorContext that provides a format context</param>
            <param name="propertyValues">An IDictionary of new property values</param>
            <returns>An Object representing the given IDictionary, or a null reference if the object cannot be created</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CommandUI.Converter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Returns whether changing a value on this object requires a call to 
            CreateInstance to create a new value, using the specified context
            </summary>
            <param name="context">An ITypeDescriptorContext that provides a format context</param>
            <returns>true if changing a property on this object requires a call to CreateInstance to create a new value; otherwise, false</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CommandUI.Converter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>
            Returns a collection of properties for the type of array specified by the value parameter, 
            using the specified context and attributes
            </summary>
            <param name="context">An ITypeDescriptorContext that provides a format context</param>
            <param name="value">An Object that specifies the type of array for which to get properties</param>
            <param name="attributes">An array of type Attribute that is used as a filter</param>
            <returns>A PropertyDescriptorCollection with the properties that are exposed for this data type, or a null reference </returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CommandUI.Converter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Returns whether this object supports properties, using the specified context
            </summary>
            <param name="context">An ITypeDescriptorContext that provides a format context</param>
            <returns>true if GetProperties should be called to find the properties of this object; otherwise, false</returns>
        </member>
        <member name="T:Dundas.Charting.WebControl.ChartTypes.ErrorBarType">
            <summary>
            Defines the way error amount is calculated.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.ChartTypes.ErrorBarType.FixedValue">
            <summary>
            Error is a fixed value.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.ChartTypes.ErrorBarType.Percentage">
            <summary>
            Error is percentage of the center value.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.ChartTypes.ErrorBarType.StandardDeviation">
            <summary>
            Error is standard deviation of all center values in series.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.ChartTypes.ErrorBarType.StandardError">
            <summary>
            Error is standard error of all center values in series.
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.ChartTypes.ErrorBarStyle">
            <summary>
            Error bars drawing styles.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.ChartTypes.ErrorBarStyle.Both">
            <summary>
            Draws both lower and upper error bar.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.ChartTypes.ErrorBarStyle.UpperError">
            <summary>
            Draws only upper error bar.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.ChartTypes.ErrorBarStyle.LowerError">
            <summary>
            Draws only lower error bar.
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.ChartTypes.ErrorBarChart">
            <summary>
            ErrorBarChart class provides 2D and 3D drawing and hit testing of
            the ErrorBar chart.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.ChartTypes.ErrorBarChart.vAxis">
            <summary>
            Vertical axis
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.ChartTypes.ErrorBarChart.hAxis">
            <summary>
            Horizontal axis
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.ErrorBarChart.#ctor">
            <summary>
            Error bar chart constructor.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.ErrorBarChart.GetLegendImageStyle(Dundas.Olap.WebUIControls.Series)">
            <summary>
            How to draw series/points in legend:
            Filled rectangle, Line or Marker
            </summary>
            <param name="series">Legend item series.</param>
            <returns>Legend item style.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.ErrorBarChart.GetImage(Dundas.Charting.WebControl.ChartTypes.ChartTypeRegistry)">
            <summary>
            Gets chart type image.
            </summary>
            <param name="registry">Chart types registry object.</param>
            <returns>Chart type image.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.ErrorBarChart.Paint(Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.CommonElements,Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.Series)">
            <summary>
            Paint error bar chart.
            </summary>
            <param name="graph">The Chart Graphics object.</param>
            <param name="common">The Common elements object.</param>
            <param name="area">Chart area for this chart.</param>
            <param name="seriesToDraw">Chart series to draw.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.ErrorBarChart.ProcessChartType(System.Boolean,Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.CommonElements,Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.Series)">
            <summary>
            This method recalculates size of the bars. This method is used 
            from Paint or Select method.
            </summary>
            <param name="selection">If True selection mode is active, otherwise paint mode is active.</param>
            <param name="graph">The Chart Graphics object.</param>
            <param name="common">The Common elements object.</param>
            <param name="area">Chart area for this chart.</param>
            <param name="seriesToDraw">Chart series to draw.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.ErrorBarChart.DrawErrorBarMarks(Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Charting.WebControl.ChartTypes.ErrorBarStyle,Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.Series,Dundas.Olap.WebUIControls.DataPoint,System.Single,System.Single)">
            <summary>
            Draws error bar markers.
            </summary>
            <param name="graph">Chart graphics object.</param>
            <param name="barStyle">Style of the error bar.</param>
            <param name="area">Chart area.</param>
            <param name="ser">Data point series.</param>
            <param name="point">Data point to draw.</param>
            <param name="xPosition">X position.</param>
            <param name="width">Point width.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.ErrorBarChart.DrawErrorBarSingleMarker(Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.DataPoint,System.String,System.Single,System.Single,System.Single,System.Single,System.Boolean)">
            <summary>
            Draws single marker on the error bar.
            </summary>
            <param name="graph">Chart graphics.</param>
            <param name="area">Chart area.</param>
            <param name="point">Series point.</param>
            <param name="markerStyle">Marker style name.</param>
            <param name="xPosition">X position.</param>
            <param name="yPosition">Y position.</param>
            <param name="zPosition">Z position.</param>
            <param name="width">Point width.</param>
            <param name="draw3D">Used for 3d drawing.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.ErrorBarChart.GetMarkerSize(Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.CommonElements,Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.DataPoint,System.Int32,System.String)">
            <summary>
            Returns marker size.
            </summary>
            <param name="graph">The Chart Graphics object.</param>
            <param name="common">The Common elements object.</param>
            <param name="area">Chart area for this chart.</param>
            <param name="point">Data point.</param>
            <param name="markerSize">Marker size.</param>
            <param name="markerImage">Marker image.</param>
            <returns>Marker width and height.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.ErrorBarChart.DrawLabel(Dundas.Olap.WebUIControls.CommonElements,Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.Series,Dundas.Olap.WebUIControls.DataPoint,System.Drawing.PointF,System.Int32)">
            <summary>
            Draws error bar chart data point label.
            </summary>
            <param name="common">The Common elements object</param>
            <param name="area">Chart area for this chart</param>
            <param name="graph">Chart graphics object.</param>
            <param name="ser">Data point series.</param>
            <param name="point">Data point to draw.</param>
            <param name="position">Label position.</param>
            <param name="pointIndex">Data point index.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.ErrorBarChart.ProcessChartType3D(System.Boolean,Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.CommonElements,Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.Series)">
            <summary>
            This method recalculates size of the bars. This method is used 
            from Paint or Select method.
            </summary>
            <param name="selection">If True selection mode is active, otherwise paint mode is active.</param>
            <param name="graph">The Chart Graphics object.</param>
            <param name="common">The Common elements object.</param>
            <param name="area">Chart area for this chart.</param>
            <param name="seriesToDraw">Chart series to draw.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.ErrorBarChart.DrawErrorBarMarks3D(Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Charting.WebControl.ChartTypes.ErrorBarStyle,Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.Series,Dundas.Olap.WebUIControls.DataPoint,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws stock chart open-close marks depending on selected style.
            </summary>
            <param name="graph">Chart graphics object.</param>
            <param name="barStyle">Style of the error bar.</param>
            <param name="area">Chart area.</param>
            <param name="ser">Data point series.</param>
            <param name="point">Data point to draw.</param>
            <param name="xPosition">X position.</param>
            <param name="width">Point width.</param>
            <param name="zPosition">Series Z position.</param>
            <param name="depth">Series depth.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.ErrorBarChart.GetYValue(Dundas.Olap.WebUIControls.CommonElements,Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.Series,Dundas.Olap.WebUIControls.DataPoint,System.Int32,System.Int32)">
            <summary>
            Helper function that returns the Y value of the point.
            </summary>
            <param name="common">Chart common elements.</param>
            <param name="area">Chart area the series belongs to.</param>
            <param name="series">Sereis of the point.</param>
            <param name="point">Point object.</param>
            <param name="pointIndex">Index of the point.</param>
            <param name="yValueIndex">Index of the Y value to get.</param>
            <returns>Y value of the point.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.ErrorBarChart.CalculateErrorAmount(Dundas.Olap.WebUIControls.Series)">
            <summary>
            Calculates lower and upper error amount using specified formula.
            </summary>
            <param name="errorBarSeries">Error bar chart type series.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.ErrorBarChart.GetDataFromLinkedSeries(Dundas.Olap.WebUIControls.Series,System.ComponentModel.Design.IServiceContainer)">
            <summary>
            Populates error bar center value using the linked series specified by 
            "ErrorBarSeries" custom attribute.
            </summary>
            <param name="errorBarSeries">Error bar chart type series.</param>
            <param name="serviceContainer">Service container.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.ErrorBarChart.AddSmartLabelMarkerPositions(Dundas.Olap.WebUIControls.CommonElements,Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.Series,System.Collections.ArrayList)">
            <summary>
            Adds markers position to the list. Used to check SmartLabels overlapping.
            </summary>
            <param name="common">Common chart elements.</param>
            <param name="area">Chart area.</param>
            <param name="series">Series values to be used.</param>
            <param name="list">List to add to.</param>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.ErrorBarChart.Name">
            <summary>
            Chart type name
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.ErrorBarChart.Stacked">
            <summary>
            True if chart type is stacked
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.ErrorBarChart.SupportStackedGroups">
            <summary>
            True if stacked chart type supports groups
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.ErrorBarChart.StackSign">
            <summary>
            True if stacked chart type should draw separately positive and 
            negative data points ( Bar and column Stacked types ).
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.ErrorBarChart.RequireAxes">
            <summary>
            True if chart type supports axes
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.ErrorBarChart.SecondYScale">
            <summary>
            Chart type with two y values used for scale ( bubble chart type )
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.ErrorBarChart.CircularChartArea">
            <summary>
            True if chart type requires circular chart area.
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.ErrorBarChart.SupportLogarithmicAxes">
            <summary>
            True if chart type supports logarithmic axes
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.ErrorBarChart.SwitchValueAxes">
            <summary>
            True if chart type requires to switch the value (Y) axes position
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.ErrorBarChart.SideBySideSeries">
            <summary>
            True if chart series can be placed side-by-side.
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.ErrorBarChart.DataPointsInLegend">
            <summary>
            True if each data point of a chart must be represented in the legend
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.ErrorBarChart.ZeroCrossing">
            <summary>
            If the crossing value is auto Crossing value ZeroCrossing should be 
            automatically set to zero for some chart 
            types (Bar, column, area etc.)
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.ErrorBarChart.ApplyPaletteColorsToPoints">
            <summary>
            True if palette colors should be applied for each data paoint.
            Otherwise the color is applied to the series.
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.ErrorBarChart.ExtraYValuesConnectedToYAxis">
            <summary>
            Indicates that extra Y values are connected to the scale of the Y axis
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.ErrorBarChart.HundredPercent">
            <summary>
            Indicates that this is a one hundred percent chart.
            Axis scale from 0 to 100 percent should be used.
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.ErrorBarChart.HundredPercentSupportNegative">
            <summary>
            Indicates that this is a one hundred percent chart.
            Axis scale from 0 to 100 percent should be used.
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.ErrorBarChart.YValuesPerPoint">
            <summary>
            Number of supported Y value(s) per point 
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.AnnotationCollection">
            <summary>
            <b>AnnotationCollection</b> is a class that stores chart annotation objects.
            <seealso cref="!:Chart.Annotations"/>
            </summary>
            <remarks>
            All chart annotations are stored in this collection, and it is exposed as 
            the <see cref="!:Chart.Annotations"/> property of the chart. It's also used to 
            store annotations inside the <see cref="T:Dundas.Olap.WebUIControls.AnnotationGroup"/> class.
            <para>
            Methods for adding, inserting, iterating and removing annotations from the 
            collection are available.
            </para>
            </remarks>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AnnotationCollection.#ctor">
            <summary>
            Default public constructor.
            </summary>
            <remarks>
            This constructor is for internal use and should not be part of documentation.
            </remarks>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AnnotationCollection.#ctor(System.ComponentModel.Design.IServiceContainer)">
            <summary>
            Public constructor.
            </summary>
            <param name="serviceContainer">
            Chart <see cref="T:System.ComponentModel.Design.IServiceContainer"/> interface.
            </param>
            <remarks>
            This constructor is for the internal use and should not be part of documentation.
            </remarks>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AnnotationCollection.Remove(System.String)">
            <summary>
            Removes the annotation with the specified name from the collection.
            </summary>
            <param name="name">
            Name of the annotation to be removed.
            </param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AnnotationCollection.Remove(Dundas.Olap.WebUIControls.Annotation)">
            <summary>
            Removes the given annotation from the collection.
            </summary>
            <param name="annotation">
            <see cref="T:Dundas.Olap.WebUIControls.Annotation"/> object to be removed.
            </param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AnnotationCollection.Add(Dundas.Olap.WebUIControls.Annotation)">
            <summary>
            Adds an annotation to the end of the collection.
            </summary>
            <param name="annotation">
            <see cref="T:Dundas.Olap.WebUIControls.Annotation"/> object to add.
            </param>
            <returns>
            Index of the newly added object.
            </returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AnnotationCollection.Insert(System.Int32,Dundas.Olap.WebUIControls.Annotation)">
            <summary>
            Inserts an annotation into the collection.
            </summary>
            <param name="index">
            Index to insert the object at.
            </param>
            <param name="annotation">
            <see cref="T:Dundas.Olap.WebUIControls.Annotation"/> object to insert.
            </param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AnnotationCollection.AddLine(System.String,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Adds a new line annotation to the end of the collection.
            </summary>
            <param name="name">
            Name of the annotation. Use an empty string to automatically assign a unique name.
            </param>
            <param name="x1">
            X coordinate of the first line point.
            </param>
            <param name="y1">
            Y coordinate of the first line point.
            </param>
            <param name="x2">
            X coordinate of the second line point.
            </param>
            <param name="y2">
            Y coordinate of the second line point.
            </param>
            <returns>
            Index of the added object.
            </returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AnnotationCollection.AddArrow(System.String,Dundas.Olap.WebUIControls.ArrowStyle,System.Int32,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Adds a new arrow annotation to the end of the collection.
            </summary>
            <param name="name">
            Name of the annotation. Use an empty string to automatically assign a unique name.
            </param>
            <param name="style">
            <see cref="T:Dundas.Olap.WebUIControls.ArrowStyle"/> of the arrow.
            </param>
            <param name="size">
            Arrow size, in pixels.
            </param>
            <param name="x1">
            X coordinate of the first line point.
            </param>
            <param name="y1">
            Y coordinate of the first line point.
            </param>
            <param name="x2">
            X coordinate of the second line point.
            </param>
            <param name="y2">
            Y coordinate of the second line point.
            </param>
            <returns>
            Index of the added object.
            </returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AnnotationCollection.AddVerticalLine(System.String,System.Double,System.Double,System.Double)">
            <summary>
            Adds a new vertical line annotation to the end of the collection.
            </summary>
            <param name="name">
            Name of the annotation. Use an empty string to automatically assign a unique name.
            </param>
            <param name="x">
            X coordinate of the line.
            </param>
            <param name="y1">
            Y coordinate of the first line point.
            </param>
            <param name="y2">
            Y coordinate of the second line point.
            </param>
            <returns>
            Index of the added object.
            </returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AnnotationCollection.AddHorizontalLine(System.String,System.Double,System.Double,System.Double)">
            <summary>
            Adds a new horizontal line annotation to the end of the collection.
            </summary>
            <param name="name">
            Name of the annotation. Use an empty string to automatically assign a unique name.
            </param>
            <param name="y">
            Y coordinate of the line.
            </param>
            <param name="x1">
            X coordinate of the first line point.
            </param>
            <param name="x2">
            X coordinate of the second line point.
            </param>
            <returns>
            Index of the added object.
            </returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AnnotationCollection.AddGroup(System.String)">
            <summary>
            Adds a new group annotation to the end of the collection.
            </summary>
            <param name="name">
            Name of the annotation. Use an empty string to automatically assign a unique name.
            </param>
            <returns>
            Index of the added object.
            </returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AnnotationCollection.AddText(System.String,System.String,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Adds a new text annotation to the end of the collection.
            </summary>
            <param name="name">
            Name of the annotation. Use an empty string to automatically assign a unique name.
            </param>
            <param name="text">
            Annotation text.
            </param>
            <param name="x">
            X coordinate of the annotation.
            </param>
            <param name="y">
            Y coordinate of the annotation.
            </param>
            <param name="width">
            Width of the annotation.
            </param>
            <param name="height">
            Height of the annotation.
            </param>
            <returns>
            Index of the added object.
            </returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AnnotationCollection.AddEllipse(System.String,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Adds a new ellipse annotation to the end of the collection.
            </summary>
            <param name="name">
            Name of the annotation. Use an empty string to automatically assign a unique name.
            </param>
            <param name="x">
            X coordinate of the annotation.
            </param>
            <param name="y">
            Y coordinate of the annotation.
            </param>
            <param name="width">
            Width of the annotation.
            </param>
            <param name="height">
            Height of the annotation.
            </param>
            <returns>
            Index of the added object.
            </returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AnnotationCollection.AddRectangle(System.String,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Adds a new rectangle annotation to the end of the collection.
            </summary>
            <param name="name">
            Name of the annotation. Use an empty string to automatically assign a unique name.
            </param>
            <param name="x">
            X coordinate of the annotation.
            </param>
            <param name="y">
            Y coordinate of the annotation.
            </param>
            <param name="width">
            Width of the annotation.
            </param>
            <param name="height">
            Height of the annotation.
            </param>
            <returns>
            Index of the added object.
            </returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AnnotationCollection.AddCallout(System.String,System.String,Dundas.Olap.WebUIControls.CalloutStyle,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Adds a new callout annotation to the end of the collection.
            </summary>
            <param name="name">
            Name of the annotation. Use an empty string to automatically assign a unique name.
            </param>
            <param name="text">
            Annotation text.
            </param>
            <param name="style">
            <see cref="T:Dundas.Olap.WebUIControls.CalloutStyle"/> of the annotation.
            </param>
            <param name="x">
            X coordinate of the annotation.
            </param>
            <param name="y">
            Y coordinate of the annotation.
            </param>
            <param name="width">
            Width of the annotation.
            </param>
            <param name="height">
            Height of the annotation.
            </param>
            <returns>
            Index of the added object.
            </returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AnnotationCollection.AddBorder3D(System.String,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Adds a new 3D border annotation to the end of the collection.
            </summary>
            <param name="name">
            Name of the annotation. Use an empty string to automatically assign a unique name.
            </param>
            <param name="x">
            X coordinate of the annotation.
            </param>
            <param name="y">
            Y coordinate of the annotation.
            </param>
            <param name="width">
            Width of the annotation.
            </param>
            <param name="height">
            Height of the annotation.
            </param>
            <returns>
            Index of the added object.
            </returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AnnotationCollection.AddImage(System.String,System.String,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Adds a new image annotation to the end of the collection.
            </summary>
            <param name="name">
            Name of the annotation. Use an empty string to automatically assign a unique name.
            </param>
            <param name="image">
            Image name.
            </param>
            <param name="x">
            X coordinate of the annotation.
            </param>
            <param name="y">
            Y coordinate of the annotation.
            </param>
            <param name="width">
            Width of the annotation.
            </param>
            <param name="height">
            Height of the annotation.
            </param>
            <returns>
            Index of the added object.
            </returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AnnotationCollection.AddPolygon(System.String,System.Drawing.Drawing2D.GraphicsPath)">
            <summary>
            Adds a new polygon annotation to the end of the collection.
            </summary>
            <param name="name">
            Name of the annotation. Use an empty string to automatically assign a unique name.
            </param>
            <param name="path">
            <see cref="T:System.Drawing.Drawing2D.GraphicsPath"/> object for the polygon annotation.  This defines its path.
            </param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AnnotationCollection.AddPolyline(System.String,System.Drawing.Drawing2D.GraphicsPath)">
            <summary>
            Adds a new polyline annotation to the end of the collection.
            </summary>
            <param name="name">
            Name of the annotation. Use an empty string to automatically assign a unique name.
            </param>
            <param name="path">
            <see cref="T:System.Drawing.Drawing2D.GraphicsPath"/> object for the polyline annotation.  This defines its path.
            </param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AnnotationCollection.OnInsert(System.Int32,System.Object)">
            <summary>
            Called before the new item is inserted.
            </summary>
            <param name="index">Item index.</param>
            <param name="value">Item object.</param>
            <remarks>
            This is an internal method and should not be part of the documentation.
            </remarks>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AnnotationCollection.OnInsertComplete(System.Int32,System.Object)">
            <summary>
            After new item inserted.
            </summary>
            <param name="index">Item index.</param>
            <param name="value">Item object.</param>
            <remarks>
            This is an internal method and should not be part of the documentation.
            </remarks>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AnnotationCollection.OnRemoveComplete(System.Int32,System.Object)">
            <summary>
            After item removed.
            </summary>
            <param name="index">Item index.</param>
            <param name="value">Item object.</param>
            <remarks>
            This is an internal method and should not be part of the documentation.
            </remarks>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AnnotationCollection.OnClearComplete">
            <summary>
            After all items removed.
            </summary>
            <remarks>
            This is an internal method and should not be part of the documentation.
            </remarks>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AnnotationCollection.Paint(Dundas.Olap.WebUIControls.ChartGraphics,System.Boolean)">
            <summary>
            Paints all annotation objects in the collection.
            </summary>
            <param name="chartGraph">Chart graphics used for painting.</param>
            <param name="drawAnnotationOnly">Indicates that only annotation objects are redrawn.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AnnotationCollection.Invalidate">
            <summary>
            Invalidates chart the collection belongs to.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AnnotationCollection.AssignUniqueName(Dundas.Olap.WebUIControls.Annotation)">
            <summary>
            Assigns a unique name to the annotation object based on it's type.
            </summary>
            <param name="annotation">Annotation object to be named.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AnnotationCollection.FindByName(System.String)">
            <summary>
            Finds an annotation in the collection by name.
            </summary>
            <param name="name">
            Name of the annotation to find.
            </param>
            <returns>
            <see cref="T:Dundas.Olap.WebUIControls.Annotation"/> object, or null (or nothing) if it does not exist.
            </returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AnnotationCollection.FindByName(System.String,Dundas.Olap.WebUIControls.AnnotationGroup@)">
            <summary>
            Finds annotation by name.
            </summary>
            <param name="name">Name of the chart annotation.</param>
            <param name="group">Returns reference to the annotation group it belongs to.</param>
            <returns>Annotation or null if it does not exist.</returns>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.AnnotationCollection.Chart">
            <summary>
            Gets a reference to the chart object that owns this collection.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.AnnotationCollection.Item(System.Object)">
            <summary>
            Annotation collection indexer.
            </summary>
            <remarks>
            The <b>Annotation</b> object's name or index can be provided as a parameter. Returns the <see cref="T:Dundas.Olap.WebUIControls.Annotation"/> object. 
            Make sure to cast the annotation to it's type (e.g. LineAnnotation) to access type 
            specific properties.
            </remarks>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.Ajax.PropertyPagesErrorBarClassControl">
            <summary>
            PropertyPagesErrorBarXXX is an user control for setup error bar on one chart series
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.PropertyPagesErrorBarClassControl.IsVisible">
            <summary>
            Determines whether this instance is visible.
            </summary>
            <returns>
            	<c>true</c> if this instance is visible; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.PropertyPagesErrorBarClassControl.ApplyChanges">
            <summary>
            Applies the changes.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.PropertyPagesErrorBarClassControl.InitPage(Dundas.Olap.WebUIControls.Ajax.PropertyPagesClassControl)">
            <summary>
            Inits the page.
            </summary>
            <param name="control">The control.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.PropertyPagesErrorBarClassControl.LocateSeriesAndFormula(System.Collections.IEnumerable)">
            <summary>
            Locates the series and formula.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.PropertyPagesErrorBarClassControl.OnPreRender(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Web.UI.Control.PreRender"></see> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"></see> object that contains the event data.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.PropertyPagesErrorBarClassControl.SetErrorCalcParam(Dundas.Olap.WebUIControls.Ajax.DundasNumericEditor,System.String)">
            <summary>
            Loads error calculation parameter
            </summary>
            <param name="control">Assosiated control.</param>
            <param name="attrValue">String to load the value from.</param>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.Pages.DimBrGDlg">
            <summary>
            Summary description for WebForm6.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Pages.DimBrGDlg.BtnOK">
            <summary>
            
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Pages.DimBrGDlg.CubeDimensionBrowser">
            <summary>
            
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Pages.DimBrGDlg.OlapManager">
            <summary>
            
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Pages.DimBrGDlg.Page_Load(System.Object,System.EventArgs)">
            <summary>
            Occurs when page is loaded
            </summary>
            <param name="sender">Usually the page</param>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Pages.DimBrGDlg.OnInit(System.EventArgs)">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Pages.DimBrGDlg.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Pages.DimBrGDlg.GetStyleSheetURL">
            <summary>
            Returns the embeded style sheet.
            </summary>
            <returns>The string represents style sheet url.</returns>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.Pages.ChartPage">
            <summary>
            Summary description for ChartPage.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Pages.ChartPage.OlapManager">
            <summary>
            The olap manager
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Pages.ChartPage.OlapChart1">
            <summary>
            The olap chart
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Pages.ChartPage.width">
            <summary>
            Width of control
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Pages.ChartPage.OlapChartToolbar1">
            <summary>
            Olap chart tool bar
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Pages.ChartPage.height">
            <summary>
            heght of the control
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Pages.ChartPage.Page_Load(System.Object,System.EventArgs)">
            <summary>
            Occurs when page is loaded
            </summary>
            <param name="sender">Usually the page</param>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Pages.ChartPage.OnInit(System.EventArgs)">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Pages.ChartPage.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Pages.ChartPage.ChartPage_Init(System.Object,System.EventArgs)">
            <summary>
            Event handler.Occurs when page is about to initialize
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">An empty arguments</param>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.OlapReportListToolBar">
            <summary>
            UI control that allows interactively do add, delete, 
            rename and revert report. This control goes within OlapReportList. 
            Reports can be added, removed or renamed.
            Revert to original report feature allows to discard recent changes to the report. 
            When selected report in the list is changed it 
            is automatically set as current in associated OlapManager.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapReportListToolBar.#ctor">
            <summary>
            Initializes new instance of OlapReportListToolBar.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapReportListToolBar.ShouldSerializeOlapManagerID">
            <summary>
            Indicates whether the OlapManagerID property should be persisted.
            </summary>
            <returns>
            true if the property value has changed from its default; otherwise, false.
            </returns>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.OlapReportListToolBar.imagesTable">
            <summary>
            Image cache
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapReportListToolBar.ResolveImage(System.String)">
            <summary>
            Resolves the image.
            </summary>
            <param name="imageCommand">The image command.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapReportListToolBar.GetPostBackEventReference(System.String)">
            <summary>
            Gets the post back event reference.
            </summary>
            <param name="command">The command.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapReportListToolBar.SetParentReportList(Dundas.Olap.WebUIControls.OlapReportList)">
            <summary>
            Sets the parent report list.
            </summary>
            <param name="parent">The parent.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapReportListToolBar.AddImageButton(System.Web.UI.WebControls.TableRow)">
            <summary>
            Adds the image button.
            </summary>
            <param name="row">The row.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapReportListToolBar.CreateChildControls">
            <summary>
            This member overrides <see cref="M:System.Web.UI.Control.CreateChildControls"/>.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapReportListToolBar.FixVisualAppearanceAndScripts">
            <summary>
            Fixes the visual appearance and scripts.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapReportListToolBar.OnCommandEvent(System.String)">
            <summary>
            Called when command is invoked.
            </summary>
            <param name="eventArgument">The event argument.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapReportListToolBar.OnPreRender(System.EventArgs)">
            <summary>
            This member overrides <see cref="M:System.Web.UI.Control.OnPreRender(System.EventArgs)"/>.
            </summary>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapReportListToolBar.Render(System.Web.UI.HtmlTextWriter)">
            <summary> 
            Render this control to the output parameter specified.
            </summary>
            <param name="writer"> The HTML writer to write out to </param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapReportListToolBar.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)">
            <summary>
            When implemented by a class, enables a server control to process an event raised when a form is posted to the server.
            </summary>
            <param name="eventArgument">A <see cref="T:System.String"></see> that represents an optional event argument to be passed to the event handler.</param>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapReportListToolBar.OlapManager">
            <summary>
            Gets or sets the associated <b>OlapManager</b> object.
            <seealso cref="T:Dundas.Olap.Manager.OlapManager"/>
            </summary>
            <remarks>
            The <b>OlapReportList</b> control works with a list of reports 
            defined in the <see cref="P:Dundas.Olap.Manager.OlapManager.OlapReports"/> collection of the <see cref="T:Dundas.Olap.Manager.OlapManager"/>
            object. Any change to that list will automatically update the list content.
            
            If the end user adds, deletes or renames reports in the list, it will 
            automatically be reflected in the <b>OlapManager</b>. When the selected 
            report in the list is changed, it is automatically set as the <see cref="P:Dundas.Olap.Manager.OlapManager.CurrentOlapReport"/>
            in the associated <b>OlapManager</b> object.
            </remarks>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapReportListToolBar.OlapManagerID">
            <summary>
            Gets or sets the corresponded name of associated <b>OlapManager</b> object.
            <seealso cref="T:Dundas.Olap.Manager.OlapManager"/>
            </summary>
            <remarks>
            The <b>OlapReportList</b> control works with a list of reports 
            defined in the <see cref="P:Dundas.Olap.Manager.OlapManager.OlapReports"/> collection of the <see cref="T:Dundas.Olap.Manager.OlapManager"/>
            object. Any change to that list will automatically update the list content.
            
            If the end user adds, deletes or renames reports in the list, it will 
            automatically be reflected in the <b>OlapManager</b>. When the selected 
            report in the list is changed, it is automatically set as the <see cref="P:Dundas.Olap.Manager.OlapManager.CurrentOlapReport"/>
            in the associated <b>OlapManager</b> object.
            </remarks>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapReportListToolBar.AllowReportSaving">
            <summary>
            Gets or sets a flag that indicates if a report can be saved from the control UI.
            </summary>
            <value>
            <b>True</b> if the report list control allows the end user to save reports 
            using the toolbar or context menu.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapReportListToolBar.AllowReportLoading">
            <summary>
            Gets or sets a flag that indicates if a report can be loaded from the control UI.
            </summary>
            <value>
            <b>True</b> if the report list control allows the end user to load reports 
            using the toolbar or context menu.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapReportListToolBar.AllowReportAdding">
            <summary>
            Gets or sets a flag that indicates if a report can be added from the control UI.
            </summary>
            <value>
            <b>True</b> if the report list control allows the end user to add reports 
            using the toolbar or context menu.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapReportListToolBar.AllowReportRemoving">
            <summary>
            Gets or sets a flag that indicates if a report can be deleted from the control UI.
            </summary>
            <value>
            <b>True</b> if report list control allows the end user to delete reports 
            using the toolbar or context menu.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapReportListToolBar.AllowReportRenaming">
            <summary>
            Gets or sets a flag that indicates if a report can be renamed from the control UI.
            </summary>
            <value>
            <b>True</b> if the report list control allows the end user to rename reports 
            using toolbar or context menu.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapReportListToolBar.AllowReportReverting">
            <summary>
            Gets or sets a flag that indicates if a report can be reverted to original 
            from the control UI.
            </summary>
            <value>
            <b>True</b> if report list control allows the end user to revert the report 
            to original using the toolbar or context menu.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapReportListToolBar.ShowToolbar">
            <summary>
            Gets or sets a flag that indicates if a toolbar with report list manipulation
            buttons should be shown on top of the report list.
            </summary>
            <value>
            <b>True</b> if the report list manipulation toolbar should be shown on top 
            of the report list control.
            </value>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.OlapGrids.OlapGridTitle">
            <summary>
            Represents a grid title.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGrids.OlapGridTitle.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.OlapGrids.OlapGridTitle.text">
            <summary>
            Title text.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.OlapGrids.OlapGridTitle.style">
            <summary>
            Title style.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGrids.OlapGridTitle.Finalize">
            <summary>
            Destructor.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapGrids.OlapGridTitle.Text">
            <summary>
            Gets or sets a value representing the text of the grid title.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapGrids.OlapGridTitle.Style">
            <summary>
            Gets or sets the style of the grid title.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.OlapGrids.OlapGridCore">
            <summary>
            Manager and container for olap headers and data.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGrids.OlapGridCore.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGrids.OlapGridCore.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serialization constructor.
            </summary>
            <param name="info">Serialization info.</param>
            <param name="context">Context.</param>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.OlapGrids.OlapGridCore.isSubTotalsEnabled">
            <summary>
            Shows that grid subtotals is enabled.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.OlapGrids.OlapGridCore.shouldAddContextMenu">
            <summary>
            Indicates if context menu should be added.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.OlapGrids.OlapGridCore.contextMenuFlag">
            <summary>
            shows that context menu should be added
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.OlapGrids.OlapGridCore.rowHeaderPart">
            <summary>
            Max % of row header.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.OlapGrids.OlapGridCore.columnHeaderPart">
            <summary>
            Max % of column header.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.OlapGrids.OlapGridCore.interlacedRows">
            <summary>
            Interlaced row style.
            </summary>        
        </member>
        <member name="F:Dundas.Olap.WebUIControls.OlapGrids.OlapGridCore.rows">
            <summary>
            Regular row style.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.OlapGrids.OlapGridCore.title">
            <summary>
            Olap grid title
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.OlapGrids.OlapGridCore.total">
            <summary>
            Total style.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.OlapGrids.OlapGridCore.useInterlacedRows">
            <summary>
            Use interlaced rows.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.OlapGrids.OlapGridCore.removedTuplesList">
            <summary>
            Keeps list of tuples shown in the grid.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.OlapGrids.OlapGridCore.dimensionHierarchyDepth">
            <summary>
            Container for dimensions hierarchy depth.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.OlapGrids.OlapGridCore.dimensionDescriptorCollection">
            <summary>
            Dimension descriptor collection.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.OlapGrids.OlapGridCore.styleSet">
            <summary>
            Indicates that the style applier delegate is already set.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.OlapGrids.OlapGridCore.columnNumbers">
            <summary>
            Field with column numbers to get data from cellset.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.OlapGrids.OlapGridCore.tupleIndex">
            <summary>
            Counter for row/column number.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.OlapGrids.OlapGridCore.rootColl">
            <summary>
            Collection of header items.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.OlapGrids.OlapGridCore.parentItemsList">
            <summary>
            List for parents and children collection.
            key is parent id
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.OlapGrids.OlapGridCore.lastParentUniqueName">
            <summary>
            Last parent unique name.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.OlapGrids.OlapGridCore.parList">
            <summary>
            List with orphan items.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.OlapGrids.OlapGridCore.levels">
            <summary>
            Container for last element on each level.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.OlapGrids.OlapGridCore.cellSet">
            <summary>
            Cell set with olap data.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.OlapGrids.OlapGridCore.table">
            <summary>
            table with olap data
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.OlapGrids.OlapGridCore.transposed">
            <summary>
            Indicates that table is transposed.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.OlapGrids.OlapGridCore.rowHeader">
            <summary>
            Row header.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.OlapGrids.OlapGridCore.columnHeader">
            <summary>
            Column header.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.OlapGrids.OlapGridCore.manager">
            <summary>
            Olap manager.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.OlapGrids.OlapGridCore.emptyValues">
            <summary>
            Empty values representation.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.OlapGrids.OlapGridCore.enableDrillDown">
            <summary>
            Enable/disable drill down
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGrids.OlapGridCore.GetTitle">
            <summary>
            Gets title text.
            </summary>
            <returns>title text</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGrids.OlapGridCore.SetStyleAppliers(System.Boolean)">
            <summary>
            Set style appliers to the element.
            </summary>
            <param name="DesignTime">Design time flag.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGrids.OlapGridCore.IsInterlacedRow(System.Int32)">
            <summary>
            Checks if given row is interlaced.
            </summary>
            <param name="rowNo">row number starting at 0</param>
            <returns>true if the row is interlaced</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGrids.OlapGridCore.IsTotal(System.Data.DataColumn)">
            <summary>
            Checks if column has totals flag.
            </summary>
            <param name="column">column in DataTable.</param>
            <returns>true if the column is total.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGrids.OlapGridCore.IsTotal(Dundas.Olap.WebUIControls.HeaderItem)">
            <summary>
            Checks if header item has total flag.
            </summary>
            <param name="item">Item in header.</param>
            <returns>true if header item is total</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGrids.OlapGridCore.GetTooltip(Dundas.Olap.Data.Tuple,System.Boolean)">
            <summary>
            Returns tuple as a tooltip string.
            </summary>
            <param name="tuple">Tuple to be processed.</param>
            <param name="addEOL">Indicates whenever add end of line or not</param>
            <returns>String representation of tuple with dimension names.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGrids.OlapGridCore.GetTupleTooltipString(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Gets information for tooltip by row and column indexes for header items.
            </summary>
            <param name="rowIndex">Row index.</param>
            <param name="columnIndex">Column index.</param>
            <param name="addEOL">Add end of line symbol to separate dimensions</param>
            <returns>tooltip string for given tuple</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGrids.OlapGridCore.GetCellTuple(System.Int32,System.Boolean)">
            <summary>
            Defines tuple for the given cell
            returns null if index is incorrect
            </summary>
            <param name="index">cell index</param>
            <param name="isCategorical">is categorical axes</param>
            <returns>Tuple instance or null</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGrids.OlapGridCore.GetCategoricalTuple(System.Int32)">
            <summary>
            Gets tuple on categorical axis.
            </summary>
            <param name="rowIndex">row index</param>
            <returns>tuple instance or null.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGrids.OlapGridCore.GetSeriesTuple(System.Int32)">
            <summary>
            Gets tuple on series axis.
            </summary>
            <param name="columnIndex">column index</param>
            <returns>tuple instance or null.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGrids.OlapGridCore.FindMemberByHashCode(System.Int32,System.Int32)">
            <summary>
            Finds dimension member by hash code.
            </summary>
            <param name="levelId">
            Level ID.
            </param>
            <param name="uniqueId">
            Member unique ID.
            </param>
            <returns>
            Found dimension member or Null.
            </returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGrids.OlapGridCore.AddDimension(Dundas.Olap.Manager.DataAxisType,System.String,System.Boolean)">
            <summary>
            Adds dimension on given axis.
            </summary>
            <param name="axisType">Target axis.</param>
            <param name="dim">Dimension to add</param>
            <param name="isFirst">Indicates that dimension should be placed on 1st position</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGrids.OlapGridCore.GetDimensionName(Dundas.Olap.Data.Member)">
            <summary>
            Gets dimension name by member.
            </summary>
            <param name="member">Dimension member.</param>
            <returns>dimension name.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGrids.OlapGridCore.SetCellData">
            <summary>
            Sets table cell value during axis processing.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGrids.OlapGridCore.SetTableData">
            <summary>
            Creates a column, assigns total property
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGrids.OlapGridCore.GetTotalItem(System.String,Dundas.Olap.WebUIControls.HeaderItem,System.Boolean)">
            <summary>
            Generates total item
            </summary>
            <param name="totalName">Unique name</param>
            <param name="parentHeaderItem">Parent header item</param>
            <param name="getPrevious">get current or previous data cell</param>
            <returns>Total item or null</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGrids.OlapGridCore.GetParentTuple(Dundas.Olap.Data.Tuple)">
            <summary>
            Gets parent tuple 
            </summary>
            <param name="originalTuple">processing tuple.</param>
            <returns>tuple for parent member.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGrids.OlapGridCore.GetItemFromList(System.String,System.Int64)">
            <summary>
            Returns header item from the items list if item exists.
            </summary>
            <param name="uniqueName">unique item name.</param>
            <param name="level">level where item should be located</param>
            <returns>header item instance or null if not found</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGrids.OlapGridCore.GetHeaderItem(Dundas.Olap.Data.Member,System.Collections.Generic.List{Dundas.Olap.WebUIControls.HeaderItem},System.Boolean,System.Boolean@,Dundas.Olap.Data.Tuple,Dundas.Olap.WebUIControls.HeaderItem,Dundas.Olap.Data.DimensionDescriptor)">
            <summary>
            Generates header item by given member.
            </summary>
            <param name="member">Member to be processed</param>
            <param name="itemCollection">Collection where the member should be added.</param>
            <param name="totalRequired">Indicates that total item should be created.</param>
            <param name="totalsAdded">Total item was created.</param>
            <param name="currentTuple">Tuple to be processed.</param>
            <param name="parentHeaderItem">Parent item of new header item.</param>
            <returns>Indicates that result collection sould be added to parent collection.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGrids.OlapGridCore.AddItemToLevel(Dundas.Olap.WebUIControls.HeaderItem,System.Int64)">
            <summary>
            Adds header item to given level
            </summary>
            <param name="headerItem">Item to be added</param>
            <param name="level">level</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGrids.OlapGridCore.GetHeadearItemState(Dundas.Olap.Data.Member,Dundas.Olap.Data.Tuple,Dundas.Olap.Data.DimensionDescriptor)">
            <summary>
            Gets header state for given member.
            </summary>
            <param name="member">member</param>
            <param name="tuple">Tupe to which member belongs to.</param>
            <returns>State of header</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGrids.OlapGridCore.IsGrandTotalsTuple(Dundas.Olap.Data.Tuple)">
            <summary>
            Checks if the tuple is grand total.
            </summary>
            <param name="tuple">Tuple to be checked.</param>
            <returns>true if tuple is grand total.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGrids.OlapGridCore.GetDimensionDescriptor(Dundas.Olap.Data.Member)">
            <summary>
            Returns dimension descriptor for given member.
            </summary>
            <param name="member">member</param>
            <returns>DimensionDescriptor instance or null.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGrids.OlapGridCore.IsMemberDrilledDown(Dundas.Olap.Data.MemberCollection,System.Int32,Dundas.Olap.Data.Member)">
            <summary>
            Checks if member is drilled down.
            </summary>
            <param name="memberCollection">Collection of members in tuple.</param>
            <param name="currentIndex">index of member</param>
            <param name="member">Member to be checked</param>
            <returns>true if member is drilled down</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGrids.OlapGridCore.ShouldRemoveTuple(Dundas.Olap.Data.Tuple)">
            <summary>
            Checks if tuple contains drilled down members for not drilled down parent.
            </summary>
            <param name="tuple">tuple to be checked.</param>
            <returns>true if tuple should be removed.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGrids.OlapGridCore.ProcessMemberCollection(Dundas.Olap.Data.Tuple,Dundas.Olap.WebUIControls.OlapGrids.OlapGridCore.SetData,System.Collections.Generic.List{Dundas.Olap.WebUIControls.HeaderItem},System.Boolean)">
            <summary>
            Processes member collection.
            </summary>
            <param name="tuple">Tuple for member collection.</param>
            <param name="setData">Function to be executed for data area</param>
            <param name="rootItemsColl">resulting header items collection</param>
            <param name="shouldAddTotals">totals should be added</param>      
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGrids.OlapGridCore.CalculateLevelDepth(Dundas.Olap.Data.MemberCollection)">
            <summary>
            Calculates current level depth.
            </summary>
            <param name="memberCollection">All tuple members</param>
            <returns>summary level depth</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGrids.OlapGridCore.GetTuple(Dundas.Olap.Data.MemberCollection,System.Int32,Dundas.Olap.Data.Member)">
            <summary>
            Get tuple by member collection.
            </summary>
            <param name="memberCollection">member collection</param>
            <param name="memberNumber">last member number</param>
            <param name="effectMember">last member</param>
            <returns>Result tuple</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGrids.OlapGridCore.dumpMemberCollection(Dundas.Olap.Data.Tuple)">
            <summary>
            debug function - dumps all members in given tuple
            </summary>
            <param name="t"></param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGrids.OlapGridCore.OnDataPopulated(System.Object,System.EventArgs)">
            <summary>
            Runs after data is rendered
            </summary>
            <param name="sender">sender</param>
            <param name="e">event arg</param>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.OlapGrids.OlapGridCore.ReturnDataPosition">
            <summary>
            Current position.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGrids.OlapGridCore.ReturnRowPosition">
            <summary>
            Position for rows.
            </summary>
            <returns>Row position</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGrids.OlapGridCore.ReturnColumnPosition">
            <summary>
            Position for columns.
            </summary>
            <returns>Column position</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGrids.OlapGridCore.ProcessAxis(System.Int32,Dundas.Olap.WebUIControls.OlapGrids.OlapGridCore.SetData,System.Boolean)">
            <summary>
            Gets dimensions/measures/data for given axis.
            </summary>
            <param name="axisNo">Axis index</param>
            <param name="setData">Delegate to set data in data table.</param>
            <param name="shouldAddTotals">should add totals or not</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGrids.OlapGridCore.StringToTuple(System.String)">
            <summary>
            Converts a strings to tuple.
            </summary>
            <param name="s">The string tuple representaton.</param>
            <returns>The tuple.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGrids.OlapGridCore.TransposeTable">
            <summary>
            Transpose table
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGrids.OlapGridCore.LoadByForceAllParentMembersAndItsChildren">
            <summary>
            Loads the by force all parent members and its children.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGrids.OlapGridCore.GetData">
            <summary>
            Gets data table.
            </summary>
            <returns>DataTable</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGrids.OlapGridCore.DrillDown(System.String)">
            <summary>
            Executes drill down on given member.
            </summary>
            <param name="s">String representation of drilled member.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGrids.OlapGridCore.DrillDown(Dundas.Olap.Data.Tuple)">
            <summary>
            Executes drill down on given member.
            </summary>
            <param name="s">String representation of drilled member.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGrids.OlapGridCore.DrillUp(System.String)">
            <summary>
            Executes drill up on given member.
            </summary>
            <param name="s">string representation of drilled member</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGrids.OlapGridCore.DrillUp(Dundas.Olap.Data.Tuple)">
            <summary>
            Performs drill up on given member.
            </summary>
            <param name="drilledUpTuple">tuple that should be drilled up</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGrids.OlapGridCore.ProcessCellSet">
            <summary>
            Gets data from Olap manager.
            Produces datatable and headers for OlapGrid.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapGrids.OlapGridCore.Transpose">
            <summary>
            Transpose grid headers and table.
            </summary>
        </member>
        <member name="E:Dundas.Olap.WebUIControls.OlapGrids.OlapGridCore.dataPopulated">
            <summary>
            Data populated event.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapGrids.OlapGridCore.IsSubTotalsEnabled">
            <summary>
            Indicates that grid subtotals are shown
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapGrids.OlapGridCore.ShouldAddContextMenu">
            <summary>
            Indicates if context menu should be added.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapGrids.OlapGridCore.RowHeaderPart">
            <summary>
            Max % of grid space for row header.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapGrids.OlapGridCore.ColumnHeaderPart">
            <summary>
            Max % of grid space for column header.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapGrids.OlapGridCore.RowHeader">
            <summary>
            Row header instance.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapGrids.OlapGridCore.ColumnHeader">
            <summary>
            Column header instance.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapGrids.OlapGridCore.InterlacedRows">
            <summary>
            Gets or sets interlaced row style.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapGrids.OlapGridCore.Rows">
            <summary>
            Gets or sets standard row style.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapGrids.OlapGridCore.Title">
            <summary>
            Gets or sets grid title.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapGrids.OlapGridCore.Total">
            <summary>
            Gets or sets total style.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapGrids.OlapGridCore.UseInterlacedRows">
            <summary>
            If true intrelaced rows will be rendered in accordance with 
            interlaced row style, otherwise Rows style will be used
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapGrids.OlapGridCore.Manager">
            <summary>
            Olap manager instance.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapGrids.OlapGridCore.EmptyValues">
            <summary>
            Value to be shown in table 
            when empty cell comes.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapGrids.OlapGridCore.EnableDrillDown">
            <summary>
            Indicates that drill down is enabled on grid.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapGrids.OlapGridCore.Transposed">
            <summary>
            Indicates that grid is transposed (rows/columns)
            </summary>
        </member>
        <member name="E:Dundas.Olap.WebUIControls.OlapGrids.OlapGridCore.DataPopulated">
            <summary>
            Event will be executed then data is rendered. 
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.OlapGrids.OlapGridCore.SetData">
            <summary>
            Function to be invoked to get data from olap manager.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.OlapGrids.OlapGridCore.GetPosition">
            <summary>
            Gets positon for total object.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Dundas.Charting.WebControl.Utilities.ImageLoader">
            <summary>
            ImageLoader utility class loads and returns specified image 
            form the File, URI, Web Request or Chart Resources. 
            Loaded images are stored in the internal hashtable which 
            allows to improve performance if image need to be used 
            several times.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Utilities.ImageLoader.#ctor">
            <summary>
            Default constructor is not accessible.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Utilities.ImageLoader.#ctor(System.ComponentModel.Design.IServiceContainer)">
            <summary>
            Default public constructor.
            </summary>
            <param name="container">Service container.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Utilities.ImageLoader.GetService(System.Type)">
            <summary>
            Returns Image Loader service object
            </summary>
            <param name="serviceType">Requested service type.</param>
            <returns>Image Loader service object.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Utilities.ImageLoader.Dispose">
            <summary>
            Dispose images in the hashtable
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Utilities.ImageLoader.LoadImage(System.String)">
            <summary>
            Loads image from URL. Checks if image already loaded (cached).
            </summary>
            <param name="imageURL">Image name (FileName, URL, Resource).</param>
            <returns>Image object.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Utilities.ImageLoader.LoadImage(System.String,System.Boolean)">
            <summary>
            Loads image from URL. Checks if image already loaded (cached).
            </summary>
            <param name="imageURL">Image name (FileName, URL, Resource).</param>
            <param name="saveImage">True if loaded image should be saved in cache.</param>
            <returns>Image object</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Utilities.ImageLoader.LoadFromFile(System.String)">
            <summary>
            Helper function which loads image from file.
            </summary>
            <param name="fileName">File name.</param>
            <returns>Loaded image or null.</returns>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.CommonElements">
            <summary>
            CommonElements class provides references to common chart classes like 
            DataManager, ChartTypeRegistry, ImageLoader and others. It is passed 
            to different chart elements to simplify access to those common classes.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.CommonElements.chartAreaCollection">
            <summary>
            Chart area collection
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.CommonElements.container">
            <summary>
            Service Container
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.CommonElements.processModePaint">
            <summary>
            Indicates painting mode
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.CommonElements.processModeRegions">
            <summary>
            Indicates selection mode
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CommonElements.ReplaceKeywords(Dundas.Olap.WebUIControls.Series,System.String)">
            <summary>
            Replaces keywords for series object 
            </summary>
            <param name="series">Series</param>
            <param name="strOriginal">Original string with keywords</param>
            <returns>Returns string with replced keywords</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CommonElements.ReplaceKeywords(Dundas.Olap.WebUIControls.DataPoint,System.String)">
            <summary>
            Replaces keywrds for data point object
            </summary>
            <param name="point">Data point</param>
            <param name="strOriginal">Original string with keywords</param>
            <returns>Returns string with replaced keywords</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CommonElements.ReplaceKeywords(Dundas.Olap.WebUIControls.Annotation,System.String)">
            <summary>
            Replaces keywords for annotation based object
            </summary>
            <param name="annotation">Annotation</param>
            <param name="strOriginal">Original string with keywords</param>
            <returns>Returns string with replaced keywords</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CommonElements.ReplaceKeywords(Dundas.Olap.WebUIControls.LegendItem,System.String)">
            <summary>
            Replaces keywords for LegendItem object.
            </summary>
            <param name="legend">LegendItem</param>
            <param name="strOriginal">Original string with keywords</param>
            <returns>Returns string with replaced keywords</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CommonElements.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CommonElements.#ctor(System.ComponentModel.Design.IServiceContainer)">
            <summary>
            Constructor
            </summary>
            <param name="container">Service container.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CommonElements.TraceWrite(System.String,System.String)">
            <summary>
            Writes trace information to the trace log.
            </summary>
            <param name="category">The trace category that receives the message. </param>
            <param name="message">The trace message to write to the log. </param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CommonElements.ParseDouble(System.String)">
            <summary>
            Converts string to double.
            </summary>
            <param name="stringToParse">String to convert.</param>
            <returns>Double result.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CommonElements.ParseFloat(System.String)">
            <summary>
            Converts string to double.
            </summary>
            <param name="stringToParse">String to convert.</param>
            <returns>Double result.</returns>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.CommonElements.DataManager">
            <summary>
            Reference to the Data Manager
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.CommonElements.ProcessModePaint">
            <summary>
            True if painting mode is active
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.CommonElements.ProcessModeRegions">
            <summary>
            True if Hot region or image maps mode is active
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.CommonElements.HotRegionsList">
            <summary>
            Reference to the hot regions object
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.CommonElements.DataManipulator">
            <summary>
            Reference to the Data Manipulator
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.CommonElements.ImageLoader">
            <summary>
            Reference to the ImageLoader
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.CommonElements.Chart">
            <summary>
            Reference to the Chart
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.CommonElements.EventsManager">
            <summary>
            Reference to the EventsManager
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.CommonElements.ChartTypeRegistry">
            <summary>
            Reference to the ChartTypeRegistry
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.CommonElements.BorderTypeRegistry">
            <summary>
            Reference to the BorderTypeRegistry
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.CommonElements.FormulaRegistry">
            <summary>
            Reference to the FormulaRegistry
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.CommonElements.ChartPicture">
            <summary>
            Reference to the ChartPicture
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.CommonElements.Width">
            <summary>
            Width of the chart picture
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.CommonElements.Height">
            <summary>
            Height of the chart picture
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.CircularChartAreaAxis">
            <summary>
            CircularChartAreaAxis class represents a single axis in the circular 
            chart area chart like radar or polar. It contains axis angular 
            position, size and title properties.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.CircularChartAreaAxis.AxisPosition">
            <summary>
            Angle where axis is located.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.CircularChartAreaAxis.AxisSectorSize">
            <summary>
            Size of the sector the axis belongs to.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.CircularChartAreaAxis.Title">
            <summary>
            Axis title.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.CircularChartAreaAxis.TitleColor">
            <summary>
            Axis title color.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.CircularChartAreaAxis.TitleHRef">
            <summary>
            HRef for axis title
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.CircularChartAreaAxis.TitleToolTip">
            <summary>
            Title tooltip
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.CircularChartAreaAxis.TitleMapareaAttributes">
            <summary>
            Title Maparea attributes
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CircularChartAreaAxis.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.CircularChartAreaAxis.#ctor(System.Single,System.Single)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.ViewEventHandler">
            <summary>
            Axis data view event handler delegate
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.ScrollType">
            <summary>
            Scrolling type enumeration.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ScrollType.SmallDecrement">
            <summary>
            Scrolls by substracting one small size.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ScrollType.SmallIncrement">
            <summary>
            Scrolls by adding one small size.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ScrollType.LargeDecrement">
            <summary>
            Scrolls by substracting one view size.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ScrollType.LargeIncrement">
            <summary>
            Scrolls by adding one view size.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ScrollType.First">
            <summary>
            Scrolls to the first view.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ScrollType.Last">
            <summary>
            Scrolls to the last view.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.AxisDataView">
            <summary>
            AxisDataView class represents an axis data view. It allows to display 
            only part of the avilable data.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisDataView.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisDataView.#ctor(Dundas.Olap.WebUIControls.Axis)">
            <summary>
            Public constructor.
            </summary>
            <param name="axis">Data view axis.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisDataView.GetViewMinimum">
            <summary>
            Gets axis data view minimum position.
            </summary>
            <returns>Axis data view minimum position.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisDataView.GetViewMaximum">
            <summary>
            Gets axis data view minimum position.
            </summary>
            <returns>Axis data view minimum position.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisDataView.Scroll(System.Double)">
            <summary>
            Scrolls axis data view into specified position.
            </summary>
            <param name="newPosition">New data view position.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisDataView.Scroll(System.DateTime)">
            <summary>
            Scrolls axis data view into specified position.
            </summary>
            <param name="newPosition">New data view position.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisDataView.Scroll(System.Double,System.Boolean)">
            <summary>
            Internal helper method for scrolling into specified position.
            </summary>
            <param name="newPosition">New data view position.</param>
            <param name="fireChangeEvents">Fire view position events from this method.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisDataView.Zoom(System.Double,System.Double,Dundas.Olap.WebUIControls.DateTimeIntervalType,System.Boolean)">
            <summary>
            Sets new axis data view size/position.
            </summary>
            <param name="viewPosition">New axis data view start position.</param>
            <param name="viewSize">New axis data view size.</param>
            <param name="viewSizeType">New axis data view size units type.</param>
            <param name="saveState">Indicates that current view size/position must be save, so it can be restored later.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisDataView.Zoom(System.Double,System.Double)">
            <summary>
            Sets new axis data view size/position.
            </summary>
            <param name="viewStart">New axis data view start position.</param>
            <param name="viewEnd">New axis data view end position.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisDataView.Zoom(System.Double,System.Double,Dundas.Olap.WebUIControls.DateTimeIntervalType)">
            <summary>
            Sets new axis data view size/position.
            </summary>
            <param name="viewPosition">New axis data view start position.</param>
            <param name="viewSize">New axis data view size.</param>
            <param name="viewSizeType">New axis data view size units type.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisDataView.ZoomReset(System.Int32)">
            <summary>
            Reset several zooming operation by restoring data view size/position.
            </summary>
            <param name="numberOfViews">How many view zoom operations to reset. Zero for all.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisDataView.ZoomReset">
            <summary>
            Reset one zooming operation by restoring data view size/position.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisDataView.ZoomReset(System.Int32,System.Boolean)">
            <summary>
            Reset several zooming operation by restoring data view size/position.
            </summary>
            <param name="numberOfViews">How many view zoom operations to reset. Zero for all.</param>
            <param name="fireChangeEvents">Fire view position events from this method.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisDataView.Zoom(System.Double,System.Double,Dundas.Olap.WebUIControls.DateTimeIntervalType,System.Boolean,System.Boolean)">
            <summary>
            Internal helper zooming method.
            </summary>
            <param name="viewPosition">New data view start posiion.</param>
            <param name="viewSize">New data view size.</param>
            <param name="viewSizeType">New data view size units type.</param>
            <param name="fireChangeEvents">Fire view position events from this method.</param>
            <param name="saveState">Indicates that current view size/position must be save, so it can be restored later.</param>
            <returns>True if zoom operation was made.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisDataView.LoadDataViewState(System.Int32,System.Boolean)">
            <summary>
            Saves current data view position/size/sizetype, so
            it can be restored later.
            </summary>
            <param name="numberOfViews">Number of time to reset zoom. Zero for all.</param>
            <param name="fireChangeEvents">Fire view position events from this method.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisDataView.SaveDataViewState">
            <summary>
            Saves current data view position/size/sizetype, so
            it can be restored later.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisDataView.GetCurrentViewSmallScrollSize">
            <summary>
            Initialize internal scrolling line size variables for later use.
            This size is used in to scroll chart one line up or down.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisDataView.GetScrollingLineSize">
            <summary>
            Returns the scroll line size.
            </summary>
            <returns>Scroll line size.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisDataView.GetScrollingLineSizeType">
            <summary>
            Returns the scroll line size units type.
            </summary>
            <returns>Scroll line size units type.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisDataView.ValidateViewPositionSize(System.Double@,System.Double@,Dundas.Olap.WebUIControls.DateTimeIntervalType@)">
            <summary>
            Helper method, which validates the axis data view position and size.
            Returns adjusted view position and size.
            </summary>
            <param name="viewPosition">View position.</param>
            <param name="viewSize">View size.</param>
            <param name="viewSizeType">View size units type.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AxisDataView.GetChartObject">
            <summary>
            Helper function which returns a reference to the chart object.
            </summary>
            <returns>Chart object reference.</returns>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.AxisDataView.Position">
            <summary>
            View position.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.AxisDataView.Size">
            <summary>
            View size.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.AxisDataView.SizeType">
            <summary>
            View size type.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.AxisDataView.MinSize">
            <summary>
            View/scrolling minimum size.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.AxisDataView.MinSizeType">
            <summary>
            View/scrolling minimum size units type.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.AxisDataView.Zoomable">
            <summary>
            Indicates that data view zooming UI interface enabled.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.AxisDataView.IsZoomed">
            <summary>
            Indicates if axis is zoomed in or not.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.AxisDataView.SmallScrollSize">
            <summary>
            View scrolling line size.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.AxisDataView.SmallScrollSizeType">
            <summary>
            View scrolling line size units type.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.AxisDataView.SmallScrollMinSize">
            <summary>
            View small scrolling minimum size.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.AxisDataView.SmallScrollMinSizeType">
            <summary>
            View scrolling line minimum size units type.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.ViewEventArgs">
            <summary>
            Axis data view position/size changing event arguments.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ViewEventArgs.#ctor(Dundas.Olap.WebUIControls.Axis,System.Double)">
            <summary>
            Creates axis data view event arguments.
            </summary>
            <param name="axis">Axis of the data view.</param>
            <param name="newPosition">New view start position.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ViewEventArgs.#ctor(Dundas.Olap.WebUIControls.Axis,System.Double,System.Double,Dundas.Olap.WebUIControls.DateTimeIntervalType)">
            <summary>
            Creates axis data view event arguments.
            </summary>
            <param name="axis">Axis of the data view.</param>
            <param name="newPosition">New view start position.</param>
            <param name="newSize">New view size.</param>
            <param name="newSizeType">New view size units type.</param>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ViewEventArgs.Axis">
            <summary>
            Axis of the event.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ViewEventArgs.ChartArea">
            <summary>
            Chart area of the event.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ViewEventArgs.NewPosition">
            <summary>
            New data view start position.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ViewEventArgs.NewSize">
            <summary>
            New data view size.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ViewEventArgs.NewSizeType">
            <summary>
            New data view size units type.
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.Design.DoubleNanValueConverter">
            <summary>
            Designer converter class
            Converts Double.NaN values to/from "Not set".
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.DoubleNanValueConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Standard values supported - return true
            </summary>
            <param name="context">Descriptor context.</param>
            <returns>Standard values supported.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.DoubleNanValueConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Standard values are not exclusive - return false
            </summary>
            <param name="context">Descriptor context.</param>
            <returns>Non exclusive standard values.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.DoubleNanValueConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Fill in the list of predefined values.
            </summary>
            <param name="context">Descriptor context.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.DoubleNanValueConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Convert double.NaN to string "Not set"
            </summary>
            <param name="context">Descriptor context.</param>
            <param name="culture">Culture information.</param>
            <param name="value">Value to convert.</param>
            <param name="destinationType">Convertion destination type.</param>
            <returns>Converted object.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.DoubleNanValueConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Convert minimum or maximum values from string
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.Design.DoubleDateNanValueConverter">
            <summary>
            Designer converter class
            Converts Double.NaN values to/from "Not set".
            Converts value to/from date strings.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.DoubleDateNanValueConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Standard values supported - return true
            </summary>
            <param name="context">Descriptor context.</param>
            <returns>Standard values supported.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.DoubleDateNanValueConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Standard values are not exclusive - return false
            </summary>
            <param name="context">Descriptor context.</param>
            <returns>Non exclusive standard values.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.DoubleDateNanValueConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Fill in the list of predefined values.
            </summary>
            <param name="context">Descriptor context.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.DoubleDateNanValueConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Convert values to string if step type is set to one of the DateTime type
            </summary>
            <param name="context">Descriptor context.</param>
            <param name="culture">Culture information.</param>
            <param name="value">Value to convert.</param>
            <param name="destinationType">Convertion destination type.</param>
            <returns>Converted object.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.DoubleDateNanValueConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Convert Min and Max values from string if step type is set to one of the DateTime type
            </summary>
            <param name="context">Descriptor context.</param>
            <param name="culture">Culture information.</param>
            <param name="value">Value to convert from.</param>
            <returns>Converted object.</returns>
        </member>
        <member name="T:Dundas.Charting.WebControl.Formulas.FormulaRegistry">
            <summary>
            Keep track of all registered formula modules types.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Formulas.FormulaRegistry.#ctor">
            <summary>
            Default private constructor
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Formulas.FormulaRegistry.#ctor(System.ComponentModel.Design.IServiceContainer)">
            <summary>
            Formula Registry public constructor
            </summary>
            <param name="container">Service Container</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Formulas.FormulaRegistry.Register(System.String,System.Type)">
            <summary>
            Adds modules into the registry.
            </summary>
            <param name="name">Module name.</param>
            <param name="moduleType">Module class type.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Formulas.FormulaRegistry.GetService(System.Type)">
            <summary>
            Returns formula module registry service object.
            </summary>
            <param name="serviceType">Service Type.</param>
            <returns>Service object.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Formulas.FormulaRegistry.GetFormulaModule(System.String)">
            <summary>
            Returns formula module object by name.
            </summary>
            <param name="name">Formula Module name.</param>
            <returns>Formula module object derived from IFormula.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Formulas.FormulaRegistry.GetModuleName(System.Int32)">
            <summary>
            Returns the name of the module.
            </summary>
            <param name="index">Module index.</param>
            <returns>Module Name.</returns>
        </member>
        <member name="P:Dundas.Charting.WebControl.Formulas.FormulaRegistry.Count">
            <summary>
            Return the number of registered modules.
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.Design.LegendAreaNameConverter">
            <summary>
            Chart area name converter. Displays list of available areas names
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.LegendAreaNameConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Standart values supported - return true
            </summary>
            <param name="context">Descriptor context.</param>
            <returns>Standard values supported.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.LegendAreaNameConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Standart values are not exclusive - return false
            </summary>
            <param name="context">Descriptor context.</param>
            <returns>Non exclusive standard values.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.LegendAreaNameConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Fill in the list of data series names.
            </summary>
            <param name="context">Descriptor context.</param>
            <returns>Standart values collection.</returns>
        </member>
        <member name="T:Dundas.Charting.WebControl.Design.LegendConverter">
            <summary>
            Legend converter
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.LegendConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Overrides the GetPropertiesSupported method of TypeConverter.
            Save reference to the descriptor context.
            </summary>
            <param name="context">Descriptor context.</param>
            <returns>Indicates if properties are supported.</returns>
        </member>
        <member name="T:Dundas.Charting.WebControl.Design.SizeEmptyValueConverter">
            <summary>
            Designer converter class
            Converts Size.Emty tofrom "Auto".
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.SizeEmptyValueConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Standard values supported - return true
            </summary>
            <param name="context">Descriptor context.</param>
            <returns>Standard values supported.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.SizeEmptyValueConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Standard values are not exclusive - return false
            </summary>
            <param name="context">Descriptor context.</param>
            <returns>Non exclusive standard values.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.SizeEmptyValueConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Fill in the list of predefined values.
            </summary>
            <param name="context">Descriptor context.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.SizeEmptyValueConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Convert Size.Empty value to string "Auto"
            </summary>
            <param name="context">Descriptor context.</param>
            <param name="culture">Culture information.</param>
            <param name="value">Value to convert.</param>
            <param name="destinationType">Convertion destination type.</param>
            <returns>Converted object.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.SizeEmptyValueConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Convert minimum or maximum values from string
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.Design.MarginExpandableObjectConverter">
            <summary>
            Data point attributes converter
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.MarginExpandableObjectConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            This method overrides CanConvertTo from TypeConverter. This is called when someone
            wants to convert an instance of object to another type.  Here,
            only conversion to an InstanceDescriptor is supported.
            </summary>
            <param name="context">Descriptor context.</param>
            <param name="destinationType">Destination type.</param>
            <returns>True if object can be converted.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.MarginExpandableObjectConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Returns whether this converter can convert an object of the given type 
            to the type of this converter, using the specified context.
            </summary>
            <param name="context">Descriptor context.</param>
            <param name="sourceType">Source type.</param>
            <returns>True if object can be converted.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.MarginExpandableObjectConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            This code performs the actual conversion from an object to a string.
            </summary>
            <param name="context">Descriptor context.</param>
            <param name="culture">Culture information.</param>
            <param name="value">Object value.</param>
            <param name="destinationType">Destination type.</param>
            <returns>Converted object.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.MarginExpandableObjectConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Overrides the ConvertFrom method of TypeConverter.
            </summary>
            <param name="context">Descriptor context.</param>
            <param name="culture">Culture information.</param>
            <param name="value">Value to convert from.</param>
            <returns>Converted object.</returns>
        </member>
        <member name="T:Dundas.Charting.WebControl.Design.IntNanValueConverter">
            <summary>
            Designer converter class
            Converts Integer value -1 to/from "Auto".
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.IntNanValueConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Standard values supported - return true
            </summary>
            <param name="context">Descriptor context.</param>
            <returns>Standard values supported.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.IntNanValueConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Standard values are not exclusive - return false
            </summary>
            <param name="context">Descriptor context.</param>
            <returns>Non exclusive standard values.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.IntNanValueConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Fill in the list of predefined values.
            </summary>
            <param name="context">Descriptor context.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.IntNanValueConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Convert integer value -1 to string "Auto"
            </summary>
            <param name="context">Descriptor context.</param>
            <param name="culture">Culture information.</param>
            <param name="value">Value to convert.</param>
            <param name="destinationType">Convertion destination type.</param>
            <returns>Converted object.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.IntNanValueConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Convert minimum or maximum values from string
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.Design.LegendItemCollectionEditor">
            <summary>
            Designer editor for the custom legend items collection.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.LegendItemCollectionEditor.#ctor">
            <summary>
            Object constructor.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.LegendItemCollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Edit object's value.
            </summary>
            <param name="context">Descriptor context.</param>
            <param name="provider">Service provider.</param>
            <param name="value">Calue.</param>
            <returns>Object.</returns>
        </member>
        <member name="T:Dundas.Charting.WebControl.Design.LegendCollectionEditor">
            <summary>
            Designer editor for the legend collection.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.LegendCollectionEditor.#ctor">
            <summary>
            Object constructor.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.LegendCollectionEditor.CanRemoveInstance(System.Object)">
            <summary>
            Indicates whether original members of the collection can be removed.
            </summary>
            <param name="value">Object to be removed.</param>
            <returns>True if item can be removed.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.LegendCollectionEditor.CreateInstance(System.Type)">
            <summary>
            Create series instance in the editor 
            </summary>
            <param name="itemType">Item type.</param>
            <returns>Newly created item.</returns>
        </member>
        <member name="T:Dundas.Charting.WebControl.Design.LegendCellColumnCollectionEditor">
            <summary>
            Designer editor for the legend column collection.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.LegendCellColumnCollectionEditor.#ctor">
            <summary>
            Object constructor.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.LegendCellColumnCollectionEditor.CreateInstance(System.Type)">
            <summary>
            Create series instance in the editor 
            </summary>
            <param name="itemType">Item type.</param>
            <returns>Newly created item.</returns>
        </member>
        <member name="T:Dundas.Charting.WebControl.Design.LegendCellCollectionEditor">
            <summary>
            Designer editor for the legend cell collection.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.LegendCellCollectionEditor.#ctor">
            <summary>
            Object constructor.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.LegendCellCollectionEditor.CreateInstance(System.Type)">
            <summary>
            Create series instance in the editor 
            </summary>
            <param name="itemType">Item type.</param>
            <returns>Newly created item.</returns>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.Commands.CommandPropertySheets">
            <summary>
            The CommandPropertySheets implements Properties ChartCommandType.
            Executing of this command cause showing of chart property dialog.
            The property dialog works in object context and shows differents 
            sheets according this object context.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandPropertySheets.#ctor">
            <summary>
            Initialize new instance of CommandPropertySheets class
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandPropertySheets.GetSupportedElements">
            <summary>
            Returns set of supported elements of this command. 
            In this case Properties command type supports all elements
            </summary>
            <returns>Set of supported elements of this command</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Commands.CommandPropertySheets.Execute(Dundas.Olap.WebUIControls.Command,System.Object,System.String)">
            <summary>
            Executes Properties command.
            </summary>
            <param name="cmd">The original <see cref="T:Dundas.Olap.WebUIControls.Command"/> object which invoke this call</param>
            <param name="selectedObject">The context object which command to apply. It can be array of objects.</param>
            <param name="parameters">Parameters for additional tunning of the execution</param>
            <returns>The command result object which contains post execution information 
            ( success, message...)</returns>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.Ajax.DundasFontEditor">
            <summary>
            DundasFontEditor is an web control used Property Pages
            to enter a font with popup dialog;
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.DundasFontEditor.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DundasFontEditor"/> class.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.DundasFontEditor.String2Font(System.String)">
            <summary>
            Converts string to a font.
            </summary>
            <param name="input">The string.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.DundasFontEditor.Font2String(System.Drawing.Font)">
            <summary>
            Converts Font to a String.
            </summary>
            <param name="input">The font.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.DundasFontEditor.CreateChildControls">
            <summary>
            Called by the ASP.NET page framework to notify server controls 
            that use composition-based implementation to create any child controls 
            they contain in preparation for posting back or rendering.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.DundasFontEditor.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Renders the control to the specified HTML writer.
            </summary>
            <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter"></see> object 
            that receives the control content.</param>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Ajax.DundasFontEditor.DialogFont">
            <summary>
            Gets or sets the dialog font.
            </summary>
            <value>The dialog font.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Ajax.DundasFontEditor.OnValueChangeScript">
            <summary>
            Gets or sets the onvaluechange javascript url.
            </summary>
            <value>The onvaluechange javascript url.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Ajax.DundasFontEditor.Chart">
            <summary>
            Gets or sets the chart.
            </summary>
            <value>The chart.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Ajax.DundasFontEditor.EmptyFont">
            <summary>
            Gets the empty font.
            </summary>
            <value>The empty font.</value>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.PagingManager">
            <summary>
            Renders paging controls for DimensionEditDialog
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.OlapClientFrame">
            <summary>
            A WebControl which renders the frames arround controls.
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.OlapClientFrame.arcWidth">
            <summary>
            The arc width on the corbers
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.OlapClientFrame.saveStyle">
            <summary>
            style cache
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.OlapClientFrame.table">
            <summary>
            Internal table cointrol
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapClientFrame.#ctor">
            <summary>
            Creates new instance of OlapClientFrame class.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapClientFrame.GetRow1">
            <summary>
            Creates top row of the frame
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapClientFrame.GetRow2">
            <summary>
            Creates middle row of the frame
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapClientFrame.GetRow3">
            <summary>
            Creates bottom row of the frame
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapClientFrame.GetCaptionTable">
            <summary>
            Creates table with caption - on the first row.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapClientFrame.GetTable">
            <summary>
            Creates a table which represents all frame elements
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapClientFrame.ApplyBackImageStyle(System.Web.UI.WebControls.TableCell,System.Int32,System.Int32)">
            <summary>
            Configure background image of table cell by row and col.
            </summary>
            <param name="control"></param>
            <param name="row"></param>
            <param name="col"></param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapClientFrame.GetImageCell(System.Int32,System.Int32)">
            <summary>
            Generates an image control by row and col.
            </summary>
            <param name="row"></param>
            <param name="col"></param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.OlapClientFrame.Render(System.Web.UI.HtmlTextWriter)">
            <summary> 
            Render this control to the output parameter specified.
            </summary>
            <param name="output"> The HTML writer to write out to </param>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapClientFrame.Label">
            <summary>
            Gets and sets the text which represents the label on the frame.
            </summary>
            <value>
            A string which represents a label.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapClientFrame.VerticalAlign">
            <summary>
            Gets and sets <see cref="P:Dundas.Olap.WebUIControls.OlapClientFrame.VerticalAlign"/> of the inner area.
            </summary>
            <value>
            A <see cref="P:Dundas.Olap.WebUIControls.OlapClientFrame.VerticalAlign"/>  value.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.OlapClientFrame.Overflow">
            <summary>
            Enables or Disables overflow ( scrollbars arround child conrols );
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.Design.RectangleFConverter">
            <summary>
            Converter for the RectangleF class.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.RectangleFConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Overrides the GetPropertiesSupported method of TypeConverter.
            </summary>
            <param name="context">Descriptor context.</param>
            <returns>Support properties.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.RectangleFConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>
            Overrides the GetPropertiesSupported method of TypeConverter.
            </summary>
            <param name="context">Descriptor context.</param>
            <param name="value">Value.</param>
            <param name="attributes">Attributes.</param>
            <returns>Property descriptor collection.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.RectangleFConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Overrides the CanConvertFrom method of TypeConverter.
            The ITypeDescriptorContext interface provides the context for the
            conversion. Typically this interface is used at design time to 
            provide information about the design-time container.
            </summary>
            <param name="context">Descriptor context.</param>
            <param name="sourceType">Convertion source type.</param>
            <returns>Indicates if convertion is possible.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.RectangleFConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Overrides the CanConvertTo method of TypeConverter.
            </summary>
            <param name="context">Context.</param>
            <param name="destinationType">Destination type.</param>
            <returns>Indicates if convertion is possible.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.RectangleFConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Overrides the ConvertTo method of TypeConverter.
            </summary>
            <param name="context">Descriptor context.</param>
            <param name="culture">Culture information.</param>
            <param name="value">Value to convert.</param>
            <param name="destinationType">Convertion destination type.</param>
            <returns>Converted object.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.RectangleFConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Convert values from string.
            </summary>
            <param name="context">Descriptor context.</param>
            <param name="culture">Culture information.</param>
            <param name="value">Value to convert from.</param>
            <returns>Converted object.</returns>
        </member>
        <member name="T:Dundas.Charting.WebControl.Design.DundasChartBuilder">
            <summary>
            Chart control builder.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.DundasChartBuilder.GetChildControlType(System.String,System.Collections.IDictionary)">
            <summary>
            Get child controls type
            </summary>
            <param name="tagName">Control tag.</param>
            <param name="attributes">Control attributes.</param>
            <returns>Control type.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Design.DundasChartBuilder.AppendLiteralString(System.String)">
            <summary>
            Override to ignore literals between items
            </summary>
            <param name="s">Literal string to add.</param>
        </member>
        <member name="T:Dundas.Charting.WebControl.Data.DataManager">
            <summary>
            Data Manager.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Data.DataManager.#ctor">
            <summary>
            Default private constructor
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Data.DataManager.#ctor(System.ComponentModel.Design.IServiceContainer)">
            <summary>
            Data manager public constructor
            </summary>
            <param name="container">Service container object.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Data.DataManager.GetService(System.Type)">
            <summary>
            Returns Data Manager service object.
            </summary>
            <param name="serviceType">Service type requested.</param>
            <returns>Data Manager service object.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Data.DataManager.Initialize">
            <summary>
            Initialize data manger object
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Data.DataManager.ChartPicture_BeforePaint(System.Object,Dundas.Olap.WebUIControls.ChartPaintEventArgs)">
            <summary>
            Event fired when chart picture is going to be painted.
            </summary>
            <param name="sender">Sender object.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Data.DataManager.ChartPicture_AfterPaint(System.Object,Dundas.Olap.WebUIControls.ChartPaintEventArgs)">
            <summary>
            Event fired after chart picture was painted.
            </summary>
            <param name="sender">Sebder object.</param>
            <param name="e">Event arguments.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Data.DataManager.ApplyPaletteColors">
            <summary>
            Apply palette colors to the data series if UsePaletteColors property is set.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.Data.DataManager.PrepareData(System.Boolean,System.Boolean,System.String[])">
            <summary>
            Called just before the data from the series to be used to perform these operations:
             - apply palette colors to the data series
             - prepare data in series
            </summary>
            <param name="seriesApplyPaletteColors">If true each data series will be assigned a color from the palette (if it's set)</param>
            <param name="pointsApplyPaletteColors">If true each data point will be assigned a color from the palette (if it's set)</param>
            <param name="series">List of series indexes, which requires data preparation</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Data.DataManager.IsPointSkipped(Dundas.Olap.WebUIControls.DataPoint)">
            <summary>
            This method checks if data point should be skipped. This 
            method will return true if data point is empty.
            </summary>
            <param name="point">Data point</param>
            <returns>This method returns true if data point is empty.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Data.DataManager.GetNumberOfPoints(System.String[])">
            <summary>
            Gets max number of data points in specified series.
            </summary>
            <param name="series">Series IDs</param>
            <returns>Maximum number of data points</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Data.DataManager.GetMaxYValue(System.Int32,System.String[])">
            <summary>
            Gets maximum Y value from many series
            </summary>
            <param name="valueIndex">Index of Y value to use</param>
            <param name="series">Series IDs</param>
            <returns>Maximum Y value</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Data.DataManager.GetMaxYValue(System.String[])">
            <summary>
            Gets maximum Y value from many series
            </summary>
            <param name="series">Series IDs</param>
            <returns>Maximum Y value</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Data.DataManager.GetMaxXValue(System.String[])">
            <summary>
            Gets maximum X value from many series
            </summary>
            <param name="series">Series IDs</param>
            <returns>Maximum X value</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Data.DataManager.GetMinMaxXValue(System.Double@,System.Double@,System.String[])">
            <summary>
            Gets minimum and maximum X value from many series.
            </summary>
            <param name="min">Returns maximum X value.</param>
            <param name="max">Returns minimum X value.</param>
            <param name="series">Series IDs</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Data.DataManager.GetMinMaxYValue(System.Int32,System.Double@,System.Double@,System.String[])">
            <summary>
            Gets minimum and maximum Y value from many series.
            </summary>
            <param name="valueIndex">Index of Y value to use.</param>
            <param name="min">Returns maximum Y value.</param>
            <param name="max">Returns minimum Y value.</param>
            <param name="series">Series IDs</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Data.DataManager.GetMinMaxYValue(System.Double@,System.Double@,System.String[])">
            <summary>
            Gets minimum and maximum Y value from many series.
            </summary>
            <param name="min">Returns maximum Y value.</param>
            <param name="max">Returns minimum Y value.</param>
            <param name="series">Series IDs</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Data.DataManager.GetMinMaxYValue(System.Collections.ArrayList,System.Double@,System.Double@)">
            <summary>
            Gets minimum and maximum Y value from many series.
            </summary>
            <param name="seriesList">Series objects list.</param>
            <param name="min">Returns maximum Y value.</param>
            <param name="max">Returns minimum Y value.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.Data.DataManager.GetMaxStackedYValue(System.Int32,System.String[])">
            <summary>
            Gets maximum stacked Y value from many series
            </summary>
            <param name="valueIndex">Index of Y value to use</param>
            <param name="series">Series IDs</param>
            <returns>Maximum stacked Y value</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Data.DataManager.GetMaxUnsignedStackedYValue(System.Int32,System.String[])">
            <summary>
            Gets maximum Unsigned stacked Y value from many series ( Stacked Area chart )
            </summary>
            <param name="valueIndex">Index of Y value to use</param>
            <param name="series">Series IDs</param>
            <returns>Maximum stacked Y value</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Data.DataManager.GetMaxStackedXValue(System.String[])">
            <summary>
            Gets maximum stacked X value from many series
            </summary>
            <param name="series">Series IDs</param>
            <returns>Maximum stacked X value</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Data.DataManager.GetMinYValue(System.Int32,System.String[])">
            <summary>
            Gets minimum Y value from many series
            </summary>
            <param name="valueIndex">Index of Y value to use</param>
            <param name="series">Series IDs</param>
            <returns>Minimum Y value</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Data.DataManager.GetMinYValue(System.String[])">
            <summary>
            Gets minimum Y value from many series
            </summary>
            <param name="series">Series IDs</param>
            <returns>Minimum Y value</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Data.DataManager.GetMinXValue(System.String[])">
            <summary>
            Gets minimum X value from many series
            </summary>
            <param name="series">Series IDs</param>
            <returns>Minimum X value</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Data.DataManager.GetMinStackedYValue(System.Int32,System.String[])">
            <summary>
            Gets minimum stacked Y value from many series
            </summary>
            <param name="valueIndex">Index of Y value to use</param>
            <param name="series">Series IDs</param>
            <returns>Minimum stacked Y value</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Data.DataManager.GetMinUnsignedStackedYValue(System.Int32,System.String[])">
            <summary>
            Gets minimum Unsigned stacked Y value from many series
            </summary>
            <param name="valueIndex">Index of Y value to use</param>
            <param name="series">Series IDs</param>
            <returns>Minimum stacked Y value</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Data.DataManager.GetMinStackedXValue(System.String[])">
            <summary>
            Gets minimum stacked X value from many series
            </summary>
            <param name="series">Series IDs</param>
            <returns>Minimum stacked X value</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Data.DataManager.GetMaxHundredPercentStackedYValue(System.Boolean,System.Int32,System.String[])">
            <summary>
            Gets maximum hundred percent stacked Y value
            </summary>
            <param name="supportNegative">Indicates that negative values are shown on the other side of the axis.</param>
            <param name="valueIndex">Index of Y value to use</param>
            <param name="series">Series names</param>
            <returns>Maximum 100% stacked Y value</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.Data.DataManager.GetMinHundredPercentStackedYValue(System.Boolean,System.Int32,System.String[])">
            <summary>
            Gets minimum hundred percent stacked Y value
            </summary>
            <param name="supportNegative">Indicates that negative values are shown on the other side of the axis.</param>
            <param name="valueIndex">Index of Y value to use</param>
            <param name="series">Series names</param>
            <returns>Minimum 100% stacked Y value</returns>
        </member>
        <member name="P:Dundas.Charting.WebControl.Data.DataManager.Series">
            <summary>
            Chart series collection.
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.Data.DataManager.Palette">
            <summary>
            Color palette to use
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.Data.DataManager.PaletteCustomColors">
            <summary>
            Array of custom palette colors.
            </summary>
            <remarks>
            When this custom colors array is non-empty the <b>Palette</b> property is ignored.
            </remarks>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.ChartUI">
            <summary>
            The ChartUI represents the Chart User Interface Manager.
            <remarks>
            The Chart User Interface Manager provides the most common actions required by an end-user, 
            such as switching from 2D/3D, color change, rotation and show/hide items like legends and grid. 
            The major components which contain the ChartUI class are <see cref="T:Dundas.Olap.WebUIControls.CommandCollection"/>, 
            <see cref="T:Dundas.Olap.WebUIControls.ToolbarAttributes"/> and <see cref="T:Dundas.Olap.WebUIControls.ContextMenuAttributes"/>.
            </remarks>
            <note type="note">The Chart User Interface is active in Dundas Chart for Windows Froms and Internet SmartClient</note>
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartUI.components">
            <summary>
            Component container for toolbar and image list
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartUI.chart">
            <summary>
            Reference to chart object instance
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartUI.chartImage">
            <summary>
            Reference to chart image object  instance
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartUI.commandRegistry">
            <summary>
            Contains default command registry with CommandExecutor instances
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartUI.stringsRes">
            <summary>
            The ResourceManager to read "Strings.resx"
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartUI.commands">
            <summary>
            The command collection
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartUI.contextMenu">
            <summary>
            Exposes the  ContextMenu property 
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartUI.toolbar">
            <summary>
            Exposes the  Toolbar property 
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartUI.initialized">
            <summary>
            True during initialization ( IntitializeComponents() method)
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartUI.SeriesFormulaRegistry">
            <summary>
            The SeriesFormulaRegistry reference which keeps CommandExecuter classes
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartUI.toggledGroupIDs">
            <summary>
            Hashtable with command interface links
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartUI.#cctor">
            <summary>
            Initializes static objects contained in ChartUI
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartUI.#ctor">
            <summary>
            Initializes new instance of ChartUI object.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartUI.#ctor(Dundas.Olap.WebUIControls.ChartPicture)">
            <summary>
            Creates a new instance of ChartUI object
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartUI.ShouldSerializeCommands">
            <summary>
            Checks if collection is modified and should be serialized.
            </summary>
            <returns>True if the collection where modified and is needed to be serialized.</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartUI.ResetCommands">
            <summary>
            Resets the collection to its default items.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartUI.FormatString(System.String,System.Object[])">
            <summary>
            Reads resource string and format it.
            </summary>
            <param name="resourceString">Resource string ID to read</param>
            <param name="args">Arguments to formating</param>
            <returns>Formated resource string</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartUI.GetStringResource(System.String)">
            <summary>
            Reads resource string from "strings.resx" by ID
            </summary>
            <param name="resourceName">Resource string ID to read</param>
            <returns>String from resource</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartUI.OnCommandFiring(Dundas.Olap.WebUIControls.CommandFiringArgs)">
            <summary>
            Fires OnCommandFiring event.
            </summary>
            <param name="e">OnCommandFiring event argument.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartUI.OnCommandFired(Dundas.Olap.WebUIControls.CommandFiredArgs)">
            <summary>
            Fires OnCommandFired event.
            </summary>
            <param name="e">OnCommandFired event argument</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartUI.SendCommandMessage(Dundas.Olap.WebUIControls.CommandMessage,System.Object,System.Object)">
            <summary>
            Calls OnCommandMessage method for each UI element.
            </summary>
            <param name="message">The message type</param>
            <param name="source">Source which sends the message</param>
            <param name="parameters">Additional parameters</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartUI.Invalidate">
            <summary>
            Invaidates 
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartUI.BeginInit">
            <summary>
            Starts initializaton stage. Called from ((ISupportInitialize)Chart).BeginInit()
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartUI.EndInit">
            <summary>
            Finishes initializaton stage. Called from ((ISupportInitialize)Chart).BeginInit()
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartUI.IsInitializeStage">
            <summary>
            Gets initialize or serialize flag. 
            True means that chart is not under operative state - is not initialized 
            or serializing ( code generation );
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartUI.IsDesignMode">
            <summary>
            Gets design mode flag.
            </summary>
            <returns>True if chart is under design state</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartUI.OnChartInvalidated">
            <summary>
            Handled invalidated event. Called from ChartPicture.Invalidate()
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartUI.disposed">
            <summary>
            True if object is disposed by force
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartUI.Dispose">
            <summary>
            Implement IDisposable.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartUI.Dispose(System.Boolean)">
            <summary>
            Dispose(bool disposing) executes in two distinct scenarios.
            If disposing equals true, the method has been called directly
            or indirectly by a user's code. Managed and unmanaged resources
            can be disposed.
            If disposing equals false, the method has been called by the 
            runtime from inside the finalizer and you should not reference 
            other objects. Only unmanaged resources can be disposed.
            </summary>
            <param name="disposing">If disposing equals true, 
            the method has been called directly
            or indirectly by a user's code. 
            </param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartUI.OnDispose">
            <summary>
            Here managed and unmanaged resources
            can be disposed.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartUI.ContextMenu">
            <summary>
            Gets the ContextMenuAttributes object.
            </summary>		
            <remarks>
            ContextMenu exposes context menu items which are available in run time as popup menu. 
            The contents of the context menu depends on chart object which is clicked on,
            defined in <see cref="T:Dundas.Olap.WebUIControls.Command"/> by <see cref="P:Dundas.Olap.WebUIControls.Command.SupportedElements"/> property.
            </remarks>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartUI.Toolbar">
            <summary>
            Gets the ToolbarAttributes object.
            </summary>
            <remarks>
            Toolbar contains buttons which are available in run time to execute commands.
            </remarks>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartUI.Commands">
            <summary>
            Gets the Command collection.
            </summary>
            <remarks>
            The command collection allways contains set of predefined commands. 
            These commands cannot be deleted but can be changed.
            All additional commands have to have unque CommandID to be 
            recognized properly in event handlers.
            </remarks>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartUI.PropertyDialogTitle">
            <summary>
            Property Dialog Title.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartUI.StringRes">
            <summary>
            Gets the ResourceManager of "Strings.resx"
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartUI.Chart">
            <summary>
            Gets the Chart object reference. 
            Returns null if chart component is not initialized.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartUI.Services">
            <summary>
            Gets a ServiceContainer which contains objects like Chart and NamedImages
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartUI.ChartControl">
            <summary>
            Gets ChartControl object. 
            Returns null if <see cref="T:Dundas.Olap.WebUIControls.ChartUI"/> is not initialized.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartUI.ChartImage">
            <summary>
            Gets the ChartImage object reference
            Returns null if <see cref="T:Dundas.Olap.WebUIControls.ChartUI"/> is not initialized.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartUI.Registry">
            <summary>
            Gets the CommandRegistry which contains all CommandExecutor objects
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartUI.Dundas#Olap#WebUIControls#ICommandElement#Parent">
            <summary>
            Gets the parent ICommandElement
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartUI.Dundas#Olap#WebUIControls#ICommandElement#Chart">
            <summary>
            Gets the chart object.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:Dundas.Charting.WebControl.ChartTypes.ThreeLineBreakChart" -->
        <member name="M:Dundas.Charting.WebControl.ChartTypes.ThreeLineBreakChart.PrepareData(Dundas.Olap.WebUIControls.Series,System.ComponentModel.Design.IServiceContainer)">
            <summary>
            Prepares ThreeLineBreak chart type for rendering.
            </summary>
            <param name="series">Series to be prepared.</param>
            <param name="serviceContainer">Reference to service container.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.ThreeLineBreakChart.UnPrepareData(Dundas.Olap.WebUIControls.Series,System.ComponentModel.Design.IServiceContainer)">
            <summary>
            Remove any changes done while preparing ThreeLineBreak chart type for rendering.
            </summary>
            <param name="series">Series to be un-prepared.</param>
            <param name="serviceContainer">Reference to service container.</param>
            <returns>True if series was removed from collection.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.ThreeLineBreakChart.FillThreeLineBreakData(Dundas.Olap.WebUIControls.Series,Dundas.Olap.WebUIControls.Series)">
            <summary>
            Fills range column series with data to draw the ThreeLineBreak chart.
            </summary>
            <param name="series">Range column chart series used to dispaly the ThreeLineBreak chart.</param>
            <param name="originalData">Series with original data.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.ThreeLineBreakChart.Paint(Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.CommonElements,Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.Series)">
            <summary>
            Paint chart.
            </summary>
            <param name="graph">The Chart Graphics object.</param>
            <param name="common">The Common elements object.</param>
            <param name="area">Chart area for this chart.</param>
            <param name="seriesToDraw">Chart series to draw.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.ThreeLineBreakChart.GetLegendImageStyle(Dundas.Olap.WebUIControls.Series)">
            <summary>
            How to draw series/points in legend:
            Filled rectangle, Line or Marker
            </summary>
            <param name="series">Legend item series.</param>
            <returns>Legend item style.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.ThreeLineBreakChart.GetImage(Dundas.Charting.WebControl.ChartTypes.ChartTypeRegistry)">
            <summary>
            Gets chart type image.
            </summary>
            <param name="registry">Chart types registry object.</param>
            <returns>Chart type image.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.ThreeLineBreakChart.GetYValue(Dundas.Olap.WebUIControls.CommonElements,Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.Series,Dundas.Olap.WebUIControls.DataPoint,System.Int32,System.Int32)">
            <summary>
            Helper function, which returns the Y value of the point.
            </summary>
            <param name="common">Chart common elements.</param>
            <param name="area">Chart area the series belongs to.</param>
            <param name="series">Sereis of the point.</param>
            <param name="point">Point object.</param>
            <param name="pointIndex">Index of the point.</param>
            <param name="yValueIndex">Index of the Y value to get.</param>
            <returns>Y value of the point.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.ThreeLineBreakChart.AddSmartLabelMarkerPositions(Dundas.Olap.WebUIControls.CommonElements,Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.Series,System.Collections.ArrayList)">
            <summary>
            Adds markers position to the list. Used to check SmartLabels overlapping.
            </summary>
            <param name="common">Common chart elements.</param>
            <param name="area">Chart area.</param>
            <param name="series">Series values to be used.</param>
            <param name="list">List to add to.</param>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.ThreeLineBreakChart.Name">
            <summary>
            Chart type name
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.ThreeLineBreakChart.Stacked">
            <summary>
            True if chart type is stacked
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.ThreeLineBreakChart.SupportStackedGroups">
            <summary>
            True if stacked chart type supports groups
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.ThreeLineBreakChart.StackSign">
            <summary>
            True if stacked chart type should draw separately positive and 
            negative data points ( Bar and column Stacked types ).
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.ThreeLineBreakChart.RequireAxes">
            <summary>
            True if chart type supports axeses
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.ThreeLineBreakChart.SecondYScale">
            <summary>
            Chart type with two y values used for scale ( bubble chart type )
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.ThreeLineBreakChart.CircularChartArea">
            <summary>
            True if chart type requires circular chart area.
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.ThreeLineBreakChart.SupportLogarithmicAxes">
            <summary>
            True if chart type supports logarithmic axes
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.ThreeLineBreakChart.SwitchValueAxes">
            <summary>
            True if chart type requires to switch the value (Y) axes position
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.ThreeLineBreakChart.SideBySideSeries">
            <summary>
            True if chart series can be placed side-by-side.
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.ThreeLineBreakChart.DataPointsInLegend">
            <summary>
            True if each data point of a chart must be represented in the legend
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.ThreeLineBreakChart.ZeroCrossing">
            <summary>
            If the crossing value is auto Crossing value should be 
            automatically set to zero for some chart 
            types (Bar, column, area etc.)
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.ThreeLineBreakChart.ApplyPaletteColorsToPoints">
            <summary>
            True if palette colors should be applied for each data paoint.
            Otherwise the color is applied to the series.
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.ThreeLineBreakChart.ExtraYValuesConnectedToYAxis">
            <summary>
            Indicates that extra Y values are connected to the scale of the Y axis
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.ThreeLineBreakChart.HundredPercent">
            <summary>
            Indicates that it's a hundredred percent chart.
            Axis scale from 0 to 100 percent should be used.
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.ThreeLineBreakChart.HundredPercentSupportNegative">
            <summary>
            Indicates that it's a hundredred percent chart.
            Axis scale from 0 to 100 percent should be used.
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.ThreeLineBreakChart.YValuesPerPoint">
            <summary>
            Number of supported Y value(s) per point 
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.ChartTypes.RenkoChart">
            <summary>
            RenkoChart class provides methods to perform all nessesary 
            calculations to display Renko chart with the help of the 
            temporary RangeColumn series. This series is created in the 
            PrepareData method and then removed in the UnPrepareData method.
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.RenkoChart.PrepareData(Dundas.Olap.WebUIControls.Series,System.ComponentModel.Design.IServiceContainer)">
            <summary>
            Prepares renko chart type for rendering.
            </summary>
            <param name="series">Series to be prepared.</param>
            <param name="serviceContainer">Reference to service container.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.RenkoChart.UnPrepareData(Dundas.Olap.WebUIControls.Series,System.ComponentModel.Design.IServiceContainer)">
            <summary>
            Remove any changes done while preparing renko chart type for rendering.
            </summary>
            <param name="series">Series to be un-prepared.</param>
            <param name="serviceContainer">Reference to service container.</param>
            <returns>True if series was removed from collection.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.RenkoChart.GetBoxSize(Dundas.Olap.WebUIControls.Series,Dundas.Olap.WebUIControls.Series,System.Int32)">
            <summary>
            Gets box size of the renko chart.
            </summary>
            <param name="series">Range column chart series used to dispaly the renko chart.</param>
            <param name="originalData">Series with original data.</param>
            <param name="yValueIndex">Index of the Y value to use.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.RenkoChart.FillRenkoData(Dundas.Olap.WebUIControls.Series,Dundas.Olap.WebUIControls.Series)">
            <summary>
            Fills range column series with data to draw the renko chart.
            </summary>
            <param name="series">Range column chart series used to dispaly the renko chart.</param>
            <param name="originalData">Series with original data.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.RenkoChart.Paint(Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.CommonElements,Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.Series)">
            <summary>
            Paint stock chart.
            </summary>
            <param name="graph">The Chart Graphics object.</param>
            <param name="common">The Common elements object.</param>
            <param name="area">Chart area for this chart.</param>
            <param name="seriesToDraw">Chart series to draw.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.RenkoChart.GetLegendImageStyle(Dundas.Olap.WebUIControls.Series)">
            <summary>
            How to draw series/points in legend:
            Filled rectangle, Line or Marker
            </summary>
            <param name="series">Legend item series.</param>
            <returns>Legend item style.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.RenkoChart.GetImage(Dundas.Charting.WebControl.ChartTypes.ChartTypeRegistry)">
            <summary>
            Gets chart type image.
            </summary>
            <param name="registry">Chart types registry object.</param>
            <returns>Chart type image.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.RenkoChart.GetYValue(Dundas.Olap.WebUIControls.CommonElements,Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.Series,Dundas.Olap.WebUIControls.DataPoint,System.Int32,System.Int32)">
            <summary>
            Helper function, which returns the Y value of the point.
            </summary>
            <param name="common">Chart common elements.</param>
            <param name="area">Chart area the series belongs to.</param>
            <param name="series">Sereis of the point.</param>
            <param name="point">Point object.</param>
            <param name="pointIndex">Index of the point.</param>
            <param name="yValueIndex">Index of the Y value to get.</param>
            <returns>Y value of the point.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.RenkoChart.AddSmartLabelMarkerPositions(Dundas.Olap.WebUIControls.CommonElements,Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.Series,System.Collections.ArrayList)">
            <summary>
            Adds markers position to the list. Used to check SmartLabels overlapping.
            </summary>
            <param name="common">Common chart elements.</param>
            <param name="area">Chart area.</param>
            <param name="series">Series values to be used.</param>
            <param name="list">List to add to.</param>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.RenkoChart.Name">
            <summary>
            Chart type name
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.RenkoChart.Stacked">
            <summary>
            True if chart type is stacked
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.RenkoChart.SupportStackedGroups">
            <summary>
            True if stacked chart type supports groups
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.RenkoChart.StackSign">
            <summary>
            True if stacked chart type should draw separately positive and 
            negative data points ( Bar and column Stacked types ).
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.RenkoChart.RequireAxes">
            <summary>
            True if chart type supports axeses
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.RenkoChart.SecondYScale">
            <summary>
            Chart type with two y values used for scale ( bubble chart type )
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.RenkoChart.CircularChartArea">
            <summary>
            True if chart type requires circular chart area.
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.RenkoChart.SupportLogarithmicAxes">
            <summary>
            True if chart type supports logarithmic axes
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.RenkoChart.SwitchValueAxes">
            <summary>
            True if chart type requires to switch the value (Y) axes position
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.RenkoChart.SideBySideSeries">
            <summary>
            True if chart series can be placed side-by-side.
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.RenkoChart.DataPointsInLegend">
            <summary>
            True if each data point of a chart must be represented in the legend
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.RenkoChart.ZeroCrossing">
            <summary>
            If the crossing value is auto Crossing value should be 
            automatically set to zero for some chart 
            types (Bar, column, area etc.)
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.RenkoChart.ApplyPaletteColorsToPoints">
            <summary>
            True if palette colors should be applied for each data paoint.
            Otherwise the color is applied to the series.
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.RenkoChart.ExtraYValuesConnectedToYAxis">
            <summary>
            Indicates that extra Y values are connected to the scale of the Y axis
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.RenkoChart.HundredPercent">
            <summary>
            Indicates that it's a hundredred percent chart.
            Axis scale from 0 to 100 percent should be used.
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.RenkoChart.HundredPercentSupportNegative">
            <summary>
            Indicates that it's a hundredred percent chart.
            Axis scale from 0 to 100 percent should be used.
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.RenkoChart.YValuesPerPoint">
            <summary>
            Number of supported Y value(s) per point 
            </summary>
        </member>
        <member name="T:Dundas.Charting.WebControl.ChartTypes.FastLineChart">
            <summary>
            FastLineChart class implements a simplified line chart drawing 
            algorithm which is optimized for the performance.
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.ChartTypes.FastLineChart.chartArea3DEnabled">
            <summary>
            Indicates that chart is drawn in 3D area
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.ChartTypes.FastLineChart.graph">
            <summary>
            Current chart graphics
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.ChartTypes.FastLineChart.seriesZCoordinate">
            <summary>
            Z coordinate of the 3D series
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.ChartTypes.FastLineChart.matrix3D">
            <summary>
            3D transformation matrix
            </summary>
        </member>
        <member name="F:Dundas.Charting.WebControl.ChartTypes.FastLineChart.common">
            <summary>
            Reference to common chart elements
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.FastLineChart.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.FastLineChart.GetLegendImageStyle(Dundas.Olap.WebUIControls.Series)">
            <summary>
            How to draw series/points in legend:
            Filled rectangle, Line or Marker
            </summary>
            <param name="series">Legend item series.</param>
            <returns>Legend item style.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.FastLineChart.GetImage(Dundas.Charting.WebControl.ChartTypes.ChartTypeRegistry)">
            <summary>
            Gets chart type image.
            </summary>
            <param name="registry">Chart types registry object.</param>
            <returns>Chart type image.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.FastLineChart.Paint(Dundas.Olap.WebUIControls.ChartGraphics,Dundas.Olap.WebUIControls.CommonElements,Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.Series)">
            <summary>
            Paint FastLine Chart.
            </summary>
            <param name="graph">The Chart Graphics object.</param>
            <param name="common">The Common elements object.</param>
            <param name="area">Chart area for this chart.</param>
            <param name="seriesToDraw">Chart series to draw.</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.FastLineChart.DrawLine(Dundas.Olap.WebUIControls.Series,Dundas.Olap.WebUIControls.DataPoint,Dundas.Olap.WebUIControls.DataPoint,Dundas.Olap.WebUIControls.DataPoint,System.Int32,System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws a line connecting two PointF structures.
            </summary>
            <param name="series">Chart series.</param>
            <param name="point">Series last data point in the group.</param>
            <param name="pointMin">Series minimum Y value data point in the group.</param>
            <param name="pointMax">Series maximum Y value data point in the group.</param>
            <param name="pointIndex">Point index.</param>
            <param name="pen">Pen object that determines the color, width, and style of the line.</param>
            <param name="firstPointX">First point X coordinate.</param>
            <param name="firstPointY">First point Y coordinate</param>
            <param name="secondPointX">Second point X coordinate.</param>
            <param name="secondPointY">Second point Y coordinate</param>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.FastLineChart.GetYValue(Dundas.Olap.WebUIControls.CommonElements,Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.Series,Dundas.Olap.WebUIControls.DataPoint,System.Int32,System.Int32)">
            <summary>
            Helper function, which returns the Y value of the point.
            </summary>
            <param name="common">Chart common elements.</param>
            <param name="area">Chart area the series belongs to.</param>
            <param name="series">Sereis of the point.</param>
            <param name="point">Point object.</param>
            <param name="pointIndex">Index of the point.</param>
            <param name="yValueIndex">Index of the Y value to get.</param>
            <returns>Y value of the point.</returns>
        </member>
        <member name="M:Dundas.Charting.WebControl.ChartTypes.FastLineChart.AddSmartLabelMarkerPositions(Dundas.Olap.WebUIControls.CommonElements,Dundas.Olap.WebUIControls.ChartArea,Dundas.Olap.WebUIControls.Series,System.Collections.ArrayList)">
            <summary>
            Adds markers position to the list. Used to check SmartLabels overlapping.
            </summary>
            <param name="common">Common chart elements.</param>
            <param name="area">Chart area.</param>
            <param name="series">Series values to be used.</param>
            <param name="list">List to add to.</param>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.FastLineChart.Name">
            <summary>
            Chart type name
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.FastLineChart.Stacked">
            <summary>
            True if chart type is stacked
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.FastLineChart.SupportStackedGroups">
            <summary>
            True if stacked chart type supports groups
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.FastLineChart.StackSign">
            <summary>
            True if stacked chart type should draw separately positive and 
            negative data points ( Bar and column Stacked types ).
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.FastLineChart.RequireAxes">
            <summary>
            True if chart type supports axeses
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.FastLineChart.SecondYScale">
            <summary>
            Chart type with two y values used for scale ( bubble chart type )
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.FastLineChart.CircularChartArea">
            <summary>
            True if chart type requires circular chart area.
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.FastLineChart.SupportLogarithmicAxes">
            <summary>
            True if chart type supports logarithmic axes
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.FastLineChart.SwitchValueAxes">
            <summary>
            True if chart type requires to switch the value (Y) axes position
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.FastLineChart.SideBySideSeries">
            <summary>
            True if chart series can be placed side-by-side.
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.FastLineChart.DataPointsInLegend">
            <summary>
            True if each data point of a chart must be represented in the legend
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.FastLineChart.ZeroCrossing">
            <summary>
            If the crossing value is auto Crossing value should be 
            automatically set to zero for some chart 
            types (Bar, column, area etc.)
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.FastLineChart.ApplyPaletteColorsToPoints">
            <summary>
            True if palette colors should be applied for each data paoint.
            Otherwise the color is applied to the series.
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.FastLineChart.ExtraYValuesConnectedToYAxis">
            <summary>
            Indicates that extra Y values are connected to the scale of the Y axis
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.FastLineChart.HundredPercent">
            <summary>
            Indicates that it's a hundredred percent chart.
            Axis scale from 0 to 100 percent should be used.
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.FastLineChart.HundredPercentSupportNegative">
            <summary>
            Indicates that it's a hundredred percent chart.
            Axis scale from 0 to 100 percent should be used.
            </summary>
        </member>
        <member name="P:Dundas.Charting.WebControl.ChartTypes.FastLineChart.YValuesPerPoint">
            <summary>
            Number of supported Y value(s) per point 
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.PolylineAnnotation">
            <summary>
            <b>PolylineAnnotation</b> is a class that represents a polyline annotation.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.PolylineAnnotation.#ctor">
            <summary>
            Default public constructor.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.PolylineAnnotation.Paint(Dundas.Olap.WebUIControls.Chart,Dundas.Olap.WebUIControls.ChartGraphics)">
            <summary>
            Paints an annotation object on the specified graphics.
            </summary>
            <param name="graphics">
            A <see cref="T:Dundas.Olap.WebUIControls.ChartGraphics"/> object, used to paint an annotation object.
            </param>
            <param name="chart">
            Reference to the <see cref="T:Dundas.Olap.WebUIControls.Chart"/> owner control.
            </param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.PolylineAnnotation.ResizeToPathBoundary">
            <summary>
            Changes annotation position, so it exactly matches the bounary of the 
            polyline path.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.PolylineAnnotation.AdjustLocationSize(System.Drawing.SizeF,Dundas.Olap.WebUIControls.ResizingMode,System.Boolean,System.Boolean)">
            <summary>
            Adjust annotation location and\or size as a result of user action.
            </summary>
            <param name="movingDistance">Distance to resize/move the annotation.</param>
            <param name="resizeMode">Risizing mode.</param>
            <param name="pixelCoord">Distance is in pixels, otherwise relative.</param>
            <param name="userInput">Indicates if position changing was a result of the user input.</param>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.PolylineAnnotation.StartCap">
            <summary>
            Gets or sets a cap style used at the start of the annotation line.
            <seealso cref="P:Dundas.Olap.WebUIControls.PolylineAnnotation.EndCap"/>
            </summary>
            <value>
            A <see cref="T:Dundas.Olap.WebUIControls.LineAnchorCap"/> value used as a start cap for the line.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.PolylineAnnotation.EndCap">
            <summary>
            Gets or sets a cap style used at the end of the annotation line.
            <seealso cref="P:Dundas.Olap.WebUIControls.PolylineAnnotation.StartCap"/>
            </summary>
            <value>
            A <see cref="T:Dundas.Olap.WebUIControls.LineAnchorCap"/> value used as the end cap for the line.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.PolylineAnnotation.Alignment">
            <summary>
            Not applicable to this annotation type.
            </summary>
            <value>
            A <see cref="T:System.Drawing.ContentAlignment"/> value.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.PolylineAnnotation.TextColor">
            <summary>
            Not applicable to this annotation type.
            <seealso cref="P:Dundas.Olap.WebUIControls.PolylineAnnotation.TextFont"/>
            <seealso cref="P:Dundas.Olap.WebUIControls.Annotation.TextStyle"/>
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color"/> value.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.PolylineAnnotation.TextFont">
            <summary>
            Not applicable to this annotation type.
            <seealso cref="P:Dundas.Olap.WebUIControls.PolylineAnnotation.TextColor"/>
            <seealso cref="P:Dundas.Olap.WebUIControls.Annotation.TextStyle"/>
            </summary>
            <value>
            A <see cref="T:System.Drawing.Font"/> object.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.PolylineAnnotation.TextStyle">
            <summary>
            Not applicable to this annotation type.
            <seealso cref="P:Dundas.Olap.WebUIControls.PolylineAnnotation.TextFont"/>
            <seealso cref="P:Dundas.Olap.WebUIControls.PolylineAnnotation.TextColor"/>
            </summary>
            <value>
            A <see cref="P:Dundas.Olap.WebUIControls.PolylineAnnotation.TextStyle"/> value.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.PolylineAnnotation.BackColor">
            <summary>
            Not applicable to this annotation type.
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color"/> value.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.PolylineAnnotation.BackHatchStyle">
            <summary>
            Not applicable to this annotation type.
            </summary>
            <value>
            A <see cref="T:Dundas.Olap.WebUIControls.ChartHatchStyle"/> value.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.PolylineAnnotation.BackGradientType">
            <summary>
            Not applicable to this annotation type.
            </summary>
            <value>
            A <see cref="T:Dundas.Olap.WebUIControls.GradientType"/> value.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.PolylineAnnotation.BackGradientEndColor">
            <summary>
            Not applicable to this annotation type.
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color"/> value.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.PolylineAnnotation.AnnotationType">
            <summary>
            Gets or sets an annotation type name.
            </summary>
            <remarks>
            This abstract property is used to get the name of each annotation type
            (e.g. Line, Rectangle, Ellipse,...). 
            <para>
            Property is for internal use and is hidden at design and run time. Should
            not be part of the documentation.
            </para>
            </remarks>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.PolylineAnnotation.SelectionPointsStyle">
            <summary>
            Gets or sets an annotation selection points style.
            </summary>
            <value>
            A <see cref="P:Dundas.Olap.WebUIControls.PolylineAnnotation.SelectionPointsStyle"/> value that represents the annotation 
            selection style.
            </value>
            <remarks>
            Property is for internal use and is hidden at design and run time. 
            Should not be part of the documentation.
            </remarks>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.PolylineAnnotation.FreeDrawPlacement">
            <summary>
            Gets or sets a flag that determines the free-draw placement mode for an annotation.
            </summary>
            <value>
            <b>True</b> if the annotation should be placed using free draw mode, 
            <b>false</b> otherwise.  Defaults to <b>false</b>.
            </value>
            <remarks>
            This annotation supports two different placement modes when the Annotation.BeginPlacement 
            method is called. Set this property to <b>true</b> to switch from the default 
            mode to free draw mode, where an end-user can free draw while moving the mouse cursor.
            </remarks>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.PolylineAnnotation.Path">
            <summary>
            Gets or sets the path points of the polyline at run-time.
            </summary>
            <value>
            A <see cref="T:System.Drawing.Drawing2D.GraphicsPath"/> object with the polyline shape.
            </value>
            <remarks>
            A polyline must use coordinates relative to the annotation object, where 0,0 is 
            the top-left coordinate and 100,100 is the bottom-right coordinate of the annotation.  
            <para>
            This property is not accessible at design time (at design-time use the 
            <see cref="P:Dundas.Olap.WebUIControls.PolylineAnnotation.PathPoints"/> property instead).
            </para>
            </remarks>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.PolylineAnnotation.PathPoints">
            <summary>
            Gets or sets the path points of the polyline at design-time.
            </summary>
            <value>
            An <see cref="T:Dundas.Olap.WebUIControls.AnnotationPathPointCollection"/> object with the polyline shape.
            </value>
            <remarks>
            A polyline must use coordinates relative to the annotation object, where 0,0 is 
            the top-left coordinate and 100,100 is the bottom-right coordinate of the annotation.
            <para>
            This property is not accessible at run time (at run-time use the <see cref="P:Dundas.Olap.WebUIControls.PolylineAnnotation.Path"/> 
            property instead).
            </para>
            </remarks>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.PolygonAnnotation">
            <summary>
            <b>PolygonAnnotation</b> is a class that represents polygon annotation.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.PolygonAnnotation.#ctor">
            <summary>
            Default public constructor.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.PolygonAnnotation.StartCap">
            <summary>
            Not applicable to this annotation type.
            <seealso cref="P:Dundas.Olap.WebUIControls.PolygonAnnotation.EndCap"/>
            </summary>
            <value>
            A <see cref="T:Dundas.Olap.WebUIControls.LineAnchorCap"/> value.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.PolygonAnnotation.EndCap">
            <summary>
            Not applicable to this annotation type.
            <seealso cref="P:Dundas.Olap.WebUIControls.PolygonAnnotation.StartCap"/>
            </summary>
            <value>
            A <see cref="T:Dundas.Olap.WebUIControls.LineAnchorCap"/> value.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.PolygonAnnotation.BackColor">
            <summary>
            Gets or sets an annotation's background color.
            <seealso cref="P:Dundas.Olap.WebUIControls.PolygonAnnotation.BackGradientEndColor"/>
            <seealso cref="P:Dundas.Olap.WebUIControls.PolygonAnnotation.BackHatchStyle"/>
            <seealso cref="P:Dundas.Olap.WebUIControls.PolygonAnnotation.BackGradientType"/>
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color"/> value used to draw the annotation background.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.PolygonAnnotation.BackHatchStyle">
            <summary>
            Gets or sets an annotation's background hatch style.
            <seealso cref="P:Dundas.Olap.WebUIControls.PolygonAnnotation.BackGradientEndColor"/>
            <seealso cref="P:Dundas.Olap.WebUIControls.PolygonAnnotation.BackColor"/>
            <seealso cref="P:Dundas.Olap.WebUIControls.PolygonAnnotation.BackGradientType"/>
            </summary>
            <value>
            A <see cref="T:Dundas.Olap.WebUIControls.ChartHatchStyle"/> value used to draw the annotation background.
            </value>
            <remarks>
            Two colors are used to draw hatching: <see cref="P:Dundas.Olap.WebUIControls.PolygonAnnotation.BackColor"/> and <see cref="P:Dundas.Olap.WebUIControls.PolygonAnnotation.BackGradientEndColor"/>.
            </remarks>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.PolygonAnnotation.BackGradientType">
            <summary>
            Gets or sets an annotation's background gradient style.
            <seealso cref="P:Dundas.Olap.WebUIControls.PolygonAnnotation.BackGradientEndColor"/>
            <seealso cref="P:Dundas.Olap.WebUIControls.PolygonAnnotation.BackColor"/>
            <seealso cref="P:Dundas.Olap.WebUIControls.PolygonAnnotation.BackHatchStyle"/>
            </summary>
            <value>
            A <see cref="T:Dundas.Olap.WebUIControls.GradientType"/> value used to draw the annotation background.
            </value>
            <remarks>
            Two colors are used to draw a gradient: <see cref="P:Dundas.Olap.WebUIControls.PolygonAnnotation.BackColor"/> and <see cref="P:Dundas.Olap.WebUIControls.PolygonAnnotation.BackGradientEndColor"/>.
            </remarks>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.PolygonAnnotation.BackGradientEndColor">
            <summary>
            Gets or sets an annotation's background secondary color.
            <seealso cref="P:Dundas.Olap.WebUIControls.PolygonAnnotation.BackColor"/>
            <seealso cref="P:Dundas.Olap.WebUIControls.PolygonAnnotation.BackHatchStyle"/>
            <seealso cref="P:Dundas.Olap.WebUIControls.PolygonAnnotation.BackGradientType"/>
            </summary>
            <value>
            A <see cref="T:System.Drawing.Color"/> value, used to draw the annotation background with 
            hatching or gradient fill.
            </value>
            <remarks>
            This color is used with <see cref="P:Dundas.Olap.WebUIControls.PolygonAnnotation.BackColor"/> when <see cref="P:Dundas.Olap.WebUIControls.PolygonAnnotation.BackHatchStyle"/> or
            <see cref="P:Dundas.Olap.WebUIControls.PolygonAnnotation.BackGradientType"/> are used.
            </remarks>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.PolygonAnnotation.AnnotationType">
            <summary>
            Gets or sets an annotation's type name.
            </summary>
            <remarks>
            This abstract property is used to get the name of each annotation type
            (e.g. Line, Rectangle, Ellipse,...). 
            <para>
            Property is for internal use and is hidden at design and run time. Should
            not be part of the documentation.
            </para>
            </remarks>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.PolygonAnnotation.SelectionPointsStyle">
            <summary>
            Gets or sets an annotation's selection points style.
            </summary>
            <value>
            A <see cref="P:Dundas.Olap.WebUIControls.PolygonAnnotation.SelectionPointsStyle"/> value that represents an annotation's 
            selection style.
            </value>
            <remarks>
            Property is for internal use and is hidden at design and run time. 
            Should not be part of the documentation.
            </remarks>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.AnnotationPathPointCollection">
            <summary>
            <b>AnnotationPathPointCollection</b> is a collection of polyline 
            annotation path points, and is only available via the <b>PathPoints</b> 
            property at design-time.
            <seealso cref="P:Dundas.Olap.WebUIControls.PolylineAnnotation.PathPoints"/>
            </summary>
            <remarks>
            This collection is used AT DESIGN-TIME ONLY, and uses serialization to expose the 
            shape of the polyline and polygon via their <b>PathPoints</b> colelction property.
            <para>
            At run-time use <b>Path</b> property to set the path of a polyline or polygon
            </para>
            </remarks>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AnnotationPathPointCollection.#ctor">
            <summary>
            Default public constructor.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AnnotationPathPointCollection.Add(Dundas.Olap.WebUIControls.AnnotationPathPoint)">
            <summary>
            Adds new path point into collection.
            </summary>
            <param name="point">
            <see cref="T:Dundas.Olap.WebUIControls.AnnotationPathPoint"/> to add.
            </param>
            <returns>
            Index of the added point.
            </returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AnnotationPathPointCollection.Insert(System.Int32,Dundas.Olap.WebUIControls.AnnotationPathPoint)">
            <summary>
            Inserts a new path point into the collection.
            </summary>
            <param name="index">
            Index to insert the point at.
            </param>
            <param name="point">
            <see cref="T:Dundas.Olap.WebUIControls.AnnotationPathPoint"/> object to insert.
            </param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AnnotationPathPointCollection.OnInsertComplete(System.Int32,System.Object)">
            <summary>
            After new item inserted.
            </summary>
            <param name="index">Item index.</param>
            <param name="value">Item object.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AnnotationPathPointCollection.OnRemoveComplete(System.Int32,System.Object)">
            <summary>
            After item removed.
            </summary>
            <param name="index">Item index.</param>
            <param name="value">Item object.</param>
            <remarks>
            This is an internal method and should not be part of the documentation.
            </remarks>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AnnotationPathPointCollection.OnClearComplete">
            <summary>
            After all items removed.
            </summary>
            <remarks>
            This is an internal method and should not be part of the documentation.
            </remarks>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AnnotationPathPointCollection.OnSetComplete(System.Int32,System.Object,System.Object)">
            <summary>
            After items is set.
            </summary>
            <param name="index">The zero-based index at which oldValue can be found.</param>
            <param name="oldValue">The value to replace with newValue.</param>
            <param name="newValue">The new value of the element at index.</param>
            <remarks>
            This is an internal method and should not be part of the documentation.
            </remarks>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AnnotationPathPointCollection.OnCollectionChanged">
            <summary>
            Called after collection content was changed
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.AnnotationPathPointCollection.Item(System.Int32)">
            <summary>
            Annotation path points collection indexer.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.AnnotationPathPoint">
            <summary>
            The <b>AnnotationPathPoint</b> class represents a path point of a polyline or polygon, 
            and is stored in their <b>PathPoints</b> property, which is only available at design-time.
            </summary>
            <remarks>
            At run-time use <b>Path</b> property to set the path of a polyline or polygon.
            </remarks>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AnnotationPathPoint.#ctor">
            <summary>
            Default public constructor.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AnnotationPathPoint.#ctor(System.Single,System.Single)">
            <summary>
            Constructor that takes X and Y parameters.
            </summary>
            <param name="x">Point X value.</param>
            <param name="y">Point Y value.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.AnnotationPathPoint.#ctor(System.Single,System.Single,System.Byte)">
            <summary>
            Constructor that takes X, Y and point type parameters.
            </summary>
            <param name="x">Point X value.</param>
            <param name="y">Point Y value.</param>
            <param name="type">Point type.</param>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.AnnotationPathPoint.X">
            <summary>
            Gets or sets an annotation path point's X coordinate.
            </summary>
            <value>
            A float value for the point's X coordinate.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.AnnotationPathPoint.Y">
            <summary>
            Gets or sets an annotation path point's Y coordinate.
            </summary>
            <value>
            A float value for the point Y coordinate.
            </value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.AnnotationPathPoint.PointType">
            <summary>
            Gets or sets an annotation path point's type.
            </summary>
            <value>
            A byte value.
            </value>
            <remarks>
            See the <see cref="T:System.Drawing.Drawing2D.PathPointType"/> enumeration for more details.
            </remarks>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.AnnotationPathPoint.Name">
            <summary>
            Gets or sets an annotation path point's name.
            </summary>
            <para>
            This is an internal property and should not be documented.
            </para>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.Ajax.ImageChunk">
            <summary>
            ImageChunk contains an image information 
            for one image chunk for scrolling
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.ImageChunk.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ImageChunk"/> class.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.ImageChunk.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ImageChunk"/> class.
            </summary>
            <param name="gridID">The grid ID.</param>
            <param name="imageUrl">The image URL.</param>
            <param name="imageMap">The image map.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.ImageChunk.ToResponseString">
            <summary>
            Converts the instance the response string.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Ajax.ImageChunk.ImageUrl">
            <summary>
            Gets or sets the image URL.
            </summary>
            <value>The image URL.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Ajax.ImageChunk.ImageMap">
            <summary>
            Gets or sets the image map.
            </summary>
            <value>The image map.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Ajax.ImageChunk.GridID">
            <summary>
            Gets or sets the grid ID.
            </summary>
            <value>The grid ID.</value>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.Ajax.AxisSection">
            <summary>
            Represents axis orientation
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Ajax.AxisSection.Vertical">
            <summary>
            vertical orientation
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Ajax.AxisSection.Horizontal">
            <summary>
            Horizontal orientaton
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.Ajax.ZoomEngineState">
            <summary>
            Indicates different Scrolling/Zomming engine state
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Ajax.ZoomEngineState.IsCuttingMode">
            <summary>
            The engine building image chinks
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Ajax.ZoomEngineState.FirstSliceX">
            <summary>
            The engine building first X image chink
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Ajax.ZoomEngineState.FirstSliceY">
            <summary>
            The engine building first Y image chink
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Ajax.ZoomEngineState.LastSliceX">
            <summary>
            The engine building last X image chink
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Ajax.ZoomEngineState.LastSliceY">
            <summary>
            The engine building last Y image chink
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.Ajax.ZoomEngineState.FirstRender">
            <summary>
            The engine make its first rendering for measure purposes
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.Ajax.ZoomIntervalData">
            <summary>
            Contains axis interval data for saving/restoring purpose
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.ZoomIntervalData.CopyFrom(Dundas.Olap.WebUIControls.Grid)">
            <summary>
            Copies Grid interval data.
            </summary>
            <param name="obj">The Grid obj.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.ZoomIntervalData.CopyFrom(Dundas.Olap.WebUIControls.Label)">
             <summary>
            Copies Label interval data.
             </summary>
             <param name="obj">The obj.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.ZoomIntervalData.CopyTo(Dundas.Olap.WebUIControls.Grid)">
            <summary>
            Copies interval data to Grid.
            </summary>
            <param name="obj">The obj.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.ZoomIntervalData.CopyTo(Dundas.Olap.WebUIControls.Label)">
            <summary>
            Copies interval data to Label.
            </summary>
            <param name="obj">The obj.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.ZoomIntervalData.FromString(System.String)">
            <summary>
            Creates ZoomIntervalData from a string.
            </summary>
            <param name="s">The string.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.ZoomIntervalData.TryLoad(Dundas.Olap.WebUIControls.Label,System.Object)">
            <summary>
            Tries to load interval data from string to Label.
            </summary>
            <param name="label">The label.</param>
            <param name="s">The string.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.ZoomIntervalData.TryLoad(Dundas.Olap.WebUIControls.Grid,System.Object)">
            <summary>
            Tries to load interval data from string to Grid.
            </summary>
            <param name="grid">The grid.</param>
            <param name="s">The string.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.ZoomIntervalData.ToString">
            <summary>
            Returns a <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </summary>
            <returns>
            A <see cref="T:System.String"></see> that represents the current <see cref="T:System.Object"></see>.
            </returns>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Ajax.ZoomIntervalData.Interval">
            <summary>
            Gets the interval.
            </summary>
            <value>The interval.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Ajax.ZoomIntervalData.IntervalType">
            <summary>
            Gets the type of the interval.
            </summary>
            <value>The type of the interval.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Ajax.ZoomIntervalData.IntervalOffset">
            <summary>
            Gets the interval offset.
            </summary>
            <value>The interval offset.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Ajax.ZoomIntervalData.IntervalOffsetType">
            <summary>
            Gets the type of the interval offset.
            </summary>
            <value>The type of the interval offset.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Ajax.ZoomIntervalData.IsValid">
            <summary>
            Gets a value indicating whether this instance is valid.
            </summary>
            <value><c>true</c> if this instance is valid; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.Ajax.ZoomFields">
            <summary>
            Represents differend zoom state, flags and data. This enum is
            used for load/save zoom state into page.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.Ajax.ZoomAxisState">
            <summary>
            ZoomAxisState is used for temporary store and restore the axis state
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.ZoomAxisState.#ctor(Dundas.Olap.WebUIControls.Axis)">
            <summary>
            Initializes a new instance of the <see cref="T:ZoomAxisState"/> class.
            </summary>
            <param name="axis">The axis.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.ZoomAxisState.SaveAxisState">
            <summary>
            Saves the state of the axis.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.ZoomAxisState.RestoreAxisState">
            <summary>
            Restores the state of the axis.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.ZoomAxisState.RestoreIntervals">
            <summary>
            Restores the view position.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.ZoomAxisState.SaveIntervals">
            <summary>
            Saves the view position.
            </summary>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.Ajax.DundasImageListBoxItem">
            <summary>
            Helper class which holds information for one item in DundasImageListBox
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.DundasImageListBoxItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DundasImageListBoxItem"/> class.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.DundasImageListBoxItem.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:DundasImageListBoxItem"/> class.
            </summary>
            <param name="text">The text.</param>
            <param name="value">The value.</param>
            <param name="imageUrl">The image URL.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.Ajax.DundasImageListBoxItem.Content">
            <summary>
            Generate contents of this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Ajax.DundasImageListBoxItem.ImageUrl">
            <summary>
            Gets or sets the image URL.
            </summary>
            <value>The image URL.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Ajax.DundasImageListBoxItem.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.Ajax.DundasImageListBoxItem.Text">
            <summary>
            Gets or sets the text.
            </summary>
            <value>The text.</value>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartHttpHandler.#cctor">
            <summary>
            Initializes the <see cref="T:ChartHttpHandler"/> class.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartHttpHandler.EnsureMashineHash">
            <summary>
            Ensures the mashine hash key. Added for web garden (multi process) support.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartHttpHandler.ProcessLoadFrame(System.Web.HttpContext)">
            <summary>
            Processes the load dialog ( from load chart/appearance command UI).
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartHttpHandler.ProcessSavedChartImage(System.Web.HttpContext)">
            <summary>
            Processes the saved image.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartHttpHandler.GetHandler">
            <summary>
            Gets the chart image handler interface reference.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartHttpHandler.IsInstalled">
            <summary>
            Determines whether this instance is installed.
            </summary>
            <returns>
            	<c>true</c> if this instance is installed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartHttpHandler.GetHandlerUrl">
            <summary>
            Gets the handler URL.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartHttpHandler.EncodeLosFmt(System.String)">
            <summary>
            Encodes a string using LosFormater.
            </summary>
            <param name="item">The item.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartHttpHandler.DecodeLosFmt(System.String)">
            <summary>
            Decodes a string using LosFormater.
            </summary>
            <param name="item">The item.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartHttpHandler.GetStoragePaths(System.String,System.String@,System.String@)">
            <summary>
            Gets the storage paths.
            </summary>
            <param name="chartImageUrl">The chart image URL.</param>
            <param name="directory">The directory.</param>
            <param name="url">The URL.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartHttpHandler.GetMime(System.String)">
            <summary>
            Gets the MIME type by resource url.
            </summary>
            <param name="resourceUrl">The resource URL.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartHttpHandler.GenerateKey(System.String,System.String)">
            <summary>
            Generates the chart image file name (key).
            </summary>
            <param name="ext">The ext.</param>
            <param name="fileName">Name of the file.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartHttpHandler.GetUrl(System.String,System.String,System.Boolean)">
            <summary>
            Gets a URL by specified request query, file key.
            </summary>
            <param name="query">The query.</param>
            <param name="fileKey">The file key.</param>
            <param name="addGuid">if set to <c>true</c> to add GUID to url.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartHttpHandler.GetChartImageUrl(Dundas.Olap.WebUIControls.Chart,System.IO.MemoryStream,Dundas.Olap.WebUIControls.ChartImageType,System.String)">
            <summary>
            Gets the chart image url.
            </summary>
            <param name="chart">The chart.</param>
            <param name="stream">The memory stream with the image.</param>
            <param name="imageFormat">The image format.</param>
            <param name="suffuxName">The suffux name.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartHttpHandler.GetChartImageUrl(Dundas.Olap.WebUIControls.Chart,System.IO.MemoryStream,System.String,System.String)">
            <summary>
            Gets the image url.
            </summary>
            <param name="chart">The chart.</param>
            <param name="stream">The stream.</param>
            <param name="imageExt">The image extention.</param>
            <param name="suffuxName">The suffux name.</param>
            <returns>Generated the image source URL</returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartHttpHandler.ProcessChartResource(System.Web.HttpContext)">
            <summary>
            Processes a resource (images or other binary static resources).
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartHttpHandler.GetResourceUrl(System.String,Dundas.Olap.WebUIControls.Chart)">
            <summary>
            Gets the static resource urn.
            </summary>
            <param name="resourceName">Name of the resource.</param>
            <param name="chart">The chart.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartHttpHandler.DumpImagesScript(System.IO.Stream,Dundas.Olap.WebUIControls.Chart)">
            <summary>
            Dumps the images script - a java script which contains preloaded images for dialogs.
            </summary>
            <param name="stream">The stream.</param>
            <param name="chart">The chart.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartHttpHandler.DumpDundasCSS(System.IO.Stream,System.String,Dundas.Olap.WebUIControls.Chart)">
            <summary>
            Dumps the dundas toolbar css.
            </summary>
            <param name="output">The output.</param>
            <param name="resourceUrl">The resource URL.</param>
            <param name="chart">The chart.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartHttpHandler.WriteResourceObj(System.String,System.IO.Stream)">
            <summary>
            Writes the resource obj into stream.
            </summary>
            <param name="resourceUrl">The resource URL.</param>
            <param name="output">The output.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartHttpHandler.UpdateToolbarCssLinks(System.String)">
            <summary>
            Updates the toolbar css links.
            </summary>
            <param name="s">The s.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartHttpHandler.ProcessOlapFrame(System.Web.HttpContext)">
            <summary>
            Processes the olap frame.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartHttpHandler.GetOlapFrameImageUrl(System.Int32,System.Int32,System.Int32,System.Drawing.Color)">
            <summary>
            Gets the gradient image URL.
            </summary>
            <param name="chart">The chart.</param>
            <param name="gradientType">Type of the gradient.</param>
            <param name="backColor">Color of the back.</param>
            <param name="backColor2">The back color2.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartHttpHandler.WriteOlapFrame(System.String,System.IO.Stream)">
            <summary>
            Writes the olap frame.
            </summary>
            <param name="frameParams">The frame params.</param>
            <param name="output">The output.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartHttpHandler.SaveBitmapPart(System.Drawing.Bitmap,System.Drawing.Rectangle,System.IO.Stream)">
            <summary>
            Saves a image file as part of frame Bitmap.
            </summary>
            <param name="bmp"></param>
            <param name="src"></param>
            <param name="fileName"></param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartHttpHandler.PaintFrameLine(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Color,System.Int32)">
            <summary>
            Paints a frame line into given graphics by rectangle, color and width
            </summary>
            <param name="g"></param>
            <param name="r"></param>
            <param name="color"></param>
            <param name="borderWidth"></param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartHttpHandler.WriteAxisButton(System.String,System.IO.Stream)">
            <summary>
            Gets the axis button Url.
            </summary>
            <param name="query">The query.</param>
            <param name="outputStream">The output stream.</param>
            <param name="resp">The resp.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartHttpHandler.ProcessCommand(System.Web.HttpContext)">
            <summary>
            Processes the command image resource.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartHttpHandler.GetChartCommandImageUrl(Dundas.Olap.WebUIControls.Command)">
            <summary>
            Gets the chart command image URL.
            </summary>
            <param name="cmd">The CMD.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartHttpHandler.SaveCommandImageToStream(Dundas.Olap.WebUIControls.Command,System.IO.Stream)">
            <summary>
            Saves the command image to stream.
            </summary>
            <param name="cmd">The CMD.</param>
            <param name="output">The output.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartHttpHandler.SaveImageToStream(System.Drawing.Bitmap,System.IO.Stream)">
            <summary>
            Saves the image to stream.
            </summary>
            <param name="tmpBitmap">The TMP bitmap.</param>
            <param name="output">The output.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartHttpHandler.SaveImageToStream(System.Drawing.Bitmap,System.IO.Stream,System.Boolean)">
            <summary>
            Saves the image to stream whith ability to save it as transparent gif.
            </summary>
            <param name="tmpBitmap">The temp bitmap.</param>
            <param name="output">The output.</param>
            <param name="saveAsGif">if set to <c>true</c> to save as GIF.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartHttpHandler.ProcessGradientImage(System.Web.HttpContext)">
            <summary>
            Processes the gradient image.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartHttpHandler.RenderGradientImage(System.IO.Stream,Dundas.Olap.WebUIControls.GradientType,System.Drawing.Color,System.Drawing.Color,System.Int32,System.Int32)">
            <summary>
            Renders the gradient image.
            </summary>
            <param name="stream">The stream.</param>
            <param name="gradientType">Type of the gradient.</param>
            <param name="backColor">Color of the back.</param>
            <param name="backColor2">The back color2.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartHttpHandler.GetGradientImageUrl(Dundas.Olap.WebUIControls.Chart,Dundas.Olap.WebUIControls.GradientType,System.Drawing.Color,System.Drawing.Color,System.Int32,System.Int32)">
            <summary>
            Gets the gradient image URL.
            </summary>
            <param name="chart">The chart.</param>
            <param name="gradientType">Type of the gradient.</param>
            <param name="backColor">Color of the back.</param>
            <param name="backColor2">The back color2.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartHttpHandler.ProcessHatchImage(System.Web.HttpContext)">
            <summary>
            Processes the hatch image.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartHttpHandler.RenderHatchImage(System.IO.Stream,Dundas.Olap.WebUIControls.ChartHatchStyle,System.Drawing.Color,System.Drawing.Color,System.Int32,System.Int32)">
            <summary>
            Renders the hatch image.
            </summary>
            <param name="stream">The stream.</param>
            <param name="hatchingType">Type of the hatching.</param>
            <param name="backColor">Color of the back.</param>
            <param name="backColor2">The back color2.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartHttpHandler.GetHatchImageUrl(Dundas.Olap.WebUIControls.Chart,Dundas.Olap.WebUIControls.ChartHatchStyle,System.Drawing.Color,System.Drawing.Color,System.Int32,System.Int32)">
            <summary>
            Gets the hatch image URL.
            </summary>
            <param name="chart">The chart.</param>
            <param name="hatchingType">Type of the hatching.</param>
            <param name="backColor">Color of the back.</param>
            <param name="backColor2">The back color2.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartHttpHandler.ProcessChartToolbar(System.Web.HttpContext)">
            <summary>
            Processes the chart toolbar images.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartHttpHandler.RenderToolbarImage(System.IO.Stream,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Int32,System.Int32,Dundas.Olap.WebUIControls.BorderSkinStyle,System.Char)">
            <summary>
            Renders the toolbar image.
            </summary>
            <param name="stream">The stream.</param>
            <param name="backColor">Color of the back.</param>
            <param name="foreColor">Color of the fore.</param>
            <param name="pageColor">Color of the page.</param>
            <param name="height">The height.</param>
            <param name="borderWidth">Width of the border.</param>
            <param name="style">The style.</param>
            <param name="part">The part.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartHttpHandler.GetToolbarFrameUrl(Dundas.Olap.WebUIControls.Chart,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Int32,System.Int32,Dundas.Olap.WebUIControls.BorderSkinStyle,System.Char)">
            <summary>
            Gets the toolbar frame URL.
            </summary>
            <param name="chart">The chart.</param>
            <param name="backColor">Color of the back.</param>
            <param name="foreColor">Color of the fore.</param>
            <param name="pageColor">Color of the page.</param>
            <param name="height">The height.</param>
            <param name="borderWidth">Width of the border.</param>
            <param name="style">The style.</param>
            <param name="part">The part.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartHttpHandler.ProcessZoomImages(System.Web.HttpContext)">
            <summary>
            Processes the zoom images - note: THIS IS A BACKUP PROCEDURE.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartHttpHandler.System#Web#IHttpHandler#ProcessRequest(System.Web.HttpContext)">
            <summary>
            Enables processing of HTTP Web requests by a custom HttpHandler that implements the <see cref="T:System.Web.IHttpHandler"></see> interface.
            </summary>
            <param name="context">An <see cref="T:System.Web.HttpContext"></see> object that provides references to the intrinsic server objects (for example, Request, Response, Session, and Server) used to service HTTP requests.</param>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartHttpHandler.DebugMode">
            <summary>
            Gets a value indicating whether is debug mode to disable script caching.
            </summary>
            <value><c>true</c> if debug mode; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartHttpHandler.Settings">
            <summary>
            Gets the storage settings.
            </summary>
            <value>The settings.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartHttpHandler.System#Web#IHttpHandler#IsReusable">
            <summary>
            Gets a value indicating whether another request can use the <see cref="T:System.Web.IHttpHandler"></see> instance.
            </summary>
            <value></value>
            <returns>true if the <see cref="T:System.Web.IHttpHandler"></see> instance is reusable; otherwise, false.</returns>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.ChartHttpHandler.StorageType">
            <summary>
            Determines Chart Image Storage Medium
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartHttpHandler.StorageType.Memory">
            <summary>
            Static into application memory
            </summary>
        </member>
        <member name="F:Dundas.Olap.WebUIControls.ChartHttpHandler.StorageType.File">
            <summary>
            File System
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartHttpHandler.IImageHandler.Store(Dundas.Olap.WebUIControls.ChartHttpHandler.StorageSettings,System.String,System.Byte[])">
            <summary>
            Stores the data into external medium.
            </summary>
            <param name="settings">The settings.</param>
            <param name="key">The key.</param>
            <param name="data">The data.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartHttpHandler.IImageHandler.Retrieve(Dundas.Olap.WebUIControls.ChartHttpHandler.StorageSettings,System.String,System.Byte[]@)">
            <summary>
            Retrieves the data from external medium.
            </summary>
            <param name="settings">The settings.</param>
            <param name="key">The key.</param>
            <param name="data">The data.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartHttpHandler.IImageHandler.Remove(Dundas.Olap.WebUIControls.ChartHttpHandler.StorageSettings,System.String)">
            <summary>
            Removes the data from external medium.
            </summary>
            <param name="settings">The settings.</param>
            <param name="key">The key.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartHttpHandler.IImageHandler.Exists(Dundas.Olap.WebUIControls.ChartHttpHandler.StorageSettings,System.String)">
            <summary>
            Checks for existence the specified key.
            </summary>
            <param name="settings">The settings.</param>
            <param name="key">The key.</param>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartHttpHandler.StorageSettings.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:StorageSettings"/> class.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartHttpHandler.StorageSettings.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ChartHttpHandlerParameters"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartHttpHandler.StorageSettings.IsInfinite">
            <summary>
            Determines whether this instance is infinite.
            </summary>
            <returns>
            	<c>true</c> if this instance is infinite; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartHttpHandler.StorageSettings.CreateHandler">
            <summary>
            Creates the handler instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartHttpHandler.StorageSettings.InspectHandlerLoader">
            <summary>
            Inspects the handler if it is valid.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartHttpHandler.StorageSettings.ParseParams(System.String)">
            <summary>
            Parses the params from web.config file key.
            </summary>
            <param name="parameters">The parameters.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartHttpHandler.StorageSettings.Inspect">
            <summary>
            Inspects and validates this instance after loading params.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartHttpHandler.StorageSettings.PrepareDesignTime">
            <summary>
            Prepares the design time params.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.ChartHttpHandler.StorageSettings.PrepareRunTime">
            <summary>
            Prepares the run time params if the key in web.config is missing.
            </summary>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartHttpHandler.StorageSettings.StorageType">
            <summary>
            Gets or sets the chart image storage type.
            </summary>
            <value>The chart image storage.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartHttpHandler.StorageSettings.Timeout">
            <summary>
            Gets or sets the timeout.
            </summary>
            <value>The timeout.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartHttpHandler.StorageSettings.Url">
            <summary>
            Gets or sets the URL.
            </summary>
            <value>The URL.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartHttpHandler.StorageSettings.Directory">
            <summary>
            Gets or sets the directory.
            </summary>
            <value>The directory.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartHttpHandler.StorageSettings.CustomHandlerName">
            <summary>
            Gets or sets the name of the custom handler.
            </summary>
            <value>The name of the custom handler.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartHttpHandler.StorageSettings.HandlerType">
            <summary>
            Gets the type of the custom handler.
            </summary>
            <value>The type of the custom handler.</value>
        </member>
        <member name="P:Dundas.Olap.WebUIControls.ChartHttpHandler.StorageSettings.Params">
            <summary>
            Gets a collection of name-value pairs registred in web.config file under ChartHttpHandler key.
            </summary>
            <value>The name-value collection.</value>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.DefaultImageHandler">
            <summary>
            Default implementation of ChartHttpHandler.IImageHandler interface
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DefaultImageHandler.#cctor">
            <summary>
            Initializes the <see cref="T:DefaultImageHandler"/> class.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DefaultImageHandler.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:DefaultImageHandler"/> class.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DefaultImageHandler.NotSupportedStorageType(Dundas.Olap.WebUIControls.ChartHttpHandler.StorageSettings)">
            <summary>
            Nots the type of the supported storage.
            </summary>
            <param name="settings">The settings.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DefaultImageHandler.Dundas#Olap#WebUIControls#ChartHttpHandler#IImageHandler#Store(Dundas.Olap.WebUIControls.ChartHttpHandler.StorageSettings,System.String,System.Byte[])">
            <summary>
            Stores the data into external medium.
            </summary>
            <param name="settings">The settings.</param>
            <param name="key">The key.</param>
            <param name="data">The data.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DefaultImageHandler.Dundas#Olap#WebUIControls#ChartHttpHandler#IImageHandler#Retrieve(Dundas.Olap.WebUIControls.ChartHttpHandler.StorageSettings,System.String,System.Byte[]@)">
            <summary>
            Retrieves the data from external medium.
            </summary>
            <param name="settings">The settings.</param>
            <param name="key">The key.</param>
            <param name="data">The data.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DefaultImageHandler.Dundas#Olap#WebUIControls#ChartHttpHandler#IImageHandler#Remove(Dundas.Olap.WebUIControls.ChartHttpHandler.StorageSettings,System.String)">
            <summary>
            Removes the data from external medium.
            </summary>
            <param name="settings">The settings.</param>
            <param name="key">The key.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.DefaultImageHandler.Dundas#Olap#WebUIControls#ChartHttpHandler#IImageHandler#Exists(Dundas.Olap.WebUIControls.ChartHttpHandler.StorageSettings,System.String)">
            <summary>
            Checks for existence the specified key.
            </summary>
            <param name="settings">The settings.</param>
            <param name="key">The key.</param>
            <returns></returns>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.RingItem">
            <summary>
            RingItem contains time span of creation timedate and  index for key generation.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.RingItem.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:RingItem"/> class.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.RingTimeTracker">
            <summary>
            RingTimeTracker is a helper class for generating keys and tracking RingItem. 
            Contains linked list queue and tracks exprired items.
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.RingTimeTracker.#ctor(System.TimeSpan,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:RingTimeTracker"/> class.
            </summary>
            <param name="itemLifeTime">The item life time.</param>
            <param name="keyFormat">The key format.</param>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.RingTimeTracker.IsExpired(System.Collections.Generic.LinkedListNode{Dundas.Olap.WebUIControls.RingItem},System.DateTime)">
            <summary>
            Determines whether the specified item is expired.
            </summary>
            <param name="item">The item.</param>
            <param name="now">The now.</param>
            <returns>
            	<c>true</c> if the specified item is expired; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.RingTimeTracker.GetNextKey">
            <summary>
            Gets the next key.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.RingTimeTracker.GetCurrentKey">
            <summary>
            Gets the current key.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Dundas.Olap.WebUIControls.RingTimeTrackerFactory">
            <summary>
            RingTimeTrackerFactory contains static list of RingTimeTracker for each key formats
            </summary>
        </member>
        <member name="M:Dundas.Olap.WebUIControls.RingTimeTrackerFactory.GetRingTracker(System.String)">
            <summary>
            Gets the ring tracker by specified key format.
            </summary>
            <param name="keyFormat">The key format.</param>
            <returns></returns>
        </member>
    </members>
</doc>
